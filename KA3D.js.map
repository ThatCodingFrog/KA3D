{"version":3,"file":"KA3D.js","sources":["src/three/src/utils.js","src/three/src/math/MathUtils.js","src/three/src/math/Quaternion.js","src/three/src/math/Vector3.js","src/three/src/constants.js","src/three/src/math/Matrix4.js","src/three/src/core/EventDispatcher.js","src/three/src/math/Euler.js","src/three/src/core/Layers.js","src/three/src/math/Matrix3.js","src/three/src/core/Object3D.js","src/three/src/scenes/Scene.js","src/three/src/math/ColorManagement.js","src/three/src/math/Color.js","src/three/src/math/Vector2.js","src/three/src/math/Box3.js","src/three/src/math/Sphere.js","src/three/src/math/Plane.js","src/three/src/math/Frustum.js","src/three/src/math/Vector4.js","src/three/src/renderers/webgl/WebGLAnimation.js","src/three/src/renderers/webgl/WebGLAttributes.js","src/three/src/core/BufferAttribute.js","src/three/src/core/BufferGeometry.js","src/three/src/geometries/BoxGeometry.js","src/three/src/geometries/PlaneGeometry.js","src/three/src/materials/Material.js","src/three/src/renderers/shaders/UniformsUtils.js","src/three/src/renderers/shaders/ShaderChunk/default_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/default_fragment.glsl.js","src/three/src/materials/ShaderMaterial.js","src/three/src/math/Ray.js","src/three/src/math/Triangle.js","src/three/src/materials/MeshBasicMaterial.js","src/three/src/objects/Mesh.js","src/three/src/renderers/shaders/ShaderChunk/alphahash_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/alphahash_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/alphatest_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/aomap_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/batching_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/batching_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/begin_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/bsdfs.glsl.js","src/three/src/renderers/shaders/ShaderChunk/iridescence_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/color_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/color_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/common.glsl.js","src/three/src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/colorspace_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/colorspace_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/envmap_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/envmap_common_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/envmap_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/fog_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/fog_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/fog_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/gradientmap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_lambert_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_lambert_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_pars_begin.glsl.js","src/three/src/renderers/shaders/ShaderChunk/envmap_physical_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_toon_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_toon_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_fragment_begin.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_fragment_maps.glsl.js","src/three/src/renderers/shaders/ShaderChunk/lights_fragment_end.glsl.js","src/three/src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/map_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/morphinstance_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/morphcolor_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/normal_fragment_begin.glsl.js","src/three/src/renderers/shaders/ShaderChunk/normal_fragment_maps.glsl.js","src/three/src/renderers/shaders/ShaderChunk/normal_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/normal_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/normal_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_begin.glsl.js","src/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_maps.glsl.js","src/three/src/renderers/shaders/ShaderChunk/clearcoat_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/iridescence_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/opaque_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/packing.glsl.js","src/three/src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/project_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/dithering_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/dithering_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/skinning_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/transmission_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/transmission_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl.js","src/three/src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/uv_vertex.glsl.js","src/three/src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl.js","src/three/src/renderers/shaders/ShaderLib/background.glsl.js","src/three/src/renderers/shaders/ShaderLib/backgroundCube.glsl.js","src/three/src/renderers/shaders/ShaderLib/cube.glsl.js","src/three/src/renderers/shaders/ShaderLib/depth.glsl.js","src/three/src/renderers/shaders/ShaderLib/distanceRGBA.glsl.js","src/three/src/renderers/shaders/ShaderLib/equirect.glsl.js","src/three/src/renderers/shaders/ShaderLib/linedashed.glsl.js","src/three/src/renderers/shaders/ShaderLib/meshbasic.glsl.js","src/three/src/renderers/shaders/ShaderLib/meshlambert.glsl.js","src/three/src/renderers/shaders/ShaderLib/meshmatcap.glsl.js","src/three/src/renderers/shaders/ShaderLib/meshnormal.glsl.js","src/three/src/renderers/shaders/ShaderLib/meshphong.glsl.js","src/three/src/renderers/shaders/ShaderLib/meshphysical.glsl.js","src/three/src/renderers/shaders/ShaderLib/meshtoon.glsl.js","src/three/src/renderers/shaders/ShaderLib/points.glsl.js","src/three/src/renderers/shaders/ShaderLib/shadow.glsl.js","src/three/src/renderers/shaders/ShaderLib/sprite.glsl.js","src/three/src/renderers/shaders/ShaderChunk.js","src/three/src/renderers/shaders/UniformsLib.js","src/three/src/renderers/shaders/ShaderLib.js","src/three/src/renderers/webgl/WebGLBackground.js","src/three/src/renderers/webgl/WebGLBindingStates.js","src/three/src/renderers/webgl/WebGLBufferRenderer.js","src/three/src/renderers/webgl/WebGLCapabilities.js","src/three/src/renderers/webgl/WebGLClipping.js","src/three/src/extras/ImageUtils.js","src/three/src/textures/Source.js","src/three/src/textures/Texture.js","src/three/src/core/RenderTarget.js","src/three/src/renderers/WebGLRenderTarget.js","src/three/src/cameras/Camera.js","src/three/src/cameras/PerspectiveCamera.js","src/three/src/cameras/CubeCamera.js","src/three/src/textures/CubeTexture.js","src/three/src/renderers/WebGLCubeRenderTarget.js","src/three/src/renderers/webgl/WebGLCubeMaps.js","src/three/src/cameras/OrthographicCamera.js","src/three/src/extras/PMREMGenerator.js","src/three/src/renderers/webgl/WebGLCubeUVMaps.js","src/three/src/renderers/webgl/WebGLExtensions.js","src/three/src/renderers/webgl/WebGLGeometries.js","src/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js","src/three/src/renderers/webgl/WebGLInfo.js","src/three/src/textures/DataArrayTexture.js","src/three/src/renderers/webgl/WebGLMorphtargets.js","src/three/src/renderers/webgl/WebGLObjects.js","src/three/src/textures/Data3DTexture.js","src/three/src/textures/DepthTexture.js","src/three/src/renderers/webgl/WebGLUniforms.js","src/three/src/renderers/webgl/WebGLShader.js","src/three/src/renderers/webgl/WebGLProgram.js","src/three/src/renderers/webgl/WebGLShaderCache.js","src/three/src/renderers/webgl/WebGLPrograms.js","src/three/src/renderers/webgl/WebGLProperties.js","src/three/src/renderers/webgl/WebGLRenderLists.js","src/three/src/renderers/webgl/WebGLLights.js","src/three/src/renderers/webgl/WebGLRenderStates.js","src/three/src/materials/MeshDepthMaterial.js","src/three/src/materials/MeshDistanceMaterial.js","src/three/src/renderers/shaders/ShaderLib/vsm.glsl.js","src/three/src/renderers/webgl/WebGLShadowMap.js","src/three/src/renderers/webgl/WebGLState.js","src/three/src/extras/TextureUtils.js","src/three/src/renderers/webgl/WebGLTextures.js","src/three/src/renderers/webgl/WebGLUtils.js","src/three/src/cameras/ArrayCamera.js","src/three/src/objects/Group.js","src/three/src/renderers/webxr/WebXRController.js","src/three/src/textures/ExternalTexture.js","src/three/src/renderers/webxr/WebXRDepthSensing.js","src/three/src/renderers/webxr/WebXRManager.js","src/three/src/renderers/webgl/WebGLMaterials.js","src/three/src/renderers/webgl/WebGLUniformsGroups.js","src/three/src/renderers/WebGLRenderer.js","src/three/src/materials/MeshNormalMaterial.js","src/physics/cannon-es.js","KA3D/Init.js","KA3D/Render.js","KA3D/Primitives/Box.js"],"sourcesContent":["function arrayMin( array ) {\r\n\r\n\tif ( array.length === 0 ) return Infinity;\r\n\r\n\tlet min = array[ 0 ];\r\n\r\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\r\n\r\n\t\tif ( array[ i ] < min ) min = array[ i ];\r\n\r\n\t}\r\n\r\n\treturn min;\r\n\r\n}\r\n\r\nfunction arrayMax( array ) {\r\n\r\n\tif ( array.length === 0 ) return - Infinity;\r\n\r\n\tlet max = array[ 0 ];\r\n\r\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\r\n\r\n\t\tif ( array[ i ] > max ) max = array[ i ];\r\n\r\n\t}\r\n\r\n\treturn max;\r\n\r\n}\r\n\r\nfunction arrayNeedsUint32( array ) {\r\n\r\n\t// assumes larger values usually on last\r\n\r\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\r\n\r\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\r\n\r\n\t}\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\nconst TYPED_ARRAYS = {\r\n\tInt8Array: Int8Array,\r\n\tUint8Array: Uint8Array,\r\n\tUint8ClampedArray: Uint8ClampedArray,\r\n\tInt16Array: Int16Array,\r\n\tUint16Array: Uint16Array,\r\n\tInt32Array: Int32Array,\r\n\tUint32Array: Uint32Array,\r\n\tFloat32Array: Float32Array,\r\n\tFloat64Array: Float64Array\r\n};\r\n\r\nfunction getTypedArray( type, buffer ) {\r\n\r\n\treturn new TYPED_ARRAYS[ type ]( buffer );\r\n\r\n}\r\n\r\nfunction createElementNS( name ) {\r\n\r\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\r\n\r\n}\r\n\r\nfunction createCanvasElement() {\r\n\r\n\tconst canvas = createElementNS( 'canvas' );\r\n\tcanvas.style.display = 'block';\r\n\treturn canvas;\r\n\r\n}\r\n\r\nconst _cache = {};\r\n\r\nlet _setConsoleFunction = null;\r\n\r\nfunction setConsoleFunction( fn ) {\r\n\r\n\t_setConsoleFunction = fn;\r\n\r\n}\r\n\r\nfunction getConsoleFunction() {\r\n\r\n\treturn _setConsoleFunction;\r\n\r\n}\r\n\r\nfunction log( ...params ) {\r\n\r\n\tconst message = 'THREE.' + params.shift();\r\n\r\n\tif ( _setConsoleFunction ) {\r\n\r\n\t\t_setConsoleFunction( 'log', message, ...params );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.log( message, ...params );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction warn( ...params ) {\r\n\r\n\tconst message = 'THREE.' + params.shift();\r\n\r\n\tif ( _setConsoleFunction ) {\r\n\r\n\t\t_setConsoleFunction( 'warn', message, ...params );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( message, ...params );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction error( ...params ) {\r\n\r\n\tconst message = 'THREE.' + params.shift();\r\n\r\n\tif ( _setConsoleFunction ) {\r\n\r\n\t\t_setConsoleFunction( 'error', message, ...params );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.error( message, ...params );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction warnOnce( ...params ) {\r\n\r\n\tconst message = params.join( ' ' );\r\n\r\n\tif ( message in _cache ) return;\r\n\r\n\t_cache[ message ] = true;\r\n\r\n\twarn( ...params );\r\n\r\n}\r\n\r\nfunction probeAsync( gl, sync, interval ) {\r\n\r\n\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\tfunction probe() {\r\n\r\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\r\n\r\n\t\t\t\tcase gl.WAIT_FAILED:\r\n\t\t\t\t\treject();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\r\n\t\t\t\t\tsetTimeout( probe, interval );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tresolve();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsetTimeout( probe, interval );\r\n\r\n\t} );\r\n\r\n}\r\n\r\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\r\n\r\n\tconst m = projectionMatrix.elements;\r\n\r\n\t// Convert [-1, 1] to [0, 1] projection matrix\r\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\r\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\r\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\r\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\r\n\r\n}\r\n\r\nfunction toReversedProjectionMatrix( projectionMatrix ) {\r\n\r\n\tconst m = projectionMatrix.elements;\r\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\r\n\r\n\t// Reverse [0, 1] projection matrix\r\n\tif ( isPerspectiveMatrix ) {\r\n\r\n\t\tm[ 10 ] = - m[ 10 ] - 1;\r\n\t\tm[ 14 ] = - m[ 14 ];\r\n\r\n\t} else {\r\n\r\n\t\tm[ 10 ] = - m[ 10 ];\r\n\t\tm[ 14 ] = - m[ 14 ] + 1;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { arrayMin, arrayMax, arrayNeedsUint32, getTypedArray, createElementNS, createCanvasElement, setConsoleFunction, getConsoleFunction, log, warn, error, warnOnce, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix };\r\n","import { warn } from '../utils.js';\r\n\r\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\r\n\r\nlet _seed = 1234567;\r\n\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\n/**\r\n * Generate a [UUID]{@link https://en.wikipedia.org/wiki/Universally_unique_identifier}\r\n * (universally unique identifier).\r\n *\r\n * @return {string} The UUID.\r\n */\r\nfunction generateUUID() {\r\n\r\n\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n\r\n\tconst d0 = Math.random() * 0xffffffff | 0;\r\n\tconst d1 = Math.random() * 0xffffffff | 0;\r\n\tconst d2 = Math.random() * 0xffffffff | 0;\r\n\tconst d3 = Math.random() * 0xffffffff | 0;\r\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\r\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\r\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\r\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\r\n\r\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\r\n\treturn uuid.toLowerCase();\r\n\r\n}\r\n\r\n/**\r\n * Clamps the given value between min and max.\r\n *\r\n * @param {number} value - The value to clamp.\r\n * @param {number} min - The min value.\r\n * @param {number} max - The max value.\r\n * @return {number} The clamped value.\r\n */\r\nfunction clamp( value, min, max ) {\r\n\r\n\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n}\r\n\r\n/**\r\n * Computes the Euclidean modulo of the given parameters that\r\n * is `( ( n % m ) + m ) % m`.\r\n *\r\n * @param {number} n - The first parameter.\r\n * @param {number} m - The second parameter.\r\n * @return {number} The Euclidean modulo.\r\n */\r\nfunction euclideanModulo( n, m ) {\r\n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\treturn ( ( n % m ) + m ) % m;\r\n\r\n}\r\n\r\n/**\r\n * Performs a linear mapping from range `<a1, a2>` to range `<b1, b2>`\r\n * for the given value.\r\n *\r\n * @param {number} x - The value to be mapped.\r\n * @param {number} a1 - Minimum value for range A.\r\n * @param {number} a2 - Maximum value for range A.\r\n * @param {number} b1 - Minimum value for range B.\r\n * @param {number} b2 - Maximum value for range B.\r\n * @return {number} The mapped value.\r\n */\r\nfunction mapLinear( x, a1, a2, b1, b2 ) {\r\n\r\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n}\r\n\r\n/**\r\n * Returns the percentage in the closed interval `[0, 1]` of the given value\r\n * between the start and end point.\r\n *\r\n * @param {number} x - The start point\r\n * @param {number} y - The end point.\r\n * @param {number} value - A value between start and end.\r\n * @return {number} The interpolation factor.\r\n */\r\nfunction inverseLerp( x, y, value ) {\r\n\r\n\t// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\r\n\r\n\tif ( x !== y ) {\r\n\r\n\t\treturn ( value - x ) / ( y - x );\r\n\r\n\t} else {\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Returns a value linearly interpolated from two known points based on the given interval -\r\n * `t = 0` will return `x` and `t = 1` will return `y`.\r\n *\r\n * @param {number} x - The start point\r\n * @param {number} y - The end point.\r\n * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\r\n * @return {number} The interpolated value.\r\n */\r\nfunction lerp( x, y, t ) {\r\n\r\n\treturn ( 1 - t ) * x + t * y;\r\n\r\n}\r\n\r\n/**\r\n * Smoothly interpolate a number from `x` to `y` in  a spring-like manner using a delta\r\n * time to maintain frame rate independent movement. For details, see\r\n * [Frame rate independent damping using lerp]{@link http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/}.\r\n *\r\n * @param {number} x - The current point.\r\n * @param {number} y - The target point.\r\n * @param {number} lambda - A higher lambda value will make the movement more sudden,\r\n * and a lower value will make the movement more gradual.\r\n * @param {number} dt - Delta time in seconds.\r\n * @return {number} The interpolated value.\r\n */\r\nfunction damp( x, y, lambda, dt ) {\r\n\r\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\r\n\r\n}\r\n\r\n/**\r\n * Returns a value that alternates between `0` and the given `length` parameter.\r\n *\r\n * @param {number} x - The value to pingpong.\r\n * @param {number} [length=1] - The positive value the function will pingpong to.\r\n * @return {number} The alternated value.\r\n */\r\nfunction pingpong( x, length = 1 ) {\r\n\r\n\t// https://www.desmos.com/calculator/vcsjnyz7x4\r\n\r\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\r\n\r\n}\r\n\r\n/**\r\n * Returns a value in the range `[0,1]` that represents the percentage that `x` has\r\n * moved between `min` and `max`, but smoothed or slowed down the closer `x` is to\r\n * the `min` and `max`.\r\n *\r\n * See [Smoothstep]{@link http://en.wikipedia.org/wiki/Smoothstep} for more details.\r\n *\r\n * @param {number} x - The value to evaluate based on its position between min and max.\r\n * @param {number} min - The min value. Any x value below min will be `0`.\r\n * @param {number} max - The max value. Any x value above max will be `1`.\r\n * @return {number} The alternated value.\r\n */\r\nfunction smoothstep( x, min, max ) {\r\n\r\n\tif ( x <= min ) return 0;\r\n\tif ( x >= max ) return 1;\r\n\r\n\tx = ( x - min ) / ( max - min );\r\n\r\n\treturn x * x * ( 3 - 2 * x );\r\n\r\n}\r\n\r\n/**\r\n * A [variation on smoothstep]{@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\r\n * that has zero 1st and 2nd order derivatives at x=0 and x=1.\r\n *\r\n * @param {number} x - The value to evaluate based on its position between min and max.\r\n * @param {number} min - The min value. Any x value below min will be `0`.\r\n * @param {number} max - The max value. Any x value above max will be `1`.\r\n * @return {number} The alternated value.\r\n */\r\nfunction smootherstep( x, min, max ) {\r\n\r\n\tif ( x <= min ) return 0;\r\n\tif ( x >= max ) return 1;\r\n\r\n\tx = ( x - min ) / ( max - min );\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n}\r\n\r\n/**\r\n * Returns a random integer from `<low, high>` interval.\r\n *\r\n * @param {number} low - The lower value boundary.\r\n * @param {number} high - The upper value boundary\r\n * @return {number} A random integer.\r\n */\r\nfunction randInt( low, high ) {\r\n\r\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n}\r\n\r\n/**\r\n * Returns a random float from `<low, high>` interval.\r\n *\r\n * @param {number} low - The lower value boundary.\r\n * @param {number} high - The upper value boundary\r\n * @return {number} A random float.\r\n */\r\nfunction randFloat( low, high ) {\r\n\r\n\treturn low + Math.random() * ( high - low );\r\n\r\n}\r\n\r\n/**\r\n * Returns a random integer from `<-range/2, range/2>` interval.\r\n *\r\n * @param {number} range - Defines the value range.\r\n * @return {number} A random float.\r\n */\r\nfunction randFloatSpread( range ) {\r\n\r\n\treturn range * ( 0.5 - Math.random() );\r\n\r\n}\r\n\r\n/**\r\n * Returns a deterministic pseudo-random float in the interval `[0, 1]`.\r\n *\r\n * @param {number} [s] - The integer seed.\r\n * @return {number} A random float.\r\n */\r\nfunction seededRandom( s ) {\r\n\r\n\tif ( s !== undefined ) _seed = s;\r\n\r\n\t// Mulberry32 generator\r\n\r\n\tlet t = _seed += 0x6D2B79F5;\r\n\r\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\r\n\r\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\r\n\r\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\r\n\r\n}\r\n\r\n/**\r\n * Converts degrees to radians.\r\n *\r\n * @param {number} degrees - A value in degrees.\r\n * @return {number} The converted value in radians.\r\n */\r\nfunction degToRad( degrees ) {\r\n\r\n\treturn degrees * DEG2RAD;\r\n\r\n}\r\n\r\n/**\r\n * Converts radians to degrees.\r\n *\r\n * @param {number} radians - A value in radians.\r\n * @return {number} The converted value in degrees.\r\n */\r\nfunction radToDeg( radians ) {\r\n\r\n\treturn radians * RAD2DEG;\r\n\r\n}\r\n\r\n/**\r\n * Returns `true` if the given number is a power of two.\r\n *\r\n * @param {number} value - The value to check.\r\n * @return {boolean} Whether the given number is a power of two or not.\r\n */\r\nfunction isPowerOfTwo( value ) {\r\n\r\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n}\r\n\r\n/**\r\n * Returns the smallest power of two that is greater than or equal to the given number.\r\n *\r\n * @param {number} value - The value to find a POT for.\r\n * @return {number} The smallest power of two that is greater than or equal to the given number.\r\n */\r\nfunction ceilPowerOfTwo( value ) {\r\n\r\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\r\n\r\n}\r\n\r\n/**\r\n * Returns the largest power of two that is less than or equal to the given number.\r\n *\r\n * @param {number} value - The value to find a POT for.\r\n * @return {number} The largest power of two that is less than or equal to the given number.\r\n */\r\nfunction floorPowerOfTwo( value ) {\r\n\r\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\r\n\r\n}\r\n\r\n/**\r\n * Sets the given quaternion from the [Intrinsic Proper Euler Angles]{@link https://en.wikipedia.org/wiki/Euler_angles}\r\n * defined by the given angles and order.\r\n *\r\n * Rotations are applied to the axes in the order specified by order:\r\n * rotation by angle `a` is applied first, then by angle `b`, then by angle `c`.\r\n *\r\n * @param {Quaternion} q - The quaternion to set.\r\n * @param {number} a - The rotation applied to the first axis, in radians.\r\n * @param {number} b - The rotation applied to the second axis, in radians.\r\n * @param {number} c - The rotation applied to the third axis, in radians.\r\n * @param {('XYX'|'XZX'|'YXY'|'YZY'|'ZXZ'|'ZYZ')} order - A string specifying the axes order.\r\n */\r\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\r\n\r\n\tconst cos = Math.cos;\r\n\tconst sin = Math.sin;\r\n\r\n\tconst c2 = cos( b / 2 );\r\n\tconst s2 = sin( b / 2 );\r\n\r\n\tconst c13 = cos( ( a + c ) / 2 );\r\n\tconst s13 = sin( ( a + c ) / 2 );\r\n\r\n\tconst c1_3 = cos( ( a - c ) / 2 );\r\n\tconst s1_3 = sin( ( a - c ) / 2 );\r\n\r\n\tconst c3_1 = cos( ( c - a ) / 2 );\r\n\tconst s3_1 = sin( ( c - a ) / 2 );\r\n\r\n\tswitch ( order ) {\r\n\r\n\t\tcase 'XYX':\r\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'YZY':\r\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'ZXZ':\r\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'XZX':\r\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'YXY':\r\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'ZYZ':\r\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\twarn( 'MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Denormalizes the given value according to the given typed array.\r\n *\r\n * @param {number} value - The value to denormalize.\r\n * @param {TypedArray} array - The typed array that defines the data type of the value.\r\n * @return {number} The denormalize (float) value in the range `[0,1]`.\r\n */\r\nfunction denormalize( value, array ) {\r\n\r\n\tswitch ( array.constructor ) {\r\n\r\n\t\tcase Float32Array:\r\n\r\n\t\t\treturn value;\r\n\r\n\t\tcase Uint32Array:\r\n\r\n\t\t\treturn value / 4294967295.0;\r\n\r\n\t\tcase Uint16Array:\r\n\r\n\t\t\treturn value / 65535.0;\r\n\r\n\t\tcase Uint8Array:\r\n\r\n\t\t\treturn value / 255.0;\r\n\r\n\t\tcase Int32Array:\r\n\r\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\r\n\r\n\t\tcase Int16Array:\r\n\r\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\r\n\r\n\t\tcase Int8Array:\r\n\r\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\r\n\r\n\t\tdefault:\r\n\r\n\t\t\tthrow new Error( 'Invalid component type.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Normalizes the given value according to the given typed array.\r\n *\r\n * @param {number} value - The float value in the range `[0,1]` to normalize.\r\n * @param {TypedArray} array - The typed array that defines the data type of the value.\r\n * @return {number} The normalize value.\r\n */\r\nfunction normalize( value, array ) {\r\n\r\n\tswitch ( array.constructor ) {\r\n\r\n\t\tcase Float32Array:\r\n\r\n\t\t\treturn value;\r\n\r\n\t\tcase Uint32Array:\r\n\r\n\t\t\treturn Math.round( value * 4294967295.0 );\r\n\r\n\t\tcase Uint16Array:\r\n\r\n\t\t\treturn Math.round( value * 65535.0 );\r\n\r\n\t\tcase Uint8Array:\r\n\r\n\t\t\treturn Math.round( value * 255.0 );\r\n\r\n\t\tcase Int32Array:\r\n\r\n\t\t\treturn Math.round( value * 2147483647.0 );\r\n\r\n\t\tcase Int16Array:\r\n\r\n\t\t\treturn Math.round( value * 32767.0 );\r\n\r\n\t\tcase Int8Array:\r\n\r\n\t\t\treturn Math.round( value * 127.0 );\r\n\r\n\t\tdefault:\r\n\r\n\t\t\tthrow new Error( 'Invalid component type.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @class\r\n * @classdesc A collection of math utility functions.\r\n * @hideconstructor\r\n */\r\nconst MathUtils = {\r\n\tDEG2RAD: DEG2RAD,\r\n\tRAD2DEG: RAD2DEG,\r\n\t/**\r\n\t * Generate a [UUID]{@link https://en.wikipedia.org/wiki/Universally_unique_identifier}\r\n\t * (universally unique identifier).\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @return {string} The UUID.\r\n\t */\r\n\tgenerateUUID: generateUUID,\r\n\t/**\r\n\t * Clamps the given value between min and max.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} value - The value to clamp.\r\n\t * @param {number} min - The min value.\r\n\t * @param {number} max - The max value.\r\n\t * @return {number} The clamped value.\r\n\t */\r\n\tclamp: clamp,\r\n\t/**\r\n\t * Computes the Euclidean modulo of the given parameters that\r\n\t * is `( ( n % m ) + m ) % m`.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} n - The first parameter.\r\n\t * @param {number} m - The second parameter.\r\n\t * @return {number} The Euclidean modulo.\r\n\t */\r\n\teuclideanModulo: euclideanModulo,\r\n\t/**\r\n\t * Performs a linear mapping from range `<a1, a2>` to range `<b1, b2>`\r\n\t * for the given value.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} x - The value to be mapped.\r\n\t * @param {number} a1 - Minimum value for range A.\r\n\t * @param {number} a2 - Maximum value for range A.\r\n\t * @param {number} b1 - Minimum value for range B.\r\n\t * @param {number} b2 - Maximum value for range B.\r\n\t * @return {number} The mapped value.\r\n\t */\r\n\tmapLinear: mapLinear,\r\n\t/**\r\n\t * Returns the percentage in the closed interval `[0, 1]` of the given value\r\n\t * between the start and end point.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} x - The start point\r\n\t * @param {number} y - The end point.\r\n\t * @param {number} value - A value between start and end.\r\n\t * @return {number} The interpolation factor.\r\n\t */\r\n\tinverseLerp: inverseLerp,\r\n\t/**\r\n\t * Returns a value linearly interpolated from two known points based on the given interval -\r\n\t * `t = 0` will return `x` and `t = 1` will return `y`.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} x - The start point\r\n\t * @param {number} y - The end point.\r\n\t * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\r\n\t * @return {number} The interpolated value.\r\n\t */\r\n\tlerp: lerp,\r\n\t/**\r\n\t * Smoothly interpolate a number from `x` to `y` in  a spring-like manner using a delta\r\n\t * time to maintain frame rate independent movement. For details, see\r\n\t * [Frame rate independent damping using lerp]{@link http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/}.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} x - The current point.\r\n\t * @param {number} y - The target point.\r\n\t * @param {number} lambda - A higher lambda value will make the movement more sudden,\r\n\t * and a lower value will make the movement more gradual.\r\n\t * @param {number} dt - Delta time in seconds.\r\n\t * @return {number} The interpolated value.\r\n\t */\r\n\tdamp: damp,\r\n\t/**\r\n\t * Returns a value that alternates between `0` and the given `length` parameter.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} x - The value to pingpong.\r\n\t * @param {number} [length=1] - The positive value the function will pingpong to.\r\n\t * @return {number} The alternated value.\r\n\t */\r\n\tpingpong: pingpong,\r\n\t/**\r\n\t * Returns a value in the range `[0,1]` that represents the percentage that `x` has\r\n\t * moved between `min` and `max`, but smoothed or slowed down the closer `x` is to\r\n\t * the `min` and `max`.\r\n\t *\r\n\t * See [Smoothstep]{@link http://en.wikipedia.org/wiki/Smoothstep} for more details.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} x - The value to evaluate based on its position between min and max.\r\n\t * @param {number} min - The min value. Any x value below min will be `0`.\r\n\t * @param {number} max - The max value. Any x value above max will be `1`.\r\n\t * @return {number} The alternated value.\r\n\t */\r\n\tsmoothstep: smoothstep,\r\n\t/**\r\n\t * A [variation on smoothstep]{@link https://en.wikipedia.org/wiki/Smoothstep#Variations}\r\n\t * that has zero 1st and 2nd order derivatives at x=0 and x=1.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} x - The value to evaluate based on its position between min and max.\r\n\t * @param {number} min - The min value. Any x value below min will be `0`.\r\n\t * @param {number} max - The max value. Any x value above max will be `1`.\r\n\t * @return {number} The alternated value.\r\n\t */\r\n\tsmootherstep: smootherstep,\r\n\t/**\r\n\t * Returns a random integer from `<low, high>` interval.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} low - The lower value boundary.\r\n\t * @param {number} high - The upper value boundary\r\n\t * @return {number} A random integer.\r\n\t */\r\n\trandInt: randInt,\r\n\t/**\r\n\t * Returns a random float from `<low, high>` interval.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} low - The lower value boundary.\r\n\t * @param {number} high - The upper value boundary\r\n\t * @return {number} A random float.\r\n\t */\r\n\trandFloat: randFloat,\r\n\t/**\r\n\t * Returns a random integer from `<-range/2, range/2>` interval.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} range - Defines the value range.\r\n\t * @return {number} A random float.\r\n\t */\r\n\trandFloatSpread: randFloatSpread,\r\n\t/**\r\n\t * Returns a deterministic pseudo-random float in the interval `[0, 1]`.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} [s] - The integer seed.\r\n\t * @return {number} A random float.\r\n\t */\r\n\tseededRandom: seededRandom,\r\n\t/**\r\n\t * Converts degrees to radians.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} degrees - A value in degrees.\r\n\t * @return {number} The converted value in radians.\r\n\t */\r\n\tdegToRad: degToRad,\r\n\t/**\r\n\t * Converts radians to degrees.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} radians - A value in radians.\r\n\t * @return {number} The converted value in degrees.\r\n\t */\r\n\tradToDeg: radToDeg,\r\n\t/**\r\n\t * Returns `true` if the given number is a power of two.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} value - The value to check.\r\n\t * @return {boolean} Whether the given number is a power of two or not.\r\n\t */\r\n\tisPowerOfTwo: isPowerOfTwo,\r\n\t/**\r\n\t * Returns the smallest power of two that is greater than or equal to the given number.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} value - The value to find a POT for.\r\n\t * @return {number} The smallest power of two that is greater than or equal to the given number.\r\n\t */\r\n\tceilPowerOfTwo: ceilPowerOfTwo,\r\n\t/**\r\n\t * Returns the largest power of two that is less than or equal to the given number.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} value - The value to find a POT for.\r\n\t * @return {number} The largest power of two that is less than or equal to the given number.\r\n\t */\r\n\tfloorPowerOfTwo: floorPowerOfTwo,\r\n\t/**\r\n\t * Sets the given quaternion from the [Intrinsic Proper Euler Angles]{@link https://en.wikipedia.org/wiki/Euler_angles}\r\n\t * defined by the given angles and order.\r\n\t *\r\n\t * Rotations are applied to the axes in the order specified by order:\r\n\t * rotation by angle `a` is applied first, then by angle `b`, then by angle `c`.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {Quaternion} q - The quaternion to set.\r\n\t * @param {number} a - The rotation applied to the first axis, in radians.\r\n\t * @param {number} b - The rotation applied to the second axis, in radians.\r\n\t * @param {number} c - The rotation applied to the third axis, in radians.\r\n\t * @param {('XYX'|'XZX'|'YXY'|'YZY'|'ZXZ'|'ZYZ')} order - A string specifying the axes order.\r\n\t */\r\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\r\n\t/**\r\n\t * Normalizes the given value according to the given typed array.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} value - The float value in the range `[0,1]` to normalize.\r\n\t * @param {TypedArray} array - The typed array that defines the data type of the value.\r\n\t * @return {number} The normalize value.\r\n\t */\r\n\tnormalize: normalize,\r\n\t/**\r\n\t * Denormalizes the given value according to the given typed array.\r\n\t *\r\n\t * @static\r\n\t * @method\r\n\t * @param {number} value - The value to denormalize.\r\n\t * @param {TypedArray} array - The typed array that defines the data type of the value.\r\n\t * @return {number} The denormalize (float) value in the range `[0,1]`.\r\n\t */\r\n\tdenormalize: denormalize\r\n};\r\n\r\nexport {\r\n\tDEG2RAD,\r\n\tRAD2DEG,\r\n\tgenerateUUID,\r\n\tclamp,\r\n\teuclideanModulo,\r\n\tmapLinear,\r\n\tinverseLerp,\r\n\tlerp,\r\n\tdamp,\r\n\tpingpong,\r\n\tsmoothstep,\r\n\tsmootherstep,\r\n\trandInt,\r\n\trandFloat,\r\n\trandFloatSpread,\r\n\tseededRandom,\r\n\tdegToRad,\r\n\tradToDeg,\r\n\tisPowerOfTwo,\r\n\tceilPowerOfTwo,\r\n\tfloorPowerOfTwo,\r\n\tsetQuaternionFromProperEuler,\r\n\tnormalize,\r\n\tdenormalize,\r\n\tMathUtils\r\n};\r\n","import { clamp } from './MathUtils.js';\r\nimport { warn } from '../utils.js';\r\n\r\n/**\r\n * Class for representing a Quaternion. Quaternions are used in three.js to represent rotations.\r\n *\r\n * Iterating through a vector instance will yield its components `(x, y, z, w)` in\r\n * the corresponding order.\r\n *\r\n * Note that three.js expects Quaternions to be normalized.\r\n * ```js\r\n * const quaternion = new THREE.Quaternion();\r\n * quaternion.setFromAxisAngle( new THREE.Vector3( 0, 1, 0 ), Math.PI / 2 );\r\n *\r\n * const vector = new THREE.Vector3( 1, 0, 0 );\r\n * vector.applyQuaternion( quaternion );\r\n * ```\r\n */\r\nclass Quaternion {\r\n\r\n\t/**\r\n\t * Constructs a new quaternion.\r\n\t *\r\n\t * @param {number} [x=0] - The x value of this quaternion.\r\n\t * @param {number} [y=0] - The y value of this quaternion.\r\n\t * @param {number} [z=0] - The z value of this quaternion.\r\n\t * @param {number} [w=1] - The w value of this quaternion.\r\n\t */\r\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isQuaternion = true;\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Interpolates between two quaternions via SLERP. This implementation assumes the\r\n\t * quaternion data are managed in flat arrays.\r\n\t *\r\n\t * @param {Array<number>} dst - The destination array.\r\n\t * @param {number} dstOffset - An offset into the destination array.\r\n\t * @param {Array<number>} src0 - The source array of the first quaternion.\r\n\t * @param {number} srcOffset0 - An offset into the first source array.\r\n\t * @param {Array<number>} src1 -  The source array of the second quaternion.\r\n\t * @param {number} srcOffset1 - An offset into the second source array.\r\n\t * @param {number} t - The interpolation factor in the range `[0,1]`.\r\n\t * @see {@link Quaternion#slerp}\r\n\t */\r\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\r\n\r\n\t\tlet x1 = src1[ srcOffset1 + 0 ],\r\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tif ( t <= 0 ) {\r\n\r\n\t\t\tdst[ dstOffset + 0 ] = x0;\r\n\t\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( t >= 1 ) {\r\n\r\n\t\t\tdst[ dstOffset + 0 ] = x1;\r\n\t\t\tdst[ dstOffset + 1 ] = y1;\r\n\t\t\tdst[ dstOffset + 2 ] = z1;\r\n\t\t\tdst[ dstOffset + 3 ] = w1;\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\tlet dot = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1;\r\n\r\n\t\t\tif ( dot < 0 ) {\r\n\r\n\t\t\t\tx1 = - x1;\r\n\t\t\t\ty1 = - y1;\r\n\t\t\t\tz1 = - z1;\r\n\t\t\t\tw1 = - w1;\r\n\r\n\t\t\t\tdot = - dot;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet s = 1 - t;\r\n\r\n\t\t\tif ( dot < 0.9995 ) {\r\n\r\n\t\t\t\t// slerp\r\n\r\n\t\t\t\tconst theta = Math.acos( dot );\r\n\t\t\t\tconst sin = Math.sin( theta );\r\n\r\n\t\t\t\ts = Math.sin( s * theta ) / sin;\r\n\t\t\t\tt = Math.sin( t * theta ) / sin;\r\n\r\n\t\t\t\tx0 = x0 * s + x1 * t;\r\n\t\t\t\ty0 = y0 * s + y1 * t;\r\n\t\t\t\tz0 = z0 * s + z1 * t;\r\n\t\t\t\tw0 = w0 * s + w1 * t;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// for small angles, lerp then normalize\r\n\r\n\t\t\t\tx0 = x0 * s + x1 * t;\r\n\t\t\t\ty0 = y0 * s + y1 * t;\r\n\t\t\t\tz0 = z0 * s + z1 * t;\r\n\t\t\t\tw0 = w0 * s + w1 * t;\r\n\r\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\tx0 *= f;\r\n\t\t\t\ty0 *= f;\r\n\t\t\t\tz0 *= f;\r\n\t\t\t\tw0 *= f;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdst[ dstOffset ] = x0;\r\n\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies two quaternions. This implementation assumes the quaternion data are managed\r\n\t * in flat arrays.\r\n\t *\r\n\t * @param {Array<number>} dst - The destination array.\r\n\t * @param {number} dstOffset - An offset into the destination array.\r\n\t * @param {Array<number>} src0 - The source array of the first quaternion.\r\n\t * @param {number} srcOffset0 - An offset into the first source array.\r\n\t * @param {Array<number>} src1 -  The source array of the second quaternion.\r\n\t * @param {number} srcOffset1 - An offset into the second source array.\r\n\t * @return {Array<number>} The destination array.\r\n\t * @see {@link Quaternion#multiplyQuaternions}.\r\n\t */\r\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\r\n\r\n\t\tconst x0 = src0[ srcOffset0 ];\r\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\r\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\r\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\r\n\r\n\t\tconst x1 = src1[ srcOffset1 ];\r\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\r\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\r\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\r\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\r\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\r\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\r\n\r\n\t\treturn dst;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The x value of this quaternion.\r\n\t *\r\n\t * @type {number}\r\n\t * @default 0\r\n\t */\r\n\tget x() {\r\n\r\n\t\treturn this._x;\r\n\r\n\t}\r\n\r\n\tset x( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The y value of this quaternion.\r\n\t *\r\n\t * @type {number}\r\n\t * @default 0\r\n\t */\r\n\tget y() {\r\n\r\n\t\treturn this._y;\r\n\r\n\t}\r\n\r\n\tset y( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The z value of this quaternion.\r\n\t *\r\n\t * @type {number}\r\n\t * @default 0\r\n\t */\r\n\tget z() {\r\n\r\n\t\treturn this._z;\r\n\r\n\t}\r\n\r\n\tset z( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The w value of this quaternion.\r\n\t *\r\n\t * @type {number}\r\n\t * @default 1\r\n\t */\r\n\tget w() {\r\n\r\n\t\treturn this._w;\r\n\r\n\t}\r\n\r\n\tset w( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the quaternion components.\r\n\t *\r\n\t * @param {number} x - The x value of this quaternion.\r\n\t * @param {number} y - The y value of this quaternion.\r\n\t * @param {number} z - The z value of this quaternion.\r\n\t * @param {number} w - The w value of this quaternion.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tset( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new quaternion with copied values from this instance.\r\n\t *\r\n\t * @return {Quaternion} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given quaternion to this instance.\r\n\t *\r\n\t * @param {Quaternion} quaternion - The quaternion to copy.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tcopy( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this quaternion from the rotation specified by the given\r\n\t * Euler angles.\r\n\t *\r\n\t * @param {Euler} euler - The Euler angles.\r\n\t * @param {boolean} [update=true] - Whether the internal `onChange` callback should be executed or not.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tsetFromEuler( euler, update = true ) {\r\n\r\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tconst cos = Math.cos;\r\n\t\tconst sin = Math.sin;\r\n\r\n\t\tconst c1 = cos( x / 2 );\r\n\t\tconst c2 = cos( y / 2 );\r\n\t\tconst c3 = cos( z / 2 );\r\n\r\n\t\tconst s1 = sin( x / 2 );\r\n\t\tconst s2 = sin( y / 2 );\r\n\t\tconst s3 = sin( z / 2 );\r\n\r\n\t\tswitch ( order ) {\r\n\r\n\t\t\tcase 'XYZ':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YXZ':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZXY':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZYX':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YZX':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'XZY':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\twarn( 'Quaternion: .setFromEuler() encountered an unknown order: ' + order );\r\n\r\n\t\t}\r\n\r\n\t\tif ( update === true ) this._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this quaternion from the given axis and angle.\r\n\t *\r\n\t * @param {Vector3} axis - The normalized axis.\r\n\t * @param {number} angle - The angle in radians.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tsetFromAxisAngle( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this quaternion from the given rotation matrix.\r\n\t *\r\n\t * @param {Matrix4} m - A 4x4 matrix of which the upper 3x3 of matrix is a pure rotation matrix (i.e. unscaled).\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tsetFromRotationMatrix( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tconst te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this quaternion to the rotation required to rotate the direction vector\r\n\t * `vFrom` to the direction vector `vTo`.\r\n\t *\r\n\t * @param {Vector3} vFrom - The first (normalized) direction vector.\r\n\t * @param {Vector3} vTo - The second (normalized) direction vector.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tsetFromUnitVectors( vFrom, vTo ) {\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tlet r = vFrom.dot( vTo ) + 1;\r\n\r\n\t\tif ( r < 1e-8 ) { // the epsilon value has been discussed in #31286\r\n\r\n\t\t\t// vFrom and vTo point in opposite directions\r\n\r\n\t\t\tr = 0;\r\n\r\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\tthis._x = - vFrom.y;\r\n\t\t\t\tthis._y = vFrom.x;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = - vFrom.z;\r\n\t\t\t\tthis._z = vFrom.y;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n\r\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the angle between this quaternion and the given one in radians.\r\n\t *\r\n\t * @param {Quaternion} q - The quaternion to compute the angle with.\r\n\t * @return {number} The angle in radians.\r\n\t */\r\n\tangleTo( q ) {\r\n\r\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates this quaternion by a given angular step to the given quaternion.\r\n\t * The method ensures that the final quaternion will not overshoot `q`.\r\n\t *\r\n\t * @param {Quaternion} q - The target quaternion.\r\n\t * @param {number} step - The angular step in radians.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\trotateTowards( q, step ) {\r\n\r\n\t\tconst angle = this.angleTo( q );\r\n\r\n\t\tif ( angle === 0 ) return this;\r\n\r\n\t\tconst t = Math.min( 1, step / angle );\r\n\r\n\t\tthis.slerp( q, t );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this quaternion to the identity quaternion; that is, to the\r\n\t * quaternion that represents \"no rotation\".\r\n\t *\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tidentity() {\r\n\r\n\t\treturn this.set( 0, 0, 0, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts this quaternion via {@link Quaternion#conjugate}. The\r\n\t * quaternion is assumed to have unit length.\r\n\t *\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tinvert() {\r\n\r\n\t\treturn this.conjugate();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the rotational conjugate of this quaternion. The conjugate of a\r\n\t * quaternion represents the same rotation in the opposite direction about\r\n\t * the rotational axis.\r\n\t *\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tconjugate() {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the dot product of this quaternion and the given one.\r\n\t *\r\n\t * @param {Quaternion} v - The quaternion to compute the dot product with.\r\n\t * @return {number} The result of the dot product.\r\n\t */\r\n\tdot( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the squared Euclidean length (straight-line length) of this quaternion,\r\n\t * considered as a 4 dimensional vector. This can be useful if you are comparing the\r\n\t * lengths of two quaternions, as this is a slightly more efficient calculation than\r\n\t * {@link Quaternion#length}.\r\n\t *\r\n\t * @return {number} The squared Euclidean length.\r\n\t */\r\n\tlengthSq() {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the Euclidean length (straight-line length) of this quaternion,\r\n\t * considered as a 4 dimensional vector.\r\n\t *\r\n\t * @return {number} The Euclidean length.\r\n\t */\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Normalizes this quaternion - that is, calculated the quaternion that performs\r\n\t * the same rotation as this one, but has a length equal to `1`.\r\n\t *\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tnormalize() {\r\n\r\n\t\tlet l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies this quaternion by the given one.\r\n\t *\r\n\t * @param {Quaternion} q - The quaternion.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tmultiply( q ) {\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pre-multiplies this quaternion by the given one.\r\n\t *\r\n\t * @param {Quaternion} q - The quaternion.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tpremultiply( q ) {\r\n\r\n\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the given quaternions and stores the result in this instance.\r\n\t *\r\n\t * @param {Quaternion} a - The first quaternion.\r\n\t * @param {Quaternion} b - The second quaternion.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tmultiplyQuaternions( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Performs a spherical linear interpolation between quaternions.\r\n\t *\r\n\t * @param {Quaternion} qb - The target quaternion.\r\n\t * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tslerp( qb, t ) {\r\n\r\n\t\tif ( t <= 0 ) return this;\r\n\r\n\t\tif ( t >= 1 ) return this.copy( qb ); // copy calls _onChangeCallback()\r\n\r\n\t\tlet x = qb._x, y = qb._y, z = qb._z, w = qb._w;\r\n\r\n\t\tlet dot = this.dot( qb );\r\n\r\n\t\tif ( dot < 0 ) {\r\n\r\n\t\t\tx = - x;\r\n\t\t\ty = - y;\r\n\t\t\tz = - z;\r\n\t\t\tw = - w;\r\n\r\n\t\t\tdot = - dot;\r\n\r\n\t\t}\r\n\r\n\t\tlet s = 1 - t;\r\n\r\n\t\tif ( dot < 0.9995 ) {\r\n\r\n\t\t\t// slerp\r\n\r\n\t\t\tconst theta = Math.acos( dot );\r\n\t\t\tconst sin = Math.sin( theta );\r\n\r\n\t\t\ts = Math.sin( s * theta ) / sin;\r\n\t\t\tt = Math.sin( t * theta ) / sin;\r\n\r\n\t\t\tthis._x = this._x * s + x * t;\r\n\t\t\tthis._y = this._y * s + y * t;\r\n\t\t\tthis._z = this._z * s + z * t;\r\n\t\t\tthis._w = this._w * s + w * t;\r\n\r\n\t\t\tthis._onChangeCallback();\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// for small angles, lerp then normalize\r\n\r\n\t\t\tthis._x = this._x * s + x * t;\r\n\t\t\tthis._y = this._y * s + y * t;\r\n\t\t\tthis._z = this._z * s + z * t;\r\n\t\t\tthis._w = this._w * s + w * t;\r\n\r\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Performs a spherical linear interpolation between the given quaternions\r\n\t * and stores the result in this quaternion.\r\n\t *\r\n\t * @param {Quaternion} qa - The source quaternion.\r\n\t * @param {Quaternion} qb - The target quaternion.\r\n\t * @param {number} t - The interpolation factor in the closed interval `[0, 1]`.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tslerpQuaternions( qa, qb, t ) {\r\n\r\n\t\treturn this.copy( qa ).slerp( qb, t );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this quaternion to a uniformly random, normalized quaternion.\r\n\t *\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\trandom() {\r\n\r\n\t\t// Ken Shoemake\r\n\t\t// Uniform random rotations\r\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\r\n\r\n\t\tconst theta1 = 2 * Math.PI * Math.random();\r\n\t\tconst theta2 = 2 * Math.PI * Math.random();\r\n\r\n\t\tconst x0 = Math.random();\r\n\t\tconst r1 = Math.sqrt( 1 - x0 );\r\n\t\tconst r2 = Math.sqrt( x0 );\r\n\r\n\t\treturn this.set(\r\n\t\t\tr1 * Math.sin( theta1 ),\r\n\t\t\tr1 * Math.cos( theta1 ),\r\n\t\t\tr2 * Math.sin( theta2 ),\r\n\t\t\tr2 * Math.cos( theta2 ),\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this quaternion is equal with the given one.\r\n\t *\r\n\t * @param {Quaternion} quaternion - The quaternion to test for equality.\r\n\t * @return {boolean} Whether this quaternion is equal with the given one.\r\n\t */\r\n\tequals( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this quaternion's components from the given array.\r\n\t *\r\n\t * @param {Array<number>} array - An array holding the quaternion component values.\r\n\t * @param {number} [offset=0] - The offset into the array.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Writes the components of this quaternion to the given array. If no array is provided,\r\n\t * the method returns a new instance.\r\n\t *\r\n\t * @param {Array<number>} [array=[]] - The target array holding the quaternion components.\r\n\t * @param {number} [offset=0] - Index of the first element in the array.\r\n\t * @return {Array<number>} The quaternion components.\r\n\t */\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the components of this quaternion from the given buffer attribute.\r\n\t *\r\n\t * @param {BufferAttribute} attribute - The buffer attribute holding quaternion data.\r\n\t * @param {number} index - The index into the attribute.\r\n\t * @return {Quaternion} A reference to this quaternion.\r\n\t */\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis._x = attribute.getX( index );\r\n\t\tthis._y = attribute.getY( index );\r\n\t\tthis._z = attribute.getZ( index );\r\n\t\tthis._w = attribute.getW( index );\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This methods defines the serialization result of this class. Returns the\r\n\t * numerical elements of this quaternion in an array of format `[x, y, z, w]`.\r\n\t *\r\n\t * @return {Array<number>} The serialized quaternion.\r\n\t */\r\n\ttoJSON() {\r\n\r\n\t\treturn this.toArray();\r\n\r\n\t}\r\n\r\n\t_onChange( callback ) {\r\n\r\n\t\tthis._onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t_onChangeCallback() {}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this._x;\r\n\t\tyield this._y;\r\n\t\tyield this._z;\r\n\t\tyield this._w;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Quaternion };\r\n","import { clamp } from './MathUtils.js';\r\nimport { Quaternion } from './Quaternion.js';\r\n\r\n/**\r\n * Class representing a 3D vector. A 3D vector is an ordered triplet of numbers\r\n * (labeled x, y and z), which can be used to represent a number of things, such as:\r\n *\r\n * - A point in 3D space.\r\n * - A direction and length in 3D space. In three.js the length will\r\n * always be the Euclidean distance(straight-line distance) from `(0, 0, 0)` to `(x, y, z)`\r\n * and the direction is also measured from `(0, 0, 0)` towards `(x, y, z)`.\r\n * - Any arbitrary ordered triplet of numbers.\r\n *\r\n * There are other things a 3D vector can be used to represent, such as\r\n * momentum vectors and so on, however these are the most\r\n * common uses in three.js.\r\n *\r\n * Iterating through a vector instance will yield its components `(x, y, z)` in\r\n * the corresponding order.\r\n * ```js\r\n * const a = new THREE.Vector3( 0, 1, 0 );\r\n *\r\n * //no arguments; will be initialised to (0, 0, 0)\r\n * const b = new THREE.Vector3( );\r\n *\r\n * const d = a.distanceTo( b );\r\n * ```\r\n */\r\nclass Vector3 {\r\n\r\n\t/**\r\n\t * Constructs a new 3D vector.\r\n\t *\r\n\t * @param {number} [x=0] - The x value of this vector.\r\n\t * @param {number} [y=0] - The y value of this vector.\r\n\t * @param {number} [z=0] - The z value of this vector.\r\n\t */\r\n\tconstructor( x = 0, y = 0, z = 0 ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tVector3.prototype.isVector3 = true;\r\n\r\n\t\t/**\r\n\t\t * The x value of this vector.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.x = x;\r\n\r\n\t\t/**\r\n\t\t * The y value of this vector.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.y = y;\r\n\r\n\t\t/**\r\n\t\t * The z value of this vector.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.z = z;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components.\r\n\t *\r\n\t * @param {number} x - The value of the x component.\r\n\t * @param {number} y - The value of the y component.\r\n\t * @param {number} z - The value of the z component.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tset( x, y, z ) {\r\n\r\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components to the same value.\r\n\t *\r\n\t * @param {number} scalar - The value to set for all vector components.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector's x component to the given value\r\n\t *\r\n\t * @param {number} x - The value to set.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector's y component to the given value\r\n\t *\r\n\t * @param {number} y - The value to set.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector's z component to the given value\r\n\t *\r\n\t * @param {number} z - The value to set.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Allows to set a vector component with an index.\r\n\t *\r\n\t * @param {number} index - The component index. `0` equals to x, `1` equals to y, `2` equals to z.\r\n\t * @param {number} value - The value to set.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the value of the vector component which matches the given index.\r\n\t *\r\n\t * @param {number} index - The component index. `0` equals to x, `1` equals to y, `2` equals to z.\r\n\t * @return {number} A vector component value.\r\n\t */\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new vector with copied values from this instance.\r\n\t *\r\n\t * @return {Vector3} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given vector to this instance.\r\n\t *\r\n\t * @param {Vector3} v - The vector to copy.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given vector to this instance.\r\n\t *\r\n\t * @param {Vector3} v - The vector to add.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given scalar value to all components of this instance.\r\n\t *\r\n\t * @param {number} s - The scalar to add.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given vectors and stores the result in this instance.\r\n\t *\r\n\t * @param {Vector3} a - The first vector.\r\n\t * @param {Vector3} b - The second vector.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given vector scaled by the given factor to this instance.\r\n\t *\r\n\t * @param {Vector3|Vector4} v - The vector.\r\n\t * @param {number} s - The factor that scales `v`.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the given vector from this instance.\r\n\t *\r\n\t * @param {Vector3} v - The vector to subtract.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the given scalar value from all components of this instance.\r\n\t *\r\n\t * @param {number} s - The scalar to subtract.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the given vectors and stores the result in this instance.\r\n\t *\r\n\t * @param {Vector3} a - The first vector.\r\n\t * @param {Vector3} b - The second vector.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the given vector with this instance.\r\n\t *\r\n\t * @param {Vector3} v - The vector to multiply.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the given scalar value with all components of this instance.\r\n\t *\r\n\t * @param {number} scalar - The scalar to multiply.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the given vectors and stores the result in this instance.\r\n\t *\r\n\t * @param {Vector3} a - The first vector.\r\n\t * @param {Vector3} b - The second vector.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tmultiplyVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the given Euler rotation to this vector.\r\n\t *\r\n\t * @param {Euler} euler - The Euler angles.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tapplyEuler( euler ) {\r\n\r\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a rotation specified by an axis and an angle to this vector.\r\n\t *\r\n\t * @param {Vector3} axis - A normalized vector representing the rotation axis.\r\n\t * @param {number} angle - The angle in radians.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tapplyAxisAngle( axis, angle ) {\r\n\r\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies this vector with the given 3x3 matrix.\r\n\t *\r\n\t * @param {Matrix3} m - The 3x3 matrix.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies this vector by the given normal matrix and normalizes\r\n\t * the result.\r\n\t *\r\n\t * @param {Matrix3} m - The normal matrix.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tapplyNormalMatrix( m ) {\r\n\r\n\t\treturn this.applyMatrix3( m ).normalize();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies this vector (with an implicit 1 in the 4th dimension) by m, and\r\n\t * divides by perspective.\r\n\t *\r\n\t * @param {Matrix4} m - The matrix to apply.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the given Quaternion to this vector.\r\n\t *\r\n\t * @param {Quaternion} q - The Quaternion.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\t// quaternion q is assumed to have unit length\r\n\r\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\r\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t// t = 2 * cross( q.xyz, v );\r\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\r\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\r\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\r\n\r\n\t\t// v + q.w * t + cross( q.xyz, t );\r\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\r\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\r\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Projects this vector from world space into the camera's normalized\r\n\t * device coordinate (NDC) space.\r\n\t *\r\n\t * @param {Camera} camera - The camera.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tproject( camera ) {\r\n\r\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unprojects this vector from the camera's normalized device coordinate (NDC)\r\n\t * space into world space.\r\n\t *\r\n\t * @param {Camera} camera - The camera.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tunproject( camera ) {\r\n\r\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the direction of this vector by a matrix (the upper left 3 x 3\r\n\t * subset of the given 4x4 matrix and then normalizes the result.\r\n\t *\r\n\t * @param {Matrix4} m - The matrix.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\ttransformDirection( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Divides this instance by the given vector.\r\n\t *\r\n\t * @param {Vector3} v - The vector to divide.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Divides this vector by the given scalar.\r\n\t *\r\n\t * @param {number} scalar - The scalar to divide.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x, y or z value is greater than the given vector's x, y or z\r\n\t * value, replace that value with the corresponding min value.\r\n\t *\r\n\t * @param {Vector3} v - The vector.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x, y or z value is less than the given vector's x, y or z\r\n\t * value, replace that value with the corresponding max value.\r\n\t *\r\n\t * @param {Vector3} v - The vector.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x, y or z value is greater than the max vector's x, y or z\r\n\t * value, it is replaced by the corresponding value.\r\n\t * If this vector's x, y or z value is less than the min vector's x, y or z value,\r\n\t * it is replaced by the corresponding value.\r\n\t *\r\n\t * @param {Vector3} min - The minimum x, y and z values.\r\n\t * @param {Vector3} max - The maximum x, y and z values in the desired range.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = clamp( this.x, min.x, max.x );\r\n\t\tthis.y = clamp( this.y, min.y, max.y );\r\n\t\tthis.z = clamp( this.z, min.z, max.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x, y or z values are greater than the max value, they are\r\n\t * replaced by the max value.\r\n\t * If this vector's x, y or z values are less than the min value, they are\r\n\t * replaced by the min value.\r\n\t *\r\n\t * @param {number} minVal - The minimum value the components will be clamped to.\r\n\t * @param {number} maxVal - The maximum value the components will be clamped to.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = clamp( this.x, minVal, maxVal );\r\n\t\tthis.y = clamp( this.y, minVal, maxVal );\r\n\t\tthis.z = clamp( this.z, minVal, maxVal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's length is greater than the max value, it is replaced by\r\n\t * the max value.\r\n\t * If this vector's length is less than the min value, it is replaced by the\r\n\t * min value.\r\n\t *\r\n\t * @param {number} min - The minimum value the vector length will be clamped to.\r\n\t * @param {number} max - The maximum value the vector length will be clamped to.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded down to the nearest integer value.\r\n\t *\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded up to the nearest integer value.\r\n\t *\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded to the nearest integer value\r\n\t *\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded towards zero (up if negative,\r\n\t * down if positive) to an integer value.\r\n\t *\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\troundToZero() {\r\n\r\n\t\tthis.x = Math.trunc( this.x );\r\n\t\tthis.y = Math.trunc( this.y );\r\n\t\tthis.z = Math.trunc( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts this vector - i.e. sets x = -x, y = -y and z = -z.\r\n\t *\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the dot product of the given vector with this instance.\r\n\t *\r\n\t * @param {Vector3} v - The vector to compute the dot product with.\r\n\t * @return {number} The result of the dot product.\r\n\t */\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t}\r\n\r\n\t// TODO lengthSquared?\r\n\r\n\t/**\r\n\t * Computes the square of the Euclidean length (straight-line length) from\r\n\t * (0, 0, 0) to (x, y, z). If you are comparing the lengths of vectors, you should\r\n\t * compare the length squared instead as it is slightly more efficient to calculate.\r\n\t *\r\n\t * @return {number} The square length of this vector.\r\n\t */\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the  Euclidean length (straight-line length) from (0, 0, 0) to (x, y, z).\r\n\t *\r\n\t * @return {number} The length of this vector.\r\n\t */\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the Manhattan length of this vector.\r\n\t *\r\n\t * @return {number} The length of this vector.\r\n\t */\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts this vector to a unit vector - that is, sets it equal to a vector\r\n\t * with the same direction as this one, but with a vector length of `1`.\r\n\t *\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this vector to a vector with the same direction as this one, but\r\n\t * with the specified length.\r\n\t *\r\n\t * @param {number} length - The new length of this vector.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between the given vector and this instance, where\r\n\t * alpha is the percent distance along the line - alpha = 0 will be this\r\n\t * vector, and alpha = 1 will be the given one.\r\n\t *\r\n\t * @param {Vector3} v - The vector to interpolate towards.\r\n\t * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between the given vectors, where alpha is the percent\r\n\t * distance along the line - alpha = 0 will be first vector, and alpha = 1 will\r\n\t * be the second one. The result is stored in this instance.\r\n\t *\r\n\t * @param {Vector3} v1 - The first vector.\r\n\t * @param {Vector3} v2 - The second vector.\r\n\t * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the cross product of the given vector with this instance.\r\n\t *\r\n\t * @param {Vector3} v - The vector to compute the cross product with.\r\n\t * @return {Vector3} The result of the cross product.\r\n\t */\r\n\tcross( v ) {\r\n\r\n\t\treturn this.crossVectors( this, v );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the cross product of the given vectors and stores the result\r\n\t * in this instance.\r\n\t *\r\n\t * @param {Vector3} a - The first vector.\r\n\t * @param {Vector3} b - The second vector.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tcrossVectors( a, b ) {\r\n\r\n\t\tconst ax = a.x, ay = a.y, az = a.z;\r\n\t\tconst bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Projects this vector onto the given one.\r\n\t *\r\n\t * @param {Vector3} v - The vector to project to.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tprojectOnVector( v ) {\r\n\r\n\t\tconst denominator = v.lengthSq();\r\n\r\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\r\n\r\n\t\tconst scalar = v.dot( this ) / denominator;\r\n\r\n\t\treturn this.copy( v ).multiplyScalar( scalar );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Projects this vector onto a plane by subtracting this\r\n\t * vector projected onto the plane's normal from this vector.\r\n\t *\r\n\t * @param {Vector3} planeNormal - The plane normal.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tprojectOnPlane( planeNormal ) {\r\n\r\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\treturn this.sub( _vector );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reflects this vector off a plane orthogonal to the given normal vector.\r\n\t *\r\n\t * @param {Vector3} normal - The (normalized) normal vector.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\treflect( normal ) {\r\n\r\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t}\r\n\t/**\r\n\t * Returns the angle between the given vector and this instance in radians.\r\n\t *\r\n\t * @param {Vector3} v - The vector to compute the angle with.\r\n\t * @return {number} The angle in radians.\r\n\t */\r\n\tangleTo( v ) {\r\n\r\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\r\n\r\n\t\tif ( denominator === 0 ) return Math.PI / 2;\r\n\r\n\t\tconst theta = this.dot( v ) / denominator;\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the distance from the given vector to this instance.\r\n\t *\r\n\t * @param {Vector3} v - The vector to compute the distance to.\r\n\t * @return {number} The distance.\r\n\t */\r\n\tdistanceTo( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the squared distance from the given vector to this instance.\r\n\t * If you are just comparing the distance with another distance, you should compare\r\n\t * the distance squared instead as it is slightly more efficient to calculate.\r\n\t *\r\n\t * @param {Vector3} v - The vector to compute the squared distance to.\r\n\t * @return {number} The squared distance.\r\n\t */\r\n\tdistanceToSquared( v ) {\r\n\r\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the Manhattan distance from the given vector to this instance.\r\n\t *\r\n\t * @param {Vector3} v - The vector to compute the Manhattan distance to.\r\n\t * @return {number} The Manhattan distance.\r\n\t */\r\n\tmanhattanDistanceTo( v ) {\r\n\r\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components from the given spherical coordinates.\r\n\t *\r\n\t * @param {Spherical} s - The spherical coordinates.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetFromSpherical( s ) {\r\n\r\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components from the given spherical coordinates.\r\n\t *\r\n\t * @param {number} radius - The radius.\r\n\t * @param {number} phi - The phi angle in radians.\r\n\t * @param {number} theta - The theta angle in radians.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetFromSphericalCoords( radius, phi, theta ) {\r\n\r\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\r\n\r\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\r\n\t\tthis.y = Math.cos( phi ) * radius;\r\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components from the given cylindrical coordinates.\r\n\t *\r\n\t * @param {Cylindrical} c - The cylindrical coordinates.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetFromCylindrical( c ) {\r\n\r\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components from the given cylindrical coordinates.\r\n\t *\r\n\t * @param {number} radius - The radius.\r\n\t * @param {number} theta - The theta angle in radians.\r\n\t * @param {number} y - The y value.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetFromCylindricalCoords( radius, theta, y ) {\r\n\r\n\t\tthis.x = radius * Math.sin( theta );\r\n\t\tthis.y = y;\r\n\t\tthis.z = radius * Math.cos( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components to the position elements of the\r\n\t * given transformation matrix.\r\n\t *\r\n\t * @param {Matrix4} m - The 4x4 matrix.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetFromMatrixPosition( m ) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 12 ];\r\n\t\tthis.y = e[ 13 ];\r\n\t\tthis.z = e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components to the scale elements of the\r\n\t * given transformation matrix.\r\n\t *\r\n\t * @param {Matrix4} m - The 4x4 matrix.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetFromMatrixScale( m ) {\r\n\r\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components from the specified matrix column.\r\n\t *\r\n\t * @param {Matrix4} m - The 4x4 matrix.\r\n\t * @param {number} index - The column index.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetFromMatrixColumn( m, index ) {\r\n\r\n\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components from the specified matrix column.\r\n\t *\r\n\t * @param {Matrix3} m - The 3x3 matrix.\r\n\t * @param {number} index - The column index.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetFromMatrix3Column( m, index ) {\r\n\r\n\t\treturn this.fromArray( m.elements, index * 3 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components from the given Euler angles.\r\n\t *\r\n\t * @param {Euler} e - The Euler angles to set.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetFromEuler( e ) {\r\n\r\n\t\tthis.x = e._x;\r\n\t\tthis.y = e._y;\r\n\t\tthis.z = e._z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components from the RGB components of the\r\n\t * given color.\r\n\t *\r\n\t * @param {Color} c - The color to set.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tsetFromColor( c ) {\r\n\r\n\t\tthis.x = c.r;\r\n\t\tthis.y = c.g;\r\n\t\tthis.z = c.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this vector is equal with the given one.\r\n\t *\r\n\t * @param {Vector3} v - The vector to test for equality.\r\n\t * @return {boolean} Whether this vector is equal with the given one.\r\n\t */\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this vector's x value to be `array[ offset ]`, y value to be `array[ offset + 1 ]`\r\n\t * and z value to be `array[ offset + 2 ]`.\r\n\t *\r\n\t * @param {Array<number>} array - An array holding the vector component values.\r\n\t * @param {number} [offset=0] - The offset into the array.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Writes the components of this vector to the given array. If no array is provided,\r\n\t * the method returns a new instance.\r\n\t *\r\n\t * @param {Array<number>} [array=[]] - The target array holding the vector components.\r\n\t * @param {number} [offset=0] - Index of the first element in the array.\r\n\t * @return {Array<number>} The vector components.\r\n\t */\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the components of this vector from the given buffer attribute.\r\n\t *\r\n\t * @param {BufferAttribute} attribute - The buffer attribute holding vector data.\r\n\t * @param {number} index - The index into the attribute.\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\t\tthis.z = attribute.getZ( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets each component of this vector to a pseudo-random value between `0` and\r\n\t * `1`, excluding `1`.\r\n\t *\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this vector to a uniformly random point on a unit sphere.\r\n\t *\r\n\t * @return {Vector3} A reference to this vector.\r\n\t */\r\n\trandomDirection() {\r\n\r\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\r\n\r\n\t\tconst theta = Math.random() * Math.PI * 2;\r\n\t\tconst u = Math.random() * 2 - 1;\r\n\t\tconst c = Math.sqrt( 1 - u * u );\r\n\r\n\t\tthis.x = c * Math.cos( theta );\r\n\t\tthis.y = u;\r\n\t\tthis.z = c * Math.sin( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t\tyield this.z;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector = /*@__PURE__*/ new Vector3();\r\nconst _quaternion = /*@__PURE__*/ new Quaternion();\r\n\r\nexport { Vector3 };\r\n","export const REVISION = '181dev';\r\n\r\n/**\r\n * Represents mouse buttons and interaction types in context of controls.\r\n *\r\n * @type {ConstantsMouse}\r\n * @constant\r\n */\r\nexport const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\r\n\r\n/**\r\n * Represents touch interaction types in context of controls.\r\n *\r\n * @type {ConstantsTouch}\r\n * @constant\r\n */\r\nexport const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\r\n\r\n/**\r\n * Disables face culling.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const CullFaceNone = 0;\r\n\r\n/**\r\n * Culls back faces.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const CullFaceBack = 1;\r\n\r\n/**\r\n * Culls front faces.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const CullFaceFront = 2;\r\n\r\n/**\r\n * Culls both front and back faces.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const CullFaceFrontBack = 3;\r\n\r\n/**\r\n * Gives unfiltered shadow maps - fastest, but lowest quality.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const BasicShadowMap = 0;\r\n\r\n/**\r\n * Filters shadow maps using the Percentage-Closer Filtering (PCF) algorithm.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const PCFShadowMap = 1;\r\n\r\n/**\r\n * Filters shadow maps using the Percentage-Closer Filtering (PCF) algorithm with\r\n * better soft shadows especially when using low-resolution shadow maps.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const PCFSoftShadowMap = 2;\r\n\r\n/**\r\n * Filters shadow maps using the Variance Shadow Map (VSM) algorithm.\r\n * When using VSMShadowMap all shadow receivers will also cast shadows.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const VSMShadowMap = 3;\r\n\r\n/**\r\n * Only front faces are rendered.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const FrontSide = 0;\r\n\r\n/**\r\n * Only back faces are rendered.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const BackSide = 1;\r\n\r\n/**\r\n * Both front and back faces are rendered.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const DoubleSide = 2;\r\n\r\n/**\r\n * No blending is performed which effectively disables\r\n * alpha transparency.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NoBlending = 0;\r\n\r\n/**\r\n * The default blending.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NormalBlending = 1;\r\n\r\n/**\r\n * Represents additive blending.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const AdditiveBlending = 2;\r\n\r\n/**\r\n * Represents subtractive blending.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const SubtractiveBlending = 3;\r\n\r\n/**\r\n * Represents multiply blending.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const MultiplyBlending = 4;\r\n\r\n/**\r\n * Represents custom blending.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const CustomBlending = 5;\r\n\r\n/**\r\n * A `source + destination` blending equation.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const AddEquation = 100;\r\n\r\n/**\r\n * A `source - destination` blending equation.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const SubtractEquation = 101;\r\n\r\n/**\r\n * A `destination - source` blending equation.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ReverseSubtractEquation = 102;\r\n\r\n/**\r\n * A blend equation that uses the minimum of source and destination.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const MinEquation = 103;\r\n\r\n/**\r\n * A blend equation that uses the maximum of source and destination.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const MaxEquation = 104;\r\n\r\n/**\r\n * Multiplies all colors by `0`.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ZeroFactor = 200;\r\n\r\n/**\r\n * Multiplies all colors by `1`.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const OneFactor = 201;\r\n\r\n/**\r\n * Multiplies all colors by the source colors.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const SrcColorFactor = 202;\r\n\r\n/**\r\n * Multiplies all colors by `1` minus each source color.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const OneMinusSrcColorFactor = 203;\r\n\r\n/**\r\n * Multiplies all colors by the source alpha value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const SrcAlphaFactor = 204;\r\n\r\n/**\r\n * Multiplies all colors by 1 minus the source alpha value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const OneMinusSrcAlphaFactor = 205;\r\n\r\n/**\r\n * Multiplies all colors by the destination alpha value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const DstAlphaFactor = 206;\r\n\r\n/**\r\n * Multiplies all colors by `1` minus the destination alpha value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const OneMinusDstAlphaFactor = 207;\r\n\r\n/**\r\n * Multiplies all colors by the destination color.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const DstColorFactor = 208;\r\n\r\n/**\r\n * Multiplies all colors by `1` minus each destination color.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const OneMinusDstColorFactor = 209;\r\n\r\n/**\r\n * Multiplies the RGB colors by the smaller of either the source alpha\r\n * value or the value of `1` minus the destination alpha value. The alpha\r\n * value is multiplied by `1`.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const SrcAlphaSaturateFactor = 210;\r\n\r\n/**\r\n * Multiplies all colors by a constant color.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ConstantColorFactor = 211;\r\n\r\n/**\r\n * Multiplies all colors by `1` minus a constant color.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const OneMinusConstantColorFactor = 212;\r\n\r\n/**\r\n * Multiplies all colors by a constant alpha value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ConstantAlphaFactor = 213;\r\n\r\n/**\r\n * Multiplies all colors by 1 minus a constant alpha value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const OneMinusConstantAlphaFactor = 214;\r\n\r\n/**\r\n * Never pass.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NeverDepth = 0;\r\n\r\n/**\r\n * Always pass.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const AlwaysDepth = 1;\r\n\r\n/**\r\n * Pass if the incoming value is less than the depth buffer value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LessDepth = 2;\r\n\r\n/**\r\n * Pass if the incoming value is less than or equal to the depth buffer value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LessEqualDepth = 3;\r\n\r\n/**\r\n * Pass if the incoming value equals the depth buffer value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const EqualDepth = 4;\r\n\r\n/**\r\n * Pass if the incoming value is greater than or equal to the depth buffer value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const GreaterEqualDepth = 5;\r\n\r\n/**\r\n * Pass if the incoming value is greater than the depth buffer value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const GreaterDepth = 6;\r\n\r\n/**\r\n * Pass if the incoming value is not equal to the depth buffer value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NotEqualDepth = 7;\r\n\r\n/**\r\n * Multiplies the environment map color with the surface color.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const MultiplyOperation = 0;\r\n\r\n/**\r\n * Uses reflectivity to blend between the two colors.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const MixOperation = 1;\r\n\r\n/**\r\n * Adds the two colors.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const AddOperation = 2;\r\n\r\n/**\r\n * No tone mapping is applied.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NoToneMapping = 0;\r\n\r\n/**\r\n * Linear tone mapping.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LinearToneMapping = 1;\r\n\r\n/**\r\n * Reinhard tone mapping.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ReinhardToneMapping = 2;\r\n\r\n/**\r\n * Cineon tone mapping.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const CineonToneMapping = 3;\r\n\r\n/**\r\n * ACES Filmic tone mapping.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ACESFilmicToneMapping = 4;\r\n\r\n/**\r\n * Custom tone mapping.\r\n *\r\n * Expects a custom implementation by modifying shader code of the material's fragment shader.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const CustomToneMapping = 5;\r\n\r\n/**\r\n * AgX tone mapping.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const AgXToneMapping = 6;\r\n\r\n/**\r\n * Neutral tone mapping.\r\n *\r\n * Implementation based on the Khronos 3D Commerce Group standard tone mapping.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NeutralToneMapping = 7;\r\n\r\n/**\r\n * The skinned mesh shares the same world space as the skeleton.\r\n *\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const AttachedBindMode = 'attached';\r\n\r\n/**\r\n * The skinned mesh does not share the same world space as the skeleton.\r\n * This is useful when a skeleton is shared across multiple skinned meshes.\r\n *\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const DetachedBindMode = 'detached';\r\n\r\n/**\r\n * Maps textures using the geometry's UV coordinates.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const UVMapping = 300;\r\n\r\n/**\r\n * Reflection mapping for cube textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const CubeReflectionMapping = 301;\r\n\r\n/**\r\n * Refraction mapping for cube textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const CubeRefractionMapping = 302;\r\n\r\n/**\r\n * Reflection mapping for equirectangular textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const EquirectangularReflectionMapping = 303;\r\n\r\n/**\r\n * Refraction mapping for equirectangular textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const EquirectangularRefractionMapping = 304;\r\n\r\n/**\r\n * Reflection mapping for PMREM textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const CubeUVReflectionMapping = 306;\r\n\r\n/**\r\n * The texture will simply repeat to infinity.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RepeatWrapping = 1000;\r\n\r\n/**\r\n * The last pixel of the texture stretches to the edge of the mesh.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ClampToEdgeWrapping = 1001;\r\n\r\n/**\r\n * The texture will repeats to infinity, mirroring on each repeat.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const MirroredRepeatWrapping = 1002;\r\n\r\n/**\r\n * Returns the value of the texture element that is nearest (in Manhattan distance)\r\n * to the specified texture coordinates.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NearestFilter = 1003;\r\n\r\n/**\r\n * Chooses the mipmap that most closely matches the size of the pixel being textured\r\n * and uses the `NearestFilter` criterion (the texel nearest to the center of the pixel)\r\n * to produce a texture value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NearestMipmapNearestFilter = 1004;\r\nexport const NearestMipMapNearestFilter = 1004; // legacy\r\n\r\n/**\r\n * Chooses the two mipmaps that most closely match the size of the pixel being textured and\r\n * uses the `NearestFilter` criterion to produce a texture value from each mipmap.\r\n * The final texture value is a weighted average of those two values.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NearestMipmapLinearFilter = 1005;\r\nexport const NearestMipMapLinearFilter = 1005; // legacy\r\n\r\n/**\r\n * Returns the weighted average of the four texture elements that are closest to the specified\r\n * texture coordinates, and can include items wrapped or repeated from other parts of a texture,\r\n * depending on the values of `wrapS` and `wrapT`, and on the exact mapping.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LinearFilter = 1006;\r\n\r\n/**\r\n * Chooses the mipmap that most closely matches the size of the pixel being textured and uses\r\n * the `LinearFilter` criterion (a weighted average of the four texels that are closest to the\r\n * center of the pixel) to produce a texture value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LinearMipmapNearestFilter = 1007;\r\nexport const LinearMipMapNearestFilter = 1007; // legacy\r\n\r\n/**\r\n * Chooses the two mipmaps that most closely match the size of the pixel being textured and uses\r\n * the `LinearFilter` criterion to produce a texture value from each mipmap. The final texture value\r\n * is a weighted average of those two values.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LinearMipmapLinearFilter = 1008;\r\nexport const LinearMipMapLinearFilter = 1008; // legacy\r\n\r\n/**\r\n * An unsigned byte data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const UnsignedByteType = 1009;\r\n\r\n/**\r\n * A byte data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ByteType = 1010;\r\n\r\n/**\r\n * A short data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ShortType = 1011;\r\n\r\n/**\r\n * An unsigned short data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const UnsignedShortType = 1012;\r\n\r\n/**\r\n * An int data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const IntType = 1013;\r\n\r\n/**\r\n * An unsigned int data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const UnsignedIntType = 1014;\r\n\r\n/**\r\n * A float data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const FloatType = 1015;\r\n\r\n/**\r\n * A half float data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const HalfFloatType = 1016;\r\n\r\n/**\r\n * An unsigned short 4_4_4_4 (packed) data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const UnsignedShort4444Type = 1017;\r\n\r\n/**\r\n * An unsigned short 5_5_5_1 (packed) data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const UnsignedShort5551Type = 1018;\r\n\r\n/**\r\n * An unsigned int 24_8 data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const UnsignedInt248Type = 1020;\r\n\r\n/**\r\n * An unsigned int 5_9_9_9 (packed) data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const UnsignedInt5999Type = 35902;\r\n\r\n/**\r\n * An unsigned int 10_11_11 (packed) data type for textures.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const UnsignedInt101111Type = 35899;\r\n\r\n/**\r\n * Discards the red, green and blue components and reads just the alpha component.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const AlphaFormat = 1021;\r\n\r\n/**\r\n * Discards the alpha component and reads the red, green and blue component.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBFormat = 1022;\r\n\r\n/**\r\n * Reads the red, green, blue and alpha components.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBAFormat = 1023;\r\n\r\n/**\r\n * Reads each element as a single depth value, converts it to floating point, and clamps to the range `[0,1]`.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const DepthFormat = 1026;\r\n\r\n/**\r\n * Reads each element is a pair of depth and stencil values. The depth component of the pair is interpreted as\r\n * in `DepthFormat`. The stencil component is interpreted based on the depth + stencil internal format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const DepthStencilFormat = 1027;\r\n\r\n/**\r\n * Discards the green, blue and alpha components and reads just the red component.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RedFormat = 1028;\r\n\r\n/**\r\n * Discards the green, blue and alpha components and reads just the red component. The texels are read as integers instead of floating point.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RedIntegerFormat = 1029;\r\n\r\n/**\r\n * Discards the alpha, and blue components and reads the red, and green components.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGFormat = 1030;\r\n\r\n/**\r\n * Discards the alpha, and blue components and reads the red, and green components. The texels are read as integers instead of floating point.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGIntegerFormat = 1031;\r\n\r\n/**\r\n * Discards the alpha component and reads the red, green and blue component. The texels are read as integers instead of floating point.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBIntegerFormat = 1032;\r\n\r\n/**\r\n * Reads the red, green, blue and alpha components. The texels are read as integers instead of floating point.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBAIntegerFormat = 1033;\r\n\r\n/**\r\n * A DXT1-compressed image in an RGB image format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGB_S3TC_DXT1_Format = 33776;\r\n\r\n/**\r\n * A DXT1-compressed image in an RGB image format with a simple on/off alpha value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_S3TC_DXT1_Format = 33777;\r\n\r\n/**\r\n * A DXT3-compressed image in an RGBA image format. Compared to a 32-bit RGBA texture, it offers 4:1 compression.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_S3TC_DXT3_Format = 33778;\r\n\r\n/**\r\n * A DXT5-compressed image in an RGBA image format. It also provides a 4:1 compression, but differs to the DXT3\r\n * compression in how the alpha compression is done.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_S3TC_DXT5_Format = 33779;\r\n\r\n/**\r\n * PVRTC RGB compression in 4-bit mode. One block for each 4×4 pixels.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\r\n\r\n/**\r\n * PVRTC RGB compression in 2-bit mode. One block for each 8×4 pixels.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\r\n\r\n/**\r\n * PVRTC RGBA compression in 4-bit mode. One block for each 4×4 pixels.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\r\n\r\n/**\r\n * PVRTC RGBA compression in 2-bit mode. One block for each 8×4 pixels.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\r\n\r\n/**\r\n * ETC1 RGB format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGB_ETC1_Format = 36196;\r\n\r\n/**\r\n * ETC2 RGB format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGB_ETC2_Format = 37492;\r\n\r\n/**\r\n * ETC2 RGBA format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ETC2_EAC_Format = 37496;\r\n\r\n/**\r\n * ASTC RGBA 4x4 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_4x4_Format = 37808;\r\n\r\n/**\r\n * ASTC RGBA 5x4 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_5x4_Format = 37809;\r\n\r\n/**\r\n * ASTC RGBA 5x5 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_5x5_Format = 37810;\r\n\r\n/**\r\n * ASTC RGBA 6x5 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_6x5_Format = 37811;\r\n\r\n/**\r\n * ASTC RGBA 6x6 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_6x6_Format = 37812;\r\n\r\n/**\r\n * ASTC RGBA 8x5 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_8x5_Format = 37813;\r\n\r\n/**\r\n * ASTC RGBA 8x6 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_8x6_Format = 37814;\r\n\r\n/**\r\n * ASTC RGBA 8x8 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_8x8_Format = 37815;\r\n\r\n/**\r\n * ASTC RGBA 10x5 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_10x5_Format = 37816;\r\n\r\n/**\r\n * ASTC RGBA 10x6 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_10x6_Format = 37817;\r\n\r\n/**\r\n * ASTC RGBA 10x8 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_10x8_Format = 37818;\r\n\r\n/**\r\n * ASTC RGBA 10x10 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_10x10_Format = 37819;\r\n\r\n/**\r\n * ASTC RGBA 12x10 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_12x10_Format = 37820;\r\n\r\n/**\r\n * ASTC RGBA 12x12 format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_ASTC_12x12_Format = 37821;\r\n\r\n/**\r\n * BPTC RGBA format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBA_BPTC_Format = 36492;\r\n\r\n/**\r\n * BPTC Signed RGB format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGB_BPTC_SIGNED_Format = 36494;\r\n\r\n/**\r\n * BPTC Unsigned RGB format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGB_BPTC_UNSIGNED_Format = 36495;\r\n\r\n/**\r\n * RGTC1 Red format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RED_RGTC1_Format = 36283;\r\n\r\n/**\r\n * RGTC1 Signed Red format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const SIGNED_RED_RGTC1_Format = 36284;\r\n\r\n/**\r\n * RGTC2 Red Green format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RED_GREEN_RGTC2_Format = 36285;\r\n\r\n/**\r\n * RGTC2 Signed Red Green format.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const SIGNED_RED_GREEN_RGTC2_Format = 36286;\r\n\r\n/**\r\n * Animations are played once.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LoopOnce = 2200;\r\n\r\n/**\r\n * Animations are played with a chosen number of repetitions, each time jumping from\r\n * the end of the clip directly to its beginning.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LoopRepeat = 2201;\r\n\r\n/**\r\n * Animations are played with a chosen number of repetitions, alternately playing forward\r\n * and backward.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LoopPingPong = 2202;\r\n\r\n/**\r\n * Discrete interpolation mode for keyframe tracks.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const InterpolateDiscrete = 2300;\r\n\r\n/**\r\n * Linear interpolation mode for keyframe tracks.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const InterpolateLinear = 2301;\r\n\r\n/**\r\n * Smooth interpolation mode for keyframe tracks.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const InterpolateSmooth = 2302;\r\n\r\n/**\r\n * Zero curvature ending for animations.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ZeroCurvatureEnding = 2400;\r\n\r\n/**\r\n * Zero slope ending for animations.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ZeroSlopeEnding = 2401;\r\n\r\n/**\r\n * Wrap around ending for animations.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const WrapAroundEnding = 2402;\r\n\r\n/**\r\n * Default animation blend mode.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NormalAnimationBlendMode = 2500;\r\n\r\n/**\r\n * Additive animation blend mode. Can be used to layer motions on top of\r\n * each other to build complex performances from smaller re-usable assets.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const AdditiveAnimationBlendMode = 2501;\r\n\r\n/**\r\n * For every three vertices draw a single triangle.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const TrianglesDrawMode = 0;\r\n\r\n/**\r\n * For each vertex draw a triangle from the last three vertices.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const TriangleStripDrawMode = 1;\r\n\r\n/**\r\n * For each vertex draw a triangle from the first vertex and the last two vertices.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const TriangleFanDrawMode = 2;\r\n\r\n/**\r\n * Basic depth packing.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const BasicDepthPacking = 3200;\r\n\r\n/**\r\n * A depth value is packed into 32 bit RGBA.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBADepthPacking = 3201;\r\n\r\n/**\r\n * A depth value is packed into 24 bit RGB.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGBDepthPacking = 3202;\r\n\r\n/**\r\n * A depth value is packed into 16 bit RG.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const RGDepthPacking = 3203;\r\n\r\n/**\r\n * Normal information is relative to the underlying surface.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const TangentSpaceNormalMap = 0;\r\n\r\n/**\r\n * Normal information is relative to the object orientation.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ObjectSpaceNormalMap = 1;\r\n\r\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\r\n\r\n/**\r\n * No color space.\r\n *\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const NoColorSpace = '';\r\n\r\n/**\r\n * sRGB color space.\r\n *\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const SRGBColorSpace = 'srgb';\r\n\r\n/**\r\n * sRGB-linear color space.\r\n *\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const LinearSRGBColorSpace = 'srgb-linear';\r\n\r\n/**\r\n * Linear transfer function.\r\n *\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const LinearTransfer = 'linear';\r\n\r\n/**\r\n * sRGB transfer function.\r\n *\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const SRGBTransfer = 'srgb';\r\n\r\n/**\r\n * Sets the stencil buffer value to `0`.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ZeroStencilOp = 0;\r\n\r\n/**\r\n * Keeps the current value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const KeepStencilOp = 7680;\r\n\r\n/**\r\n * Sets the stencil buffer value to the specified reference value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const ReplaceStencilOp = 7681;\r\n\r\n/**\r\n * Increments the current stencil buffer value. Clamps to the maximum representable unsigned value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const IncrementStencilOp = 7682;\r\n\r\n/**\r\n * Decrements the current stencil buffer value. Clamps to `0`.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const DecrementStencilOp = 7683;\r\n\r\n/**\r\n * Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing\r\n * the maximum representable unsigned value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const IncrementWrapStencilOp = 34055;\r\n\r\n/**\r\n * Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable\r\n * unsigned value when decrementing a stencil buffer value of `0`.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const DecrementWrapStencilOp = 34056;\r\n\r\n/**\r\n * Inverts the current stencil buffer value bitwise.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const InvertStencilOp = 5386;\r\n\r\n/**\r\n * Will never return true.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NeverStencilFunc = 512;\r\n\r\n/**\r\n * Will return true if the stencil reference value is less than the current stencil value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LessStencilFunc = 513;\r\n\r\n/**\r\n * Will return true if the stencil reference value is equal to the current stencil value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const EqualStencilFunc = 514;\r\n\r\n/**\r\n * Will return true if the stencil reference value is less than or equal to the current stencil value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LessEqualStencilFunc = 515;\r\n\r\n/**\r\n * Will return true if the stencil reference value is greater than the current stencil value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const GreaterStencilFunc = 516;\r\n\r\n/**\r\n * Will return true if the stencil reference value is not equal to the current stencil value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NotEqualStencilFunc = 517;\r\n\r\n/**\r\n * Will return true if the stencil reference value is greater than or equal to the current stencil value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const GreaterEqualStencilFunc = 518;\r\n\r\n/**\r\n * Will always return true.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const AlwaysStencilFunc = 519;\r\n\r\n/**\r\n * Never pass.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NeverCompare = 512;\r\n\r\n/**\r\n * Pass if the incoming value is less than the texture value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LessCompare = 513;\r\n\r\n/**\r\n * Pass if the incoming value equals the texture value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const EqualCompare = 514;\r\n\r\n/**\r\n * Pass if the incoming value is less than or equal to the texture value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const LessEqualCompare = 515;\r\n\r\n/**\r\n * Pass if the incoming value is greater than the texture value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const GreaterCompare = 516;\r\n\r\n/**\r\n * Pass if the incoming value is not equal to the texture value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const NotEqualCompare = 517;\r\n\r\n/**\r\n * Pass if the incoming value is greater than or equal to the texture value.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const GreaterEqualCompare = 518;\r\n\r\n/**\r\n * Always pass.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const AlwaysCompare = 519;\r\n\r\n/**\r\n * The contents are intended to be specified once by the application, and used many\r\n * times as the source for drawing and image specification commands.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const StaticDrawUsage = 35044;\r\n\r\n/**\r\n * The contents are intended to be respecified repeatedly by the application, and\r\n * used many times as the source for drawing and image specification commands.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const DynamicDrawUsage = 35048;\r\n\r\n/**\r\n * The contents are intended to be specified once by the application, and used at most\r\n * a few times as the source for drawing and image specification commands.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const StreamDrawUsage = 35040;\r\n\r\n/**\r\n * The contents are intended to be specified once by reading data from the 3D API, and queried\r\n * many times by the application.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const StaticReadUsage = 35045;\r\n\r\n/**\r\n * The contents are intended to be respecified repeatedly by reading data from the 3D API, and queried\r\n * many times by the application.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const DynamicReadUsage = 35049;\r\n\r\n/**\r\n * The contents are intended to be specified once by reading data from the 3D API, and queried at most\r\n * a few times by the application\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const StreamReadUsage = 35041;\r\n\r\n/**\r\n * The contents are intended to be specified once by reading data from the 3D API, and used many times as\r\n * the source for WebGL drawing and image specification commands.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const StaticCopyUsage = 35046;\r\n\r\n/**\r\n * The contents are intended to be respecified repeatedly by reading data from the 3D API, and used many times\r\n * as the source for WebGL drawing and image specification commands.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const DynamicCopyUsage = 35050;\r\n\r\n/**\r\n * The contents are intended to be specified once by reading data from the 3D API, and used at most a few times\r\n * as the source for WebGL drawing and image specification commands.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const StreamCopyUsage = 35042;\r\n\r\n/**\r\n * GLSL 1 shader code.\r\n *\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const GLSL1 = '100';\r\n\r\n/**\r\n * GLSL 3 shader code.\r\n *\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const GLSL3 = '300 es';\r\n\r\n/**\r\n * WebGL coordinate system.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const WebGLCoordinateSystem = 2000;\r\n\r\n/**\r\n * WebGPU coordinate system.\r\n *\r\n * @type {number}\r\n * @constant\r\n */\r\nexport const WebGPUCoordinateSystem = 2001;\r\n\r\n/**\r\n * Represents the different timestamp query types.\r\n *\r\n * @type {ConstantsTimestampQuery}\r\n * @constant\r\n */\r\nexport const TimestampQuery = {\r\n\tCOMPUTE: 'compute',\r\n\tRENDER: 'render'\r\n};\r\n\r\n/**\r\n * Represents mouse buttons and interaction types in context of controls.\r\n *\r\n * @type {ConstantsInterpolationSamplingType}\r\n * @constant\r\n */\r\nexport const InterpolationSamplingType = {\r\n\tPERSPECTIVE: 'perspective',\r\n\tLINEAR: 'linear',\r\n\tFLAT: 'flat'\r\n};\r\n\r\n/**\r\n * Represents the different interpolation sampling modes.\r\n *\r\n * @type {ConstantsInterpolationSamplingMode}\r\n * @constant\r\n */\r\nexport const InterpolationSamplingMode = {\r\n\tNORMAL: 'normal',\r\n\tCENTROID: 'centroid',\r\n\tSAMPLE: 'sample',\r\n\tFIRST: 'first',\r\n\tEITHER: 'either'\r\n};\r\n\r\n/**\r\n * This type represents mouse buttons and interaction types in context of controls.\r\n *\r\n * @typedef {Object} ConstantsMouse\r\n * @property {number} MIDDLE - The left mouse button.\r\n * @property {number} LEFT - The middle mouse button.\r\n * @property {number} RIGHT - The right mouse button.\r\n * @property {number} ROTATE - A rotate interaction.\r\n * @property {number} DOLLY - A dolly interaction.\r\n * @property {number} PAN - A pan interaction.\r\n **/\r\n\r\n/**\r\n * This type represents touch interaction types in context of controls.\r\n *\r\n * @typedef {Object} ConstantsTouch\r\n * @property {number} ROTATE - A rotate interaction.\r\n * @property {number} PAN - A pan interaction.\r\n * @property {number} DOLLY_PAN - The dolly-pan interaction.\r\n * @property {number} DOLLY_ROTATE - A dolly-rotate interaction.\r\n **/\r\n\r\n/**\r\n * This type represents the different timestamp query types.\r\n *\r\n * @typedef {Object} ConstantsTimestampQuery\r\n * @property {string} COMPUTE - A `compute` timestamp query.\r\n * @property {string} RENDER - A `render` timestamp query.\r\n **/\r\n\r\n/**\r\n * Represents the different interpolation sampling types.\r\n *\r\n * @typedef {Object} ConstantsInterpolationSamplingType\r\n * @property {string} PERSPECTIVE - Perspective-correct interpolation.\r\n * @property {string} LINEAR - Linear interpolation.\r\n * @property {string} FLAT - Flat interpolation.\r\n */\r\n\r\n/**\r\n * Represents the different interpolation sampling modes.\r\n *\r\n * @typedef {Object} ConstantsInterpolationSamplingMode\r\n * @property {string} NORMAL - Normal sampling mode.\r\n * @property {string} CENTROID - Centroid sampling mode.\r\n * @property {string} SAMPLE - Sample-specific sampling mode.\r\n * @property {string} FIRST - Flat interpolation using the first vertex.\r\n * @property {string} EITHER - Flat interpolation using either vertex.\r\n */\r\n","import { WebGLCoordinateSystem, WebGPUCoordinateSystem } from '../constants.js';\r\nimport { Vector3 } from './Vector3.js';\r\n\r\n/**\r\n * Represents a 4x4 matrix.\r\n *\r\n * The most common use of a 4x4 matrix in 3D computer graphics is as a transformation matrix.\r\n * For an introduction to transformation matrices as used in WebGL, check out [this tutorial]{@link https://www.opengl-tutorial.org/beginners-tutorials/tutorial-3-matrices}\r\n *\r\n * This allows a 3D vector representing a point in 3D space to undergo\r\n * transformations such as translation, rotation, shear, scale, reflection,\r\n * orthogonal or perspective projection and so on, by being multiplied by the\r\n * matrix. This is known as `applying` the matrix to the vector.\r\n *\r\n * A Note on Row-Major and Column-Major Ordering:\r\n *\r\n * The constructor and {@link Matrix3#set} method take arguments in\r\n * [row-major]{@link https://en.wikipedia.org/wiki/Row-_and_column-major_order#Column-major_order}\r\n * order, while internally they are stored in the {@link Matrix3#elements} array in column-major order.\r\n * This means that calling:\r\n * ```js\r\n * const m = new THREE.Matrix4();\r\n * m.set( 11, 12, 13, 14,\r\n *        21, 22, 23, 24,\r\n *        31, 32, 33, 34,\r\n *        41, 42, 43, 44 );\r\n * ```\r\n * will result in the elements array containing:\r\n * ```js\r\n * m.elements = [ 11, 21, 31, 41,\r\n *                12, 22, 32, 42,\r\n *                13, 23, 33, 43,\r\n *                14, 24, 34, 44 ];\r\n * ```\r\n * and internally all calculations are performed using column-major ordering.\r\n * However, as the actual ordering makes no difference mathematically and\r\n * most people are used to thinking about matrices in row-major order, the\r\n * three.js documentation shows matrices in row-major order. Just bear in\r\n * mind that if you are reading the source code, you'll have to take the\r\n * transpose of any matrices outlined here to make sense of the calculations.\r\n */\r\nclass Matrix4 {\r\n\r\n\t/**\r\n\t * Constructs a new 4x4 matrix. The arguments are supposed to be\r\n\t * in row-major order. If no arguments are provided, the constructor\r\n\t * initializes the matrix as an identity matrix.\r\n\t *\r\n\t * @param {number} [n11] - 1-1 matrix element.\r\n\t * @param {number} [n12] - 1-2 matrix element.\r\n\t * @param {number} [n13] - 1-3 matrix element.\r\n\t * @param {number} [n14] - 1-4 matrix element.\r\n\t * @param {number} [n21] - 2-1 matrix element.\r\n\t * @param {number} [n22] - 2-2 matrix element.\r\n\t * @param {number} [n23] - 2-3 matrix element.\r\n\t * @param {number} [n24] - 2-4 matrix element.\r\n\t * @param {number} [n31] - 3-1 matrix element.\r\n\t * @param {number} [n32] - 3-2 matrix element.\r\n\t * @param {number} [n33] - 3-3 matrix element.\r\n\t * @param {number} [n34] - 3-4 matrix element.\r\n\t * @param {number} [n41] - 4-1 matrix element.\r\n\t * @param {number} [n42] - 4-2 matrix element.\r\n\t * @param {number} [n43] - 4-3 matrix element.\r\n\t * @param {number} [n44] - 4-4 matrix element.\r\n\t */\r\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tMatrix4.prototype.isMatrix4 = true;\r\n\r\n\t\t/**\r\n\t\t * A column-major list of matrix values.\r\n\t\t *\r\n\t\t * @type {Array<number>}\r\n\t\t */\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( n11 !== undefined ) {\r\n\r\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the elements of the matrix.The arguments are supposed to be\r\n\t * in row-major order.\r\n\t *\r\n\t * @param {number} [n11] - 1-1 matrix element.\r\n\t * @param {number} [n12] - 1-2 matrix element.\r\n\t * @param {number} [n13] - 1-3 matrix element.\r\n\t * @param {number} [n14] - 1-4 matrix element.\r\n\t * @param {number} [n21] - 2-1 matrix element.\r\n\t * @param {number} [n22] - 2-2 matrix element.\r\n\t * @param {number} [n23] - 2-3 matrix element.\r\n\t * @param {number} [n24] - 2-4 matrix element.\r\n\t * @param {number} [n31] - 3-1 matrix element.\r\n\t * @param {number} [n32] - 3-2 matrix element.\r\n\t * @param {number} [n33] - 3-3 matrix element.\r\n\t * @param {number} [n34] - 3-4 matrix element.\r\n\t * @param {number} [n41] - 4-1 matrix element.\r\n\t * @param {number} [n42] - 4-2 matrix element.\r\n\t * @param {number} [n43] - 4-3 matrix element.\r\n\t * @param {number} [n44] - 4-4 matrix element.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix to the 4x4 identity matrix.\r\n\t *\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tidentity() {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a matrix with copied values from this instance.\r\n\t *\r\n\t * @return {Matrix4} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new Matrix4().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given matrix to this instance.\r\n\t *\r\n\t * @param {Matrix4} m - The matrix to copy.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tcopy( m ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\r\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\r\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\r\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the translation component of the given matrix\r\n\t * into this matrix's translation component.\r\n\t *\r\n\t * @param {Matrix4} m - The matrix to copy the translation component.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tcopyPosition( m ) {\r\n\r\n\t\tconst te = this.elements, me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Set the upper 3x3 elements of this matrix to the values of given 3x3 matrix.\r\n\t *\r\n\t * @param {Matrix3} m - The 3x3 matrix.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tsetFromMatrix3( m ) {\r\n\r\n\t\tconst me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts the basis of this matrix into the three axis vectors provided.\r\n\t *\r\n\t * @param {Vector3} xAxis - The basis's x axis.\r\n\t * @param {Vector3} yAxis - The basis's y axis.\r\n\t * @param {Vector3} zAxis - The basis's z axis.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\textractBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given basis vectors to this matrix.\r\n\t *\r\n\t * @param {Vector3} xAxis - The basis's x axis.\r\n\t * @param {Vector3} yAxis - The basis's y axis.\r\n\t * @param {Vector3} zAxis - The basis's z axis.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts the rotation component of the given matrix\r\n\t * into this matrix's rotation component.\r\n\t *\r\n\t * Note: This method does not support reflection matrices.\r\n\t *\r\n\t * @param {Matrix4} m - The matrix.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\textractRotation( m ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tconst scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\r\n\t\tconst scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\r\n\t\tconst scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\tte[ 3 ] = 0;\r\n\r\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\tte[ 7 ] = 0;\r\n\r\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the rotation component (the upper left 3x3 matrix) of this matrix to\r\n\t * the rotation specified by the given Euler angles. The rest of\r\n\t * the matrix is set to the identity. Depending on the {@link Euler#order},\r\n\t * there are six possible outcomes. See [this page]{@link https://en.wikipedia.org/wiki/Euler_angles#Rotation_matrix}\r\n\t * for a complete list.\r\n\t *\r\n\t * @param {Euler} euler - The Euler angles.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeRotationFromEuler( euler ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\r\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\r\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\r\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// bottom row\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// last column\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the rotation component of this matrix to the rotation specified by\r\n\t * the given Quaternion as outlined [here]{@link https://en.wikipedia.org/wiki/Rotation_matrix#Quaternion}\r\n\t * The rest of the matrix is set to the identity.\r\n\t *\r\n\t * @param {Quaternion} q - The Quaternion.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeRotationFromQuaternion( q ) {\r\n\r\n\t\treturn this.compose( _zero, q, _one );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the rotation component of the transformation matrix, looking from `eye` towards\r\n\t * `target`, and oriented by the up-direction.\r\n\t *\r\n\t * @param {Vector3} eye - The eye vector.\r\n\t * @param {Vector3} target - The target vector.\r\n\t * @param {Vector3} up - The up vector.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tlookAt( eye, target, up ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\t_z.subVectors( eye, target );\r\n\r\n\t\tif ( _z.lengthSq() === 0 ) {\r\n\r\n\t\t\t// eye and target are in the same position\r\n\r\n\t\t\t_z.z = 1;\r\n\r\n\t\t}\r\n\r\n\t\t_z.normalize();\r\n\t\t_x.crossVectors( up, _z );\r\n\r\n\t\tif ( _x.lengthSq() === 0 ) {\r\n\r\n\t\t\t// up and z are parallel\r\n\r\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\r\n\r\n\t\t\t\t_z.x += 0.0001;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_z.z += 0.0001;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_z.normalize();\r\n\t\t\t_x.crossVectors( up, _z );\r\n\r\n\t\t}\r\n\r\n\t\t_x.normalize();\r\n\t\t_y.crossVectors( _z, _x );\r\n\r\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\r\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\r\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-multiplies this matrix by the given 4x4 matrix.\r\n\t *\r\n\t * @param {Matrix4} m - The matrix to multiply with.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pre-multiplies this matrix by the given 4x4 matrix.\r\n\t *\r\n\t * @param {Matrix4} m - The matrix to multiply with.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tpremultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiples the given 4x4 matrices and stores the result\r\n\t * in this matrix.\r\n\t *\r\n\t * @param {Matrix4} a - The first matrix.\r\n\t * @param {Matrix4} b - The second matrix.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmultiplyMatrices( a, b ) {\r\n\r\n\t\tconst ae = a.elements;\r\n\t\tconst be = b.elements;\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies every component of the matrix by the given scalar.\r\n\t *\r\n\t * @param {number} s - The scalar.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes and returns the determinant of this matrix.\r\n\t *\r\n\t * Based on the method outlined [here]{@link http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.html}.\r\n\t *\r\n\t * @return {number} The determinant.\r\n\t */\r\n\tdeterminant() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Transposes this matrix in place.\r\n\t *\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\ttranspose() {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tlet tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the position component for this matrix from the given vector,\r\n\t * without affecting the rest of the matrix.\r\n\t *\r\n\t * @param {number|Vector3} x - The x component of the vector or alternatively the vector object.\r\n\t * @param {number} y - The y component of the vector.\r\n\t * @param {number} z - The z component of the vector.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tsetPosition( x, y, z ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\tte[ 12 ] = x.x;\r\n\t\t\tte[ 13 ] = x.y;\r\n\t\t\tte[ 14 ] = x.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tte[ 12 ] = x;\r\n\t\t\tte[ 13 ] = y;\r\n\t\t\tte[ 14 ] = z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts this matrix, using the [analytic method]{@link https://en.wikipedia.org/wiki/Invertible_matrix#Analytic_solution}.\r\n\t * You can not invert with a determinant of zero. If you attempt this, the method produces\r\n\t * a zero matrix instead.\r\n\t *\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tinvert() {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tconst te = this.elements,\r\n\r\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\r\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\r\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\r\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\r\n\r\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n\r\n\t\tconst detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 4 ] = t12 * detInv;\r\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 8 ] = t13 * detInv;\r\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n\t\tte[ 12 ] = t14 * detInv;\r\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the columns of this matrix by the given vector.\r\n\t *\r\n\t * @param {Vector3} v - The scale vector.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tscale( v ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the maximum scale value of the three axes.\r\n\t *\r\n\t * @return {number} The maximum scale.\r\n\t */\r\n\tgetMaxScaleOnAxis() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix as a translation transform from the given vector.\r\n\t *\r\n\t * @param {number|Vector3} x - The amount to translate in the X axis or alternatively a translation vector.\r\n\t * @param {number} y - The amount to translate in the Y axis.\r\n\t * @param {number} z - The amount to translate in the z axis.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeTranslation( x, y, z ) {\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, x.x,\r\n\t\t\t\t0, 1, 0, x.y,\r\n\t\t\t\t0, 0, 1, x.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix as a rotational transformation around the X axis by\r\n\t * the given angle.\r\n\t *\r\n\t * @param {number} theta - The rotation in radians.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeRotationX( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s, c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix as a rotational transformation around the Y axis by\r\n\t * the given angle.\r\n\t *\r\n\t * @param {number} theta - The rotation in radians.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeRotationY( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix as a rotational transformation around the Z axis by\r\n\t * the given angle.\r\n\t *\r\n\t * @param {number} theta - The rotation in radians.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeRotationZ( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts, c, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix as a rotational transformation around the given axis by\r\n\t * the given angle.\r\n\t *\r\n\t * This is a somewhat controversial but mathematically sound alternative to\r\n\t * rotating via Quaternions. See the discussion [here]{@link https://www.gamedev.net/articles/programming/math-and-physics/do-we-really-need-quaternions-r1199}.\r\n\t *\r\n\t * @param {Vector3} axis - The normalized rotation axis.\r\n\t * @param {number} angle - The rotation in radians.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeRotationAxis( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tconst c = Math.cos( angle );\r\n\t\tconst s = Math.sin( angle );\r\n\t\tconst t = 1 - c;\r\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\r\n\t\tconst tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix as a scale transformation.\r\n\t *\r\n\t * @param {number} x - The amount to scale in the X axis.\r\n\t * @param {number} y - The amount to scale in the Y axis.\r\n\t * @param {number} z - The amount to scale in the Z axis.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeScale( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix as a shear transformation.\r\n\t *\r\n\t * @param {number} xy - The amount to shear X by Y.\r\n\t * @param {number} xz - The amount to shear X by Z.\r\n\t * @param {number} yx - The amount to shear Y by X.\r\n\t * @param {number} yz - The amount to shear Y by Z.\r\n\t * @param {number} zx - The amount to shear Z by X.\r\n\t * @param {number} zy - The amount to shear Z by Y.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, yx, zx, 0,\r\n\t\t\txy, 1, zy, 0,\r\n\t\t\txz, yz, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix to the transformation composed of the given position,\r\n\t * rotation (Quaternion) and scale.\r\n\t *\r\n\t * @param {Vector3} position - The position vector.\r\n\t * @param {Quaternion} quaternion - The rotation as a Quaternion.\r\n\t * @param {Vector3} scale - The scale vector.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tcompose( position, quaternion, scale ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\r\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\r\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\r\n\r\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\r\n\t\tte[ 1 ] = ( xy + wz ) * sx;\r\n\t\tte[ 2 ] = ( xz - wy ) * sx;\r\n\t\tte[ 3 ] = 0;\r\n\r\n\t\tte[ 4 ] = ( xy - wz ) * sy;\r\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\r\n\t\tte[ 6 ] = ( yz + wx ) * sy;\r\n\t\tte[ 7 ] = 0;\r\n\r\n\t\tte[ 8 ] = ( xz + wy ) * sz;\r\n\t\tte[ 9 ] = ( yz - wx ) * sz;\r\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\tte[ 12 ] = position.x;\r\n\t\tte[ 13 ] = position.y;\r\n\t\tte[ 14 ] = position.z;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decomposes this matrix into its position, rotation and scale components\r\n\t * and provides the result in the given objects.\r\n\t *\r\n\t * Note: Not all matrices are decomposable in this way. For example, if an\r\n\t * object has a non-uniformly scaled parent, then the object's world matrix\r\n\t * may not be decomposable, and this method may not be appropriate.\r\n\t *\r\n\t * @param {Vector3} position - The position vector.\r\n\t * @param {Quaternion} quaternion - The rotation as a Quaternion.\r\n\t * @param {Vector3} scale - The scale vector.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tdecompose( position, quaternion, scale ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tlet sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\tconst sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\tconst sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t// if determine is negative, we need to invert one scale\r\n\t\tconst det = this.determinant();\r\n\t\tif ( det < 0 ) sx = - sx;\r\n\r\n\t\tposition.x = te[ 12 ];\r\n\t\tposition.y = te[ 13 ];\r\n\t\tposition.z = te[ 14 ];\r\n\r\n\t\t// scale the rotation part\r\n\t\t_m1.copy( this );\r\n\r\n\t\tconst invSX = 1 / sx;\r\n\t\tconst invSY = 1 / sy;\r\n\t\tconst invSZ = 1 / sz;\r\n\r\n\t\t_m1.elements[ 0 ] *= invSX;\r\n\t\t_m1.elements[ 1 ] *= invSX;\r\n\t\t_m1.elements[ 2 ] *= invSX;\r\n\r\n\t\t_m1.elements[ 4 ] *= invSY;\r\n\t\t_m1.elements[ 5 ] *= invSY;\r\n\t\t_m1.elements[ 6 ] *= invSY;\r\n\r\n\t\t_m1.elements[ 8 ] *= invSZ;\r\n\t\t_m1.elements[ 9 ] *= invSZ;\r\n\t\t_m1.elements[ 10 ] *= invSZ;\r\n\r\n\t\tquaternion.setFromRotationMatrix( _m1 );\r\n\r\n\t\tscale.x = sx;\r\n\t\tscale.y = sy;\r\n\t\tscale.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a perspective projection matrix. This is used internally by\r\n\t * {@link PerspectiveCamera#updateProjectionMatrix}.\r\n\r\n\t * @param {number} left - Left boundary of the viewing frustum at the near plane.\r\n\t * @param {number} right - Right boundary of the viewing frustum at the near plane.\r\n\t * @param {number} top - Top boundary of the viewing frustum at the near plane.\r\n\t * @param {number} bottom - Bottom boundary of the viewing frustum at the near plane.\r\n\t * @param {number} near - The distance from the camera to the near plane.\r\n\t * @param {number} far - The distance from the camera to the far plane.\r\n\t * @param {(WebGLCoordinateSystem|WebGPUCoordinateSystem)} [coordinateSystem=WebGLCoordinateSystem] - The coordinate system.\r\n\t * @param {boolean} [reversedDepth=false] - Whether to use a reversed depth.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem, reversedDepth = false ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = 2 * near / ( right - left );\r\n\t\tconst y = 2 * near / ( top - bottom );\r\n\r\n\t\tconst a = ( right + left ) / ( right - left );\r\n\t\tconst b = ( top + bottom ) / ( top - bottom );\r\n\r\n\t\tlet c, d;\r\n\r\n\t\tif ( reversedDepth ) {\r\n\r\n\t\t\tc = near / ( far - near );\r\n\t\t\td = ( far * near ) / ( far - near );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\t\tc = - ( far + near ) / ( far - near );\r\n\t\t\t\td = ( - 2 * far * near ) / ( far - near );\r\n\r\n\t\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\t\tc = - far / ( far - near );\r\n\t\t\t\td = ( - far * near ) / ( far - near );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a orthographic projection matrix. This is used internally by\r\n\t * {@link OrthographicCamera#updateProjectionMatrix}.\r\n\r\n\t * @param {number} left - Left boundary of the viewing frustum at the near plane.\r\n\t * @param {number} right - Right boundary of the viewing frustum at the near plane.\r\n\t * @param {number} top - Top boundary of the viewing frustum at the near plane.\r\n\t * @param {number} bottom - Bottom boundary of the viewing frustum at the near plane.\r\n\t * @param {number} near - The distance from the camera to the near plane.\r\n\t * @param {number} far - The distance from the camera to the far plane.\r\n\t * @param {(WebGLCoordinateSystem|WebGPUCoordinateSystem)} [coordinateSystem=WebGLCoordinateSystem] - The coordinate system.\r\n\t * @param {boolean} [reversedDepth=false] - Whether to use a reversed depth.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem, reversedDepth = false ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = 2 / ( right - left );\r\n\t\tconst y = 2 / ( top - bottom );\r\n\r\n\t\tconst a = - ( right + left ) / ( right - left );\r\n\t\tconst b = - ( top + bottom ) / ( top - bottom );\r\n\r\n\t\tlet c, d;\r\n\r\n\t\tif ( reversedDepth ) {\r\n\r\n\t\t\tc = 1 / ( far - near );\r\n\t\t\td = far / ( far - near );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\t\tc = - 2 / ( far - near );\r\n\t\t\t\td = - ( far + near ) / ( far - near );\r\n\r\n\t\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\t\tc = - 1 / ( far - near );\r\n\t\t\t\td = - near / ( far - near );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tte[ 0 ] = x;\t\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = a;\r\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = y;\t\tte[ 9 ] = 0; \t\tte[ 13 ] = b;\r\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = c;\t\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this matrix is equal with the given one.\r\n\t *\r\n\t * @param {Matrix4} matrix - The matrix to test for equality.\r\n\t * @return {boolean} Whether this matrix is equal with the given one.\r\n\t */\r\n\tequals( matrix ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = matrix.elements;\r\n\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the elements of the matrix from the given array.\r\n\t *\r\n\t * @param {Array<number>} array - The matrix elements in column-major order.\r\n\t * @param {number} [offset=0] - Index of the first element in the array.\r\n\t * @return {Matrix4} A reference to this matrix.\r\n\t */\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Writes the elements of this matrix to the given array. If no array is provided,\r\n\t * the method returns a new instance.\r\n\t *\r\n\t * @param {Array<number>} [array=[]] - The target array holding the matrix elements in column-major order.\r\n\t * @param {number} [offset=0] - Index of the first element in the array.\r\n\t * @return {Array<number>} The matrix elements in column-major order.\r\n\t */\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\t\tarray[ offset + 9 ] = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _v1 = /*@__PURE__*/ new Vector3();\r\nconst _m1 = /*@__PURE__*/ new Matrix4();\r\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\r\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\r\nconst _x = /*@__PURE__*/ new Vector3();\r\nconst _y = /*@__PURE__*/ new Vector3();\r\nconst _z = /*@__PURE__*/ new Vector3();\r\n\r\nexport { Matrix4 };\r\n","/**\r\n * This modules allows to dispatch event objects on custom JavaScript objects.\r\n *\r\n * Main repository: [eventdispatcher.js]{@link https://github.com/mrdoob/eventdispatcher.js/}\r\n *\r\n * Code Example:\r\n * ```js\r\n * class Car extends EventDispatcher {\r\n * \tstart() {\r\n *\t\tthis.dispatchEvent( { type: 'start', message: 'vroom vroom!' } );\r\n *\t}\r\n *};\r\n *\r\n * // Using events with the custom object\r\n * const car = new Car();\r\n * car.addEventListener( 'start', function ( event ) {\r\n * \talert( event.message );\r\n * } );\r\n *\r\n * car.start();\r\n * ```\r\n */\r\nclass EventDispatcher {\r\n\r\n\t/**\r\n\t * Adds the given event listener to the given event type.\r\n\t *\r\n\t * @param {string} type - The type of event to listen to.\r\n\t * @param {Function} listener - The function that gets called when the event is fired.\r\n\t */\r\n\taddEventListener( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given event listener has been added to the given event type.\r\n\t *\r\n\t * @param {string} type - The type of event.\r\n\t * @param {Function} listener - The listener to check.\r\n\t * @return {boolean} Whether the given event listener has been added to the given event type.\r\n\t */\r\n\thasEventListener( type, listener ) {\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\tif ( listeners === undefined ) return false;\r\n\r\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the given event listener from the given event type.\r\n\t *\r\n\t * @param {string} type - The type of event.\r\n\t * @param {Function} listener - The listener to remove.\r\n\t */\r\n\tremoveEventListener( type, listener ) {\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\tif ( listeners === undefined ) return;\r\n\r\n\t\tconst listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tconst index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event object.\r\n\t *\r\n\t * @param {Object} event - The event that gets fired.\r\n\t */\r\n\tdispatchEvent( event ) {\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\tif ( listeners === undefined ) return;\r\n\r\n\t\tconst listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\t// Make a copy, in case listeners are removed while iterating.\r\n\t\t\tconst array = listenerArray.slice( 0 );\r\n\r\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tevent.target = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport { EventDispatcher };\r\n","import { Quaternion } from './Quaternion.js';\r\nimport { Matrix4 } from './Matrix4.js';\r\nimport { clamp } from './MathUtils.js';\r\nimport { warn } from '../utils.js';\r\n\r\nconst _matrix = /*@__PURE__*/ new Matrix4();\r\nconst _quaternion = /*@__PURE__*/ new Quaternion();\r\n\r\n/**\r\n * A class representing Euler angles.\r\n *\r\n * Euler angles describe a rotational transformation by rotating an object on\r\n * its various axes in specified amounts per axis, and a specified axis\r\n * order.\r\n *\r\n * Iterating through an instance will yield its components (x, y, z,\r\n * order) in the corresponding order.\r\n *\r\n * ```js\r\n * const a = new THREE.Euler( 0, 1, 1.57, 'XYZ' );\r\n * const b = new THREE.Vector3( 1, 0, 1 );\r\n * b.applyEuler(a);\r\n * ```\r\n */\r\nclass Euler {\r\n\r\n\t/**\r\n\t * Constructs a new euler instance.\r\n\t *\r\n\t * @param {number} [x=0] - The angle of the x axis in radians.\r\n\t * @param {number} [y=0] - The angle of the y axis in radians.\r\n\t * @param {number} [z=0] - The angle of the z axis in radians.\r\n\t * @param {string} [order=Euler.DEFAULT_ORDER] - A string representing the order that the rotations are applied.\r\n\t */\r\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isEuler = true;\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The angle of the x axis in radians.\r\n\t *\r\n\t * @type {number}\r\n\t * @default 0\r\n\t */\r\n\tget x() {\r\n\r\n\t\treturn this._x;\r\n\r\n\t}\r\n\r\n\tset x( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The angle of the y axis in radians.\r\n\t *\r\n\t * @type {number}\r\n\t * @default 0\r\n\t */\r\n\tget y() {\r\n\r\n\t\treturn this._y;\r\n\r\n\t}\r\n\r\n\tset y( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The angle of the z axis in radians.\r\n\t *\r\n\t * @type {number}\r\n\t * @default 0\r\n\t */\r\n\tget z() {\r\n\r\n\t\treturn this._z;\r\n\r\n\t}\r\n\r\n\tset z( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A string representing the order that the rotations are applied.\r\n\t *\r\n\t * @type {string}\r\n\t * @default 'XYZ'\r\n\t */\r\n\tget order() {\r\n\r\n\t\treturn this._order;\r\n\r\n\t}\r\n\r\n\tset order( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the Euler components.\r\n\t *\r\n\t * @param {number} x - The angle of the x axis in radians.\r\n\t * @param {number} y - The angle of the y axis in radians.\r\n\t * @param {number} z - The angle of the z axis in radians.\r\n\t * @param {string} [order] - A string representing the order that the rotations are applied.\r\n\t * @return {Euler} A reference to this Euler instance.\r\n\t */\r\n\tset( x, y, z, order = this._order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Euler instance with copied values from this instance.\r\n\t *\r\n\t * @return {Euler} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given Euler instance to this instance.\r\n\t *\r\n\t * @param {Euler} euler - The Euler instance to copy.\r\n\t * @return {Euler} A reference to this Euler instance.\r\n\t */\r\n\tcopy( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the angles of this Euler instance from a pure rotation matrix.\r\n\t *\r\n\t * @param {Matrix4} m - A 4x4 matrix of which the upper 3x3 of matrix is a pure rotation matrix (i.e. unscaled).\r\n\t * @param {string} [order] - A string representing the order that the rotations are applied.\r\n\t * @param {boolean} [update=true] - Whether the internal `onChange` callback should be executed or not.\r\n\t * @return {Euler} A reference to this Euler instance.\r\n\t */\r\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\r\n\r\n\t\tconst te = m.elements;\r\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tswitch ( order ) {\r\n\r\n\t\t\tcase 'XYZ':\r\n\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YXZ':\r\n\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZXY':\r\n\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZYX':\r\n\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YZX':\r\n\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'XZY':\r\n\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\twarn( 'Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update === true ) this._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the angles of this Euler instance from a normalized quaternion.\r\n\t *\r\n\t * @param {Quaternion} q - A normalized Quaternion.\r\n\t * @param {string} [order] - A string representing the order that the rotations are applied.\r\n\t * @param {boolean} [update=true] - Whether the internal `onChange` callback should be executed or not.\r\n\t * @return {Euler} A reference to this Euler instance.\r\n\t */\r\n\tsetFromQuaternion( q, order, update ) {\r\n\r\n\t\t_matrix.makeRotationFromQuaternion( q );\r\n\r\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the angles of this Euler instance from the given vector.\r\n\t *\r\n\t * @param {Vector3} v - The vector.\r\n\t * @param {string} [order] - A string representing the order that the rotations are applied.\r\n\t * @return {Euler} A reference to this Euler instance.\r\n\t */\r\n\tsetFromVector3( v, order = this._order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the euler angle with a new order by creating a quaternion from this\r\n\t * euler angle and then setting this euler angle with the quaternion and the\r\n\t * new order.\r\n\t *\r\n\t * Warning: This discards revolution information.\r\n\t *\r\n\t * @param {string} [newOrder] - A string representing the new order that the rotations are applied.\r\n\t * @return {Euler} A reference to this Euler instance.\r\n\t */\r\n\treorder( newOrder ) {\r\n\r\n\t\t_quaternion.setFromEuler( this );\r\n\r\n\t\treturn this.setFromQuaternion( _quaternion, newOrder );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this Euler instance is equal with the given one.\r\n\t *\r\n\t * @param {Euler} euler - The Euler instance to test for equality.\r\n\t * @return {boolean} Whether this Euler instance is equal with the given one.\r\n\t */\r\n\tequals( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this Euler instance's components to values from the given array. The first three\r\n\t * entries of the array are assign to the x,y and z components. An optional fourth entry\r\n\t * defines the Euler order.\r\n\t *\r\n\t * @param {Array<number,number,number,?string>} array - An array holding the Euler component values.\r\n\t * @return {Euler} A reference to this Euler instance.\r\n\t */\r\n\tfromArray( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Writes the components of this Euler instance to the given array. If no array is provided,\r\n\t * the method returns a new instance.\r\n\t *\r\n\t * @param {Array<number,number,number,string>} [array=[]] - The target array holding the Euler components.\r\n\t * @param {number} [offset=0] - Index of the first element in the array.\r\n\t * @return {Array<number,number,number,string>} The Euler components.\r\n\t */\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t_onChange( callback ) {\r\n\r\n\t\tthis._onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t_onChangeCallback() {}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this._x;\r\n\t\tyield this._y;\r\n\t\tyield this._z;\r\n\t\tyield this._order;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * The default Euler angle order.\r\n *\r\n * @static\r\n * @type {string}\r\n * @default 'XYZ'\r\n */\r\nEuler.DEFAULT_ORDER = 'XYZ';\r\n\r\nexport { Euler };\r\n","/**\r\n * A layers object assigns an 3D object to 1 or more of 32\r\n * layers numbered `0` to `31` - internally the layers are stored as a\r\n * bit mask], and by default all 3D objects are a member of layer `0`.\r\n *\r\n * This can be used to control visibility - an object must share a layer with\r\n * a camera to be visible when that camera's view is\r\n * rendered.\r\n *\r\n * All classes that inherit from {@link Object3D} have an `layers` property which\r\n * is an instance of this class.\r\n */\r\nclass Layers {\r\n\r\n\t/**\r\n\t * Constructs a new layers instance, with membership\r\n\t * initially set to layer `0`.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t/**\r\n\t\t * A bit mask storing which of the 32 layers this layers object is currently\r\n\t\t * a member of.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.mask = 1 | 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets membership to the given layer, and remove membership all other layers.\r\n\t *\r\n\t * @param {number} layer - The layer to set.\r\n\t */\r\n\tset( layer ) {\r\n\r\n\t\tthis.mask = ( 1 << layer | 0 ) >>> 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds membership of the given layer.\r\n\t *\r\n\t * @param {number} layer - The layer to enable.\r\n\t */\r\n\tenable( layer ) {\r\n\r\n\t\tthis.mask |= 1 << layer | 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds membership to all layers.\r\n\t */\r\n\tenableAll() {\r\n\r\n\t\tthis.mask = 0xffffffff | 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the membership of the given layer.\r\n\t *\r\n\t * @param {number} layer - The layer to toggle.\r\n\t */\r\n\ttoggle( layer ) {\r\n\r\n\t\tthis.mask ^= 1 << layer | 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes membership of the given layer.\r\n\t *\r\n\t * @param {number} layer - The layer to enable.\r\n\t */\r\n\tdisable( layer ) {\r\n\r\n\t\tthis.mask &= ~ ( 1 << layer | 0 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the membership from all layers.\r\n\t */\r\n\tdisableAll() {\r\n\r\n\t\tthis.mask = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this and the given layers object have at least one\r\n\t * layer in common.\r\n\t *\r\n\t * @param {Layers} layers - The layers to test.\r\n\t * @return {boolean } Whether this and the given layers object have at least one layer in common or not.\r\n\t */\r\n\ttest( layers ) {\r\n\r\n\t\treturn ( this.mask & layers.mask ) !== 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given layer is enabled.\r\n\t *\r\n\t * @param {number} layer - The layer to test.\r\n\t * @return {boolean } Whether the given layer is enabled or not.\r\n\t */\r\n\tisEnabled( layer ) {\r\n\r\n\t\treturn ( this.mask & ( 1 << layer | 0 ) ) !== 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport { Layers };\r\n","/**\r\n * Represents a 3x3 matrix.\r\n *\r\n * A Note on Row-Major and Column-Major Ordering:\r\n *\r\n * The constructor and {@link Matrix3#set} method take arguments in\r\n * [row-major]{@link https://en.wikipedia.org/wiki/Row-_and_column-major_order#Column-major_order}\r\n * order, while internally they are stored in the {@link Matrix3#elements} array in column-major order.\r\n * This means that calling:\r\n * ```js\r\n * const m = new THREE.Matrix();\r\n * m.set( 11, 12, 13,\r\n *        21, 22, 23,\r\n *        31, 32, 33 );\r\n * ```\r\n * will result in the elements array containing:\r\n * ```js\r\n * m.elements = [ 11, 21, 31,\r\n *                12, 22, 32,\r\n *                13, 23, 33 ];\r\n * ```\r\n * and internally all calculations are performed using column-major ordering.\r\n * However, as the actual ordering makes no difference mathematically and\r\n * most people are used to thinking about matrices in row-major order, the\r\n * three.js documentation shows matrices in row-major order. Just bear in\r\n * mind that if you are reading the source code, you'll have to take the\r\n * transpose of any matrices outlined here to make sense of the calculations.\r\n */\r\nclass Matrix3 {\r\n\r\n\t/**\r\n\t * Constructs a new 3x3 matrix. The arguments are supposed to be\r\n\t * in row-major order. If no arguments are provided, the constructor\r\n\t * initializes the matrix as an identity matrix.\r\n\t *\r\n\t * @param {number} [n11] - 1-1 matrix element.\r\n\t * @param {number} [n12] - 1-2 matrix element.\r\n\t * @param {number} [n13] - 1-3 matrix element.\r\n\t * @param {number} [n21] - 2-1 matrix element.\r\n\t * @param {number} [n22] - 2-2 matrix element.\r\n\t * @param {number} [n23] - 2-3 matrix element.\r\n\t * @param {number} [n31] - 3-1 matrix element.\r\n\t * @param {number} [n32] - 3-2 matrix element.\r\n\t * @param {number} [n33] - 3-3 matrix element.\r\n\t */\r\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tMatrix3.prototype.isMatrix3 = true;\r\n\r\n\t\t/**\r\n\t\t * A column-major list of matrix values.\r\n\t\t *\r\n\t\t * @type {Array<number>}\r\n\t\t */\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( n11 !== undefined ) {\r\n\r\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the elements of the matrix.The arguments are supposed to be\r\n\t * in row-major order.\r\n\t *\r\n\t * @param {number} [n11] - 1-1 matrix element.\r\n\t * @param {number} [n12] - 1-2 matrix element.\r\n\t * @param {number} [n13] - 1-3 matrix element.\r\n\t * @param {number} [n21] - 2-1 matrix element.\r\n\t * @param {number} [n22] - 2-2 matrix element.\r\n\t * @param {number} [n23] - 2-3 matrix element.\r\n\t * @param {number} [n31] - 3-1 matrix element.\r\n\t * @param {number} [n32] - 3-2 matrix element.\r\n\t * @param {number} [n33] - 3-3 matrix element.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix to the 3x3 identity matrix.\r\n\t *\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tidentity() {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given matrix to this instance.\r\n\t *\r\n\t * @param {Matrix3} m - The matrix to copy.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tcopy( m ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\r\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\r\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts the basis of this matrix into the three axis vectors provided.\r\n\t *\r\n\t * @param {Vector3} xAxis - The basis's x axis.\r\n\t * @param {Vector3} yAxis - The basis's y axis.\r\n\t * @param {Vector3} zAxis - The basis's z axis.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\textractBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrix3Column( this, 0 );\r\n\t\tyAxis.setFromMatrix3Column( this, 1 );\r\n\t\tzAxis.setFromMatrix3Column( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Set this matrix to the upper 3x3 matrix of the given 4x4 matrix.\r\n\t *\r\n\t * @param {Matrix4} m - The 4x4 matrix.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tsetFromMatrix4( m ) {\r\n\r\n\t\tconst me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\r\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\r\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Post-multiplies this matrix by the given 3x3 matrix.\r\n\t *\r\n\t * @param {Matrix3} m - The matrix to multiply with.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tmultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pre-multiplies this matrix by the given 3x3 matrix.\r\n\t *\r\n\t * @param {Matrix3} m - The matrix to multiply with.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tpremultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiples the given 3x3 matrices and stores the result\r\n\t * in this matrix.\r\n\t *\r\n\t * @param {Matrix3} a - The first matrix.\r\n\t * @param {Matrix3} b - The second matrix.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tmultiplyMatrices( a, b ) {\r\n\r\n\t\tconst ae = a.elements;\r\n\t\tconst be = b.elements;\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\r\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\r\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\r\n\r\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\r\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\r\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\r\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\r\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\r\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\r\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\r\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\r\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies every component of the matrix by the given scalar.\r\n\t *\r\n\t * @param {number} s - The scalar.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes and returns the determinant of this matrix.\r\n\t *\r\n\t * @return {number} The determinant.\r\n\t */\r\n\tdeterminant() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts this matrix, using the [analytic method]{@link https://en.wikipedia.org/wiki/Invertible_matrix#Analytic_solution}.\r\n\t * You can not invert with a determinant of zero. If you attempt this, the method produces\r\n\t * a zero matrix instead.\r\n\t *\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tinvert() {\r\n\r\n\t\tconst te = this.elements,\r\n\r\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\r\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\r\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\r\n\r\n\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n\r\n\t\tconst detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n\r\n\t\tte[ 3 ] = t12 * detInv;\r\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n\r\n\t\tte[ 6 ] = t13 * detInv;\r\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Transposes this matrix in place.\r\n\t *\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\ttranspose() {\r\n\r\n\t\tlet tmp;\r\n\t\tconst m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the normal matrix which is the inverse transpose of the upper\r\n\t * left 3x3 portion of the given 4x4 matrix.\r\n\t *\r\n\t * @param {Matrix4} matrix4 - The 4x4 matrix.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tgetNormalMatrix( matrix4 ) {\r\n\r\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Transposes this matrix into the supplied array, and returns itself unchanged.\r\n\t *\r\n\t * @param {Array<number>} r - An array to store the transposed matrix elements.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\ttransposeIntoArray( r ) {\r\n\r\n\t\tconst m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the UV transform matrix from offset, repeat, rotation, and center.\r\n\t *\r\n\t * @param {number} tx - Offset x.\r\n\t * @param {number} ty - Offset y.\r\n\t * @param {number} sx - Repeat x.\r\n\t * @param {number} sy - Repeat y.\r\n\t * @param {number} rotation - Rotation, in radians. Positive values rotate counterclockwise.\r\n\t * @param {number} cx - Center x of rotation.\r\n\t * @param {number} cy - Center y of rotation\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\t\tconst c = Math.cos( rotation );\r\n\t\tconst s = Math.sin( rotation );\r\n\r\n\t\tthis.set(\r\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t\t0, 0, 1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales this matrix with the given scalar values.\r\n\t *\r\n\t * @param {number} sx - The amount to scale in the X axis.\r\n\t * @param {number} sy - The amount to scale in the Y axis.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tscale( sx, sy ) {\r\n\r\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates this matrix by the given angle.\r\n\t *\r\n\t * @param {number} theta - The rotation in radians.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\trotate( theta ) {\r\n\r\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Translates this matrix by the given scalar values.\r\n\t *\r\n\t * @param {number} tx - The amount to translate in the X axis.\r\n\t * @param {number} ty - The amount to translate in the Y axis.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\ttranslate( tx, ty ) {\r\n\r\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// for 2D Transforms\r\n\r\n\t/**\r\n\t * Sets this matrix as a 2D translation transform.\r\n\t *\r\n\t * @param {number|Vector2} x - The amount to translate in the X axis or alternatively a translation vector.\r\n\t * @param {number} y - The amount to translate in the Y axis.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tmakeTranslation( x, y ) {\r\n\r\n\t\tif ( x.isVector2 ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, x.x,\r\n\t\t\t\t0, 1, x.y,\r\n\t\t\t\t0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, x,\r\n\t\t\t\t0, 1, y,\r\n\t\t\t\t0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix as a 2D rotational transformation.\r\n\t *\r\n\t * @param {number} theta - The rotation in radians.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tmakeRotation( theta ) {\r\n\r\n\t\t// counterclockwise\r\n\r\n\t\tconst c = Math.cos( theta );\r\n\t\tconst s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0,\r\n\t\t\ts, c, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this matrix as a 2D scale transform.\r\n\t *\r\n\t * @param {number} x - The amount to scale in the X axis.\r\n\t * @param {number} y - The amount to scale in the Y axis.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tmakeScale( x, y ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0,\r\n\t\t\t0, y, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this matrix is equal with the given one.\r\n\t *\r\n\t * @param {Matrix3} matrix - The matrix to test for equality.\r\n\t * @return {boolean} Whether this matrix is equal with the given one.\r\n\t */\r\n\tequals( matrix ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = matrix.elements;\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the elements of the matrix from the given array.\r\n\t *\r\n\t * @param {Array<number>} array - The matrix elements in column-major order.\r\n\t * @param {number} [offset=0] - Index of the first element in the array.\r\n\t * @return {Matrix3} A reference to this matrix.\r\n\t */\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Writes the elements of this matrix to the given array. If no array is provided,\r\n\t * the method returns a new instance.\r\n\t *\r\n\t * @param {Array<number>} [array=[]] - The target array holding the matrix elements in column-major order.\r\n\t * @param {number} [offset=0] - Index of the first element in the array.\r\n\t * @return {Array<number>} The matrix elements in column-major order.\r\n\t */\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a matrix with copied values from this instance.\r\n\t *\r\n\t * @return {Matrix3} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _m3 = /*@__PURE__*/ new Matrix3();\r\n\r\nexport { Matrix3 };\r\n","import { Quaternion } from '../math/Quaternion.js';\r\nimport { Vector3 } from '../math/Vector3.js';\r\nimport { Matrix4 } from '../math/Matrix4.js';\r\nimport { EventDispatcher } from './EventDispatcher.js';\r\nimport { Euler } from '../math/Euler.js';\r\nimport { Layers } from './Layers.js';\r\nimport { Matrix3 } from '../math/Matrix3.js';\r\nimport { generateUUID } from '../math/MathUtils.js';\r\nimport { error } from '../utils.js';\r\n\r\nlet _object3DId = 0;\r\n\r\nconst _v1 = /*@__PURE__*/ new Vector3();\r\nconst _q1 = /*@__PURE__*/ new Quaternion();\r\nconst _m1 = /*@__PURE__*/ new Matrix4();\r\nconst _target = /*@__PURE__*/ new Vector3();\r\n\r\nconst _position = /*@__PURE__*/ new Vector3();\r\nconst _scale = /*@__PURE__*/ new Vector3();\r\nconst _quaternion = /*@__PURE__*/ new Quaternion();\r\n\r\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\r\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\r\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\r\n\r\n/**\r\n * Fires when the object has been added to its parent object.\r\n *\r\n * @event Object3D#added\r\n * @type {Object}\r\n */\r\nconst _addedEvent = { type: 'added' };\r\n\r\n/**\r\n * Fires when the object has been removed from its parent object.\r\n *\r\n * @event Object3D#removed\r\n * @type {Object}\r\n */\r\nconst _removedEvent = { type: 'removed' };\r\n\r\n/**\r\n * Fires when a new child object has been added.\r\n *\r\n * @event Object3D#childadded\r\n * @type {Object}\r\n */\r\nconst _childaddedEvent = { type: 'childadded', child: null };\r\n\r\n/**\r\n * Fires when a child object has been removed.\r\n *\r\n * @event Object3D#childremoved\r\n * @type {Object}\r\n */\r\nconst _childremovedEvent = { type: 'childremoved', child: null };\r\n\r\n/**\r\n * This is the base class for most objects in three.js and provides a set of\r\n * properties and methods for manipulating objects in 3D space.\r\n *\r\n * @augments EventDispatcher\r\n */\r\nclass Object3D extends EventDispatcher {\r\n\r\n\t/**\r\n\t * Constructs a new 3D object.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isObject3D = true;\r\n\r\n\t\t/**\r\n\t\t * The ID of the 3D object.\r\n\t\t *\r\n\t\t * @name Object3D#id\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\r\n\r\n\t\t/**\r\n\t\t * The UUID of the 3D object.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\t/**\r\n\t\t * The name of the 3D object.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.name = '';\r\n\r\n\t\t/**\r\n\t\t * The type property is used for detecting the object type\r\n\t\t * in context of serialization/deserialization.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tthis.type = 'Object3D';\r\n\r\n\t\t/**\r\n\t\t * A reference to the parent object.\r\n\t\t *\r\n\t\t * @type {?Object3D}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.parent = null;\r\n\r\n\t\t/**\r\n\t\t * An array holding the child 3D objects of this instance.\r\n\t\t *\r\n\t\t * @type {Array<Object3D>}\r\n\t\t */\r\n\t\tthis.children = [];\r\n\r\n\t\t/**\r\n\t\t * Defines the `up` direction of the 3D object which influences\r\n\t\t * the orientation via methods like {@link Object3D#lookAt}.\r\n\t\t *\r\n\t\t * The default values for all 3D objects is defined by `Object3D.DEFAULT_UP`.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\r\n\r\n\t\tconst position = new Vector3();\r\n\t\tconst rotation = new Euler();\r\n\t\tconst quaternion = new Quaternion();\r\n\t\tconst scale = new Vector3( 1, 1, 1 );\r\n\r\n\t\tfunction onRotationChange() {\r\n\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onQuaternionChange() {\r\n\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t\t}\r\n\r\n\t\trotation._onChange( onRotationChange );\r\n\t\tquaternion._onChange( onQuaternionChange );\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\t/**\r\n\t\t\t * Represents the object's local position.\r\n\t\t\t *\r\n\t\t\t * @name Object3D#position\r\n\t\t\t * @type {Vector3}\r\n\t\t\t * @default (0,0,0)\r\n\t\t\t */\r\n\t\t\tposition: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Represents the object's local rotation as Euler angles, in radians.\r\n\t\t\t *\r\n\t\t\t * @name Object3D#rotation\r\n\t\t\t * @type {Euler}\r\n\t\t\t * @default (0,0,0)\r\n\t\t\t */\r\n\t\t\trotation: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Represents the object's local rotation as Quaternions.\r\n\t\t\t *\r\n\t\t\t * @name Object3D#quaternion\r\n\t\t\t * @type {Quaternion}\r\n\t\t\t */\r\n\t\t\tquaternion: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Represents the object's local scale.\r\n\t\t\t *\r\n\t\t\t * @name Object3D#scale\r\n\t\t\t * @type {Vector3}\r\n\t\t\t * @default (1,1,1)\r\n\t\t\t */\r\n\t\t\tscale: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Represents the object's model-view matrix.\r\n\t\t\t *\r\n\t\t\t * @name Object3D#modelViewMatrix\r\n\t\t\t * @type {Matrix4}\r\n\t\t\t */\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new Matrix4()\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * Represents the object's normal matrix.\r\n\t\t\t *\r\n\t\t\t * @name Object3D#normalMatrix\r\n\t\t\t * @type {Matrix3}\r\n\t\t\t */\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t/**\r\n\t\t * Represents the object's transformation matrix in local space.\r\n\t\t *\r\n\t\t * @type {Matrix4}\r\n\t\t */\r\n\t\tthis.matrix = new Matrix4();\r\n\r\n\t\t/**\r\n\t\t * Represents the object's transformation matrix in world space.\r\n\t\t * If the 3D object has no parent, then it's identical to the local transformation matrix\r\n\t\t *\r\n\t\t * @type {Matrix4}\r\n\t\t */\r\n\t\tthis.matrixWorld = new Matrix4();\r\n\r\n\t\t/**\r\n\t\t * When set to `true`, the engine automatically computes the local matrix from position,\r\n\t\t * rotation and scale every frame.\r\n\t\t *\r\n\t\t * The default values for all 3D objects is defined by `Object3D.DEFAULT_MATRIX_AUTO_UPDATE`.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\r\n\r\n\t\t/**\r\n\t\t * When set to `true`, the engine automatically computes the world matrix from the current local\r\n\t\t * matrix and the object's transformation hierarchy.\r\n\t\t *\r\n\t\t * The default values for all 3D objects is defined by `Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE`.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\r\n\r\n\t\t/**\r\n\t\t * When set to `true`, it calculates the world matrix in that frame and resets this property\r\n\t\t * to `false`.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t/**\r\n\t\t * The layer membership of the 3D object. The 3D object is only visible if it has\r\n\t\t * at least one layer in common with the camera in use. This property can also be\r\n\t\t * used to filter out unwanted objects in ray-intersection tests when using {@link Raycaster}.\r\n\t\t *\r\n\t\t * @type {Layers}\r\n\t\t */\r\n\t\tthis.layers = new Layers();\r\n\r\n\t\t/**\r\n\t\t * When set to `true`, the 3D object gets rendered.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.visible = true;\r\n\r\n\t\t/**\r\n\t\t * When set to `true`, the 3D object gets rendered into shadow maps.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.castShadow = false;\r\n\r\n\t\t/**\r\n\t\t * When set to `true`, the 3D object is affected by shadows in the scene.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.receiveShadow = false;\r\n\r\n\t\t/**\r\n\t\t * When set to `true`, the 3D object is honored by view frustum culling.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.frustumCulled = true;\r\n\r\n\t\t/**\r\n\t\t * This value allows the default rendering order of scene graph objects to be\r\n\t\t * overridden although opaque and transparent objects remain sorted independently.\r\n\t\t * When this property is set for an instance of {@link Group},all descendants\r\n\t\t * objects will be sorted and rendered together. Sorting is from lowest to highest\r\n\t\t * render order.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.renderOrder = 0;\r\n\r\n\t\t/**\r\n\t\t * An array holding the animation clips of the 3D object.\r\n\t\t *\r\n\t\t * @type {Array<AnimationClip>}\r\n\t\t */\r\n\t\tthis.animations = [];\r\n\r\n\t\t/**\r\n\t\t * Custom depth material to be used when rendering to the depth map. Can only be used\r\n\t\t * in context of meshes. When shadow-casting with a {@link DirectionalLight} or {@link SpotLight},\r\n\t\t * if you are modifying vertex positions in the vertex shader you must specify a custom depth\r\n\t\t * material for proper shadows.\r\n\t\t *\r\n\t\t * Only relevant in context of {@link WebGLRenderer}.\r\n\t\t *\r\n\t\t * @type {(Material|undefined)}\r\n\t\t * @default undefined\r\n\t\t */\r\n\t\tthis.customDepthMaterial = undefined;\r\n\r\n\t\t/**\r\n\t\t * Same as {@link Object3D#customDepthMaterial}, but used with {@link PointLight}.\r\n\t\t *\r\n\t\t * Only relevant in context of {@link WebGLRenderer}.\r\n\t\t *\r\n\t\t * @type {(Material|undefined)}\r\n\t\t * @default undefined\r\n\t\t */\r\n\t\tthis.customDistanceMaterial = undefined;\r\n\r\n\t\t/**\r\n\t\t * An object that can be used to store custom data about the 3D object. It\r\n\t\t * should not hold references to functions as these will not be cloned.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A callback that is executed immediately before a 3D object is rendered to a shadow map.\r\n\t *\r\n\t * @param {Renderer|WebGLRenderer} renderer - The renderer.\r\n\t * @param {Object3D} object - The 3D object.\r\n\t * @param {Camera} camera - The camera that is used to render the scene.\r\n\t * @param {Camera} shadowCamera - The shadow camera.\r\n\t * @param {BufferGeometry} geometry - The 3D object's geometry.\r\n\t * @param {Material} depthMaterial - The depth material.\r\n\t * @param {Object} group - The geometry group data.\r\n\t */\r\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\r\n\r\n\t/**\r\n\t * A callback that is executed immediately after a 3D object is rendered to a shadow map.\r\n\t *\r\n\t * @param {Renderer|WebGLRenderer} renderer - The renderer.\r\n\t * @param {Object3D} object - The 3D object.\r\n\t * @param {Camera} camera - The camera that is used to render the scene.\r\n\t * @param {Camera} shadowCamera - The shadow camera.\r\n\t * @param {BufferGeometry} geometry - The 3D object's geometry.\r\n\t * @param {Material} depthMaterial - The depth material.\r\n\t * @param {Object} group - The geometry group data.\r\n\t */\r\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\r\n\r\n\t/**\r\n\t * A callback that is executed immediately before a 3D object is rendered.\r\n\t *\r\n\t * @param {Renderer|WebGLRenderer} renderer - The renderer.\r\n\t * @param {Object3D} object - The 3D object.\r\n\t * @param {Camera} camera - The camera that is used to render the scene.\r\n\t * @param {BufferGeometry} geometry - The 3D object's geometry.\r\n\t * @param {Material} material - The 3D object's material.\r\n\t * @param {Object} group - The geometry group data.\r\n\t */\r\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\r\n\r\n\t/**\r\n\t * A callback that is executed immediately after a 3D object is rendered.\r\n\t *\r\n\t * @param {Renderer|WebGLRenderer} renderer - The renderer.\r\n\t * @param {Object3D} object - The 3D object.\r\n\t * @param {Camera} camera - The camera that is used to render the scene.\r\n\t * @param {BufferGeometry} geometry - The 3D object's geometry.\r\n\t * @param {Material} material - The 3D object's material.\r\n\t * @param {Object} group - The geometry group data.\r\n\t */\r\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\r\n\r\n\t/**\r\n\t * Applies the given transformation matrix to the object and updates the object's position,\r\n\t * rotation and scale.\r\n\t *\r\n\t * @param {Matrix4} matrix - The transformation matrix.\r\n\t */\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\tthis.matrix.premultiply( matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a rotation represented by given the quaternion to the 3D object.\r\n\t *\r\n\t * @param {Quaternion} q - The quaternion.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\tthis.quaternion.premultiply( q );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given rotation represented as an axis/angle couple to the 3D object.\r\n\t *\r\n\t * @param {Vector3} axis - The (normalized) axis vector.\r\n\t * @param {number} angle - The angle in radians.\r\n\t */\r\n\tsetRotationFromAxisAngle( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given rotation represented as Euler angles to the 3D object.\r\n\t *\r\n\t * @param {Euler} euler - The Euler angles.\r\n\t */\r\n\tsetRotationFromEuler( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given rotation represented as rotation matrix to the 3D object.\r\n\t *\r\n\t * @param {Matrix4} m - Although a 4x4 matrix is expected, the upper 3x3 portion must be\r\n\t * a pure rotation matrix (i.e, unscaled).\r\n\t */\r\n\tsetRotationFromMatrix( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given rotation represented as a Quaternion to the 3D object.\r\n\t *\r\n\t * @param {Quaternion} q - The Quaternion\r\n\t */\r\n\tsetRotationFromQuaternion( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3D object along an axis in local space.\r\n\t *\r\n\t * @param {Vector3} axis - The (normalized) axis vector.\r\n\t * @param {number} angle - The angle in radians.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\trotateOnAxis( axis, angle ) {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\t_q1.setFromAxisAngle( axis, angle );\r\n\r\n\t\tthis.quaternion.multiply( _q1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3D object along an axis in world space.\r\n\t *\r\n\t * @param {Vector3} axis - The (normalized) axis vector.\r\n\t * @param {number} angle - The angle in radians.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\trotateOnWorldAxis( axis, angle ) {\r\n\r\n\t\t// rotate object on axis in world space\r\n\t\t// axis is assumed to be normalized\r\n\t\t// method assumes no rotated parent\r\n\r\n\t\t_q1.setFromAxisAngle( axis, angle );\r\n\r\n\t\tthis.quaternion.premultiply( _q1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3D object around its X axis in local space.\r\n\t *\r\n\t * @param {number} angle - The angle in radians.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\trotateX( angle ) {\r\n\r\n\t\treturn this.rotateOnAxis( _xAxis, angle );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3D object around its Y axis in local space.\r\n\t *\r\n\t * @param {number} angle - The angle in radians.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\trotateY( angle ) {\r\n\r\n\t\treturn this.rotateOnAxis( _yAxis, angle );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the 3D object around its Z axis in local space.\r\n\t *\r\n\t * @param {number} angle - The angle in radians.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\trotateZ( angle ) {\r\n\r\n\t\treturn this.rotateOnAxis( _zAxis, angle );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Translate the 3D object by a distance along the given axis in local space.\r\n\t *\r\n\t * @param {Vector3} axis - The (normalized) axis vector.\r\n\t * @param {number} distance - The distance in world units.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\ttranslateOnAxis( axis, distance ) {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\t_v1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\tthis.position.add( _v1.multiplyScalar( distance ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Translate the 3D object by a distance along its X-axis in local space.\r\n\t *\r\n\t * @param {number} distance - The distance in world units.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\ttranslateX( distance ) {\r\n\r\n\t\treturn this.translateOnAxis( _xAxis, distance );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Translate the 3D object by a distance along its Y-axis in local space.\r\n\t *\r\n\t * @param {number} distance - The distance in world units.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\ttranslateY( distance ) {\r\n\r\n\t\treturn this.translateOnAxis( _yAxis, distance );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Translate the 3D object by a distance along its Z-axis in local space.\r\n\t *\r\n\t * @param {number} distance - The distance in world units.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\ttranslateZ( distance ) {\r\n\r\n\t\treturn this.translateOnAxis( _zAxis, distance );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given vector from this 3D object's local space to world space.\r\n\t *\r\n\t * @param {Vector3} vector - The vector to convert.\r\n\t * @return {Vector3} The converted vector.\r\n\t */\r\n\tlocalToWorld( vector ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given vector from this 3D object's word space to local space.\r\n\t *\r\n\t * @param {Vector3} vector - The vector to convert.\r\n\t * @return {Vector3} The converted vector.\r\n\t */\r\n\tworldToLocal( vector ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\treturn vector.applyMatrix4( _m1.copy( this.matrixWorld ).invert() );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the object to face a point in world space.\r\n\t *\r\n\t * This method does not support objects having non-uniformly-scaled parent(s).\r\n\t *\r\n\t * @param {number|Vector3} x - The x coordinate in world space. Alternatively, a vector representing a position in world space\r\n\t * @param {number} [y] - The y coordinate in world space.\r\n\t * @param {number} [z] - The z coordinate in world space.\r\n\t */\r\n\tlookAt( x, y, z ) {\r\n\r\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\t_target.copy( x );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_target.set( x, y, z );\r\n\r\n\t\t}\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\t_position.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tif ( this.isCamera || this.isLight ) {\r\n\r\n\t\t\t_m1.lookAt( _position, _target, this.up );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_m1.lookAt( _target, _position, this.up );\r\n\r\n\t\t}\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( _m1 );\r\n\r\n\t\tif ( parent ) {\r\n\r\n\t\t\t_m1.extractRotation( parent.matrixWorld );\r\n\t\t\t_q1.setFromRotationMatrix( _m1 );\r\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given 3D object as a child to this 3D object. An arbitrary number of\r\n\t * objects may be added. Any current parent on an object passed in here will be\r\n\t * removed, since an object can have at most one parent.\r\n\t *\r\n\t * @fires Object3D#added\r\n\t * @fires Object3D#childadded\r\n\t * @param {Object3D} object - The 3D object to add.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\tadd( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\terror( 'Object3D.add: object can\\'t be added as a child of itself.', object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object && object.isObject3D ) {\r\n\r\n\t\t\tobject.removeFromParent();\r\n\t\t\tobject.parent = this;\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t\tobject.dispatchEvent( _addedEvent );\r\n\r\n\t\t\t_childaddedEvent.child = object;\r\n\t\t\tthis.dispatchEvent( _childaddedEvent );\r\n\t\t\t_childaddedEvent.child = null;\r\n\r\n\t\t} else {\r\n\r\n\t\t\terror( 'Object3D.add: object not an instance of THREE.Object3D.', object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the given 3D object as child from this 3D object.\r\n\t * An arbitrary number of objects may be removed.\r\n\t *\r\n\t * @fires Object3D#removed\r\n\t * @fires Object3D#childremoved\r\n\t * @param {Object3D} object - The 3D object to remove.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\tremove( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t\tobject.dispatchEvent( _removedEvent );\r\n\r\n\t\t\t_childremovedEvent.child = object;\r\n\t\t\tthis.dispatchEvent( _childremovedEvent );\r\n\t\t\t_childremovedEvent.child = null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes this 3D object from its current parent.\r\n\t *\r\n\t * @fires Object3D#removed\r\n\t * @fires Object3D#childremoved\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\tremoveFromParent() {\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tparent.remove( this );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all child objects.\r\n\t *\r\n\t * @fires Object3D#removed\r\n\t * @fires Object3D#childremoved\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\tclear() {\r\n\r\n\t\treturn this.remove( ... this.children );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given 3D object as a child of this 3D object, while maintaining the object's world\r\n\t * transform. This method does not support scene graphs having non-uniformly-scaled nodes(s).\r\n\t *\r\n\t * @fires Object3D#added\r\n\t * @fires Object3D#childadded\r\n\t * @param {Object3D} object - The 3D object to attach.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\tattach( object ) {\r\n\r\n\t\t// adds object as a child of this, while maintaining the object's world transform\r\n\r\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\t_m1.copy( this.matrixWorld ).invert();\r\n\r\n\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\tobject.parent.updateWorldMatrix( true, false );\r\n\r\n\t\t\t_m1.multiply( object.parent.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tobject.applyMatrix4( _m1 );\r\n\r\n\t\tobject.removeFromParent();\r\n\t\tobject.parent = this;\r\n\t\tthis.children.push( object );\r\n\r\n\t\tobject.updateWorldMatrix( false, true );\r\n\r\n\t\tobject.dispatchEvent( _addedEvent );\r\n\r\n\t\t_childaddedEvent.child = object;\r\n\t\tthis.dispatchEvent( _childaddedEvent );\r\n\t\t_childaddedEvent.child = null;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Searches through the 3D object and its children, starting with the 3D object\r\n\t * itself, and returns the first with a matching ID.\r\n\t *\r\n\t * @param {number} id - The id.\r\n\t * @return {Object3D|undefined} The found 3D object. Returns `undefined` if no 3D object has been found.\r\n\t */\r\n\tgetObjectById( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Searches through the 3D object and its children, starting with the 3D object\r\n\t * itself, and returns the first with a matching name.\r\n\t *\r\n\t * @param {string} name - The name.\r\n\t * @return {Object3D|undefined} The found 3D object. Returns `undefined` if no 3D object has been found.\r\n\t */\r\n\tgetObjectByName( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Searches through the 3D object and its children, starting with the 3D object\r\n\t * itself, and returns the first with a matching property value.\r\n\t *\r\n\t * @param {string} name - The name of the property.\r\n\t * @param {any} value - The value.\r\n\t * @return {Object3D|undefined} The found 3D object. Returns `undefined` if no 3D object has been found.\r\n\t */\r\n\tgetObjectByProperty( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst child = this.children[ i ];\r\n\t\t\tconst object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Searches through the 3D object and its children, starting with the 3D object\r\n\t * itself, and returns all 3D objects with a matching property value.\r\n\t *\r\n\t * @param {string} name - The name of the property.\r\n\t * @param {any} value - The value.\r\n\t * @param {Array<Object3D>} result - The method stores the result in this array.\r\n\t * @return {Array<Object3D>} The found 3D objects.\r\n\t */\r\n\tgetObjectsByProperty( name, value, result = [] ) {\r\n\r\n\t\tif ( this[ name ] === value ) result.push( this );\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector representing the position of the 3D object in world space.\r\n\t *\r\n\t * @param {Vector3} target - The target vector the result is stored to.\r\n\t * @return {Vector3} The 3D object's position in world space.\r\n\t */\r\n\tgetWorldPosition( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Quaternion representing the position of the 3D object in world space.\r\n\t *\r\n\t * @param {Quaternion} target - The target Quaternion the result is stored to.\r\n\t * @return {Quaternion} The 3D object's rotation in world space.\r\n\t */\r\n\tgetWorldQuaternion( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\tthis.matrixWorld.decompose( _position, target, _scale );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector representing the scale of the 3D object in world space.\r\n\t *\r\n\t * @param {Vector3} target - The target vector the result is stored to.\r\n\t * @return {Vector3} The 3D object's scale in world space.\r\n\t */\r\n\tgetWorldScale( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\tthis.matrixWorld.decompose( _position, _quaternion, target );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector representing the (\"look\") direction of the 3D object in world space.\r\n\t *\r\n\t * @param {Vector3} target - The target vector the result is stored to.\r\n\t * @return {Vector3} The 3D object's direction in world space.\r\n\t */\r\n\tgetWorldDirection( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\tconst e = this.matrixWorld.elements;\r\n\r\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Abstract method to get intersections between a casted ray and this\r\n\t * 3D object. Renderable 3D objects such as {@link Mesh}, {@link Line} or {@link Points}\r\n\t * implement this method in order to use raycasting.\r\n\t *\r\n\t * @abstract\r\n\t * @param {Raycaster} raycaster - The raycaster.\r\n\t * @param {Array<Object>} intersects - An array holding the result of the method.\r\n\t */\r\n\traycast( /* raycaster, intersects */ ) {}\r\n\r\n\t/**\r\n\t * Executes the callback on this 3D object and all descendants.\r\n\t *\r\n\t * Note: Modifying the scene graph inside the callback is discouraged.\r\n\t *\r\n\t * @param {Function} callback - A callback function that allows to process the current 3D object.\r\n\t */\r\n\ttraverse( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Like {@link Object3D#traverse}, but the callback will only be executed for visible 3D objects.\r\n\t * Descendants of invisible 3D objects are not traversed.\r\n\t *\r\n\t * Note: Modifying the scene graph inside the callback is discouraged.\r\n\t *\r\n\t * @param {Function} callback - A callback function that allows to process the current 3D object.\r\n\t */\r\n\ttraverseVisible( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Like {@link Object3D#traverse}, but the callback will only be executed for all ancestors.\r\n\t *\r\n\t * Note: Modifying the scene graph inside the callback is discouraged.\r\n\t *\r\n\t * @param {Function} callback - A callback function that allows to process the current 3D object.\r\n\t */\r\n\ttraverseAncestors( callback ) {\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the transformation matrix in local space by computing it from the current\r\n\t * position, rotation and scale values.\r\n\t */\r\n\tupdateMatrix() {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the transformation matrix in world space of this 3D objects and its descendants.\r\n\t *\r\n\t * To ensure correct results, this method also recomputes the 3D object's transformation matrix in\r\n\t * local space. The computation of the local and world matrix can be controlled with the\r\n\t * {@link Object3D#matrixAutoUpdate} and {@link Object3D#matrixWorldAutoUpdate} flags which are both\r\n\t * `true` by default.  Set these flags to `false` if you need more control over the update matrix process.\r\n\t *\r\n\t * @param {boolean} [force=false] - When set to `true`, a recomputation of world matrices is forced even\r\n\t * when {@link Object3D#matrixWorldAutoUpdate} is set to `false`.\r\n\t */\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\r\n\r\n\t\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// make sure descendants are updated if required\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst child = children[ i ];\r\n\r\n\t\t\tchild.updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * An alternative version of {@link Object3D#updateMatrixWorld} with more control over the\r\n\t * update of ancestor and descendant nodes.\r\n\t *\r\n\t * @param {boolean} [updateParents=false] Whether ancestor nodes should be updated or not.\r\n\t * @param {boolean} [updateChildren=false] Whether descendant nodes should be updated or not.\r\n\t */\r\n\tupdateWorldMatrix( updateParents, updateChildren ) {\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tif ( updateParents === true && parent !== null ) {\r\n\r\n\t\t\tparent.updateWorldMatrix( true, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// make sure descendants are updated\r\n\r\n\t\tif ( updateChildren === true ) {\r\n\r\n\t\t\tconst children = this.children;\r\n\r\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = children[ i ];\r\n\r\n\t\t\t\tchild.updateWorldMatrix( false, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes the 3D object into JSON.\r\n\t *\r\n\t * @param {?(Object|string)} meta - An optional value holding meta information about the serialization.\r\n\t * @return {Object} A JSON object representing the serialized 3D object.\r\n\t * @see {@link ObjectLoader#parse}\r\n\t */\r\n\ttoJSON( meta ) {\r\n\r\n\t\t// meta is a string when called from JSON.stringify\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tconst output = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {},\r\n\t\t\t\tshapes: {},\r\n\t\t\t\tskeletons: {},\r\n\t\t\t\tanimations: {},\r\n\t\t\t\tnodes: {}\r\n\t\t\t};\r\n\r\n\t\t\toutput.metadata = {\r\n\t\t\t\tversion: 4.7,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tconst object = {};\r\n\r\n\t\tobject.uuid = this.uuid;\r\n\t\tobject.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\tif ( this.visible === false ) object.visible = false;\r\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\r\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\r\n\r\n\t\tobject.layers = this.layers.mask;\r\n\t\tobject.matrix = this.matrix.toArray();\r\n\t\tobject.up = this.up.toArray();\r\n\r\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\r\n\r\n\t\t// object specific properties\r\n\r\n\t\tif ( this.isInstancedMesh ) {\r\n\r\n\t\t\tobject.type = 'InstancedMesh';\r\n\t\t\tobject.count = this.count;\r\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\r\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isBatchedMesh ) {\r\n\r\n\t\t\tobject.type = 'BatchedMesh';\r\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\r\n\t\t\tobject.sortObjects = this.sortObjects;\r\n\r\n\t\t\tobject.drawRanges = this._drawRanges;\r\n\t\t\tobject.reservedRanges = this._reservedRanges;\r\n\r\n\t\t\tobject.geometryInfo = this._geometryInfo.map( info => ( {\r\n\t\t\t\t...info,\r\n\t\t\t\tboundingBox: info.boundingBox ? info.boundingBox.toJSON() : undefined,\r\n\t\t\t\tboundingSphere: info.boundingSphere ? info.boundingSphere.toJSON() : undefined\r\n\t\t\t} ) );\r\n\t\t\tobject.instanceInfo = this._instanceInfo.map( info => ( { ...info } ) );\r\n\r\n\t\t\tobject.availableInstanceIds = this._availableInstanceIds.slice();\r\n\t\t\tobject.availableGeometryIds = this._availableGeometryIds.slice();\r\n\r\n\t\t\tobject.nextIndexStart = this._nextIndexStart;\r\n\t\t\tobject.nextVertexStart = this._nextVertexStart;\r\n\t\t\tobject.geometryCount = this._geometryCount;\r\n\r\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\r\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\r\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\r\n\r\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\r\n\r\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\r\n\r\n\t\t\tobject.indirectTexture = this._indirectTexture.toJSON( meta );\r\n\r\n\t\t\tif ( this._colorsTexture !== null ) {\r\n\r\n\t\t\t\tobject.colorsTexture = this._colorsTexture.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\t\tobject.boundingSphere = this.boundingSphere.toJSON();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\t\tobject.boundingBox = this.boundingBox.toJSON();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction serialize( library, element ) {\r\n\r\n\t\t\tif ( library[ element.uuid ] === undefined ) {\r\n\r\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn element.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isScene ) {\r\n\r\n\t\t\tif ( this.background ) {\r\n\r\n\t\t\t\tif ( this.background.isColor ) {\r\n\r\n\t\t\t\t\tobject.background = this.background.toJSON();\r\n\r\n\t\t\t\t} else if ( this.background.isTexture ) {\r\n\r\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\r\n\r\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\r\n\r\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\r\n\r\n\t\t\tconst parameters = this.geometry.parameters;\r\n\r\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\r\n\r\n\t\t\t\tconst shapes = parameters.shapes;\r\n\r\n\t\t\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst shape = shapes[ i ];\r\n\r\n\t\t\t\t\t\tserialize( meta.shapes, shape );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tserialize( meta.shapes, shapes );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isSkinnedMesh ) {\r\n\r\n\t\t\tobject.bindMode = this.bindMode;\r\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\r\n\r\n\t\t\tif ( this.skeleton !== undefined ) {\r\n\r\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\r\n\r\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.material !== undefined ) {\r\n\r\n\t\t\tif ( Array.isArray( this.material ) ) {\r\n\r\n\t\t\t\tconst uuids = [];\r\n\r\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.material = uuids;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tobject.children = [];\r\n\r\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.animations.length > 0 ) {\r\n\r\n\t\t\tobject.animations = [];\r\n\r\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\t\tconst animation = this.animations[ i ];\r\n\r\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tconst geometries = extractFromCache( meta.geometries );\r\n\t\t\tconst materials = extractFromCache( meta.materials );\r\n\t\t\tconst textures = extractFromCache( meta.textures );\r\n\t\t\tconst images = extractFromCache( meta.images );\r\n\t\t\tconst shapes = extractFromCache( meta.shapes );\r\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\r\n\t\t\tconst animations = extractFromCache( meta.animations );\r\n\t\t\tconst nodes = extractFromCache( meta.nodes );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\r\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\r\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\r\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = object;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\tconst values = [];\r\n\t\t\tfor ( const key in cache ) {\r\n\r\n\t\t\t\tconst data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new 3D object with copied values from this instance.\r\n\t *\r\n\t * @param {boolean} [recursive=true] - When set to `true`, descendants of the 3D object are also cloned.\r\n\t * @return {Object3D} A clone of this instance.\r\n\t */\r\n\tclone( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given 3D object to this instance.\r\n\t *\r\n\t * @param {Object3D} source - The 3D object to copy.\r\n\t * @param {boolean} [recursive=true] - When set to `true`, descendants of the 3D object are cloned.\r\n\t * @return {Object3D} A reference to this instance.\r\n\t */\r\n\tcopy( source, recursive = true ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.rotation.order = source.rotation.order;\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.layers.mask = source.layers.mask;\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.animations = source.animations.slice();\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * The default up direction for objects, also used as the default\r\n * position for {@link DirectionalLight} and {@link HemisphereLight}.\r\n *\r\n * @static\r\n * @type {Vector3}\r\n * @default (0,1,0)\r\n */\r\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\r\n\r\n/**\r\n * The default setting for {@link Object3D#matrixAutoUpdate} for\r\n * newly created 3D objects.\r\n *\r\n * @static\r\n * @type {boolean}\r\n * @default true\r\n */\r\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\r\n\r\n/**\r\n * The default setting for {@link Object3D#matrixWorldAutoUpdate} for\r\n * newly created 3D objects.\r\n *\r\n * @static\r\n * @type {boolean}\r\n * @default true\r\n */\r\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\r\n\r\nexport { Object3D };\r\n","import { Object3D } from '../core/Object3D.js';\r\nimport { Euler } from '../math/Euler.js';\r\n\r\n/**\r\n * Scenes allow you to set up what is to be rendered and where by three.js.\r\n * This is where you place 3D objects like meshes, lines or lights.\r\n *\r\n * @augments Object3D\r\n */\r\nclass Scene extends Object3D {\r\n\r\n\t/**\r\n\t * Constructs a new scene.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isScene = true;\r\n\r\n\t\tthis.type = 'Scene';\r\n\r\n\t\t/**\r\n\t\t * Defines the background of the scene. Valid inputs are:\r\n\t\t *\r\n\t\t * - A color for defining a uniform colored background.\r\n\t\t * - A texture for defining a (flat) textured background.\r\n\t\t * - Cube textures or equirectangular textures for defining a skybox.\r\n\t\t *\r\n\t\t * @type {?(Color|Texture)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.background = null;\r\n\r\n\t\t/**\r\n\t\t * Sets the environment map for all physical materials in the scene. However,\r\n\t\t * it's not possible to overwrite an existing texture assigned to the `envMap`\r\n\t\t * material property.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.environment = null;\r\n\r\n\t\t/**\r\n\t\t * A fog instance defining the type of fog that affects everything\r\n\t\t * rendered in the scene.\r\n\t\t *\r\n\t\t * @type {?(Fog|FogExp2)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.fog = null;\r\n\r\n\t\t/**\r\n\t\t * Sets the blurriness of the background. Only influences environment maps\r\n\t\t * assigned to {@link Scene#background}. Valid input is a float between `0`\r\n\t\t * and `1`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.backgroundBlurriness = 0;\r\n\r\n\t\t/**\r\n\t\t * Attenuates the color of the background. Only applies to background textures.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.backgroundIntensity = 1;\r\n\r\n\t\t/**\r\n\t\t * The rotation of the background in radians. Only influences environment maps\r\n\t\t * assigned to {@link Scene#background}.\r\n\t\t *\r\n\t\t * @type {Euler}\r\n\t\t * @default (0,0,0)\r\n\t\t */\r\n\t\tthis.backgroundRotation = new Euler();\r\n\r\n\t\t/**\r\n\t\t * Attenuates the color of the environment. Only influences environment maps\r\n\t\t * assigned to {@link Scene#environment}.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.environmentIntensity = 1;\r\n\r\n\t\t/**\r\n\t\t * The rotation of the environment map in radians. Only influences physical materials\r\n\t\t * in the scene when {@link Scene#environment} is used.\r\n\t\t *\r\n\t\t * @type {Euler}\r\n\t\t * @default (0,0,0)\r\n\t\t */\r\n\t\tthis.environmentRotation = new Euler();\r\n\r\n\t\t/**\r\n\t\t * Forces everything in the scene to be rendered with the defined material. It is possible\r\n\t\t * to exclude materials from override by setting {@link Material#allowOverride} to `false`.\r\n\t\t *\r\n\t\t * @type {?Material}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.overrideMaterial = null;\r\n\r\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\r\n\r\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tif ( source.background !== null ) this.background = source.background.clone();\r\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\r\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\r\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\r\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\r\n\r\n\t\tthis.environmentIntensity = source.environmentIntensity;\r\n\t\tthis.environmentRotation.copy( source.environmentRotation );\r\n\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\r\n\r\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\r\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\r\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\r\n\r\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\r\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Scene };\r\n","import { SRGBColorSpace, LinearSRGBColorSpace, SRGBTransfer, LinearTransfer, NoColorSpace } from '../constants.js';\r\nimport { Matrix3 } from './Matrix3.js';\r\nimport { warnOnce } from '../utils.js';\r\n\r\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\r\n\t0.4123908, 0.3575843, 0.1804808,\r\n\t0.2126390, 0.7151687, 0.0721923,\r\n\t0.0193308, 0.1191948, 0.9505322\r\n);\r\n\r\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\r\n\t3.2409699, - 1.5373832, - 0.4986108,\r\n\t- 0.9692436, 1.8759675, 0.0415551,\r\n\t0.0556301, - 0.2039770, 1.0569715\r\n);\r\n\r\nfunction createColorManagement() {\r\n\r\n\tconst ColorManagement = {\r\n\r\n\t\tenabled: true,\r\n\r\n\t\tworkingColorSpace: LinearSRGBColorSpace,\r\n\r\n\t\t/**\r\n\t\t * Implementations of supported color spaces.\r\n\t\t *\r\n\t\t * Required:\r\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\r\n\t\t *\t- whitePoint: reference white [ x y ]\r\n\t\t *\t- transfer: transfer function (pre-defined)\r\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\r\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\r\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\r\n\t\t *\r\n\t\t * Optional:\r\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace, toneMappingMode: 'extended' | 'standard' }\r\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\r\n\t\t *\r\n\t\t * Reference:\r\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\r\n\t\t */\r\n\t\tspaces: {},\r\n\r\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\r\n\r\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\r\n\r\n\t\t\t\treturn color;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\r\n\r\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\r\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\r\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\r\n\r\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\r\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\r\n\r\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\r\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\r\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn color;\r\n\r\n\t\t},\r\n\r\n\t\tworkingToColorSpace: function ( color, targetColorSpace ) {\r\n\r\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\r\n\r\n\t\t},\r\n\r\n\t\tcolorSpaceToWorking: function ( color, sourceColorSpace ) {\r\n\r\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\r\n\r\n\t\t},\r\n\r\n\t\tgetPrimaries: function ( colorSpace ) {\r\n\r\n\t\t\treturn this.spaces[ colorSpace ].primaries;\r\n\r\n\t\t},\r\n\r\n\t\tgetTransfer: function ( colorSpace ) {\r\n\r\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\r\n\r\n\t\t\treturn this.spaces[ colorSpace ].transfer;\r\n\r\n\t\t},\r\n\r\n\t\tgetToneMappingMode: function ( colorSpace ) {\r\n\r\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.toneMappingMode || 'standard';\r\n\r\n\t\t},\r\n\r\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\r\n\r\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\r\n\r\n\t\t},\r\n\r\n\t\tdefine: function ( colorSpaces ) {\r\n\r\n\t\t\tObject.assign( this.spaces, colorSpaces );\r\n\r\n\t\t},\r\n\r\n\t\t// Internal APIs\r\n\r\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\r\n\r\n\t\t\treturn targetMatrix\r\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\r\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\r\n\r\n\t\t},\r\n\r\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\r\n\r\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\r\n\r\n\t\t},\r\n\r\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\r\n\r\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\r\n\r\n\t\t},\r\n\r\n\t\t// Deprecated\r\n\r\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\r\n\r\n\t\t\twarnOnce( 'ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace().' ); // @deprecated, r177\r\n\r\n\t\t\treturn ColorManagement.workingToColorSpace( color, targetColorSpace );\r\n\r\n\t\t},\r\n\r\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\r\n\r\n\t\t\twarnOnce( 'ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking().' ); // @deprecated, r177\r\n\r\n\t\t\treturn ColorManagement.colorSpaceToWorking( color, sourceColorSpace );\r\n\r\n\t\t},\r\n\r\n\t};\r\n\r\n\t/******************************************************************************\r\n\t * sRGB definitions\r\n\t */\r\n\r\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\r\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\r\n\tconst D65 = [ 0.3127, 0.3290 ];\r\n\r\n\tColorManagement.define( {\r\n\r\n\t\t[ LinearSRGBColorSpace ]: {\r\n\t\t\tprimaries: REC709_PRIMARIES,\r\n\t\t\twhitePoint: D65,\r\n\t\t\ttransfer: LinearTransfer,\r\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\r\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\r\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\r\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\r\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\r\n\t\t},\r\n\r\n\t\t[ SRGBColorSpace ]: {\r\n\t\t\tprimaries: REC709_PRIMARIES,\r\n\t\t\twhitePoint: D65,\r\n\t\t\ttransfer: SRGBTransfer,\r\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\r\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\r\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\r\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\r\n\t\t},\r\n\r\n\t} );\r\n\r\n\treturn ColorManagement;\r\n\r\n}\r\n\r\nexport const ColorManagement = /*@__PURE__*/ createColorManagement();\r\n\r\nexport function SRGBToLinear( c ) {\r\n\r\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\r\n\r\n}\r\n\r\nexport function LinearToSRGB( c ) {\r\n\r\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\r\n\r\n}\r\n","import { clamp, euclideanModulo, lerp } from './MathUtils.js';\r\nimport { ColorManagement, SRGBToLinear, LinearToSRGB } from './ColorManagement.js';\r\nimport { SRGBColorSpace } from '../constants.js';\r\nimport { warn } from '../utils.js';\r\n\r\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\nconst _hslA = { h: 0, s: 0, l: 0 };\r\nconst _hslB = { h: 0, s: 0, l: 0 };\r\n\r\nfunction hue2rgb( p, q, t ) {\r\n\r\n\tif ( t < 0 ) t += 1;\r\n\tif ( t > 1 ) t -= 1;\r\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\tif ( t < 1 / 2 ) return q;\r\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\treturn p;\r\n\r\n}\r\n\r\n/**\r\n * A Color instance is represented by RGB components in the linear <i>working\r\n * color space</i>, which defaults to `LinearSRGBColorSpace`. Inputs\r\n * conventionally using `SRGBColorSpace` (such as hexadecimals and CSS\r\n * strings) are converted to the working color space automatically.\r\n *\r\n * ```js\r\n * // converted automatically from SRGBColorSpace to LinearSRGBColorSpace\r\n * const color = new THREE.Color().setHex( 0x112233 );\r\n * ```\r\n * Source color spaces may be specified explicitly, to ensure correct conversions.\r\n * ```js\r\n * // assumed already LinearSRGBColorSpace; no conversion\r\n * const color = new THREE.Color().setRGB( 0.5, 0.5, 0.5 );\r\n *\r\n * // converted explicitly from SRGBColorSpace to LinearSRGBColorSpace\r\n * const color = new THREE.Color().setRGB( 0.5, 0.5, 0.5, SRGBColorSpace );\r\n * ```\r\n * If THREE.ColorManagement is disabled, no conversions occur. For details,\r\n * see <i>Color management</i>. Iterating through a Color instance will yield\r\n * its components (r, g, b) in the corresponding order. A Color can be initialised\r\n * in any of the following ways:\r\n * ```js\r\n * //empty constructor - will default white\r\n * const color1 = new THREE.Color();\r\n *\r\n * //Hexadecimal color (recommended)\r\n * const color2 = new THREE.Color( 0xff0000 );\r\n *\r\n * //RGB string\r\n * const color3 = new THREE.Color(\"rgb(255, 0, 0)\");\r\n * const color4 = new THREE.Color(\"rgb(100%, 0%, 0%)\");\r\n *\r\n * //X11 color name - all 140 color names are supported.\r\n * //Note the lack of CamelCase in the name\r\n * const color5 = new THREE.Color( 'skyblue' );\r\n * //HSL string\r\n * const color6 = new THREE.Color(\"hsl(0, 100%, 50%)\");\r\n *\r\n * //Separate RGB values between 0 and 1\r\n * const color7 = new THREE.Color( 1, 0, 0 );\r\n * ```\r\n */\r\nclass Color {\r\n\r\n\t/**\r\n\t * Constructs a new color.\r\n\t *\r\n\t * Note that standard method of specifying color in three.js is with a hexadecimal triplet,\r\n\t * and that method is used throughout the rest of the documentation.\r\n\t *\r\n\t * @param {(number|string|Color)} [r] - The red component of the color. If `g` and `b` are\r\n\t * not provided, it can be hexadecimal triplet, a CSS-style string or another `Color` instance.\r\n\t * @param {number} [g] - The green component.\r\n\t * @param {number} [b] - The blue component.\r\n\t */\r\n\tconstructor( r, g, b ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isColor = true;\r\n\r\n\t\t/**\r\n\t\t * The red component.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.r = 1;\r\n\r\n\t\t/**\r\n\t\t * The green component.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.g = 1;\r\n\r\n\t\t/**\r\n\t\t * The blue component.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.b = 1;\r\n\r\n\t\treturn this.set( r, g, b );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the colors's components from the given values.\r\n\t *\r\n\t * @param {(number|string|Color)} [r] - The red component of the color. If `g` and `b` are\r\n\t * not provided, it can be hexadecimal triplet, a CSS-style string or another `Color` instance.\r\n\t * @param {number} [g] - The green component.\r\n\t * @param {number} [b] - The blue component.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tset( r, g, b ) {\r\n\r\n\t\tif ( g === undefined && b === undefined ) {\r\n\r\n\t\t\t// r is THREE.Color, hex or string\r\n\r\n\t\t\tconst value = r;\r\n\r\n\t\t\tif ( value && value.isColor ) {\r\n\r\n\t\t\t\tthis.copy( value );\r\n\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\t\tthis.setHex( value );\r\n\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\t\tthis.setStyle( value );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.setRGB( r, g, b );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the colors's components to the given scalar value.\r\n\t *\r\n\t * @param {number} scalar - The scalar value.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.r = scalar;\r\n\t\tthis.g = scalar;\r\n\t\tthis.b = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this color from a hexadecimal value.\r\n\t *\r\n\t * @param {number} hex - The hexadecimal value.\r\n\t * @param {string} [colorSpace=SRGBColorSpace] - The color space.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\tColorManagement.colorSpaceToWorking( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this color from RGB values.\r\n\t *\r\n\t * @param {number} r - Red channel value between `0.0` and `1.0`.\r\n\t * @param {number} g - Green channel value between `0.0` and `1.0`.\r\n\t * @param {number} b - Blue channel value between `0.0` and `1.0`.\r\n\t * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\tColorManagement.colorSpaceToWorking( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this color from RGB values.\r\n\t *\r\n\t * @param {number} h - Hue value between `0.0` and `1.0`.\r\n\t * @param {number} s - Saturation value between `0.0` and `1.0`.\r\n\t * @param {number} l - Lightness value between `0.0` and `1.0`.\r\n\t * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\th = euclideanModulo( h, 1 );\r\n\t\ts = clamp( s, 0, 1 );\r\n\t\tl = clamp( l, 0, 1 );\r\n\r\n\t\tif ( s === 0 ) {\r\n\r\n\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\tconst q = ( 2 * l ) - p;\r\n\r\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t}\r\n\r\n\t\tColorManagement.colorSpaceToWorking( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this color from a CSS-style string. For example, `rgb(250, 0,0)`,\r\n\t * `rgb(100%, 0%, 0%)`, `hsl(0, 100%, 50%)`, `#ff0000`, `#f00`, or `red` ( or\r\n\t * any [X11 color name]{@link https://en.wikipedia.org/wiki/X11_color_names#Color_name_chart} -\r\n\t * all 140 color names are supported).\r\n\t *\r\n\t * @param {string} style - Color as a CSS-style string.\r\n\t * @param {string} [colorSpace=SRGBColorSpace] - The color space.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\twarn( 'Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tlet m;\r\n\r\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tlet color;\r\n\t\t\tconst name = m[ 1 ];\r\n\t\t\tconst components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setRGB(\r\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\r\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\r\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\r\n\t\t\t\t\t\t\tcolorSpace\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setRGB(\r\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\r\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\r\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\r\n\t\t\t\t\t\t\tcolorSpace\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL(\r\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\r\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\r\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\r\n\t\t\t\t\t\t\tcolorSpace\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\twarn( 'Color: Unknown color model ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tconst hex = m[ 1 ];\r\n\t\t\tconst size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\treturn this.setRGB(\r\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\r\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\r\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\r\n\t\t\t\t\tcolorSpace\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\twarn( 'Color: Invalid hex color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( style && style.length > 0 ) {\r\n\r\n\t\t\treturn this.setColorName( style, colorSpace );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this color from a color name. Faster than {@link Color#setStyle} if\r\n\t * you don't need the other CSS-style formats.\r\n\t *\r\n\t * For convenience, the list of names is exposed in `Color.NAMES` as a hash.\r\n\t * ```js\r\n\t * Color.NAMES.aliceblue // returns 0xF0F8FF\r\n\t * ```\r\n\t *\r\n\t * @param {string} style - The color name.\r\n\t * @param {string} [colorSpace=SRGBColorSpace] - The color space.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\t// color keywords\r\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\r\n\r\n\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t// red\r\n\t\t\tthis.setHex( hex, colorSpace );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// unknown color\r\n\t\t\twarn( 'Color: Unknown color ' + style );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new color with copied values from this instance.\r\n\t *\r\n\t * @return {Color} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given color to this instance.\r\n\t *\r\n\t * @param {Color} color - The color to copy.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tcopy( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the given color into this color, and then converts this color from\r\n\t * `SRGBColorSpace` to `LinearSRGBColorSpace`.\r\n\t *\r\n\t * @param {Color} color - The color to copy/convert.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tcopySRGBToLinear( color ) {\r\n\r\n\t\tthis.r = SRGBToLinear( color.r );\r\n\t\tthis.g = SRGBToLinear( color.g );\r\n\t\tthis.b = SRGBToLinear( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the given color into this color, and then converts this color from\r\n\t * `LinearSRGBColorSpace` to `SRGBColorSpace`.\r\n\t *\r\n\t * @param {Color} color - The color to copy/convert.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tcopyLinearToSRGB( color ) {\r\n\r\n\t\tthis.r = LinearToSRGB( color.r );\r\n\t\tthis.g = LinearToSRGB( color.g );\r\n\t\tthis.b = LinearToSRGB( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts this color from `SRGBColorSpace` to `LinearSRGBColorSpace`.\r\n\t *\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tconvertSRGBToLinear() {\r\n\r\n\t\tthis.copySRGBToLinear( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts this color from `LinearSRGBColorSpace` to `SRGBColorSpace`.\r\n\t *\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tconvertLinearToSRGB() {\r\n\r\n\t\tthis.copyLinearToSRGB( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the hexadecimal value of this color.\r\n\t *\r\n\t * @param {string} [colorSpace=SRGBColorSpace] - The color space.\r\n\t * @return {number} The hexadecimal value.\r\n\t */\r\n\tgetHex( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tColorManagement.workingToColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the hexadecimal value of this color as a string (for example, 'FFFFFF').\r\n\t *\r\n\t * @param {string} [colorSpace=SRGBColorSpace] - The color space.\r\n\t * @return {string} The hexadecimal value as a string.\r\n\t */\r\n\tgetHexString( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the colors RGB values into the HSL format and stores them into the\r\n\t * given target object.\r\n\t *\r\n\t * @param {{h:number,s:number,l:number}} target - The target object that is used to store the method's result.\r\n\t * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.\r\n\t * @return {{h:number,s:number,l:number}} The HSL representation of this color.\r\n\t */\r\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tColorManagement.workingToColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\r\n\r\n\t\tconst max = Math.max( r, g, b );\r\n\t\tconst min = Math.min( r, g, b );\r\n\r\n\t\tlet hue, saturation;\r\n\t\tconst lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.h = hue;\r\n\t\ttarget.s = saturation;\r\n\t\ttarget.l = lightness;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the RGB values of this color and stores them into the given target object.\r\n\t *\r\n\t * @param {Color} target - The target color that is used to store the method's result.\r\n\t * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.\r\n\t * @return {Color} The RGB representation of this color.\r\n\t */\r\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\tColorManagement.workingToColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\ttarget.r = _color.r;\r\n\t\ttarget.g = _color.g;\r\n\t\ttarget.b = _color.b;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the value of this color as a CSS style string. Example: `rgb(255,0,0)`.\r\n\t *\r\n\t * @param {string} [colorSpace=SRGBColorSpace] - The color space.\r\n\t * @return {string} The CSS representation of this color.\r\n\t */\r\n\tgetStyle( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tColorManagement.workingToColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\r\n\r\n\t\tif ( colorSpace !== SRGBColorSpace ) {\r\n\r\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\r\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\r\n\r\n\t\t}\r\n\r\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given HSL values to this color's values.\r\n\t * Internally, this converts the color's RGB values to HSL, adds HSL\r\n\t * and then converts the color back to RGB.\r\n\t *\r\n\t * @param {number} h - Hue value between `0.0` and `1.0`.\r\n\t * @param {number} s - Saturation value between `0.0` and `1.0`.\r\n\t * @param {number} l - Lightness value between `0.0` and `1.0`.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\toffsetHSL( h, s, l ) {\r\n\r\n\t\tthis.getHSL( _hslA );\r\n\r\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the RGB values of the given color to the RGB values of this color.\r\n\t *\r\n\t * @param {Color} color - The color to add.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tadd( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the RGB values of the given colors and stores the result in this instance.\r\n\t *\r\n\t * @param {Color} color1 - The first color.\r\n\t * @param {Color} color2 - The second color.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\taddColors( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given scalar value to the RGB values of this color.\r\n\t *\r\n\t * @param {number} s - The scalar to add.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the RGB values of the given color from the RGB values of this color.\r\n\t *\r\n\t * @param {Color} color - The color to subtract.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tsub( color ) {\r\n\r\n\t\tthis.r = Math.max( 0, this.r - color.r );\r\n\t\tthis.g = Math.max( 0, this.g - color.g );\r\n\t\tthis.b = Math.max( 0, this.b - color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the RGB values of the given color with the RGB values of this color.\r\n\t *\r\n\t * @param {Color} color - The color to multiply.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tmultiply( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the given scalar value with the RGB values of this color.\r\n\t *\r\n\t * @param {number} s - The scalar to multiply.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates this color's RGB values toward the RGB values of the\r\n\t * given color. The alpha argument can be thought of as the ratio between\r\n\t * the two colors, where `0.0` is this color and `1.0` is the first argument.\r\n\t *\r\n\t * @param {Color} color - The color to converge on.\r\n\t * @param {number} alpha - The interpolation factor in the closed interval `[0,1]`.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tlerp( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between the given colors and stores the result in this instance.\r\n\t * The alpha argument can be thought of as the ratio between the two colors, where `0.0`\r\n\t * is the first and `1.0` is the second color.\r\n\t *\r\n\t * @param {Color} color1 - The first color.\r\n\t * @param {Color} color2 - The second color.\r\n\t * @param {number} alpha - The interpolation factor in the closed interval `[0,1]`.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tlerpColors( color1, color2, alpha ) {\r\n\r\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\r\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\r\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates this color's HSL values toward the HSL values of the\r\n\t * given color. It differs from {@link Color#lerp} by not interpolating straight\r\n\t * from one color to the other, but instead going through all the hues in between\r\n\t * those two colors. The alpha argument can be thought of as the ratio between\r\n\t * the two colors, where 0.0 is this color and 1.0 is the first argument.\r\n\t *\r\n\t * @param {Color} color - The color to converge on.\r\n\t * @param {number} alpha - The interpolation factor in the closed interval `[0,1]`.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tlerpHSL( color, alpha ) {\r\n\r\n\t\tthis.getHSL( _hslA );\r\n\t\tcolor.getHSL( _hslB );\r\n\r\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\r\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\r\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\r\n\r\n\t\tthis.setHSL( h, s, l );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the color's RGB components from the given 3D vector.\r\n\t *\r\n\t * @param {Vector3} v - The vector to set.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tsetFromVector3( v ) {\r\n\r\n\t\tthis.r = v.x;\r\n\t\tthis.g = v.y;\r\n\t\tthis.b = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms this color with the given 3x3 matrix.\r\n\t *\r\n\t * @param {Matrix3} m - The matrix.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst r = this.r, g = this.g, b = this.b;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\r\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\r\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this color is equal with the given one.\r\n\t *\r\n\t * @param {Color} c - The color to test for equality.\r\n\t * @return {boolean} Whether this bounding color is equal with the given one.\r\n\t */\r\n\tequals( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this color's RGB components from the given array.\r\n\t *\r\n\t * @param {Array<number>} array - An array holding the RGB values.\r\n\t * @param {number} [offset=0] - The offset into the array.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.r = array[ offset ];\r\n\t\tthis.g = array[ offset + 1 ];\r\n\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Writes the RGB components of this color to the given array. If no array is provided,\r\n\t * the method returns a new instance.\r\n\t *\r\n\t * @param {Array<number>} [array=[]] - The target array holding the color components.\r\n\t * @param {number} [offset=0] - Index of the first element in the array.\r\n\t * @return {Array<number>} The color components.\r\n\t */\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the components of this color from the given buffer attribute.\r\n\t *\r\n\t * @param {BufferAttribute} attribute - The buffer attribute holding color data.\r\n\t * @param {number} index - The index into the attribute.\r\n\t * @return {Color} A reference to this color.\r\n\t */\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.r = attribute.getX( index );\r\n\t\tthis.g = attribute.getY( index );\r\n\t\tthis.b = attribute.getZ( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This methods defines the serialization result of this class. Returns the color\r\n\t * as a hexadecimal value.\r\n\t *\r\n\t * @return {number} The hexadecimal value.\r\n\t */\r\n\ttoJSON() {\r\n\r\n\t\treturn this.getHex();\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.r;\r\n\t\tyield this.g;\r\n\t\tyield this.b;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _color = /*@__PURE__*/ new Color();\r\n\r\n/**\r\n * A dictionary with X11 color names.\r\n *\r\n * Note that multiple words such as Dark Orange become the string 'darkorange'.\r\n *\r\n * @static\r\n * @type {Object}\r\n */\r\nColor.NAMES = _colorKeywords;\r\n\r\nexport { Color };\r\n","import { clamp } from './MathUtils.js';\r\n\r\n/**\r\n * Class representing a 2D vector. A 2D vector is an ordered pair of numbers\r\n * (labeled x and y), which can be used to represent a number of things, such as:\r\n *\r\n * - A point in 2D space (i.e. a position on a plane).\r\n * - A direction and length across a plane. In three.js the length will\r\n * always be the Euclidean distance(straight-line distance) from `(0, 0)` to `(x, y)`\r\n * and the direction is also measured from `(0, 0)` towards `(x, y)`.\r\n * - Any arbitrary ordered pair of numbers.\r\n *\r\n * There are other things a 2D vector can be used to represent, such as\r\n * momentum vectors, complex numbers and so on, however these are the most\r\n * common uses in three.js.\r\n *\r\n * Iterating through a vector instance will yield its components `(x, y)` in\r\n * the corresponding order.\r\n * ```js\r\n * const a = new THREE.Vector2( 0, 1 );\r\n *\r\n * //no arguments; will be initialised to (0, 0)\r\n * const b = new THREE.Vector2( );\r\n *\r\n * const d = a.distanceTo( b );\r\n * ```\r\n */\r\nclass Vector2 {\r\n\r\n\t/**\r\n\t * Constructs a new 2D vector.\r\n\t *\r\n\t * @param {number} [x=0] - The x value of this vector.\r\n\t * @param {number} [y=0] - The y value of this vector.\r\n\t */\r\n\tconstructor( x = 0, y = 0 ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tVector2.prototype.isVector2 = true;\r\n\r\n\t\t/**\r\n\t\t * The x value of this vector.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.x = x;\r\n\r\n\t\t/**\r\n\t\t * The y value of this vector.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.y = y;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Alias for {@link Vector2#x}.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tget width() {\r\n\r\n\t\treturn this.x;\r\n\r\n\t}\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.x = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Alias for {@link Vector2#y}.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tget height() {\r\n\r\n\t\treturn this.y;\r\n\r\n\t}\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.y = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components.\r\n\t *\r\n\t * @param {number} x - The value of the x component.\r\n\t * @param {number} y - The value of the y component.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tset( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components to the same value.\r\n\t *\r\n\t * @param {number} scalar - The value to set for all vector components.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector's x component to the given value\r\n\t *\r\n\t * @param {number} x - The value to set.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector's y component to the given value\r\n\t *\r\n\t * @param {number} y - The value to set.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Allows to set a vector component with an index.\r\n\t *\r\n\t * @param {number} index - The component index. `0` equals to x, `1` equals to y.\r\n\t * @param {number} value - The value to set.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the value of the vector component which matches the given index.\r\n\t *\r\n\t * @param {number} index - The component index. `0` equals to x, `1` equals to y.\r\n\t * @return {number} A vector component value.\r\n\t */\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new vector with copied values from this instance.\r\n\t *\r\n\t * @return {Vector2} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given vector to this instance.\r\n\t *\r\n\t * @param {Vector2} v - The vector to copy.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given vector to this instance.\r\n\t *\r\n\t * @param {Vector2} v - The vector to add.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given scalar value to all components of this instance.\r\n\t *\r\n\t * @param {number} s - The scalar to add.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given vectors and stores the result in this instance.\r\n\t *\r\n\t * @param {Vector2} a - The first vector.\r\n\t * @param {Vector2} b - The second vector.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given vector scaled by the given factor to this instance.\r\n\t *\r\n\t * @param {Vector2} v - The vector.\r\n\t * @param {number} s - The factor that scales `v`.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the given vector from this instance.\r\n\t *\r\n\t * @param {Vector2} v - The vector to subtract.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the given scalar value from all components of this instance.\r\n\t *\r\n\t * @param {number} s - The scalar to subtract.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the given vectors and stores the result in this instance.\r\n\t *\r\n\t * @param {Vector2} a - The first vector.\r\n\t * @param {Vector2} b - The second vector.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the given vector with this instance.\r\n\t *\r\n\t * @param {Vector2} v - The vector to multiply.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the given scalar value with all components of this instance.\r\n\t *\r\n\t * @param {number} scalar - The scalar to multiply.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Divides this instance by the given vector.\r\n\t *\r\n\t * @param {Vector2} v - The vector to divide.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Divides this vector by the given scalar.\r\n\t *\r\n\t * @param {number} scalar - The scalar to divide.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies this vector (with an implicit 1 as the 3rd component) by\r\n\t * the given 3x3 matrix.\r\n\t *\r\n\t * @param {Matrix3} m - The matrix to apply.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x or y value is greater than the given vector's x or y\r\n\t * value, replace that value with the corresponding min value.\r\n\t *\r\n\t * @param {Vector2} v - The vector.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x or y value is less than the given vector's x or y\r\n\t * value, replace that value with the corresponding max value.\r\n\t *\r\n\t * @param {Vector2} v - The vector.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x or y value is greater than the max vector's x or y\r\n\t * value, it is replaced by the corresponding value.\r\n\t * If this vector's x or y value is less than the min vector's x or y value,\r\n\t * it is replaced by the corresponding value.\r\n\t *\r\n\t * @param {Vector2} min - The minimum x and y values.\r\n\t * @param {Vector2} max - The maximum x and y values in the desired range.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = clamp( this.x, min.x, max.x );\r\n\t\tthis.y = clamp( this.y, min.y, max.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x or y values are greater than the max value, they are\r\n\t * replaced by the max value.\r\n\t * If this vector's x or y values are less than the min value, they are\r\n\t * replaced by the min value.\r\n\t *\r\n\t * @param {number} minVal - The minimum value the components will be clamped to.\r\n\t * @param {number} maxVal - The maximum value the components will be clamped to.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = clamp( this.x, minVal, maxVal );\r\n\t\tthis.y = clamp( this.y, minVal, maxVal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's length is greater than the max value, it is replaced by\r\n\t * the max value.\r\n\t * If this vector's length is less than the min value, it is replaced by the\r\n\t * min value.\r\n\t *\r\n\t * @param {number} min - The minimum value the vector length will be clamped to.\r\n\t * @param {number} max - The maximum value the vector length will be clamped to.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded down to the nearest integer value.\r\n\t *\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded up to the nearest integer value.\r\n\t *\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded to the nearest integer value\r\n\t *\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded towards zero (up if negative,\r\n\t * down if positive) to an integer value.\r\n\t *\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\troundToZero() {\r\n\r\n\t\tthis.x = Math.trunc( this.x );\r\n\t\tthis.y = Math.trunc( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts this vector - i.e. sets x = -x and y = -y.\r\n\t *\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the dot product of the given vector with this instance.\r\n\t *\r\n\t * @param {Vector2} v - The vector to compute the dot product with.\r\n\t * @return {number} The result of the dot product.\r\n\t */\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the cross product of the given vector with this instance.\r\n\t *\r\n\t * @param {Vector2} v - The vector to compute the cross product with.\r\n\t * @return {number} The result of the cross product.\r\n\t */\r\n\tcross( v ) {\r\n\r\n\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the square of the Euclidean length (straight-line length) from\r\n\t * (0, 0) to (x, y). If you are comparing the lengths of vectors, you should\r\n\t * compare the length squared instead as it is slightly more efficient to calculate.\r\n\t *\r\n\t * @return {number} The square length of this vector.\r\n\t */\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the  Euclidean length (straight-line length) from (0, 0) to (x, y).\r\n\t *\r\n\t * @return {number} The length of this vector.\r\n\t */\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the Manhattan length of this vector.\r\n\t *\r\n\t * @return {number} The length of this vector.\r\n\t */\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts this vector to a unit vector - that is, sets it equal to a vector\r\n\t * with the same direction as this one, but with a vector length of `1`.\r\n\t *\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the angle in radians of this vector with respect to the positive x-axis.\r\n\t *\r\n\t * @return {number} The angle in radians.\r\n\t */\r\n\tangle() {\r\n\r\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n\r\n\t\treturn angle;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the angle between the given vector and this instance in radians.\r\n\t *\r\n\t * @param {Vector2} v - The vector to compute the angle with.\r\n\t * @return {number} The angle in radians.\r\n\t */\r\n\tangleTo( v ) {\r\n\r\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\r\n\r\n\t\tif ( denominator === 0 ) return Math.PI / 2;\r\n\r\n\t\tconst theta = this.dot( v ) / denominator;\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the distance from the given vector to this instance.\r\n\t *\r\n\t * @param {Vector2} v - The vector to compute the distance to.\r\n\t * @return {number} The distance.\r\n\t */\r\n\tdistanceTo( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the squared distance from the given vector to this instance.\r\n\t * If you are just comparing the distance with another distance, you should compare\r\n\t * the distance squared instead as it is slightly more efficient to calculate.\r\n\t *\r\n\t * @param {Vector2} v - The vector to compute the squared distance to.\r\n\t * @return {number} The squared distance.\r\n\t */\r\n\tdistanceToSquared( v ) {\r\n\r\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the Manhattan distance from the given vector to this instance.\r\n\t *\r\n\t * @param {Vector2} v - The vector to compute the Manhattan distance to.\r\n\t * @return {number} The Manhattan distance.\r\n\t */\r\n\tmanhattanDistanceTo( v ) {\r\n\r\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this vector to a vector with the same direction as this one, but\r\n\t * with the specified length.\r\n\t *\r\n\t * @param {number} length - The new length of this vector.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between the given vector and this instance, where\r\n\t * alpha is the percent distance along the line - alpha = 0 will be this\r\n\t * vector, and alpha = 1 will be the given one.\r\n\t *\r\n\t * @param {Vector2} v - The vector to interpolate towards.\r\n\t * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between the given vectors, where alpha is the percent\r\n\t * distance along the line - alpha = 0 will be first vector, and alpha = 1 will\r\n\t * be the second one. The result is stored in this instance.\r\n\t *\r\n\t * @param {Vector2} v1 - The first vector.\r\n\t * @param {Vector2} v2 - The second vector.\r\n\t * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this vector is equal with the given one.\r\n\t *\r\n\t * @param {Vector2} v - The vector to test for equality.\r\n\t * @return {boolean} Whether this vector is equal with the given one.\r\n\t */\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this vector's x value to be `array[ offset ]` and y\r\n\t * value to be `array[ offset + 1 ]`.\r\n\t *\r\n\t * @param {Array<number>} array - An array holding the vector component values.\r\n\t * @param {number} [offset=0] - The offset into the array.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Writes the components of this vector to the given array. If no array is provided,\r\n\t * the method returns a new instance.\r\n\t *\r\n\t * @param {Array<number>} [array=[]] - The target array holding the vector components.\r\n\t * @param {number} [offset=0] - Index of the first element in the array.\r\n\t * @return {Array<number>} The vector components.\r\n\t */\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the components of this vector from the given buffer attribute.\r\n\t *\r\n\t * @param {BufferAttribute} attribute - The buffer attribute holding vector data.\r\n\t * @param {number} index - The index into the attribute.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates this vector around the given center by the given angle.\r\n\t *\r\n\t * @param {Vector2} center - The point around which to rotate.\r\n\t * @param {number} angle - The angle to rotate, in radians.\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\trotateAround( center, angle ) {\r\n\r\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\tconst x = this.x - center.x;\r\n\t\tconst y = this.y - center.y;\r\n\r\n\t\tthis.x = x * c - y * s + center.x;\r\n\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets each component of this vector to a pseudo-random value between `0` and\r\n\t * `1`, excluding `1`.\r\n\t *\r\n\t * @return {Vector2} A reference to this vector.\r\n\t */\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Vector2 };\r\n","import { Vector3 } from './Vector3.js';\r\n\r\n/**\r\n * Represents an axis-aligned bounding box (AABB) in 3D space.\r\n */\r\nclass Box3 {\r\n\r\n\t/**\r\n\t * Constructs a new bounding box.\r\n\t *\r\n\t * @param {Vector3} [min=(Infinity,Infinity,Infinity)] - A vector representing the lower boundary of the box.\r\n\t * @param {Vector3} [max=(-Infinity,-Infinity,-Infinity)] - A vector representing the upper boundary of the box.\r\n\t */\r\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isBox3 = true;\r\n\r\n\t\t/**\r\n\t\t * The lower boundary of the box.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\t\tthis.min = min;\r\n\r\n\t\t/**\r\n\t\t * The upper boundary of the box.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the lower and upper boundaries of this box.\r\n\t * Please note that this method only copies the values from the given objects.\r\n\t *\r\n\t * @param {Vector3} min - The lower boundary of the box.\r\n\t * @param {Vector3} max - The upper boundary of the box.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tset( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the upper and lower bounds of this box so it encloses the position data\r\n\t * in the given array.\r\n\t *\r\n\t * @param {Array<number>} array - An array holding 3D position data.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tsetFromArray( array ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\r\n\r\n\t\t\tthis.expandByPoint( _vector.fromArray( array, i ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the upper and lower bounds of this box so it encloses the position data\r\n\t * in the given buffer attribute.\r\n\t *\r\n\t * @param {BufferAttribute} attribute - A buffer attribute holding 3D position data.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tsetFromBufferAttribute( attribute ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( _vector.fromBufferAttribute( attribute, i ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the upper and lower bounds of this box so it encloses the position data\r\n\t * in the given array.\r\n\t *\r\n\t * @param {Array<Vector3>} points - An array holding 3D position data as instances of {@link Vector3}.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Centers this box on the given center vector and sets this box's width, height and\r\n\t * depth to the given size values.\r\n\t *\r\n\t * @param {Vector3} center - The center of the box.\r\n\t * @param {Vector3} size - The x, y and z dimensions of the box.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tsetFromCenterAndSize( center, size ) {\r\n\r\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the world-axis-aligned bounding box for the given 3D object\r\n\t * (including its children), accounting for the object's, and children's,\r\n\t * world transforms. The function may result in a larger box than strictly necessary.\r\n\t *\r\n\t * @param {Object3D} object - The 3D object to compute the bounding box for.\r\n\t * @param {boolean} [precise=false] - If set to `true`, the method computes the smallest\r\n\t * world-axis-aligned bounding box at the expense of more computation.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tsetFromObject( object, precise = false ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\treturn this.expandByObject( object, precise );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new box with copied values from this instance.\r\n\t *\r\n\t * @return {Box3} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given box to this instance.\r\n\t *\r\n\t * @param {Box3} box - The box to copy.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tcopy( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Makes this box empty which means in encloses a zero space in 3D.\r\n\t *\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if this box includes zero points within its bounds.\r\n\t * Note that a box with equal lower and upper bounds still includes one\r\n\t * point, the one both bounds share.\r\n\t *\r\n\t * @return {boolean} Whether this box is empty or not.\r\n\t */\r\n\tisEmpty() {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the center point of this box.\r\n\t *\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The center point.\r\n\t */\r\n\tgetCenter( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the dimensions of this box.\r\n\t *\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The size.\r\n\t */\r\n\tgetSize( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Expands the boundaries of this box to include the given point.\r\n\t *\r\n\t * @param {Vector3} point - The point that should be included by the bounding box.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\texpandByPoint( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Expands this box equilaterally by the given vector. The width of this\r\n\t * box will be expanded by the x component of the vector in both\r\n\t * directions. The height of this box will be expanded by the y component of\r\n\t * the vector in both directions. The depth of this box will be\r\n\t * expanded by the z component of the vector in both directions.\r\n\t *\r\n\t * @param {Vector3} vector - The vector that should expand the bounding box.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\texpandByVector( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Expands each dimension of the box by the given scalar. If negative, the\r\n\t * dimensions of the box will be contracted.\r\n\t *\r\n\t * @param {number} scalar - The scalar value that should expand the bounding box.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\texpandByScalar( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Expands the boundaries of this box to include the given 3D object and\r\n\t * its children, accounting for the object's, and children's, world\r\n\t * transforms. The function may result in a larger box than strictly\r\n\t * necessary (unless the precise parameter is set to true).\r\n\t *\r\n\t * @param {Object3D} object - The 3D object that should expand the bounding box.\r\n\t * @param {boolean} precise - If set to `true`, the method expands the bounding box\r\n\t * as little as necessary at the expense of more computation.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\texpandByObject( object, precise = false ) {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tobject.updateWorldMatrix( false, false );\r\n\r\n\t\tconst geometry = object.geometry;\r\n\r\n\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\r\n\r\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\r\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\r\n\r\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\r\n\r\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tif ( object.isMesh === true ) {\r\n\r\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_vector.fromBufferAttribute( positionAttribute, i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_vector.applyMatrix4( object.matrixWorld );\r\n\t\t\t\t\tthis.expandByPoint( _vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( object.boundingBox !== undefined ) {\r\n\r\n\t\t\t\t\t// object-level bounding box\r\n\r\n\t\t\t\t\tif ( object.boundingBox === null ) {\r\n\r\n\t\t\t\t\t\tobject.computeBoundingBox();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_box.copy( object.boundingBox );\r\n\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// geometry-level bounding box\r\n\r\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\r\n\r\n\t\t\t\t\t\tgeometry.computeBoundingBox();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_box.copy( geometry.boundingBox );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_box.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tthis.union( _box );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst children = object.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.expandByObject( children[ i ], precise );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given point lies within or on the boundaries of this box.\r\n\t *\r\n\t * @param {Vector3} point - The point to test.\r\n\t * @return {boolean} Whether the bounding box contains the given point or not.\r\n\t */\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\r\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\r\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this bounding box includes the entirety of the given bounding box.\r\n\t * If this box and the given one are identical, this function also returns `true`.\r\n\t *\r\n\t * @param {Box3} box - The bounding box to test.\r\n\t * @return {boolean} Whether the bounding box contains the given bounding box or not.\r\n\t */\r\n\tcontainsBox( box ) {\r\n\r\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\r\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a point as a proportion of this box's width, height and depth.\r\n\t *\r\n\t * @param {Vector3} point - A point in 3D space.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} A point as a proportion of this box's width, height and depth.\r\n\t */\r\n\tgetParameter( point, target ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\treturn target.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given bounding box intersects with this bounding box.\r\n\t *\r\n\t * @param {Box3} box - The bounding box to test.\r\n\t * @return {boolean} Whether the given bounding box intersects with this bounding box.\r\n\t */\r\n\tintersectsBox( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\r\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\r\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given bounding sphere intersects with this bounding box.\r\n\t *\r\n\t * @param {Sphere} sphere - The bounding sphere to test.\r\n\t * @return {boolean} Whether the given bounding sphere intersects with this bounding box.\r\n\t */\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\tthis.clampPoint( sphere.center, _vector );\r\n\r\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\treturn _vector.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given plane intersects with this bounding box.\r\n\t *\r\n\t * @param {Plane} plane - The plane to test.\r\n\t * @return {boolean} Whether the given plane intersects with this bounding box.\r\n\t */\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n\t\tlet min, max;\r\n\r\n\t\tif ( plane.normal.x > 0 ) {\r\n\r\n\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.y > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.z > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given triangle intersects with this bounding box.\r\n\t *\r\n\t * @param {Triangle} triangle - The triangle to test.\r\n\t * @return {boolean} Whether the given triangle intersects with this bounding box.\r\n\t */\r\n\tintersectsTriangle( triangle ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// compute box center and extents\r\n\t\tthis.getCenter( _center );\r\n\t\t_extents.subVectors( this.max, _center );\r\n\r\n\t\t// translate triangle to aabb origin\r\n\t\t_v0.subVectors( triangle.a, _center );\r\n\t\t_v1.subVectors( triangle.b, _center );\r\n\t\t_v2.subVectors( triangle.c, _center );\r\n\r\n\t\t// compute edge vectors for triangle\r\n\t\t_f0.subVectors( _v1, _v0 );\r\n\t\t_f1.subVectors( _v2, _v1 );\r\n\t\t_f2.subVectors( _v0, _v2 );\r\n\r\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\t\tlet axes = [\r\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\r\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\r\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\r\n\t\t];\r\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// test 3 face normals from the aabb\r\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\r\n\t\tif ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// finally testing the face normal of the triangle\r\n\t\t// use already existing triangle edge vectors here\r\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\r\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\r\n\r\n\t\treturn satForAxes( axes, _v0, _v1, _v2, _extents );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clamps the given point within the bounds of this box.\r\n\t *\r\n\t * @param {Vector3} point - The point to clamp.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The clamped point.\r\n\t */\r\n\tclampPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the euclidean distance from any edge of this box to the specified point. If\r\n\t * the given point lies inside of this box, the distance will be `0`.\r\n\t *\r\n\t * @param {Vector3} point - The point to compute the distance to.\r\n\t * @return {number} The euclidean distance.\r\n\t */\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn this.clampPoint( point, _vector ).distanceTo( point );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a bounding sphere that encloses this bounding box.\r\n\t *\r\n\t * @param {Sphere} target - The target sphere that is used to store the method's result.\r\n\t * @return {Sphere} The bounding sphere that encloses this bounding box.\r\n\t */\r\n\tgetBoundingSphere( target ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\ttarget.makeEmpty();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.getCenter( target.center );\r\n\r\n\t\t\ttarget.radius = this.getSize( _vector ).length() * 0.5;\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the intersection of this bounding box and the given one, setting the upper\r\n\t * bound of this box to the lesser of the two boxes' upper bounds and the\r\n\t * lower bound of this box to the greater of the two boxes' lower bounds. If\r\n\t * there's no overlap, makes this box empty.\r\n\t *\r\n\t * @param {Box3} box - The bounding box to intersect with.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tintersect( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\tif ( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the union of this box and another and the given one, setting the upper\r\n\t * bound of this box to the greater of the two boxes' upper bounds and the\r\n\t * lower bound of this box to the lesser of the two boxes' lower bounds.\r\n\t *\r\n\t * @param {Box3} box - The bounding box that will be unioned with this instance.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tunion( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms this bounding box by the given 4x4 transformation matrix.\r\n\t *\r\n\t * @param {Matrix4} matrix - The transformation matrix.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\t// transform of empty box is an empty box.\r\n\t\tif ( this.isEmpty() ) return this;\r\n\r\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\r\n\r\n\t\tthis.setFromPoints( _points );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given offset to both the upper and lower bounds of this bounding box,\r\n\t * effectively moving it in 3D space.\r\n\t *\r\n\t * @param {Vector3} offset - The offset that should be used to translate the bounding box.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this bounding box is equal with the given one.\r\n\t *\r\n\t * @param {Box3} box - The box to test for equality.\r\n\t * @return {boolean} Whether this bounding box is equal with the given one.\r\n\t */\r\n\tequals( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a serialized structure of the bounding box.\r\n\t *\r\n\t * @return {Object} Serialized structure with fields representing the object state.\r\n\t */\r\n\ttoJSON() {\r\n\r\n\t\treturn {\r\n\t\t\tmin: this.min.toArray(),\r\n\t\t\tmax: this.max.toArray()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a serialized structure of the bounding box.\r\n\t *\r\n\t * @param {Object} json - The serialized json to set the box from.\r\n\t * @return {Box3} A reference to this bounding box.\r\n\t */\r\n\tfromJSON( json ) {\r\n\r\n\t\tthis.min.fromArray( json.min );\r\n\t\tthis.max.fromArray( json.max );\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _points = [\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3()\r\n];\r\n\r\nconst _vector = /*@__PURE__*/ new Vector3();\r\n\r\nconst _box = /*@__PURE__*/ new Box3();\r\n\r\n// triangle centered vertices\r\n\r\nconst _v0 = /*@__PURE__*/ new Vector3();\r\nconst _v1 = /*@__PURE__*/ new Vector3();\r\nconst _v2 = /*@__PURE__*/ new Vector3();\r\n\r\n// triangle edge vectors\r\n\r\nconst _f0 = /*@__PURE__*/ new Vector3();\r\nconst _f1 = /*@__PURE__*/ new Vector3();\r\nconst _f2 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _center = /*@__PURE__*/ new Vector3();\r\nconst _extents = /*@__PURE__*/ new Vector3();\r\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\r\nconst _testAxis = /*@__PURE__*/ new Vector3();\r\n\r\nfunction satForAxes( axes, v0, v1, v2, extents ) {\r\n\r\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\r\n\r\n\t\t_testAxis.fromArray( axes, i );\r\n\t\t// project the aabb onto the separating axis\r\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\r\n\t\t// project all 3 vertices of the triangle onto the separating axis\r\n\t\tconst p0 = v0.dot( _testAxis );\r\n\t\tconst p1 = v1.dot( _testAxis );\r\n\t\tconst p2 = v2.dot( _testAxis );\r\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\r\n\r\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\r\n\t\t\t// the axis is separating and we can exit\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nexport { Box3 };\r\n","import { Box3 } from './Box3.js';\r\nimport { Vector3 } from './Vector3.js';\r\n\r\nconst _box = /*@__PURE__*/ new Box3();\r\nconst _v1 = /*@__PURE__*/ new Vector3();\r\nconst _v2 = /*@__PURE__*/ new Vector3();\r\n\r\n/**\r\n * An analytical 3D sphere defined by a center and radius. This class is mainly\r\n * used as a Bounding Sphere for 3D objects.\r\n */\r\nclass Sphere {\r\n\r\n\t/**\r\n\t * Constructs a new sphere.\r\n\t *\r\n\t * @param {Vector3} [center=(0,0,0)] - The center of the sphere\r\n\t * @param {number} [radius=-1] - The radius of the sphere.\r\n\t */\r\n\tconstructor( center = new Vector3(), radius = - 1 ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isSphere = true;\r\n\r\n\t\t/**\r\n\t\t * The center of the sphere\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\t\tthis.center = center;\r\n\r\n\t\t/**\r\n\t\t * The radius of the sphere.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.radius = radius;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the sphere's components by copying the given values.\r\n\t *\r\n\t * @param {Vector3} center - The center.\r\n\t * @param {number} radius - The radius.\r\n\t * @return {Sphere} A reference to this sphere.\r\n\t */\r\n\tset( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the minimum bounding sphere for list of points.\r\n\t * If the optional center point is given, it is used as the sphere's\r\n\t * center. Otherwise, the center of the axis-aligned bounding box\r\n\t * encompassing the points is calculated.\r\n\t *\r\n\t * @param {Array<Vector3>} points - A list of points in 3D space.\r\n\t * @param {Vector3} [optionalCenter] - The center of the sphere.\r\n\t * @return {Sphere} A reference to this sphere.\r\n\t */\r\n\tsetFromPoints( points, optionalCenter ) {\r\n\r\n\t\tconst center = this.center;\r\n\r\n\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_box.setFromPoints( points ).getCenter( center );\r\n\r\n\t\t}\r\n\r\n\t\tlet maxRadiusSq = 0;\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given sphere to this instance.\r\n\t *\r\n\t * @param {Sphere} sphere - The sphere to copy.\r\n\t * @return {Sphere} A reference to this sphere.\r\n\t */\r\n\tcopy( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the sphere is empty (the radius set to a negative number).\r\n\t *\r\n\t * Spheres with a radius of `0` contain only their center point and are not\r\n\t * considered to be empty.\r\n\t *\r\n\t * @return {boolean} Whether this sphere is empty or not.\r\n\t */\r\n\tisEmpty() {\r\n\r\n\t\treturn ( this.radius < 0 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Makes this sphere empty which means in encloses a zero space in 3D.\r\n\t *\r\n\t * @return {Sphere} A reference to this sphere.\r\n\t */\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.center.set( 0, 0, 0 );\r\n\t\tthis.radius = - 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this sphere contains the given point inclusive of\r\n\t * the surface of the sphere.\r\n\t *\r\n\t * @param {Vector3} point - The point to check.\r\n\t * @return {boolean} Whether this sphere contains the given point or not.\r\n\t */\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the closest distance from the boundary of the sphere to the\r\n\t * given point. If the sphere contains the point, the distance will\r\n\t * be negative.\r\n\t *\r\n\t * @param {Vector3} point - The point to compute the distance to.\r\n\t * @return {number} The distance to the point.\r\n\t */\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this sphere intersects with the given one.\r\n\t *\r\n\t * @param {Sphere} sphere - The sphere to test.\r\n\t * @return {boolean} Whether this sphere intersects with the given one or not.\r\n\t */\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\tconst radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this sphere intersects with the given box.\r\n\t *\r\n\t * @param {Box3} box - The box to test.\r\n\t * @return {boolean} Whether this sphere intersects with the given box or not.\r\n\t */\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsSphere( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this sphere intersects with the given plane.\r\n\t *\r\n\t * @param {Plane} plane - The plane to test.\r\n\t * @return {boolean} Whether this sphere intersects with the given plane or not.\r\n\t */\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clamps a point within the sphere. If the point is outside the sphere, it\r\n\t * will clamp it to the closest point on the edge of the sphere. Points\r\n\t * already inside the sphere will not be affected.\r\n\t *\r\n\t * @param {Vector3} point - The plane to clamp.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The clamped point.\r\n\t */\r\n\tclampPoint( point, target ) {\r\n\r\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\ttarget.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\ttarget.sub( this.center ).normalize();\r\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a bounding box that encloses this sphere.\r\n\t *\r\n\t * @param {Box3} target - The target box that is used to store the method's result.\r\n\t * @return {Box3} The bounding box that encloses this sphere.\r\n\t */\r\n\tgetBoundingBox( target ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\t// Empty sphere produces empty bounding box\r\n\t\t\ttarget.makeEmpty();\r\n\t\t\treturn target;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.set( this.center, this.center );\r\n\t\ttarget.expandByScalar( this.radius );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms this sphere with the given 4x4 transformation matrix.\r\n\t *\r\n\t * @param {Matrix4} matrix - The transformation matrix.\r\n\t * @return {Sphere} A reference to this sphere.\r\n\t */\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Translates the sphere's center by the given offset.\r\n\t *\r\n\t * @param {Vector3} offset - The offset.\r\n\t * @return {Sphere} A reference to this sphere.\r\n\t */\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Expands the boundaries of this sphere to include the given point.\r\n\t *\r\n\t * @param {Vector3} point - The point to include.\r\n\t * @return {Sphere} A reference to this sphere.\r\n\t */\r\n\texpandByPoint( point ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\tthis.center.copy( point );\r\n\r\n\t\t\tthis.radius = 0;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t_v1.subVectors( point, this.center );\r\n\r\n\t\tconst lengthSq = _v1.lengthSq();\r\n\r\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\t// calculate the minimal sphere\r\n\r\n\t\t\tconst length = Math.sqrt( lengthSq );\r\n\r\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\r\n\r\n\t\t\tthis.center.addScaledVector( _v1, delta / length );\r\n\r\n\t\t\tthis.radius += delta;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Expands this sphere to enclose both the original sphere and the given sphere.\r\n\t *\r\n\t * @param {Sphere} sphere - The sphere to include.\r\n\t * @return {Sphere} A reference to this sphere.\r\n\t */\r\n\tunion( sphere ) {\r\n\r\n\t\tif ( sphere.isEmpty() ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\tthis.copy( sphere );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.center.equals( sphere.center ) === true ) {\r\n\r\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_v2.subVectors( sphere.center, this.center ).setLength( sphere.radius );\r\n\r\n\t\t\tthis.expandByPoint( _v1.copy( sphere.center ).add( _v2 ) );\r\n\r\n\t\t\tthis.expandByPoint( _v1.copy( sphere.center ).sub( _v2 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this sphere is equal with the given one.\r\n\t *\r\n\t * @param {Sphere} sphere - The sphere to test for equality.\r\n\t * @return {boolean} Whether this bounding sphere is equal with the given one.\r\n\t */\r\n\tequals( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new sphere with copied values from this instance.\r\n\t *\r\n\t * @return {Sphere} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a serialized structure of the bounding sphere.\r\n\t *\r\n\t * @return {Object} Serialized structure with fields representing the object state.\r\n\t */\r\n\ttoJSON() {\r\n\r\n\t\treturn {\r\n\t\t\tradius: this.radius,\r\n\t\t\tcenter: this.center.toArray()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a serialized structure of the bounding sphere.\r\n\t *\r\n\t * @param {Object} json - The serialized json to set the sphere from.\r\n\t * @return {Box3} A reference to this bounding sphere.\r\n\t */\r\n\tfromJSON( json ) {\r\n\r\n\t\tthis.radius = json.radius;\r\n\t\tthis.center.fromArray( json.center );\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Sphere };\r\n","import { Matrix3 } from './Matrix3.js';\r\nimport { Vector3 } from './Vector3.js';\r\n\r\nconst _vector1 = /*@__PURE__*/ new Vector3();\r\nconst _vector2 = /*@__PURE__*/ new Vector3();\r\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\r\n\r\n/**\r\n * A two dimensional surface that extends infinitely in 3D space, represented\r\n * in [Hessian normal form]{@link http://mathworld.wolfram.com/HessianNormalForm.html}\r\n * by a unit length normal vector and a constant.\r\n */\r\nclass Plane {\r\n\r\n\t/**\r\n\t * Constructs a new plane.\r\n\t *\r\n\t * @param {Vector3} [normal=(1,0,0)] - A unit length vector defining the normal of the plane.\r\n\t * @param {number} [constant=0] - The signed distance from the origin to the plane.\r\n\t */\r\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isPlane = true;\r\n\r\n\t\t/**\r\n\t\t * A unit length vector defining the normal of the plane.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\t\tthis.normal = normal;\r\n\r\n\t\t/**\r\n\t\t * The signed distance from the origin to the plane.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.constant = constant;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the plane components by copying the given values.\r\n\t *\r\n\t * @param {Vector3} normal - The normal.\r\n\t * @param {number} constant - The constant.\r\n\t * @return {Plane} A reference to this plane.\r\n\t */\r\n\tset( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the plane components by defining `x`, `y`, `z` as the\r\n\t * plane normal and `w` as the constant.\r\n\t *\r\n\t * @param {number} x - The value for the normal's x component.\r\n\t * @param {number} y - The value for the normal's y component.\r\n\t * @param {number} z - The value for the normal's z component.\r\n\t * @param {number} w - The constant value.\r\n\t * @return {Plane} A reference to this plane.\r\n\t */\r\n\tsetComponents( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the plane from the given normal and coplanar point (that is a point\r\n\t * that lies onto the plane).\r\n\t *\r\n\t * @param {Vector3} normal - The normal.\r\n\t * @param {Vector3} point - A coplanar point.\r\n\t * @return {Plane} A reference to this plane.\r\n\t */\r\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the plane from three coplanar points. The winding order is\r\n\t * assumed to be counter-clockwise, and determines the direction of\r\n\t * the plane normal.\r\n\t *\r\n\t * @param {Vector3} a - The first coplanar point.\r\n\t * @param {Vector3} b - The second coplanar point.\r\n\t * @param {Vector3} c - The third coplanar point.\r\n\t * @return {Plane} A reference to this plane.\r\n\t */\r\n\tsetFromCoplanarPoints( a, b, c ) {\r\n\r\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given plane to this instance.\r\n\t *\r\n\t * @param {Plane} plane - The plane to copy.\r\n\t * @return {Plane} A reference to this plane.\r\n\t */\r\n\tcopy( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Normalizes the plane normal and adjusts the constant accordingly.\r\n\t *\r\n\t * @return {Plane} A reference to this plane.\r\n\t */\r\n\tnormalize() {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Negates both the plane normal and the constant.\r\n\t *\r\n\t * @return {Plane} A reference to this plane.\r\n\t */\r\n\tnegate() {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the signed distance from the given point to this plane.\r\n\t *\r\n\t * @param {Vector3} point - The point to compute the distance for.\r\n\t * @return {number} The signed distance.\r\n\t */\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the signed distance from the given sphere to this plane.\r\n\t *\r\n\t * @param {Sphere} sphere - The sphere to compute the distance for.\r\n\t * @return {number} The signed distance.\r\n\t */\r\n\tdistanceToSphere( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Projects a the given point onto the plane.\r\n\t *\r\n\t * @param {Vector3} point - The point to project.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The projected point on the plane.\r\n\t */\r\n\tprojectPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the intersection point of the passed line and the plane. Returns\r\n\t * `null` if the line does not intersect. Returns the line's starting point if\r\n\t * the line is coplanar with the plane.\r\n\t *\r\n\t * @param {Line3} line - The line to compute the intersection for.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {?Vector3} The intersection point.\r\n\t */\r\n\tintersectLine( line, target ) {\r\n\r\n\t\tconst direction = line.delta( _vector1 );\r\n\r\n\t\tconst denominator = this.normal.dot( direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\treturn target.copy( line.start );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given line segment intersects with (passes through) the plane.\r\n\t *\r\n\t * @param {Line3} line - The line to test.\r\n\t * @return {boolean} Whether the given line segment intersects with the plane or not.\r\n\t */\r\n\tintersectsLine( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tconst startSign = this.distanceToPoint( line.start );\r\n\t\tconst endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given bounding box intersects with the plane.\r\n\t *\r\n\t * @param {Box3} box - The bounding box to test.\r\n\t * @return {boolean} Whether the given bounding box intersects with the plane or not.\r\n\t */\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsPlane( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given bounding sphere intersects with the plane.\r\n\t *\r\n\t * @param {Sphere} sphere - The bounding sphere to test.\r\n\t * @return {boolean} Whether the given bounding sphere intersects with the plane or not.\r\n\t */\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\treturn sphere.intersectsPlane( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a coplanar vector to the plane, by calculating the\r\n\t * projection of the normal at the origin onto the plane.\r\n\t *\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The coplanar point.\r\n\t */\r\n\tcoplanarPoint( target ) {\r\n\r\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Apply a 4x4 matrix to the plane. The matrix must be an affine, homogeneous transform.\r\n\t *\r\n\t * The optional normal matrix can be pre-computed like so:\r\n\t * ```js\r\n\t * const optionalNormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t * ```\r\n\t *\r\n\t * @param {Matrix4} matrix - The transformation matrix.\r\n\t * @param {Matrix4} [optionalNormalMatrix] - A pre-computed normal matrix.\r\n\t * @return {Plane} A reference to this plane.\r\n\t */\r\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\r\n\r\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\r\n\r\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\r\n\r\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\tthis.constant = - referencePoint.dot( normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Translates the plane by the distance defined by the given offset vector.\r\n\t * Note that this only affects the plane constant and will not affect the normal vector.\r\n\t *\r\n\t * @param {Vector3} offset - The offset vector.\r\n\t * @return {Plane} A reference to this plane.\r\n\t */\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.constant -= offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this plane is equal with the given one.\r\n\t *\r\n\t * @param {Plane} plane - The plane to test for equality.\r\n\t * @return {boolean} Whether this plane is equal with the given one.\r\n\t */\r\n\tequals( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new plane with copied values from this instance.\r\n\t *\r\n\t * @return {Plane} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Plane };\r\n","import { WebGLCoordinateSystem, WebGPUCoordinateSystem } from '../constants.js';\r\nimport { Vector2 } from './Vector2.js';\r\nimport { Vector3 } from './Vector3.js';\r\nimport { Sphere } from './Sphere.js';\r\nimport { Plane } from './Plane.js';\r\n\r\nconst _sphere = /*@__PURE__*/ new Sphere();\r\nconst _defaultSpriteCenter = /*@__PURE__*/ new Vector2( 0.5, 0.5 );\r\nconst _vector = /*@__PURE__*/ new Vector3();\r\n\r\n/**\r\n * Frustums are used to determine what is inside the camera's field of view.\r\n * They help speed up the rendering process - objects which lie outside a camera's\r\n * frustum can safely be excluded from rendering.\r\n *\r\n * This class is mainly intended for use internally by a renderer.\r\n */\r\nclass Frustum {\r\n\r\n\t/**\r\n\t * Constructs a new frustum.\r\n\t *\r\n\t * @param {Plane} [p0] - The first plane that encloses the frustum.\r\n\t * @param {Plane} [p1] - The second plane that encloses the frustum.\r\n\t * @param {Plane} [p2] - The third plane that encloses the frustum.\r\n\t * @param {Plane} [p3] - The fourth plane that encloses the frustum.\r\n\t * @param {Plane} [p4] - The fifth plane that encloses the frustum.\r\n\t * @param {Plane} [p5] - The sixth plane that encloses the frustum.\r\n\t */\r\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\r\n\r\n\t\t/**\r\n\t\t * This array holds the planes that enclose the frustum.\r\n\t\t *\r\n\t\t * @type {Array<Plane>}\r\n\t\t */\r\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the frustum planes by copying the given planes.\r\n\t *\r\n\t * @param {Plane} [p0] - The first plane that encloses the frustum.\r\n\t * @param {Plane} [p1] - The second plane that encloses the frustum.\r\n\t * @param {Plane} [p2] - The third plane that encloses the frustum.\r\n\t * @param {Plane} [p3] - The fourth plane that encloses the frustum.\r\n\t * @param {Plane} [p4] - The fifth plane that encloses the frustum.\r\n\t * @param {Plane} [p5] - The sixth plane that encloses the frustum.\r\n\t * @return {Frustum} A reference to this frustum.\r\n\t */\r\n\tset( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given frustum to this instance.\r\n\t *\r\n\t * @param {Frustum} frustum - The frustum to copy.\r\n\t * @return {Frustum} A reference to this frustum.\r\n\t */\r\n\tcopy( frustum ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the frustum planes from the given projection matrix.\r\n\t *\r\n\t * @param {Matrix4} m - The projection matrix.\r\n\t * @param {(WebGLCoordinateSystem|WebGPUCoordinateSystem)} coordinateSystem - The coordinate system.\r\n\t * @param {boolean} [reversedDepth=false] - Whether to use a reversed depth.\r\n\t * @return {Frustum} A reference to this frustum.\r\n\t */\r\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem, reversedDepth = false ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\t\tconst me = m.elements;\r\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\r\n\t\tif ( reversedDepth ) {\r\n\r\n\t\t\tplanes[ 4 ].setComponents( me2, me6, me10, me14 ).normalize(); // far\r\n\t\t\tplanes[ 5 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize(); // near\r\n\r\n\t\t} else {\r\n\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize(); // far\r\n\r\n\t\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize(); // near\r\n\r\n\t\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize(); // near\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the 3D object's bounding sphere is intersecting this frustum.\r\n\t *\r\n\t * Note that the 3D object must have a geometry so that the bounding sphere can be calculated.\r\n\t *\r\n\t * @param {Object3D} object - The 3D object to test.\r\n\t * @return {boolean} Whether the 3D object's bounding sphere is intersecting this frustum or not.\r\n\t */\r\n\tintersectsObject( object ) {\r\n\r\n\t\tif ( object.boundingSphere !== undefined ) {\r\n\r\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\r\n\r\n\t\t\t_sphere.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.intersectsSphere( _sphere );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given sprite is intersecting this frustum.\r\n\t *\r\n\t * @param {Sprite} sprite - The sprite to test.\r\n\t * @return {boolean} Whether the sprite is intersecting this frustum or not.\r\n\t */\r\n\tintersectsSprite( sprite ) {\r\n\r\n\t\t_sphere.center.set( 0, 0, 0 );\r\n\r\n\t\tconst offset = _defaultSpriteCenter.distanceTo( sprite.center );\r\n\r\n\t\t_sphere.radius = 0.7071067811865476 + offset;\r\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\treturn this.intersectsSphere( _sphere );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given bounding sphere is intersecting this frustum.\r\n\t *\r\n\t * @param {Sphere} sphere - The bounding sphere to test.\r\n\t * @return {boolean} Whether the bounding sphere is intersecting this frustum or not.\r\n\t */\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\t\tconst center = sphere.center;\r\n\t\tconst negRadius = - sphere.radius;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given bounding box is intersecting this frustum.\r\n\t *\r\n\t * @param {Box3} box - The bounding box to test.\r\n\t * @return {boolean} Whether the bounding box is intersecting this frustum or not.\r\n\t */\r\n\tintersectsBox( box ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tconst plane = planes[ i ];\r\n\r\n\t\t\t// corner at max distance\r\n\r\n\t\t\t_vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t_vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t_vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\tif ( plane.distanceToPoint( _vector ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given point lies within the frustum.\r\n\t *\r\n\t * @param {Vector3} point - The point to test.\r\n\t * @return {boolean} Whether the point lies within this frustum or not.\r\n\t */\r\n\tcontainsPoint( point ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new frustum with copied values from this instance.\r\n\t *\r\n\t * @return {Frustum} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport { Frustum };\r\n","import { clamp } from './MathUtils.js';\r\n\r\n/**\r\n * Class representing a 4D vector. A 4D vector is an ordered quadruplet of numbers\r\n * (labeled x, y, z and w), which can be used to represent a number of things, such as:\r\n *\r\n * - A point in 4D space.\r\n * - A direction and length in 4D space. In three.js the length will\r\n * always be the Euclidean distance(straight-line distance) from `(0, 0, 0, 0)` to `(x, y, z, w)`\r\n * and the direction is also measured from `(0, 0, 0, 0)` towards `(x, y, z, w)`.\r\n * - Any arbitrary ordered quadruplet of numbers.\r\n *\r\n * There are other things a 4D vector can be used to represent, however these\r\n * are the most common uses in *three.js*.\r\n *\r\n * Iterating through a vector instance will yield its components `(x, y, z, w)` in\r\n * the corresponding order.\r\n * ```js\r\n * const a = new THREE.Vector4( 0, 1, 0, 0 );\r\n *\r\n * //no arguments; will be initialised to (0, 0, 0, 1)\r\n * const b = new THREE.Vector4( );\r\n *\r\n * const d = a.dot( b );\r\n * ```\r\n */\r\nclass Vector4 {\r\n\r\n\t/**\r\n\t * Constructs a new 4D vector.\r\n\t *\r\n\t * @param {number} [x=0] - The x value of this vector.\r\n\t * @param {number} [y=0] - The y value of this vector.\r\n\t * @param {number} [z=0] - The z value of this vector.\r\n\t * @param {number} [w=1] - The w value of this vector.\r\n\t */\r\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tVector4.prototype.isVector4 = true;\r\n\r\n\t\t/**\r\n\t\t * The x value of this vector.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.x = x;\r\n\r\n\t\t/**\r\n\t\t * The y value of this vector.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.y = y;\r\n\r\n\t\t/**\r\n\t\t * The z value of this vector.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.z = z;\r\n\r\n\t\t/**\r\n\t\t * The w value of this vector.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.w = w;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Alias for {@link Vector4#z}.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tget width() {\r\n\r\n\t\treturn this.z;\r\n\r\n\t}\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.z = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Alias for {@link Vector4#w}.\r\n\t *\r\n\t * @type {number}\r\n\t */\r\n\tget height() {\r\n\r\n\t\treturn this.w;\r\n\r\n\t}\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.w = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components.\r\n\t *\r\n\t * @param {number} x - The value of the x component.\r\n\t * @param {number} y - The value of the y component.\r\n\t * @param {number} z - The value of the z component.\r\n\t * @param {number} w - The value of the w component.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tset( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components to the same value.\r\n\t *\r\n\t * @param {number} scalar - The value to set for all vector components.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\tthis.w = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector's x component to the given value\r\n\t *\r\n\t * @param {number} x - The value to set.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector's y component to the given value\r\n\t *\r\n\t * @param {number} y - The value to set.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector's z component to the given value\r\n\t *\r\n\t * @param {number} z - The value to set.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector's w component to the given value\r\n\t *\r\n\t * @param {number} w - The value to set.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsetW( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Allows to set a vector component with an index.\r\n\t *\r\n\t * @param {number} index - The component index. `0` equals to x, `1` equals to y,\r\n\t * `2` equals to z, `3` equals to w.\r\n\t * @param {number} value - The value to set.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the value of the vector component which matches the given index.\r\n\t *\r\n\t * @param {number} index - The component index. `0` equals to x, `1` equals to y,\r\n\t * `2` equals to z, `3` equals to w.\r\n\t * @return {number} A vector component value.\r\n\t */\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new vector with copied values from this instance.\r\n\t *\r\n\t * @return {Vector4} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given vector to this instance.\r\n\t *\r\n\t * @param {Vector3|Vector4} v - The vector to copy.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given vector to this instance.\r\n\t *\r\n\t * @param {Vector4} v - The vector to add.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given scalar value to all components of this instance.\r\n\t *\r\n\t * @param {number} s - The scalar to add.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given vectors and stores the result in this instance.\r\n\t *\r\n\t * @param {Vector4} a - The first vector.\r\n\t * @param {Vector4} b - The second vector.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the given vector scaled by the given factor to this instance.\r\n\t *\r\n\t * @param {Vector4} v - The vector.\r\n\t * @param {number} s - The factor that scales `v`.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the given vector from this instance.\r\n\t *\r\n\t * @param {Vector4} v - The vector to subtract.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the given scalar value from all components of this instance.\r\n\t *\r\n\t * @param {number} s - The scalar to subtract.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Subtracts the given vectors and stores the result in this instance.\r\n\t *\r\n\t * @param {Vector4} a - The first vector.\r\n\t * @param {Vector4} b - The second vector.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the given vector with this instance.\r\n\t *\r\n\t * @param {Vector4} v - The vector to multiply.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\t\tthis.w *= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies the given scalar value with all components of this instance.\r\n\t *\r\n\t * @param {number} scalar - The scalar to multiply.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Multiplies this vector with the given 4x4 matrix.\r\n\t *\r\n\t * @param {Matrix4} m - The 4x4 matrix.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Divides this instance by the given vector.\r\n\t *\r\n\t * @param {Vector4} v - The vector to divide.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\t\tthis.w /= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Divides this vector by the given scalar.\r\n\t *\r\n\t * @param {number} scalar - The scalar to divide.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the x, y and z components of this\r\n\t * vector to the quaternion's axis and w to the angle.\r\n\t *\r\n\t * @param {Quaternion} q - The Quaternion to set.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsetAxisAngleFromQuaternion( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\tthis.x = 1;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = q.x / s;\r\n\t\t\tthis.y = q.y / s;\r\n\t\t\tthis.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the x, y and z components of this\r\n\t * vector to the axis of rotation and w to the angle.\r\n\t *\r\n\t * @param {Matrix4} m - A 4x4 matrix of which the upper left 3x3 matrix is a pure rotation matrix.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsetAxisAngleFromRotationMatrix( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tlet angle, x, y, z; // variables for result\r\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tconst xx = ( m11 + 1 ) / 2;\r\n\t\t\tconst yy = ( m22 + 1 ) / 2;\r\n\t\t\tconst zz = ( m33 + 1 ) / 2;\r\n\t\t\tconst xy = ( m12 + m21 ) / 4;\r\n\t\t\tconst xz = ( m13 + m31 ) / 4;\r\n\t\t\tconst yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the vector components to the position elements of the\r\n\t * given transformation matrix.\r\n\t *\r\n\t * @param {Matrix4} m - The 4x4 matrix.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsetFromMatrixPosition( m ) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 12 ];\r\n\t\tthis.y = e[ 13 ];\r\n\t\tthis.z = e[ 14 ];\r\n\t\tthis.w = e[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x, y, z or w value is greater than the given vector's x, y, z or w\r\n\t * value, replace that value with the corresponding min value.\r\n\t *\r\n\t * @param {Vector4} v - The vector.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x, y, z or w value is less than the given vector's x, y, z or w\r\n\t * value, replace that value with the corresponding max value.\r\n\t *\r\n\t * @param {Vector4} v - The vector.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x, y, z or w value is greater than the max vector's x, y, z or w\r\n\t * value, it is replaced by the corresponding value.\r\n\t * If this vector's x, y, z or w value is less than the min vector's x, y, z or w value,\r\n\t * it is replaced by the corresponding value.\r\n\t *\r\n\t * @param {Vector4} min - The minimum x, y and z values.\r\n\t * @param {Vector4} max - The maximum x, y and z values in the desired range.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = clamp( this.x, min.x, max.x );\r\n\t\tthis.y = clamp( this.y, min.y, max.y );\r\n\t\tthis.z = clamp( this.z, min.z, max.z );\r\n\t\tthis.w = clamp( this.w, min.w, max.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's x, y, z or w values are greater than the max value, they are\r\n\t * replaced by the max value.\r\n\t * If this vector's x, y, z or w values are less than the min value, they are\r\n\t * replaced by the min value.\r\n\t *\r\n\t * @param {number} minVal - The minimum value the components will be clamped to.\r\n\t * @param {number} maxVal - The maximum value the components will be clamped to.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = clamp( this.x, minVal, maxVal );\r\n\t\tthis.y = clamp( this.y, minVal, maxVal );\r\n\t\tthis.z = clamp( this.z, minVal, maxVal );\r\n\t\tthis.w = clamp( this.w, minVal, maxVal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If this vector's length is greater than the max value, it is replaced by\r\n\t * the max value.\r\n\t * If this vector's length is less than the min value, it is replaced by the\r\n\t * min value.\r\n\t *\r\n\t * @param {number} min - The minimum value the vector length will be clamped to.\r\n\t * @param {number} max - The maximum value the vector length will be clamped to.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded down to the nearest integer value.\r\n\t *\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded up to the nearest integer value.\r\n\t *\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded to the nearest integer value\r\n\t *\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The components of this vector are rounded towards zero (up if negative,\r\n\t * down if positive) to an integer value.\r\n\t *\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\troundToZero() {\r\n\r\n\t\tthis.x = Math.trunc( this.x );\r\n\t\tthis.y = Math.trunc( this.y );\r\n\t\tthis.z = Math.trunc( this.z );\r\n\t\tthis.w = Math.trunc( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Inverts this vector - i.e. sets x = -x, y = -y, z = -z, w = -w.\r\n\t *\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the dot product of the given vector with this instance.\r\n\t *\r\n\t * @param {Vector4} v - The vector to compute the dot product with.\r\n\t * @return {number} The result of the dot product.\r\n\t */\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the square of the Euclidean length (straight-line length) from\r\n\t * (0, 0, 0, 0) to (x, y, z, w). If you are comparing the lengths of vectors, you should\r\n\t * compare the length squared instead as it is slightly more efficient to calculate.\r\n\t *\r\n\t * @return {number} The square length of this vector.\r\n\t */\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the  Euclidean length (straight-line length) from (0, 0, 0, 0) to (x, y, z, w).\r\n\t *\r\n\t * @return {number} The length of this vector.\r\n\t */\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the Manhattan length of this vector.\r\n\t *\r\n\t * @return {number} The length of this vector.\r\n\t */\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts this vector to a unit vector - that is, sets it equal to a vector\r\n\t * with the same direction as this one, but with a vector length of `1`.\r\n\t *\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this vector to a vector with the same direction as this one, but\r\n\t * with the specified length.\r\n\t *\r\n\t * @param {number} length - The new length of this vector.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between the given vector and this instance, where\r\n\t * alpha is the percent distance along the line - alpha = 0 will be this\r\n\t * vector, and alpha = 1 will be the given one.\r\n\t *\r\n\t * @param {Vector4} v - The vector to interpolate towards.\r\n\t * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolates between the given vectors, where alpha is the percent\r\n\t * distance along the line - alpha = 0 will be first vector, and alpha = 1 will\r\n\t * be the second one. The result is stored in this instance.\r\n\t *\r\n\t * @param {Vector4} v1 - The first vector.\r\n\t * @param {Vector4} v2 - The second vector.\r\n\t * @param {number} alpha - The interpolation factor, typically in the closed interval `[0, 1]`.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this vector is equal with the given one.\r\n\t *\r\n\t * @param {Vector4} v - The vector to test for equality.\r\n\t * @return {boolean} Whether this vector is equal with the given one.\r\n\t */\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this vector's x value to be `array[ offset ]`, y value to be `array[ offset + 1 ]`,\r\n\t * z value to be `array[ offset + 2 ]`, w value to be `array[ offset + 3 ]`.\r\n\t *\r\n\t * @param {Array<number>} array - An array holding the vector component values.\r\n\t * @param {number} [offset=0] - The offset into the array.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Writes the components of this vector to the given array. If no array is provided,\r\n\t * the method returns a new instance.\r\n\t *\r\n\t * @param {Array<number>} [array=[]] - The target array holding the vector components.\r\n\t * @param {number} [offset=0] - Index of the first element in the array.\r\n\t * @return {Array<number>} The vector components.\r\n\t */\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the components of this vector from the given buffer attribute.\r\n\t *\r\n\t * @param {BufferAttribute} attribute - The buffer attribute holding vector data.\r\n\t * @param {number} index - The index into the attribute.\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\t\tthis.z = attribute.getZ( index );\r\n\t\tthis.w = attribute.getW( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets each component of this vector to a pseudo-random value between `0` and\r\n\t * `1`, excluding `1`.\r\n\t *\r\n\t * @return {Vector4} A reference to this vector.\r\n\t */\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\t\tthis.w = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t\tyield this.z;\r\n\t\tyield this.w;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Vector4 };\r\n","function WebGLAnimation() {\r\n\r\n\tlet context = null;\r\n\tlet isAnimating = false;\r\n\tlet animationLoop = null;\r\n\tlet requestId = null;\r\n\r\n\tfunction onAnimationFrame( time, frame ) {\r\n\r\n\t\tanimationLoop( time, frame );\r\n\r\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tstart: function () {\r\n\r\n\t\t\tif ( isAnimating === true ) return;\r\n\t\t\tif ( animationLoop === null ) return;\r\n\r\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\r\n\r\n\t\t\tisAnimating = true;\r\n\r\n\t\t},\r\n\r\n\t\tstop: function () {\r\n\r\n\t\t\tcontext.cancelAnimationFrame( requestId );\r\n\r\n\t\t\tisAnimating = false;\r\n\r\n\t\t},\r\n\r\n\t\tsetAnimationLoop: function ( callback ) {\r\n\r\n\t\t\tanimationLoop = callback;\r\n\r\n\t\t},\r\n\r\n\t\tsetContext: function ( value ) {\r\n\r\n\t\t\tcontext = value;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\nexport { WebGLAnimation };\r\n","function WebGLAttributes( gl ) {\r\n\r\n\tconst buffers = new WeakMap();\r\n\r\n\tfunction createBuffer( attribute, bufferType ) {\r\n\r\n\t\tconst array = attribute.array;\r\n\t\tconst usage = attribute.usage;\r\n\t\tconst size = array.byteLength;\r\n\r\n\t\tconst buffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( bufferType, buffer );\r\n\t\tgl.bufferData( bufferType, array, usage );\r\n\r\n\t\tattribute.onUploadCallback();\r\n\r\n\t\tlet type;\r\n\r\n\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\ttype = gl.FLOAT;\r\n\r\n\t\t} else if ( typeof Float16Array !== 'undefined' && array instanceof Float16Array ) {\r\n\r\n\t\t\ttype = gl.HALF_FLOAT;\r\n\r\n\t\t} else if ( array instanceof Uint16Array ) {\r\n\r\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\r\n\r\n\t\t\t\ttype = gl.HALF_FLOAT;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( array instanceof Int16Array ) {\r\n\r\n\t\t\ttype = gl.SHORT;\r\n\r\n\t\t} else if ( array instanceof Uint32Array ) {\r\n\r\n\t\t\ttype = gl.UNSIGNED_INT;\r\n\r\n\t\t} else if ( array instanceof Int32Array ) {\r\n\r\n\t\t\ttype = gl.INT;\r\n\r\n\t\t} else if ( array instanceof Int8Array ) {\r\n\r\n\t\t\ttype = gl.BYTE;\r\n\r\n\t\t} else if ( array instanceof Uint8Array ) {\r\n\r\n\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\r\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\r\n\r\n\t\t\ttype = gl.UNSIGNED_BYTE;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tbuffer: buffer,\r\n\t\t\ttype: type,\r\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\r\n\t\t\tversion: attribute.version,\r\n\t\t\tsize: size\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\r\n\r\n\t\tconst array = attribute.array;\r\n\t\tconst updateRanges = attribute.updateRanges;\r\n\r\n\t\tgl.bindBuffer( bufferType, buffer );\r\n\r\n\t\tif ( updateRanges.length === 0 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\t\t\tgl.bufferSubData( bufferType, 0, array );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Before applying update ranges, we merge any adjacent / overlapping\r\n\t\t\t// ranges to reduce load on `gl.bufferSubData`. Empirically, this has led\r\n\t\t\t// to performance improvements for applications which make heavy use of\r\n\t\t\t// update ranges. Likely due to GPU command overhead.\r\n\t\t\t//\r\n\t\t\t// Note that to reduce garbage collection between frames, we merge the\r\n\t\t\t// update ranges in-place. This is safe because this method will clear the\r\n\t\t\t// update ranges once updated.\r\n\r\n\t\t\tupdateRanges.sort( ( a, b ) => a.start - b.start );\r\n\r\n\t\t\t// To merge the update ranges in-place, we work from left to right in the\r\n\t\t\t// existing updateRanges array, merging ranges. This may result in a final\r\n\t\t\t// array which is smaller than the original. This index tracks the last\r\n\t\t\t// index representing a merged range, any data after this index can be\r\n\t\t\t// trimmed once the merge algorithm is completed.\r\n\t\t\tlet mergeIndex = 0;\r\n\r\n\t\t\tfor ( let i = 1; i < updateRanges.length; i ++ ) {\r\n\r\n\t\t\t\tconst previousRange = updateRanges[ mergeIndex ];\r\n\t\t\t\tconst range = updateRanges[ i ];\r\n\r\n\t\t\t\t// We add one here to merge adjacent ranges. This is safe because ranges\r\n\t\t\t\t// operate over positive integers.\r\n\t\t\t\tif ( range.start <= previousRange.start + previousRange.count + 1 ) {\r\n\r\n\t\t\t\t\tpreviousRange.count = Math.max(\r\n\t\t\t\t\t\tpreviousRange.count,\r\n\t\t\t\t\t\trange.start + range.count - previousRange.start\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t++ mergeIndex;\r\n\t\t\t\t\tupdateRanges[ mergeIndex ] = range;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Trim the array to only contain the merged ranges.\r\n\t\t\tupdateRanges.length = mergeIndex + 1;\r\n\r\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst range = updateRanges[ i ];\r\n\r\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\tarray, range.start, range.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tattribute.clearUpdateRanges();\r\n\r\n\t\t}\r\n\r\n\t\tattribute.onUploadCallback();\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction get( attribute ) {\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\treturn buffers.get( attribute );\r\n\r\n\t}\r\n\r\n\tfunction remove( attribute ) {\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\tconst data = buffers.get( attribute );\r\n\r\n\t\tif ( data ) {\r\n\r\n\t\t\tgl.deleteBuffer( data.buffer );\r\n\r\n\t\t\tbuffers.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction update( attribute, bufferType ) {\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n\r\n\t\tif ( attribute.isGLBufferAttribute ) {\r\n\r\n\t\t\tconst cached = buffers.get( attribute );\r\n\r\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\r\n\r\n\t\t\t\tbuffers.set( attribute, {\r\n\t\t\t\t\tbuffer: attribute.buffer,\r\n\t\t\t\t\ttype: attribute.type,\r\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\r\n\t\t\t\t\tversion: attribute.version\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst data = buffers.get( attribute );\r\n\r\n\t\tif ( data === undefined ) {\r\n\r\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\r\n\r\n\t\t} else if ( data.version < attribute.version ) {\r\n\r\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\r\n\r\n\t\t\tdata.version = attribute.version;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tget: get,\r\n\t\tremove: remove,\r\n\t\tupdate: update\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLAttributes };\r\n","import { Vector3 } from '../math/Vector3.js';\r\nimport { Vector2 } from '../math/Vector2.js';\r\nimport { denormalize, normalize } from '../math/MathUtils.js';\r\nimport { StaticDrawUsage, FloatType } from '../constants.js';\r\nimport { fromHalfFloat, toHalfFloat } from '../extras/DataUtils.js';\r\n\r\nconst _vector = /*@__PURE__*/ new Vector3();\r\nconst _vector2 = /*@__PURE__*/ new Vector2();\r\n\r\nlet _id = 0;\r\n\r\n/**\r\n * This class stores data for an attribute (such as vertex positions, face\r\n * indices, normals, colors, UVs, and any custom attributes ) associated with\r\n * a geometry, which allows for more efficient passing of data to the GPU.\r\n *\r\n * When working with vector-like data, the `fromBufferAttribute( attribute, index )`\r\n * helper methods on vector and color class might be helpful. E.g. {@link Vector3#fromBufferAttribute}.\r\n */\r\nclass BufferAttribute {\r\n\r\n\t/**\r\n\t * Constructs a new buffer attribute.\r\n\t *\r\n\t * @param {TypedArray} array - The array holding the attribute data.\r\n\t * @param {number} itemSize - The item size.\r\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\r\n\t */\r\n\tconstructor( array, itemSize, normalized = false ) {\r\n\r\n\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isBufferAttribute = true;\r\n\r\n\t\t/**\r\n\t\t * The ID of the buffer attribute.\r\n\t\t *\r\n\t\t * @name BufferAttribute#id\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\r\n\r\n\t\t/**\r\n\t\t * The name of the buffer attribute.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.name = '';\r\n\r\n\t\t/**\r\n\t\t * The array holding the attribute data. It should have `itemSize * numVertices`\r\n\t\t * elements, where `numVertices` is the number of vertices in the associated geometry.\r\n\t\t *\r\n\t\t * @type {TypedArray}\r\n\t\t */\r\n\t\tthis.array = array;\r\n\r\n\t\t/**\r\n\t\t * The number of values of the array that should be associated with a particular vertex.\r\n\t\t * For instance, if this attribute is storing a 3-component vector (such as a position,\r\n\t\t * normal, or color), then the value should be `3`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.itemSize = itemSize;\r\n\r\n\t\t/**\r\n\t\t * Represents the number of items this buffer attribute stores. It is internally computed\r\n\t\t * by dividing the `array` length by the `itemSize`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\r\n\r\n\t\t/**\r\n\t\t * Applies to integer data only. Indicates how the underlying data in the buffer maps to\r\n\t\t * the values in the GLSL code. For instance, if `array` is an instance of `UInt16Array`,\r\n\t\t * and `normalized` is `true`, the values `0 - +65535` in the array data will be mapped to\r\n\t\t * `0.0f - +1.0f` in the GLSL attribute. If `normalized` is `false`, the values will be converted\r\n\t\t * to floats unmodified, i.e. `65535` becomes `65535.0f`.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.normalized = normalized;\r\n\r\n\t\t/**\r\n\t\t * Defines the intended usage pattern of the data store for optimization purposes.\r\n\t\t *\r\n\t\t * Note: After the initial use of a buffer, its usage cannot be changed. Instead,\r\n\t\t * instantiate a new one and set the desired usage before the next render.\r\n\t\t *\r\n\t\t * @type {(StaticDrawUsage|DynamicDrawUsage|StreamDrawUsage|StaticReadUsage|DynamicReadUsage|StreamReadUsage|StaticCopyUsage|DynamicCopyUsage|StreamCopyUsage)}\r\n\t\t * @default StaticDrawUsage\r\n\t\t */\r\n\t\tthis.usage = StaticDrawUsage;\r\n\r\n\t\t/**\r\n\t\t * This can be used to only update some components of stored vectors (for example, just the\r\n\t\t * component related to color). Use the `addUpdateRange()` function to add ranges to this array.\r\n\t\t *\r\n\t\t * @type {Array<Object>}\r\n\t\t */\r\n\t\tthis.updateRanges = [];\r\n\r\n\t\t/**\r\n\t\t * Configures the bound GPU type for use in shaders.\r\n\t\t *\r\n\t\t * Note: this only has an effect for integer arrays and is not configurable for float arrays.\r\n\t\t * For lower precision float types, use `Float16BufferAttribute`.\r\n\t\t *\r\n\t\t * @type {(FloatType|IntType)}\r\n\t\t * @default FloatType\r\n\t\t */\r\n\t\tthis.gpuType = FloatType;\r\n\r\n\t\t/**\r\n\t\t * A version number, incremented every time the `needsUpdate` is set to `true`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A callback function that is executed after the renderer has transferred the attribute\r\n\t * array data to the GPU.\r\n\t */\r\n\tonUploadCallback() {}\r\n\r\n\t/**\r\n\t * Flag to indicate that this attribute has changed and should be re-sent to\r\n\t * the GPU. Set this to `true` when you modify the value of the array.\r\n\t *\r\n\t * @type {number}\r\n\t * @default false\r\n\t * @param {boolean} value\r\n\t */\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the usage of this buffer attribute.\r\n\t *\r\n\t * @param {(StaticDrawUsage|DynamicDrawUsage|StreamDrawUsage|StaticReadUsage|DynamicReadUsage|StreamReadUsage|StaticCopyUsage|DynamicCopyUsage|StreamCopyUsage)} value - The usage to set.\r\n\t * @return {BufferAttribute} A reference to this buffer attribute.\r\n\t */\r\n\tsetUsage( value ) {\r\n\r\n\t\tthis.usage = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a range of data in the data array to be updated on the GPU.\r\n\t *\r\n\t * @param {number} start - Position at which to start update.\r\n\t * @param {number} count - The number of components to update.\r\n\t */\r\n\taddUpdateRange( start, count ) {\r\n\r\n\t\tthis.updateRanges.push( { start, count } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the update ranges.\r\n\t */\r\n\tclearUpdateRanges() {\r\n\r\n\t\tthis.updateRanges.length = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given buffer attribute to this instance.\r\n\t *\r\n\t * @param {BufferAttribute} source - The buffer attribute to copy.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\t\tthis.count = source.count;\r\n\t\tthis.normalized = source.normalized;\r\n\r\n\t\tthis.usage = source.usage;\r\n\t\tthis.gpuType = source.gpuType;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies a vector from the given buffer attribute to this one. The start\r\n\t * and destination position in the attribute buffers are represented by the\r\n\t * given indices.\r\n\t *\r\n\t * @param {number} index1 - The destination index into this buffer attribute.\r\n\t * @param {BufferAttribute} attribute - The buffer attribute to copy from.\r\n\t * @param {number} index2 - The source index into the given buffer attribute.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tcopyAt( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the given array data into this buffer attribute.\r\n\t *\r\n\t * @param {(TypedArray|Array)} array - The array to copy.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tcopyArray( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the given 3x3 matrix to the given attribute. Works with\r\n\t * item size `2` and `3`.\r\n\t *\r\n\t * @param {Matrix3} m - The matrix to apply.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tif ( this.itemSize === 2 ) {\r\n\r\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\r\n\t\t\t\t_vector2.applyMatrix3( m );\r\n\r\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( this.itemSize === 3 ) {\r\n\r\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t_vector.fromBufferAttribute( this, i );\r\n\t\t\t\t_vector.applyMatrix3( m );\r\n\r\n\t\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the given 4x4 matrix to the given attribute. Only works with\r\n\t * item size `3`.\r\n\t *\r\n\t * @param {Matrix4} m - The matrix to apply.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector.applyMatrix4( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the given 3x3 normal matrix to the given attribute. Only works with\r\n\t * item size `3`.\r\n\t *\r\n\t * @param {Matrix3} m - The normal matrix to apply.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tapplyNormalMatrix( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector.applyNormalMatrix( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the given 4x4 matrix to the given attribute. Only works with\r\n\t * item size `3` and with direction vectors.\r\n\t *\r\n\t * @param {Matrix4} m - The matrix to apply.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\ttransformDirection( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector.transformDirection( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector.x, _vector.y, _vector.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given array data in the buffer attribute.\r\n\t *\r\n\t * @param {(TypedArray|Array)} value - The array data to set.\r\n\t * @param {number} [offset=0] - The offset in this buffer attribute's array.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tset( value, offset = 0 ) {\r\n\r\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the given component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @param {number} component - The component index.\r\n\t * @return {number} The returned value.\r\n\t */\r\n\tgetComponent( index, component ) {\r\n\r\n\t\tlet value = this.array[ index * this.itemSize + component ];\r\n\r\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given value to the given component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @param {number} component - The component index.\r\n\t * @param {number} value - The value to set.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tsetComponent( index, component, value ) {\r\n\r\n\t\tif ( this.normalized ) value = normalize( value, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + component ] = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the x component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @return {number} The x component.\r\n\t */\r\n\tgetX( index ) {\r\n\r\n\t\tlet x = this.array[ index * this.itemSize ];\r\n\r\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\r\n\r\n\t\treturn x;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the x component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @param {number} x - The value to set.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tsetX( index, x ) {\r\n\r\n\t\tif ( this.normalized ) x = normalize( x, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the y component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @return {number} The y component.\r\n\t */\r\n\tgetY( index ) {\r\n\r\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\r\n\r\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\r\n\r\n\t\treturn y;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the y component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @param {number} y - The value to set.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tsetY( index, y ) {\r\n\r\n\t\tif ( this.normalized ) y = normalize( y, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the z component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @return {number} The z component.\r\n\t */\r\n\tgetZ( index ) {\r\n\r\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\r\n\r\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\r\n\r\n\t\treturn z;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the z component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @param {number} z - The value to set.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tsetZ( index, z ) {\r\n\r\n\t\tif ( this.normalized ) z = normalize( z, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the w component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @return {number} The w component.\r\n\t */\r\n\tgetW( index ) {\r\n\r\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\r\n\r\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\r\n\r\n\t\treturn w;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the w component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @param {number} w - The value to set.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tsetW( index, w ) {\r\n\r\n\t\tif ( this.normalized ) w = normalize( w, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the x and y component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @param {number} x - The value for the x component to set.\r\n\t * @param {number} y - The value for the y component to set.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tsetXY( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the x, y and z component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @param {number} x - The value for the x component to set.\r\n\t * @param {number} y - The value for the y component to set.\r\n\t * @param {number} z - The value for the z component to set.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tsetXYZ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the x, y, z and w component of the vector at the given index.\r\n\t *\r\n\t * @param {number} index - The index into the buffer attribute.\r\n\t * @param {number} x - The value for the x component to set.\r\n\t * @param {number} y - The value for the y component to set.\r\n\t * @param {number} z - The value for the z component to set.\r\n\t * @param {number} w - The value for the w component to set.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tsetXYZW( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\t\t\tw = normalize( w, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given callback function that is executed after the Renderer has transferred\r\n\t * the attribute array data to the GPU. Can be used to perform clean-up operations after\r\n\t * the upload when attribute data are not needed anymore on the CPU side.\r\n\t *\r\n\t * @param {Function} callback - The `onUpload()` callback.\r\n\t * @return {BufferAttribute} A reference to this instance.\r\n\t */\r\n\tonUpload( callback ) {\r\n\r\n\t\tthis.onUploadCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new buffer attribute with copied values from this instance.\r\n\t *\r\n\t * @return {BufferAttribute} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes the buffer attribute into JSON.\r\n\t *\r\n\t * @return {Object} A JSON object representing the serialized buffer attribute.\r\n\t */\r\n\ttoJSON() {\r\n\r\n\t\tconst data = {\r\n\t\t\titemSize: this.itemSize,\r\n\t\t\ttype: this.array.constructor.name,\r\n\t\t\tarray: Array.from( this.array ),\r\n\t\t\tnormalized: this.normalized\r\n\t\t};\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Convenient class that can be used when creating a `Int8` buffer attribute with\r\n * a plain `Array` instance.\r\n *\r\n * @augments BufferAttribute\r\n */\r\nclass Int8BufferAttribute extends BufferAttribute {\r\n\r\n\t/**\r\n\t * Constructs a new buffer attribute.\r\n\t *\r\n\t * @param {(Array<number>|Int8Array)} array - The array holding the attribute data.\r\n\t * @param {number} itemSize - The item size.\r\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\r\n\t */\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Convenient class that can be used when creating a `UInt8` buffer attribute with\r\n * a plain `Array` instance.\r\n *\r\n * @augments BufferAttribute\r\n */\r\nclass Uint8BufferAttribute extends BufferAttribute {\r\n\r\n\t/**\r\n\t * Constructs a new buffer attribute.\r\n\t *\r\n\t * @param {(Array<number>|Uint8Array)} array - The array holding the attribute data.\r\n\t * @param {number} itemSize - The item size.\r\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\r\n\t */\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Convenient class that can be used when creating a `UInt8Clamped` buffer attribute with\r\n * a plain `Array` instance.\r\n *\r\n * @augments BufferAttribute\r\n */\r\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\r\n\r\n\t/**\r\n\t * Constructs a new buffer attribute.\r\n\t *\r\n\t * @param {(Array<number>|Uint8ClampedArray)} array - The array holding the attribute data.\r\n\t * @param {number} itemSize - The item size.\r\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\r\n\t */\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Convenient class that can be used when creating a `Int16` buffer attribute with\r\n * a plain `Array` instance.\r\n *\r\n * @augments BufferAttribute\r\n */\r\nclass Int16BufferAttribute extends BufferAttribute {\r\n\r\n\t/**\r\n\t * Constructs a new buffer attribute.\r\n\t *\r\n\t * @param {(Array<number>|Int16Array)} array - The array holding the attribute data.\r\n\t * @param {number} itemSize - The item size.\r\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\r\n\t */\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Convenient class that can be used when creating a `UInt16` buffer attribute with\r\n * a plain `Array` instance.\r\n *\r\n * @augments BufferAttribute\r\n */\r\nclass Uint16BufferAttribute extends BufferAttribute {\r\n\r\n\t/**\r\n\t * Constructs a new buffer attribute.\r\n\t *\r\n\t * @param {(Array<number>|Uint16Array)} array - The array holding the attribute data.\r\n\t * @param {number} itemSize - The item size.\r\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\r\n\t */\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Convenient class that can be used when creating a `Int32` buffer attribute with\r\n * a plain `Array` instance.\r\n *\r\n * @augments BufferAttribute\r\n */\r\nclass Int32BufferAttribute extends BufferAttribute {\r\n\r\n\t/**\r\n\t * Constructs a new buffer attribute.\r\n\t *\r\n\t * @param {(Array<number>|Int32Array)} array - The array holding the attribute data.\r\n\t * @param {number} itemSize - The item size.\r\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\r\n\t */\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Convenient class that can be used when creating a `UInt32` buffer attribute with\r\n * a plain `Array` instance.\r\n *\r\n * @augments BufferAttribute\r\n */\r\nclass Uint32BufferAttribute extends BufferAttribute {\r\n\r\n\t/**\r\n\t * Constructs a new buffer attribute.\r\n\t *\r\n\t * @param {(Array<number>|Uint32Array)} array - The array holding the attribute data.\r\n\t * @param {number} itemSize - The item size.\r\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\r\n\t */\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Convenient class that can be used when creating a `Float16` buffer attribute with\r\n * a plain `Array` instance.\r\n *\r\n * This class automatically converts to and from FP16 via `Uint16Array` since `Float16Array`\r\n * browser support is still problematic.\r\n *\r\n * @augments BufferAttribute\r\n */\r\nclass Float16BufferAttribute extends BufferAttribute {\r\n\r\n\t/**\r\n\t * Constructs a new buffer attribute.\r\n\t *\r\n\t * @param {(Array<number>|Uint16Array)} array - The array holding the attribute data.\r\n\t * @param {number} itemSize - The item size.\r\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\r\n\t */\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\r\n\r\n\t\tthis.isFloat16BufferAttribute = true;\r\n\r\n\t}\r\n\r\n\tgetX( index ) {\r\n\r\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\r\n\r\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\r\n\r\n\t\treturn x;\r\n\r\n\t}\r\n\r\n\tsetX( index, x ) {\r\n\r\n\t\tif ( this.normalized ) x = normalize( x, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetY( index ) {\r\n\r\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\r\n\r\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\r\n\r\n\t\treturn y;\r\n\r\n\t}\r\n\r\n\tsetY( index, y ) {\r\n\r\n\t\tif ( this.normalized ) y = normalize( y, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetZ( index ) {\r\n\r\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\r\n\r\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\r\n\r\n\t\treturn z;\r\n\r\n\t}\r\n\r\n\tsetZ( index, z ) {\r\n\r\n\t\tif ( this.normalized ) z = normalize( z, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetW( index ) {\r\n\r\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\r\n\r\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\r\n\r\n\t\treturn w;\r\n\r\n\t}\r\n\r\n\tsetW( index, w ) {\r\n\r\n\t\tif ( this.normalized ) w = normalize( w, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXY( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\r\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\r\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\r\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZW( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\t\t\tw = normalize( w, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\r\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\r\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\r\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Convenient class that can be used when creating a `Float32` buffer attribute with\r\n * a plain `Array` instance.\r\n *\r\n * @augments BufferAttribute\r\n */\r\nclass Float32BufferAttribute extends BufferAttribute {\r\n\r\n\t/**\r\n\t * Constructs a new buffer attribute.\r\n\t *\r\n\t * @param {(Array<number>|Float32Array)} array - The array holding the attribute data.\r\n\t * @param {number} itemSize - The item size.\r\n\t * @param {boolean} [normalized=false] - Whether the data are normalized or not.\r\n\t */\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\n//\r\n\r\nexport {\r\n\tFloat32BufferAttribute,\r\n\tFloat16BufferAttribute,\r\n\tUint32BufferAttribute,\r\n\tInt32BufferAttribute,\r\n\tUint16BufferAttribute,\r\n\tInt16BufferAttribute,\r\n\tUint8ClampedBufferAttribute,\r\n\tUint8BufferAttribute,\r\n\tInt8BufferAttribute,\r\n\tBufferAttribute\r\n};\r\n","import { Vector3 } from '../math/Vector3.js';\r\nimport { Vector2 } from '../math/Vector2.js';\r\nimport { Box3 } from '../math/Box3.js';\r\nimport { EventDispatcher } from './EventDispatcher.js';\r\nimport { BufferAttribute, Float32BufferAttribute, Uint16BufferAttribute, Uint32BufferAttribute } from './BufferAttribute.js';\r\nimport { Sphere } from '../math/Sphere.js';\r\nimport { Object3D } from './Object3D.js';\r\nimport { Matrix4 } from '../math/Matrix4.js';\r\nimport { Matrix3 } from '../math/Matrix3.js';\r\nimport { generateUUID } from '../math/MathUtils.js';\r\nimport { arrayNeedsUint32, warn, error } from '../utils.js';\r\n\r\nlet _id = 0;\r\n\r\nconst _m1 = /*@__PURE__*/ new Matrix4();\r\nconst _obj = /*@__PURE__*/ new Object3D();\r\nconst _offset = /*@__PURE__*/ new Vector3();\r\nconst _box = /*@__PURE__*/ new Box3();\r\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\r\nconst _vector = /*@__PURE__*/ new Vector3();\r\n\r\n/**\r\n * A representation of mesh, line, or point geometry. Includes vertex\r\n * positions, face indices, normals, colors, UVs, and custom attributes\r\n * within buffers, reducing the cost of passing all this data to the GPU.\r\n *\r\n * ```js\r\n * const geometry = new THREE.BufferGeometry();\r\n * // create a simple square shape. We duplicate the top left and bottom right\r\n * // vertices because each vertex needs to appear once per triangle.\r\n * const vertices = new Float32Array( [\r\n * \t-1.0, -1.0,  1.0, // v0\r\n * \t 1.0, -1.0,  1.0, // v1\r\n * \t 1.0,  1.0,  1.0, // v2\r\n *\r\n * \t 1.0,  1.0,  1.0, // v3\r\n * \t-1.0,  1.0,  1.0, // v4\r\n * \t-1.0, -1.0,  1.0  // v5\r\n * ] );\r\n * // itemSize = 3 because there are 3 values (components) per vertex\r\n * geometry.setAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n * const material = new THREE.MeshBasicMaterial( { color: 0xff0000 } );\r\n * const mesh = new THREE.Mesh( geometry, material );\r\n * ```\r\n *\r\n * @augments EventDispatcher\r\n */\r\nclass BufferGeometry extends EventDispatcher {\r\n\r\n\t/**\r\n\t * Constructs a new geometry.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isBufferGeometry = true;\r\n\r\n\t\t/**\r\n\t\t * The ID of the geometry.\r\n\t\t *\r\n\t\t * @name BufferGeometry#id\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\r\n\r\n\t\t/**\r\n\t\t * The UUID of the geometry.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\t/**\r\n\t\t * The name of the geometry.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\r\n\t\t/**\r\n\t\t * Allows for vertices to be re-used across multiple triangles; this is\r\n\t\t * called using \"indexed triangles\". Each triangle is associated with the\r\n\t\t * indices of three vertices. This attribute therefore stores the index of\r\n\t\t * each vertex for each triangular face. If this attribute is not set, the\r\n\t\t * renderer assumes that each three contiguous positions represent a single triangle.\r\n\t\t *\r\n\t\t * @type {?BufferAttribute}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.index = null;\r\n\r\n\t\t/**\r\n\t\t * A (storage) buffer attribute which was generated with a compute shader and\r\n\t\t * now defines indirect draw calls.\r\n\t\t *\r\n\t\t * Can only be used with {@link WebGPURenderer} and a WebGPU backend.\r\n\t\t *\r\n\t\t * @type {?BufferAttribute}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.indirect = null;\r\n\r\n\t\t/**\r\n\t\t * This dictionary has as id the name of the attribute to be set and as value\r\n\t\t * the buffer attribute to set it to. Rather than accessing this property directly,\r\n\t\t * use `setAttribute()` and `getAttribute()` to access attributes of this geometry.\r\n\t\t *\r\n\t\t * @type {Object<string,(BufferAttribute|InterleavedBufferAttribute)>}\r\n\t\t */\r\n\t\tthis.attributes = {};\r\n\r\n\t\t/**\r\n\t\t * This dictionary holds the morph targets of the geometry.\r\n\t\t *\r\n\t\t * Note: Once the geometry has been rendered, the morph attribute data cannot\r\n\t\t * be changed. You will have to call `dispose()?, and create a new geometry instance.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.morphAttributes = {};\r\n\r\n\t\t/**\r\n\t\t * Used to control the morph target behavior; when set to `true`, the morph\r\n\t\t * target data is treated as relative offsets, rather than as absolute\r\n\t\t * positions/normals.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.morphTargetsRelative = false;\r\n\r\n\t\t/**\r\n\t\t * Split the geometry into groups, each of which will be rendered in a\r\n\t\t * separate draw call. This allows an array of materials to be used with the geometry.\r\n\t\t *\r\n\t\t * Use `addGroup()` and `clearGroups()` to edit groups, rather than modifying this array directly.\r\n\t\t *\r\n\t\t * Every vertex and index must belong to exactly one group — groups must not share vertices or\r\n\t\t * indices, and must not leave vertices or indices unused.\r\n\t\t *\r\n\t\t * @type {Array<Object>}\r\n\t\t */\r\n\t\tthis.groups = [];\r\n\r\n\t\t/**\r\n\t\t * Bounding box for the geometry which can be calculated with `computeBoundingBox()`.\r\n\t\t *\r\n\t\t * @type {?Box3}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.boundingBox = null;\r\n\r\n\t\t/**\r\n\t\t * Bounding sphere for the geometry which can be calculated with `computeBoundingSphere()`.\r\n\t\t *\r\n\t\t * @type {?Sphere}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\t/**\r\n\t\t * Determines the part of the geometry to render. This should not be set directly,\r\n\t\t * instead use `setDrawRange()`.\r\n\t\t *\r\n\t\t * @type {{start:number,count:number}}\r\n\t\t */\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n\t\t/**\r\n\t\t * An object that can be used to store custom data about the geometry.\r\n\t\t * It should not hold references to functions as these will not be cloned.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index of this geometry.\r\n\t *\r\n\t * @return {?BufferAttribute} The index. Returns `null` if no index is defined.\r\n\t */\r\n\tgetIndex() {\r\n\r\n\t\treturn this.index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given index to this geometry.\r\n\t *\r\n\t * @param {Array<number>|BufferAttribute} index - The index to set.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tsetIndex( index ) {\r\n\r\n\t\tif ( Array.isArray( index ) ) {\r\n\r\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.index = index;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given indirect attribute to this geometry.\r\n\t *\r\n\t * @param {BufferAttribute} indirect - The attribute holding indirect draw calls.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tsetIndirect( indirect ) {\r\n\r\n\t\tthis.indirect = indirect;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the indirect attribute of this geometry.\r\n\t *\r\n\t * @return {?BufferAttribute} The indirect attribute. Returns `null` if no indirect attribute is defined.\r\n\t */\r\n\tgetIndirect() {\r\n\r\n\t\treturn this.indirect;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the buffer attribute for the given name.\r\n\t *\r\n\t * @param {string} name - The attribute name.\r\n\t * @return {BufferAttribute|InterleavedBufferAttribute|undefined} The buffer attribute.\r\n\t * Returns `undefined` if not attribute has been found.\r\n\t */\r\n\tgetAttribute( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the given attribute for the given name.\r\n\t *\r\n\t * @param {string} name - The attribute name.\r\n\t * @param {BufferAttribute|InterleavedBufferAttribute} attribute - The attribute to set.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tsetAttribute( name, attribute ) {\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes the attribute for the given name.\r\n\t *\r\n\t * @param {string} name - The attribute name to delete.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tdeleteAttribute( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this geometry has an attribute for the given name.\r\n\t *\r\n\t * @param {string} name - The attribute name.\r\n\t * @return {boolean} Whether this geometry has an attribute for the given name or not.\r\n\t */\r\n\thasAttribute( name ) {\r\n\r\n\t\treturn this.attributes[ name ] !== undefined;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a group to this geometry.\r\n\t *\r\n\t * @param {number} start - The first element in this draw call. That is the first\r\n\t * vertex for non-indexed geometry, otherwise the first triangle index.\r\n\t * @param {number} count - Specifies how many vertices (or indices) are part of this group.\r\n\t * @param {number} [materialIndex=0] - The material array index to use.\r\n\t */\r\n\taddGroup( start, count, materialIndex = 0 ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all groups.\r\n\t */\r\n\tclearGroups() {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the draw range for this geometry.\r\n\t *\r\n\t * @param {number} start - The first vertex for non-indexed geometry, otherwise the first triangle index.\r\n\t * @param {number} count - For non-indexed BufferGeometry, `count` is the number of vertices to render.\r\n\t * For indexed BufferGeometry, `count` is the number of indices to render.\r\n\t */\r\n\tsetDrawRange( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the given 4x4 transformation matrix to the geometry.\r\n\t *\r\n\t * @param {Matrix4} matrix - The matrix to apply.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tconst position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tposition.applyMatrix4( matrix );\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\r\n\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst tangent = this.attributes.tangent;\r\n\r\n\t\tif ( tangent !== undefined ) {\r\n\r\n\t\t\ttangent.transformDirection( matrix );\r\n\r\n\t\t\ttangent.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the rotation represented by the Quaternion to the geometry.\r\n\t *\r\n\t * @param {Quaternion} q - The Quaternion to apply.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\t_m1.makeRotationFromQuaternion( q );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the geometry about the X axis. This is typically done as a one time\r\n\t * operation, and not during a loop. Use {@link Object3D#rotation} for typical\r\n\t * real-time mesh rotation.\r\n\t *\r\n\t * @param {number} angle - The angle in radians.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\trotateX( angle ) {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\t_m1.makeRotationX( angle );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the geometry about the Y axis. This is typically done as a one time\r\n\t * operation, and not during a loop. Use {@link Object3D#rotation} for typical\r\n\t * real-time mesh rotation.\r\n\t *\r\n\t * @param {number} angle - The angle in radians.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\trotateY( angle ) {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\t_m1.makeRotationY( angle );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the geometry about the Z axis. This is typically done as a one time\r\n\t * operation, and not during a loop. Use {@link Object3D#rotation} for typical\r\n\t * real-time mesh rotation.\r\n\t *\r\n\t * @param {number} angle - The angle in radians.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\trotateZ( angle ) {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\t_m1.makeRotationZ( angle );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Translates the geometry. This is typically done as a one time\r\n\t * operation, and not during a loop. Use {@link Object3D#position} for typical\r\n\t * real-time mesh rotation.\r\n\t *\r\n\t * @param {number} x - The x offset.\r\n\t * @param {number} y - The y offset.\r\n\t * @param {number} z - The z offset.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\ttranslate( x, y, z ) {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\t_m1.makeTranslation( x, y, z );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the geometry. This is typically done as a one time\r\n\t * operation, and not during a loop. Use {@link Object3D#scale} for typical\r\n\t * real-time mesh rotation.\r\n\t *\r\n\t * @param {number} x - The x scale.\r\n\t * @param {number} y - The y scale.\r\n\t * @param {number} z - The z scale.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tscale( x, y, z ) {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\t_m1.makeScale( x, y, z );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotates the geometry to face a point in 3D space. This is typically done as a one time\r\n\t * operation, and not during a loop. Use {@link Object3D#lookAt} for typical\r\n\t * real-time mesh rotation.\r\n\t *\r\n\t * @param {Vector3} vector - The target point.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tlookAt( vector ) {\r\n\r\n\t\t_obj.lookAt( vector );\r\n\r\n\t\t_obj.updateMatrix();\r\n\r\n\t\tthis.applyMatrix4( _obj.matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Center the geometry based on its bounding box.\r\n\t *\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tcenter() {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tthis.boundingBox.getCenter( _offset ).negate();\r\n\r\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines a geometry by creating a `position` attribute based on the given array of points. The array\r\n\t * can hold 2D or 3D vectors. When using two-dimensional data, the `z` coordinate for all vertices is\r\n\t * set to `0`.\r\n\t *\r\n\t * If the method is used with an existing `position` attribute, the vertex data are overwritten with the\r\n\t * data from the array. The length of the array must match the vertex count.\r\n\t *\r\n\t * @param {Array<Vector2>|Array<Vector3>} points - The points.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tconst positionAttribute = this.getAttribute( 'position' );\r\n\r\n\t\tif ( positionAttribute === undefined ) {\r\n\r\n\t\t\tconst position = [];\r\n\r\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst point = points[ i ];\r\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\r\n\r\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst point = points[ i ];\r\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( points.length > positionAttribute.count ) {\r\n\r\n\t\t\t\twarn( 'BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpositionAttribute.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the bounding box of the geometry, and updates the `boundingBox` member.\r\n\t * The bounding box is not computed by the engine; it must be computed by your app.\r\n\t * You may need to recompute the bounding box if the geometry vertices are modified.\r\n\t */\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tconst position = this.attributes.position;\r\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\tif ( position && position.isGLBufferAttribute ) {\r\n\r\n\t\t\terror( 'BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\r\n\r\n\t\t\tthis.boundingBox.set(\r\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\r\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\r\n\t\t\t);\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\r\n\r\n\t\t\t// process morph attributes if present\r\n\r\n\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t_box.setFromBufferAttribute( morphAttribute );\r\n\r\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.min, _box.min );\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\r\n\r\n\t\t\t\t\t\t_vector.addVectors( this.boundingBox.max, _box.max );\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.min );\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box.max );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\t}\r\n\r\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\terror( 'BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the bounding sphere of the geometry, and updates the `boundingSphere` member.\r\n\t * The engine automatically computes the bounding sphere when it is needed, e.g., for ray casting or view frustum culling.\r\n\t * You may need to recompute the bounding sphere if the geometry vertices are modified.\r\n\t */\r\n\tcomputeBoundingSphere() {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tconst position = this.attributes.position;\r\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\tif ( position && position.isGLBufferAttribute ) {\r\n\r\n\t\t\terror( 'BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\r\n\r\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( position ) {\r\n\r\n\t\t\t// first, find the center of the bounding sphere\r\n\r\n\t\t\tconst center = this.boundingSphere.center;\r\n\r\n\t\t\t_box.setFromBufferAttribute( position );\r\n\r\n\t\t\t// process morph attributes if present\r\n\r\n\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\r\n\r\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\t_vector.addVectors( _box.min, _boxMorphTargets.min );\r\n\t\t\t\t\t\t_box.expandByPoint( _vector );\r\n\r\n\t\t\t\t\t\t_vector.addVectors( _box.max, _boxMorphTargets.max );\r\n\t\t\t\t\t\t_box.expandByPoint( _vector );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.min );\r\n\t\t\t\t\t\t_box.expandByPoint( _boxMorphTargets.max );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_box.getCenter( center );\r\n\r\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\r\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\tlet maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t_vector.fromBufferAttribute( position, i );\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// process morph attributes if present\r\n\r\n\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t_vector.fromBufferAttribute( morphAttribute, j );\r\n\r\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\r\n\t\t\t\t\t\t\t_vector.add( _offset );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\terror( 'BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates and adds a tangent attribute to this geometry.\r\n\t *\r\n\t * The computation is only supported for indexed geometries and if position, normal, and uv attributes\r\n\t * are defined. When using a tangent space normal map, prefer the MikkTSpace algorithm provided by\r\n\t * {@link BufferGeometryUtils#computeMikkTSpaceTangents} instead.\r\n\t */\r\n\tcomputeTangents() {\r\n\r\n\t\tconst index = this.index;\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// (per vertex tangents)\r\n\r\n\t\tif ( index === null ||\r\n\t\t\t attributes.position === undefined ||\r\n\t\t\t attributes.normal === undefined ||\r\n\t\t\t attributes.uv === undefined ) {\r\n\r\n\t\t\terror( 'BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst positionAttribute = attributes.position;\r\n\t\tconst normalAttribute = attributes.normal;\r\n\t\tconst uvAttribute = attributes.uv;\r\n\r\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\r\n\r\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\r\n\r\n\t\tconst tan1 = [], tan2 = [];\r\n\r\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\r\n\r\n\t\t\ttan1[ i ] = new Vector3();\r\n\t\t\ttan2[ i ] = new Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tconst vA = new Vector3(),\r\n\t\t\tvB = new Vector3(),\r\n\t\t\tvC = new Vector3(),\r\n\r\n\t\t\tuvA = new Vector2(),\r\n\t\t\tuvB = new Vector2(),\r\n\t\t\tuvC = new Vector2(),\r\n\r\n\t\t\tsdir = new Vector3(),\r\n\t\t\ttdir = new Vector3();\r\n\r\n\t\tfunction handleTriangle( a, b, c ) {\r\n\r\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\r\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\r\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\r\n\r\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\r\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\r\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\r\n\r\n\t\t\tvB.sub( vA );\r\n\t\t\tvC.sub( vA );\r\n\r\n\t\t\tuvB.sub( uvA );\r\n\t\t\tuvC.sub( uvA );\r\n\r\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\r\n\r\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\r\n\r\n\t\t\tif ( ! isFinite( r ) ) return;\r\n\r\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\r\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tlet groups = this.groups;\r\n\r\n\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\tgroups = [ {\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tcount: index.count\r\n\t\t\t} ];\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\r\n\t\t\tconst start = group.start;\r\n\t\t\tconst count = group.count;\r\n\r\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\thandleTriangle(\r\n\t\t\t\t\tindex.getX( j + 0 ),\r\n\t\t\t\t\tindex.getX( j + 1 ),\r\n\t\t\t\t\tindex.getX( j + 2 )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\r\n\t\tconst n = new Vector3(), n2 = new Vector3();\r\n\r\n\t\tfunction handleVertex( v ) {\r\n\r\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\r\n\t\t\tn2.copy( n );\r\n\r\n\t\t\tconst t = tan1[ v ];\r\n\r\n\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\ttmp.copy( t );\r\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t// Calculate handedness\r\n\r\n\t\t\ttmp2.crossVectors( n2, t );\r\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\r\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\r\n\r\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\r\n\t\t\tconst start = group.start;\r\n\t\t\tconst count = group.count;\r\n\r\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\r\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\r\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes vertex normals for the given vertex data. For indexed geometries, the method sets\r\n\t * each vertex normal to be the average of the face normals of the faces that share that vertex.\r\n\t * For non-indexed geometries, vertices are not shared, and the method sets each vertex normal\r\n\t * to be the same as the face normal.\r\n\t */\r\n\tcomputeVertexNormals() {\r\n\r\n\t\tconst index = this.index;\r\n\t\tconst positionAttribute = this.getAttribute( 'position' );\r\n\r\n\t\tif ( positionAttribute !== undefined ) {\r\n\r\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\r\n\r\n\t\t\tif ( normalAttribute === undefined ) {\r\n\r\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\r\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\r\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\r\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tconst vA = index.getX( i + 0 );\r\n\t\t\t\t\tconst vB = index.getX( i + 1 );\r\n\t\t\t\t\tconst vC = index.getX( i + 2 );\r\n\r\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\r\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\r\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\r\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\r\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\r\n\r\n\t\t\t\t\tnA.add( cb );\r\n\t\t\t\t\tnB.add( cb );\r\n\t\t\t\t\tnC.add( cb );\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\r\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\r\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tnormalAttribute.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Ensures every normal vector in a geometry will have a magnitude of `1`. This will\r\n\t * correct lighting on the geometry surfaces.\r\n\t */\r\n\tnormalizeNormals() {\r\n\r\n\t\tconst normals = this.attributes.normal;\r\n\r\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\r\n\r\n\t\t\t_vector.fromBufferAttribute( normals, i );\r\n\r\n\t\t\t_vector.normalize();\r\n\r\n\t\t\tnormals.setXYZ( i, _vector.x, _vector.y, _vector.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a new non-index version of this indexed geometry. If the geometry\r\n\t * is already non-indexed, the method is a NOOP.\r\n\t *\r\n\t * @return {BufferGeometry} The non-indexed version of this indexed geometry.\r\n\t */\r\n\ttoNonIndexed() {\r\n\r\n\t\tfunction convertBufferAttribute( attribute, indices ) {\r\n\r\n\t\t\tconst array = attribute.array;\r\n\t\t\tconst itemSize = attribute.itemSize;\r\n\t\t\tconst normalized = attribute.normalized;\r\n\r\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\r\n\r\n\t\t\tlet index = 0, index2 = 0;\r\n\r\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tindex = indices[ i ] * itemSize;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\r\n\r\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.index === null ) {\r\n\r\n\t\t\twarn( 'BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry2 = new BufferGeometry();\r\n\r\n\t\tconst indices = this.index.array;\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\t// attributes\r\n\r\n\t\tfor ( const name in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ name ];\r\n\r\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\r\n\r\n\t\t\tgeometry2.setAttribute( name, newAttribute );\r\n\r\n\t\t}\r\n\r\n\t\t// morph attributes\r\n\r\n\t\tconst morphAttributes = this.morphAttributes;\r\n\r\n\t\tfor ( const name in morphAttributes ) {\r\n\r\n\t\t\tconst morphArray = [];\r\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst attribute = morphAttribute[ i ];\r\n\r\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\r\n\r\n\t\t\t\tmorphArray.push( newAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t// groups\r\n\r\n\t\tconst groups = this.groups;\r\n\r\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry2;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes the geometry into JSON.\r\n\t *\r\n\t * @return {Object} A JSON object representing the serialized geometry.\r\n\t */\r\n\ttoJSON() {\r\n\r\n\t\tconst data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.7,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tconst parameters = this.parameters;\r\n\r\n\t\t\tfor ( const key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tconst index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\tfor ( const key in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ key ];\r\n\r\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\r\n\r\n\t\t}\r\n\r\n\t\tconst morphAttributes = {};\r\n\t\tlet hasMorphAttributes = false;\r\n\r\n\t\tfor ( const key in this.morphAttributes ) {\r\n\r\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\r\n\r\n\t\t\tconst array = [];\r\n\r\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst attribute = attributeArray[ i ];\r\n\r\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( array.length > 0 ) {\r\n\r\n\t\t\t\tmorphAttributes[ key ] = array;\r\n\r\n\t\t\t\thasMorphAttributes = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( hasMorphAttributes ) {\r\n\r\n\t\t\tdata.data.morphAttributes = morphAttributes;\r\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t}\r\n\r\n\t\tconst groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = boundingSphere.toJSON();\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new geometry with copied values from this instance.\r\n\t *\r\n\t * @return {BufferGeometry} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given geometry to this instance.\r\n\t *\r\n\t * @param {BufferGeometry} source - The geometry to copy.\r\n\t * @return {BufferGeometry} A reference to this instance.\r\n\t */\r\n\tcopy( source ) {\r\n\r\n\t\t// reset\r\n\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\tthis.morphAttributes = {};\r\n\t\tthis.groups = [];\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\t// used for storing cloned, shared data\r\n\r\n\t\tconst data = {};\r\n\r\n\t\t// name\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\t// index\r\n\r\n\t\tconst index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\t// attributes\r\n\r\n\t\tconst attributes = source.attributes;\r\n\r\n\t\tfor ( const name in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ name ];\r\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\r\n\r\n\t\t}\r\n\r\n\t\t// morph attributes\r\n\r\n\t\tconst morphAttributes = source.morphAttributes;\r\n\r\n\t\tfor ( const name in morphAttributes ) {\r\n\r\n\t\t\tconst array = [];\r\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\r\n\r\n\t\t// groups\r\n\r\n\t\tconst groups = source.groups;\r\n\r\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t}\r\n\r\n\t\t// bounding box\r\n\r\n\t\tconst boundingBox = source.boundingBox;\r\n\r\n\t\tif ( boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\t// bounding sphere\r\n\r\n\t\tconst boundingSphere = source.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\t// draw range\r\n\r\n\t\tthis.drawRange.start = source.drawRange.start;\r\n\t\tthis.drawRange.count = source.drawRange.count;\r\n\r\n\t\t// user data\r\n\r\n\t\tthis.userData = source.userData;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Frees the GPU-related resources allocated by this instance. Call this\r\n\t * method whenever this instance is no longer used in your app.\r\n\t *\r\n\t * @fires BufferGeometry#dispose\r\n\t */\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { BufferGeometry };\r\n","import { BufferGeometry } from '../core/BufferGeometry.js';\r\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\r\nimport { Vector3 } from '../math/Vector3.js';\r\n\r\n/**\r\n * A geometry class for a rectangular cuboid with a given width, height, and depth.\r\n * On creation, the cuboid is centred on the origin, with each edge parallel to one\r\n * of the axes.\r\n *\r\n * ```js\r\n * const geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n * const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n * const cube = new THREE.Mesh( geometry, material );\r\n * scene.add( cube );\r\n * ```\r\n *\r\n * @augments BufferGeometry\r\n */\r\nclass BoxGeometry extends BufferGeometry {\r\n\r\n\t/**\r\n\t * Constructs a new box geometry.\r\n\t *\r\n\t * @param {number} [width=1] - The width. That is, the length of the edges parallel to the X axis.\r\n\t * @param {number} [height=1] - The height. That is, the length of the edges parallel to the Y axis.\r\n\t * @param {number} [depth=1] - The depth. That is, the length of the edges parallel to the Z axis.\r\n\t * @param {number} [widthSegments=1] - Number of segmented rectangular faces along the width of the sides.\r\n\t * @param {number} [heightSegments=1] - Number of segmented rectangular faces along the height of the sides.\r\n\t * @param {number} [depthSegments=1] - Number of segmented rectangular faces along the depth of the sides.\r\n\t */\r\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'BoxGeometry';\r\n\r\n\t\t/**\r\n\t\t * Holds the constructor parameters that have been\r\n\t\t * used to generate the geometry. Any modification\r\n\t\t * after instantiation does not change the geometry.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\t// segments\r\n\r\n\t\twidthSegments = Math.floor( widthSegments );\r\n\t\theightSegments = Math.floor( heightSegments );\r\n\t\tdepthSegments = Math.floor( depthSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tlet numberOfVertices = 0;\r\n\t\tlet groupStart = 0;\r\n\r\n\t\t// build each side of the box geometry\r\n\r\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\r\n\t\t\tconst segmentWidth = width / gridX;\r\n\t\t\tconst segmentHeight = height / gridY;\r\n\r\n\t\t\tconst widthHalf = width / 2;\r\n\t\t\tconst heightHalf = height / 2;\r\n\t\t\tconst depthHalf = depth / 2;\r\n\r\n\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\tconst gridY1 = gridY + 1;\r\n\r\n\t\t\tlet vertexCounter = 0;\r\n\t\t\tlet groupCount = 0;\r\n\r\n\t\t\tconst vector = new Vector3();\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = x * udir;\r\n\t\t\t\t\tvector[ v ] = y * vdir;\r\n\t\t\t\t\tvector[ w ] = depthHalf;\r\n\r\n\t\t\t\t\t// now apply vector to vertex buffer\r\n\r\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = 0;\r\n\t\t\t\t\tvector[ v ] = 0;\r\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\t\t\t\t// now apply vector to normal buffer\r\n\r\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// uvs\r\n\r\n\t\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t\t\t// counters\r\n\r\n\t\t\t\t\tvertexCounter += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// indices\r\n\r\n\t\t\t// 1. you need three indices to draw a single face\r\n\t\t\t// 2. a single segment consists of two faces\r\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t\t// increase counter\r\n\r\n\t\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t\t// update total number of vertices\r\n\r\n\t\t\tnumberOfVertices += vertexCounter;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for creating an instance of this class from the given\r\n\t * JSON object.\r\n\t *\r\n\t * @param {Object} data - A JSON object representing the serialized geometry.\r\n\t * @return {BoxGeometry} A new instance.\r\n\t */\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { BoxGeometry };\r\n","import { BufferGeometry } from '../core/BufferGeometry.js';\r\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\r\n\r\n/**\r\n * A geometry class for representing a plane.\r\n *\r\n * ```js\r\n * const geometry = new THREE.PlaneGeometry( 1, 1 );\r\n * const material = new THREE.MeshBasicMaterial( { color: 0xffff00, side: THREE.DoubleSide } );\r\n * const plane = new THREE.Mesh( geometry, material );\r\n * scene.add( plane );\r\n * ```\r\n *\r\n * @augments BufferGeometry\r\n */\r\nclass PlaneGeometry extends BufferGeometry {\r\n\r\n\t/**\r\n\t * Constructs a new plane geometry.\r\n\t *\r\n\t * @param {number} [width=1] - The width along the X axis.\r\n\t * @param {number} [height=1] - The height along the Y axis\r\n\t * @param {number} [widthSegments=1] - The number of segments along the X axis.\r\n\t * @param {number} [heightSegments=1] - The number of segments along the Y axis.\r\n\t */\r\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'PlaneGeometry';\r\n\r\n\t\t/**\r\n\t\t * Holds the constructor parameters that have been\r\n\t\t * used to generate the geometry. Any modification\r\n\t\t * after instantiation does not change the geometry.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\r\n\t\tconst width_half = width / 2;\r\n\t\tconst height_half = height / 2;\r\n\r\n\t\tconst gridX = Math.floor( widthSegments );\r\n\t\tconst gridY = Math.floor( heightSegments );\r\n\r\n\t\tconst gridX1 = gridX + 1;\r\n\t\tconst gridY1 = gridY + 1;\r\n\r\n\t\tconst segment_width = width / gridX;\r\n\t\tconst segment_height = height / gridY;\r\n\r\n\t\t//\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tconst y = iy * segment_height - height_half;\r\n\r\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tconst x = ix * segment_width - width_half;\r\n\r\n\t\t\t\tvertices.push( x, - y, 0 );\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tconst a = ix + gridX1 * iy;\r\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for creating an instance of this class from the given\r\n\t * JSON object.\r\n\t *\r\n\t * @param {Object} data - A JSON object representing the serialized geometry.\r\n\t * @return {PlaneGeometry} A new instance.\r\n\t */\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { PlaneGeometry };\r\n","import { Color } from '../math/Color.js';\r\nimport { EventDispatcher } from '../core/EventDispatcher.js';\r\nimport { FrontSide, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp } from '../constants.js';\r\nimport { generateUUID } from '../math/MathUtils.js';\r\nimport { warn } from '../utils.js';\r\n\r\nlet _materialId = 0;\r\n\r\n/**\r\n * Abstract base class for materials.\r\n *\r\n * Materials define the appearance of renderable 3D objects.\r\n *\r\n * @abstract\r\n * @augments EventDispatcher\r\n */\r\nclass Material extends EventDispatcher {\r\n\r\n\t/**\r\n\t * Constructs a new material.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isMaterial = true;\r\n\r\n\t\t/**\r\n\t\t * The ID of the material.\r\n\t\t *\r\n\t\t * @name Material#id\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\r\n\r\n\t\t/**\r\n\t\t * The UUID of the material.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\t/**\r\n\t\t * The name of the material.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.name = '';\r\n\r\n\t\t/**\r\n\t\t * The type property is used for detecting the object type\r\n\t\t * in context of serialization/deserialization.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tthis.type = 'Material';\r\n\r\n\t\t/**\r\n\t\t * Defines the blending type of the material.\r\n\t\t *\r\n\t\t * It must be set to `CustomBlending` if custom blending properties like\r\n\t\t * {@link Material#blendSrc}, {@link Material#blendDst} or {@link Material#blendEquation}\r\n\t\t * should have any effect.\r\n\t\t *\r\n\t\t * @type {(NoBlending|NormalBlending|AdditiveBlending|SubtractiveBlending|MultiplyBlending|CustomBlending)}\r\n\t\t * @default NormalBlending\r\n\t\t */\r\n\t\tthis.blending = NormalBlending;\r\n\r\n\t\t/**\r\n\t\t * Defines which side of faces will be rendered - front, back or both.\r\n\t\t *\r\n\t\t * @type {(FrontSide|BackSide|DoubleSide)}\r\n\t\t * @default FrontSide\r\n\t\t */\r\n\t\tthis.side = FrontSide;\r\n\r\n\t\t/**\r\n\t\t * If set to `true`, vertex colors should be used.\r\n\t\t *\r\n\t\t * The engine supports RGB and RGBA vertex colors depending on whether a three (RGB) or\r\n\t\t * four (RGBA) component color buffer attribute is used.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.vertexColors = false;\r\n\r\n\t\t/**\r\n\t\t * Defines how transparent the material is.\r\n\t\t * A value of `0.0` indicates fully transparent, `1.0` is fully opaque.\r\n\t\t *\r\n\t\t * If the {@link Material#transparent} is not set to `true`,\r\n\t\t * the material will remain fully opaque and this value will only affect its color.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.opacity = 1;\r\n\r\n\t\t/**\r\n\t\t * Defines whether this material is transparent. This has an effect on\r\n\t\t * rendering as transparent objects need special treatment and are rendered\r\n\t\t * after non-transparent objects.\r\n\t\t *\r\n\t\t * When set to true, the extent to which the material is transparent is\r\n\t\t * controlled by {@link Material#opacity}.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.transparent = false;\r\n\r\n\t\t/**\r\n\t\t * Enables alpha hashed transparency, an alternative to {@link Material#transparent} or\r\n\t\t * {@link Material#alphaTest}. The material will not be rendered if opacity is lower than\r\n\t\t * a random threshold. Randomization introduces some grain or noise, but approximates alpha\r\n\t\t * blending without the associated problems of sorting. Using TAA can reduce the resulting noise.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.alphaHash = false;\r\n\r\n\t\t/**\r\n\t\t * Defines the blending source factor.\r\n\t\t *\r\n\t\t * @type {(ZeroFactor|OneFactor|SrcColorFactor|OneMinusSrcColorFactor|SrcAlphaFactor|OneMinusSrcAlphaFactor|DstAlphaFactor|OneMinusDstAlphaFactor|DstColorFactor|OneMinusDstColorFactor|SrcAlphaSaturateFactor|ConstantColorFactor|OneMinusConstantColorFactor|ConstantAlphaFactor|OneMinusConstantAlphaFactor)}\r\n\t\t * @default SrcAlphaFactor\r\n\t\t */\r\n\t\tthis.blendSrc = SrcAlphaFactor;\r\n\r\n\t\t/**\r\n\t\t * Defines the blending destination factor.\r\n\t\t *\r\n\t\t * @type {(ZeroFactor|OneFactor|SrcColorFactor|OneMinusSrcColorFactor|SrcAlphaFactor|OneMinusSrcAlphaFactor|DstAlphaFactor|OneMinusDstAlphaFactor|DstColorFactor|OneMinusDstColorFactor|SrcAlphaSaturateFactor|ConstantColorFactor|OneMinusConstantColorFactor|ConstantAlphaFactor|OneMinusConstantAlphaFactor)}\r\n\t\t * @default OneMinusSrcAlphaFactor\r\n\t\t */\r\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\r\n\r\n\t\t/**\r\n\t\t * Defines the blending equation.\r\n\t\t *\r\n\t\t * @type {(AddEquation|SubtractEquation|ReverseSubtractEquation|MinEquation|MaxEquation)}\r\n\t\t * @default AddEquation\r\n\t\t */\r\n\t\tthis.blendEquation = AddEquation;\r\n\r\n\t\t/**\r\n\t\t * Defines the blending source alpha factor.\r\n\t\t *\r\n\t\t * @type {?(ZeroFactor|OneFactor|SrcColorFactor|OneMinusSrcColorFactor|SrcAlphaFactor|OneMinusSrcAlphaFactor|DstAlphaFactor|OneMinusDstAlphaFactor|DstColorFactor|OneMinusDstColorFactor|SrcAlphaSaturateFactor|ConstantColorFactor|OneMinusConstantColorFactor|ConstantAlphaFactor|OneMinusConstantAlphaFactor)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.blendSrcAlpha = null;\r\n\r\n\t\t/**\r\n\t\t * Defines the blending destination alpha factor.\r\n\t\t *\r\n\t\t * @type {?(ZeroFactor|OneFactor|SrcColorFactor|OneMinusSrcColorFactor|SrcAlphaFactor|OneMinusSrcAlphaFactor|DstAlphaFactor|OneMinusDstAlphaFactor|DstColorFactor|OneMinusDstColorFactor|SrcAlphaSaturateFactor|ConstantColorFactor|OneMinusConstantColorFactor|ConstantAlphaFactor|OneMinusConstantAlphaFactor)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.blendDstAlpha = null;\r\n\r\n\t\t/**\r\n\t\t * Defines the blending equation of the alpha channel.\r\n\t\t *\r\n\t\t * @type {?(AddEquation|SubtractEquation|ReverseSubtractEquation|MinEquation|MaxEquation)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.blendEquationAlpha = null;\r\n\r\n\t\t/**\r\n\t\t * Represents the RGB values of the constant blend color.\r\n\t\t *\r\n\t\t * This property has only an effect when using custom blending with `ConstantColor` or `OneMinusConstantColor`.\r\n\t\t *\r\n\t\t * @type {Color}\r\n\t\t * @default (0,0,0)\r\n\t\t */\r\n\t\tthis.blendColor = new Color( 0, 0, 0 );\r\n\r\n\t\t/**\r\n\t\t * Represents the alpha value of the constant blend color.\r\n\t\t *\r\n\t\t * This property has only an effect when using custom blending with `ConstantAlpha` or `OneMinusConstantAlpha`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.blendAlpha = 0;\r\n\r\n\t\t/**\r\n\t\t * Defines the depth function.\r\n\t\t *\r\n\t\t * @type {(NeverDepth|AlwaysDepth|LessDepth|LessEqualDepth|EqualDepth|GreaterEqualDepth|GreaterDepth|NotEqualDepth)}\r\n\t\t * @default LessEqualDepth\r\n\t\t */\r\n\t\tthis.depthFunc = LessEqualDepth;\r\n\r\n\t\t/**\r\n\t\t * Whether to have depth test enabled when rendering this material.\r\n\t\t * When the depth test is disabled, the depth write will also be implicitly disabled.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.depthTest = true;\r\n\r\n\t\t/**\r\n\t\t * Whether rendering this material has any effect on the depth buffer.\r\n\t\t *\r\n\t\t * When drawing 2D overlays it can be useful to disable the depth writing in\r\n\t\t * order to layer several things together without creating z-index artifacts.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.depthWrite = true;\r\n\r\n\t\t/**\r\n\t\t * The bit mask to use when writing to the stencil buffer.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0xff\r\n\t\t */\r\n\t\tthis.stencilWriteMask = 0xff;\r\n\r\n\t\t/**\r\n\t\t * The stencil comparison function to use.\r\n\t\t *\r\n\t\t * @type {NeverStencilFunc|LessStencilFunc|EqualStencilFunc|LessEqualStencilFunc|GreaterStencilFunc|NotEqualStencilFunc|GreaterEqualStencilFunc|AlwaysStencilFunc}\r\n\t\t * @default AlwaysStencilFunc\r\n\t\t */\r\n\t\tthis.stencilFunc = AlwaysStencilFunc;\r\n\r\n\t\t/**\r\n\t\t * The value to use when performing stencil comparisons or stencil operations.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.stencilRef = 0;\r\n\r\n\t\t/**\r\n\t\t * The bit mask to use when comparing against the stencil buffer.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0xff\r\n\t\t */\r\n\t\tthis.stencilFuncMask = 0xff;\r\n\r\n\t\t/**\r\n\t\t * Which stencil operation to perform when the comparison function returns `false`.\r\n\t\t *\r\n\t\t * @type {ZeroStencilOp|KeepStencilOp|ReplaceStencilOp|IncrementStencilOp|DecrementStencilOp|IncrementWrapStencilOp|DecrementWrapStencilOp|InvertStencilOp}\r\n\t\t * @default KeepStencilOp\r\n\t\t */\r\n\t\tthis.stencilFail = KeepStencilOp;\r\n\r\n\t\t/**\r\n\t\t * Which stencil operation to perform when the comparison function returns\r\n\t\t * `true` but the depth test fails.\r\n\t\t *\r\n\t\t * @type {ZeroStencilOp|KeepStencilOp|ReplaceStencilOp|IncrementStencilOp|DecrementStencilOp|IncrementWrapStencilOp|DecrementWrapStencilOp|InvertStencilOp}\r\n\t\t * @default KeepStencilOp\r\n\t\t */\r\n\t\tthis.stencilZFail = KeepStencilOp;\r\n\r\n\t\t/**\r\n\t\t * Which stencil operation to perform when the comparison function returns\r\n\t\t * `true` and the depth test passes.\r\n\t\t *\r\n\t\t * @type {ZeroStencilOp|KeepStencilOp|ReplaceStencilOp|IncrementStencilOp|DecrementStencilOp|IncrementWrapStencilOp|DecrementWrapStencilOp|InvertStencilOp}\r\n\t\t * @default KeepStencilOp\r\n\t\t */\r\n\t\tthis.stencilZPass = KeepStencilOp;\r\n\r\n\t\t/**\r\n\t\t * Whether stencil operations are performed against the stencil buffer. In\r\n\t\t * order to perform writes or comparisons against the stencil buffer this\r\n\t\t * value must be `true`.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.stencilWrite = false;\r\n\r\n\t\t/**\r\n\t\t * User-defined clipping planes specified as THREE.Plane objects in world\r\n\t\t * space. These planes apply to the objects this material is attached to.\r\n\t\t * Points in space whose signed distance to the plane is negative are clipped\r\n\t\t * (not rendered). This requires {@link WebGLRenderer#localClippingEnabled} to\r\n\t\t * be `true`.\r\n\t\t *\r\n\t\t * @type {?Array<Plane>}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.clippingPlanes = null;\r\n\r\n\t\t/**\r\n\t\t * Changes the behavior of clipping planes so that only their intersection is\r\n\t\t * clipped, rather than their union.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.clipIntersection = false;\r\n\r\n\t\t/**\r\n\t\t * Defines whether to clip shadows according to the clipping planes specified\r\n\t\t * on this material.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.clipShadows = false;\r\n\r\n\t\t/**\r\n\t\t * Defines which side of faces cast shadows. If `null`, the side casting shadows\r\n\t\t * is determined as follows:\r\n\t\t *\r\n\t\t * - When {@link Material#side} is set to `FrontSide`, the back side cast shadows.\r\n\t\t * - When {@link Material#side} is set to `BackSide`, the front side cast shadows.\r\n\t\t * - When {@link Material#side} is set to `DoubleSide`, both sides cast shadows.\r\n\t\t *\r\n\t\t * @type {?(FrontSide|BackSide|DoubleSide)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.shadowSide = null;\r\n\r\n\t\t/**\r\n\t\t * Whether to render the material's color.\r\n\t\t *\r\n\t\t * This can be used in conjunction with {@link Object3D#renderOder} to create invisible\r\n\t\t * objects that occlude other objects.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.colorWrite = true;\r\n\r\n\t\t/**\r\n\t\t * Override the renderer's default precision for this material.\r\n\t\t *\r\n\t\t * @type {?('highp'|'mediump'|'lowp')}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.precision = null;\r\n\r\n\t\t/**\r\n\t\t * Whether to use polygon offset or not. When enabled, each fragment's depth value will\r\n\t\t * be offset after it is interpolated from the depth values of the appropriate vertices.\r\n\t\t * The offset is added before the depth test is performed and before the value is written\r\n\t\t * into the depth buffer.\r\n\t\t *\r\n\t\t * Can be useful for rendering hidden-line images, for applying decals to surfaces, and for\r\n\t\t * rendering solids with highlighted edges.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.polygonOffset = false;\r\n\r\n\t\t/**\r\n\t\t * Specifies a scale factor that is used to create a variable depth offset for each polygon.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\r\n\t\t/**\r\n\t\t * Is multiplied by an implementation-specific value to create a constant depth offset.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\r\n\t\t/**\r\n\t\t * Whether to apply dithering to the color to remove the appearance of banding.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.dithering = false;\r\n\r\n\t\t/**\r\n\t\t * Whether alpha to coverage should be enabled or not. Can only be used with MSAA-enabled contexts\r\n\t\t * (meaning when the renderer was created with *antialias* parameter set to `true`). Enabling this\r\n\t\t * will smooth aliasing on clip plane edges and alphaTest-clipped edges.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.alphaToCoverage = false;\r\n\r\n\t\t/**\r\n\t\t * Whether to premultiply the alpha (transparency) value.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.premultipliedAlpha = false;\r\n\r\n\t\t/**\r\n\t\t * Whether double-sided, transparent objects should be rendered with a single pass or not.\r\n\t\t *\r\n\t\t * The engine renders double-sided, transparent objects with two draw calls (back faces first,\r\n\t\t * then front faces) to mitigate transparency artifacts. There are scenarios however where this\r\n\t\t * approach produces no quality gains but still doubles draw calls e.g. when rendering flat\r\n\t\t * vegetation like grass sprites. In these cases, set the `forceSinglePass` flag to `true` to\r\n\t\t * disable the two pass rendering to avoid performance issues.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.forceSinglePass = false;\r\n\r\n\t\t/**\r\n\t\t * Whether it's possible to override the material with {@link Scene#overrideMaterial} or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.allowOverride = true;\r\n\r\n\t\t/**\r\n\t\t * Defines whether 3D objects using this material are visible.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.visible = true;\r\n\r\n\t\t/**\r\n\t\t * Defines whether this material is tone mapped according to the renderer's tone mapping setting.\r\n\t\t *\r\n\t\t * It is ignored when rendering to a render target or using post processing or when using\r\n\t\t * `WebGPURenderer`. In all these cases, all materials are honored by tone mapping.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.toneMapped = true;\r\n\r\n\t\t/**\r\n\t\t * An object that can be used to store custom data about the Material. It\r\n\t\t * should not hold references to functions as these will not be cloned.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.userData = {};\r\n\r\n\t\t/**\r\n\t\t * This starts at `0` and counts how many times {@link Material#needsUpdate} is set to `true`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.version = 0;\r\n\r\n\t\tthis._alphaTest = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the alpha value to be used when running an alpha test. The material\r\n\t * will not be rendered if the opacity is lower than this value.\r\n\t *\r\n\t * @type {number}\r\n\t * @readonly\r\n\t * @default 0\r\n\t */\r\n\tget alphaTest() {\r\n\r\n\t\treturn this._alphaTest;\r\n\r\n\t}\r\n\r\n\tset alphaTest( value ) {\r\n\r\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._alphaTest = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * An optional callback that is executed immediately before the material is used to render a 3D object.\r\n\t *\r\n\t * This method can only be used when rendering with {@link WebGLRenderer}.\r\n\t *\r\n\t * @param {WebGLRenderer} renderer - The renderer.\r\n\t * @param {Scene} scene - The scene.\r\n\t * @param {Camera} camera - The camera that is used to render the scene.\r\n\t * @param {BufferGeometry} geometry - The 3D object's geometry.\r\n\t * @param {Object3D} object - The 3D object.\r\n\t * @param {Object} group - The geometry group data.\r\n\t */\r\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\r\n\r\n\t/**\r\n\t * An optional callback that is executed immediately before the shader\r\n\t * program is compiled. This function is called with the shader source code\r\n\t * as a parameter. Useful for the modification of built-in materials.\r\n\t *\r\n\t * This method can only be used when rendering with {@link WebGLRenderer}. The\r\n\t * recommended approach when customizing materials is to use `WebGPURenderer` with the new\r\n\t * Node Material system and [TSL]{@link https://github.com/mrdoob/three.js/wiki/Three.js-Shading-Language}.\r\n\t *\r\n\t * @param {{vertexShader:string,fragmentShader:string,uniforms:Object}} shaderobject - The object holds the uniforms and the vertex and fragment shader source.\r\n\t * @param {WebGLRenderer} renderer - A reference to the renderer.\r\n\t */\r\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\r\n\r\n\t/**\r\n\t * In case {@link Material#onBeforeCompile} is used, this callback can be used to identify\r\n\t * values of settings used in `onBeforeCompile()`, so three.js can reuse a cached\r\n\t * shader or recompile the shader for this material as needed.\r\n\t *\r\n\t * This method can only be used when rendering with {@link WebGLRenderer}.\r\n\t *\r\n\t * @return {string} The custom program cache key.\r\n\t */\r\n\tcustomProgramCacheKey() {\r\n\r\n\t\treturn this.onBeforeCompile.toString();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This method can be used to set default values from parameter objects.\r\n\t * It is a generic implementation so it can be used with different types\r\n\t * of materials.\r\n\t *\r\n\t * @param {Object} [values] - The material values to set.\r\n\t */\r\n\tsetValues( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( const key in values ) {\r\n\r\n\t\t\tconst newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\twarn( `Material: parameter '${ key }' has value of undefined.` );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\twarn( `Material: '${ key }' is not a property of THREE.${ this.type }.` );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue && currentValue.isColor ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes the material into JSON.\r\n\t *\r\n\t * @param {?(Object|string)} meta - An optional value holding meta information about the serialization.\r\n\t * @return {Object} A JSON object representing the serialized material.\r\n\t * @see {@link ObjectLoader#parse}\r\n\t */\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tmeta = {\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tconst data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.7,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\r\n\r\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\r\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\r\n\r\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\r\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\r\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\r\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\r\n\r\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\r\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\r\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\r\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\r\n\r\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\r\n\r\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\r\n\r\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\r\n\r\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.sheenColorMap && this.sheenColorMap.isTexture ) {\r\n\r\n\t\t\tdata.sheenColorMap = this.sheenColorMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.sheenRoughnessMap && this.sheenRoughnessMap.isTexture ) {\r\n\r\n\t\t\tdata.sheenRoughnessMap = this.sheenRoughnessMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\r\n\r\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\r\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\r\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\r\n\r\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\r\n\r\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\r\n\r\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\r\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\r\n\r\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\r\n\r\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\r\n\r\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\r\n\r\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\r\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalMapType = this.normalMapType;\r\n\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.envMap && this.envMap.isTexture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\r\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\r\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\r\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\r\n\r\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\r\n\r\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\r\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\r\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\r\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\r\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\r\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\r\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = true;\r\n\r\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\r\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\r\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\r\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\r\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\r\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\r\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\r\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\r\n\r\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\r\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\r\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\r\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\r\n\r\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\r\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\r\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\r\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\r\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\r\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\r\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\r\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\r\n\r\n\t\t// rotation (SpriteMaterial)\r\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\r\n\r\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\r\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\r\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\r\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\r\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\r\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\r\n\r\n\t\tif ( this.dithering === true ) data.dithering = true;\r\n\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\r\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\r\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\r\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\r\n\r\n\t\tif ( this.wireframe === true ) data.wireframe = true;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\r\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\t\tif ( this.flatShading === true ) data.flatShading = true;\r\n\r\n\t\tif ( this.visible === false ) data.visible = false;\r\n\r\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\r\n\r\n\t\tif ( this.fog === false ) data.fog = false;\r\n\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\r\n\r\n\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\tconst values = [];\r\n\r\n\t\t\tfor ( const key in cache ) {\r\n\r\n\t\t\t\tconst data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tconst textures = extractFromCache( meta.textures );\r\n\t\t\tconst images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\tif ( images.length > 0 ) data.images = images;\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new material with copied values from this instance.\r\n\t *\r\n\t * @return {Material} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given material to this instance.\r\n\t *\r\n\t * @param {Material} source - The material to copy.\r\n\t * @return {Material} A reference to this instance.\r\n\t */\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.blending = source.blending;\r\n\t\tthis.side = source.side;\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\tthis.blendColor.copy( source.blendColor );\r\n\t\tthis.blendAlpha = source.blendAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\r\n\t\tthis.stencilFunc = source.stencilFunc;\r\n\t\tthis.stencilRef = source.stencilRef;\r\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\r\n\t\tthis.stencilFail = source.stencilFail;\r\n\t\tthis.stencilZFail = source.stencilZFail;\r\n\t\tthis.stencilZPass = source.stencilZPass;\r\n\t\tthis.stencilWrite = source.stencilWrite;\r\n\r\n\t\tconst srcPlanes = source.clippingPlanes;\r\n\t\tlet dstPlanes = null;\r\n\r\n\t\tif ( srcPlanes !== null ) {\r\n\r\n\t\t\tconst n = srcPlanes.length;\r\n\t\t\tdstPlanes = new Array( n );\r\n\r\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.clippingPlanes = dstPlanes;\r\n\t\tthis.clipIntersection = source.clipIntersection;\r\n\t\tthis.clipShadows = source.clipShadows;\r\n\r\n\t\tthis.shadowSide = source.shadowSide;\r\n\r\n\t\tthis.colorWrite = source.colorWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.dithering = source.dithering;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\t\tthis.alphaHash = source.alphaHash;\r\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\r\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\t\tthis.forceSinglePass = source.forceSinglePass;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.toneMapped = source.toneMapped;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Frees the GPU-related resources allocated by this instance. Call this\r\n\t * method whenever this instance is no longer used in your app.\r\n\t *\r\n\t * @fires Material#dispose\r\n\t */\r\n\tdispose() {\r\n\r\n\t\t/**\r\n\t\t * Fires when the material has been disposed of.\r\n\t\t *\r\n\t\t * @event Material#dispose\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Setting this property to `true` indicates the engine the material\r\n\t * needs to be recompiled.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @default false\r\n\t * @param {boolean} value\r\n\t */\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Material };\r\n","import { ColorManagement } from '../../math/ColorManagement.js';\r\nimport { warn } from '../../utils.js';\r\n\r\n/**\r\n * Provides utility functions for managing uniforms.\r\n *\r\n * @module UniformsUtils\r\n */\r\n\r\n/**\r\n * Clones the given uniform definitions by performing a deep-copy. That means\r\n * if the value of a uniform refers to an object like a Vector3 or Texture,\r\n * the cloned uniform will refer to a new object reference.\r\n *\r\n * @param {Object} src - An object representing uniform definitions.\r\n * @return {Object} The cloned uniforms.\r\n */\r\nexport function cloneUniforms( src ) {\r\n\r\n\tconst dst = {};\r\n\r\n\tfor ( const u in src ) {\r\n\r\n\t\tdst[ u ] = {};\r\n\r\n\t\tfor ( const p in src[ u ] ) {\r\n\r\n\t\t\tconst property = src[ u ][ p ];\r\n\r\n\t\t\tif ( property && ( property.isColor ||\r\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\r\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\r\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\r\n\r\n\t\t\t\tif ( property.isRenderTargetTexture ) {\r\n\r\n\t\t\t\t\twarn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\r\n\t\t\t\t\tdst[ u ][ p ] = null;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( Array.isArray( property ) ) {\r\n\r\n\t\t\t\tdst[ u ][ p ] = property.slice();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdst[ u ][ p ] = property;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn dst;\r\n\r\n}\r\n\r\n/**\r\n * Merges the given uniform definitions into a single object. Since the\r\n * method internally uses cloneUniforms(), it performs a deep-copy when\r\n * producing the merged uniform definitions.\r\n *\r\n * @param {Array} uniforms - An array of objects containing uniform definitions.\r\n * @return {Object} The merged uniforms.\r\n */\r\nexport function mergeUniforms( uniforms ) {\r\n\r\n\tconst merged = {};\r\n\r\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\r\n\r\n\t\tfor ( const p in tmp ) {\r\n\r\n\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn merged;\r\n\r\n}\r\n\r\nexport function cloneUniformsGroups( src ) {\r\n\r\n\tconst dst = [];\r\n\r\n\tfor ( let u = 0; u < src.length; u ++ ) {\r\n\r\n\t\tdst.push( src[ u ].clone() );\r\n\r\n\t}\r\n\r\n\treturn dst;\r\n\r\n}\r\n\r\nexport function getUnlitUniformColorSpace( renderer ) {\r\n\r\n\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\tif ( currentRenderTarget === null ) {\r\n\r\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\r\n\t\treturn renderer.outputColorSpace;\r\n\r\n\t}\r\n\r\n\t// https://github.com/mrdoob/three.js/issues/27868\r\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\r\n\r\n\t\treturn currentRenderTarget.texture.colorSpace;\r\n\r\n\t}\r\n\r\n\treturn ColorManagement.workingColorSpace;\r\n\r\n}\r\n\r\n// Legacy\r\n\r\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\r\n\r\nexport { UniformsUtils };\r\n","export default /* glsl */`\r\nvoid main() {\r\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n}\r\n`;\r\n","export default /* glsl */`\r\nvoid main() {\r\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\r\n}\r\n`;\r\n","import { Material } from './Material.js';\r\nimport { cloneUniforms, cloneUniformsGroups } from '../renderers/shaders/UniformsUtils.js';\r\n\r\nimport default_vertex from '../renderers/shaders/ShaderChunk/default_vertex.glsl.js';\r\nimport default_fragment from '../renderers/shaders/ShaderChunk/default_fragment.glsl.js';\r\n\r\n/**\r\n * A material rendered with custom shaders. A shader is a small program written in GLSL.\r\n * that runs on the GPU. You may want to use a custom shader if you need to implement an\r\n * effect not included with any of the built-in materials.\r\n *\r\n * There are the following notes to bear in mind when using a `ShaderMaterial`:\r\n *\r\n * - `ShaderMaterial` can only be used with {@link WebGLRenderer}.\r\n * - Built in attributes and uniforms are passed to the shaders along with your code. If\r\n * you don't want that, use {@link RawShaderMaterial} instead.\r\n * - You can use the directive `#pragma unroll_loop_start` and `#pragma unroll_loop_end`\r\n * in order to unroll a `for` loop in GLSL by the shader preprocessor. The directive has\r\n * to be placed right above the loop. The loop formatting has to correspond to a defined standard.\r\n *   - The loop has to be [normalized]{@link https://en.wikipedia.org/wiki/Normalized_loop}.\r\n *   - The loop variable has to be *i*.\r\n *   - The value `UNROLLED_LOOP_INDEX` will be replaced with the explicitly\r\n * value of *i* for the given iteration and can be used in preprocessor\r\n * statements.\r\n *\r\n * ```js\r\n * const material = new THREE.ShaderMaterial( {\r\n * \tuniforms: {\r\n * \t\ttime: { value: 1.0 },\r\n * \t\tresolution: { value: new THREE.Vector2() }\r\n * \t},\r\n * \tvertexShader: document.getElementById( 'vertexShader' ).textContent,\r\n * \tfragmentShader: document.getElementById( 'fragmentShader' ).textContent\r\n * } );\r\n * ```\r\n *\r\n * @augments Material\r\n */\r\nclass ShaderMaterial extends Material {\r\n\r\n\t/**\r\n\t * Constructs a new shader material.\r\n\t *\r\n\t * @param {Object} [parameters] - An object with one or more properties\r\n\t * defining the material's appearance. Any property of the material\r\n\t * (including any property from inherited materials) can be passed\r\n\t * in here. Color values can be passed any type of value accepted\r\n\t * by {@link Color#set}.\r\n\t */\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isShaderMaterial = true;\r\n\r\n\t\tthis.type = 'ShaderMaterial';\r\n\r\n\t\t/**\r\n\t\t * Defines custom constants using `#define` directives within the GLSL code\r\n\t\t * for both the vertex shader and the fragment shader; each key/value pair\r\n\t\t * yields another directive.\r\n\t\t * ```js\r\n\t\t * defines: {\r\n\t\t * \tFOO: 15,\r\n\t\t * \tBAR: true\r\n\t\t * }\r\n\t\t * ```\r\n\t\t * Yields the lines:\r\n\t\t * ```\r\n\t\t * #define FOO 15\r\n\t\t * #define BAR true\r\n\t\t * ```\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.defines = {};\r\n\r\n\t\t/**\r\n\t\t * An object of the form:\r\n\t\t * ```js\r\n\t\t * {\r\n\t\t * \t\"uniform1\": { value: 1.0 },\r\n\t\t * \t\"uniform2\": { value: 2 }\r\n\t\t * }\r\n\t\t * ```\r\n\t\t * specifying the uniforms to be passed to the shader code; keys are uniform\r\n\t\t * names, values are definitions of the form\r\n\t\t * ```\r\n\t\t * {\r\n\t\t * \tvalue: 1.0\r\n\t\t * }\r\n\t\t * ```\r\n\t\t * where `value` is the value of the uniform. Names must match the name of\r\n\t\t * the uniform, as defined in the GLSL code. Note that uniforms are refreshed\r\n\t\t * on every frame, so updating the value of the uniform will immediately\r\n\t\t * update the value available to the GLSL code.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.uniforms = {};\r\n\r\n\t\t/**\r\n\t\t * An array holding uniforms groups for configuring UBOs.\r\n\t\t *\r\n\t\t * @type {Array<UniformsGroup>}\r\n\t\t */\r\n\t\tthis.uniformsGroups = [];\r\n\r\n\t\t/**\r\n\t\t * Vertex shader GLSL code. This is the actual code for the shader.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.vertexShader = default_vertex;\r\n\r\n\t\t/**\r\n\t\t * Fragment shader GLSL code. This is the actual code for the shader.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.fragmentShader = default_fragment;\r\n\r\n\t\t/**\r\n\t\t * Controls line thickness or lines.\r\n\t\t *\r\n\t\t * WebGL and WebGPU ignore this setting and always render line primitives with a\r\n\t\t * width of one pixel.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.linewidth = 1;\r\n\r\n\t\t/**\r\n\t\t * Renders the geometry as a wireframe.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.wireframe = false;\r\n\r\n\t\t/**\r\n\t\t * Controls the thickness of the wireframe.\r\n\t\t *\r\n\t\t * WebGL and WebGPU ignore this property and always render\r\n\t\t * 1 pixel wide lines.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\t/**\r\n\t\t * Define whether the material color is affected by global fog settings; `true`\r\n\t\t * to pass fog uniforms to the shader.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.fog = false;\r\n\r\n\t\t/**\r\n\t\t * Defines whether this material uses lighting; `true` to pass uniform data\r\n\t\t * related to lighting to this shader.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.lights = false;\r\n\r\n\t\t/**\r\n\t\t * Defines whether this material supports clipping; `true` to let the renderer\r\n\t\t * pass the clippingPlanes uniform.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.clipping = false;\r\n\r\n\t\t/**\r\n\t\t * Overwritten and set to `true` by default.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.forceSinglePass = true;\r\n\r\n\t\t/**\r\n\t\t * This object allows to enable certain WebGL 2 extensions.\r\n\t\t *\r\n\t\t * - clipCullDistance: set to `true` to use vertex shader clipping\r\n\t\t * - multiDraw: set to `true` to use vertex shader multi_draw / enable gl_DrawID\r\n\t\t *\r\n\t\t * @type {{clipCullDistance:false,multiDraw:false}}\r\n\t\t */\r\n\t\tthis.extensions = {\r\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\r\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * When the rendered geometry doesn't include these attributes but the\r\n\t\t * material does, these default values will be passed to the shaders. This\r\n\t\t * avoids errors when buffer data is missing.\r\n\t\t *\r\n\t\t * - color: [ 1, 1, 1 ]\r\n\t\t * - uv: [ 0, 0 ]\r\n\t\t * - uv1: [ 0, 0 ]\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv1': [ 0, 0 ]\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * If set, this calls [gl.bindAttribLocation]{@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindAttribLocation}\r\n\t\t * to bind a generic vertex index to an attribute variable.\r\n\t\t *\r\n\t\t * @type {string|undefined}\r\n\t\t * @default undefined\r\n\t\t */\r\n\t\tthis.index0AttributeName = undefined;\r\n\r\n\t\t/**\r\n\t\t * Can be used to force a uniform update while changing uniforms in\r\n\t\t * {@link Object3D#onBeforeRender}.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.uniformsNeedUpdate = false;\r\n\r\n\t\t/**\r\n\t\t * Defines the GLSL version of custom shader code.\r\n\t\t *\r\n\t\t * @type {?(GLSL1|GLSL3)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.glslVersion = null;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tthis.setValues( parameters );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\r\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\r\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\r\n\r\n\t\tthis.defines = Object.assign( {}, source.defines );\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.fog = source.fog;\r\n\t\tthis.lights = source.lights;\r\n\t\tthis.clipping = source.clipping;\r\n\r\n\t\tthis.extensions = Object.assign( {}, source.extensions );\r\n\r\n\t\tthis.glslVersion = source.glslVersion;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.glslVersion = this.glslVersion;\r\n\t\tdata.uniforms = {};\r\n\r\n\t\tfor ( const name in this.uniforms ) {\r\n\r\n\t\t\tconst uniform = this.uniforms[ name ];\r\n\t\t\tconst value = uniform.value;\r\n\r\n\t\t\tif ( value && value.isTexture ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 't',\r\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isColor ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'c',\r\n\t\t\t\t\tvalue: value.getHex()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector2 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v2',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector3 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v3',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isMatrix3 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'm3',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isMatrix4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'm4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\r\n\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\t\tdata.lights = this.lights;\r\n\t\tdata.clipping = this.clipping;\r\n\r\n\t\tconst extensions = {};\r\n\r\n\t\tfor ( const key in this.extensions ) {\r\n\r\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * This type represents the fields required to store and run the shader code.\r\n *\r\n * @typedef {Object} ShaderMaterial~Shader\r\n * @property {string} name - The name of the shader.\r\n * @property {Object<string, Uniform>} uniforms - The uniforms of the shader.\r\n * @property {Object<string, any>} defines - The defines of the shader.\r\n * @property {string} vertexShader - The vertex shader code.\r\n * @property {string} fragmentShader - The fragment shader code.\r\n **/\r\n\r\nexport { ShaderMaterial };\r\n","import { Vector3 } from './Vector3.js';\r\n\r\nconst _vector = /*@__PURE__*/ new Vector3();\r\nconst _segCenter = /*@__PURE__*/ new Vector3();\r\nconst _segDir = /*@__PURE__*/ new Vector3();\r\nconst _diff = /*@__PURE__*/ new Vector3();\r\n\r\nconst _edge1 = /*@__PURE__*/ new Vector3();\r\nconst _edge2 = /*@__PURE__*/ new Vector3();\r\nconst _normal = /*@__PURE__*/ new Vector3();\r\n\r\n/**\r\n * A ray that emits from an origin in a certain direction. The class is used by\r\n * {@link Raycaster} to assist with raycasting. Raycasting is used for\r\n * mouse picking (working out what objects in the 3D space the mouse is over)\r\n * amongst other things.\r\n */\r\nclass Ray {\r\n\r\n\t/**\r\n\t * Constructs a new ray.\r\n\t *\r\n\t * @param {Vector3} [origin=(0,0,0)] - The origin of the ray.\r\n\t * @param {Vector3} [direction=(0,0,-1)] - The (normalized) direction of the ray.\r\n\t */\r\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\r\n\r\n\t\t/**\r\n\t\t * The origin of the ray.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\t\tthis.origin = origin;\r\n\r\n\t\t/**\r\n\t\t * The (normalized) direction of the ray.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\t\tthis.direction = direction;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the ray's components by copying the given values.\r\n\t *\r\n\t * @param {Vector3} origin - The origin.\r\n\t * @param {Vector3} direction - The direction.\r\n\t * @return {Ray} A reference to this ray.\r\n\t */\r\n\tset( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given ray to this instance.\r\n\t *\r\n\t * @param {Ray} ray - The ray to copy.\r\n\t * @return {Ray} A reference to this ray.\r\n\t */\r\n\tcopy( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector that is located at a given distance along this ray.\r\n\t *\r\n\t * @param {number} t - The distance along the ray to retrieve a position for.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} A position on the ray.\r\n\t */\r\n\tat( t, target ) {\r\n\r\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adjusts the direction of the ray to point at the given vector in world space.\r\n\t *\r\n\t * @param {Vector3} v - The target position.\r\n\t * @return {Ray} A reference to this ray.\r\n\t */\r\n\tlookAt( v ) {\r\n\r\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Shift the origin of this ray along its direction by the given distance.\r\n\t *\r\n\t * @param {number} t - The distance along the ray to interpolate.\r\n\t * @return {Ray} A reference to this ray.\r\n\t */\r\n\trecast( t ) {\r\n\r\n\t\tthis.origin.copy( this.at( t, _vector ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the point along this ray that is closest to the given point.\r\n\t *\r\n\t * @param {Vector3} point - A point in 3D space to get the closet location on the ray for.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The closest point on this ray.\r\n\t */\r\n\tclosestPointToPoint( point, target ) {\r\n\r\n\t\ttarget.subVectors( point, this.origin );\r\n\r\n\t\tconst directionDistance = target.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn target.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the distance of the closest approach between this ray and the given point.\r\n\t *\r\n\t * @param {Vector3} point - A point in 3D space to compute the distance to.\r\n\t * @return {number} The distance.\r\n\t */\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the squared distance of the closest approach between this ray and the given point.\r\n\t *\r\n\t * @param {Vector3} point - A point in 3D space to compute the distance to.\r\n\t * @return {number} The squared distance.\r\n\t */\r\n\tdistanceSqToPoint( point ) {\r\n\r\n\t\tconst directionDistance = _vector.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t// point behind the ray\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t}\r\n\r\n\t\t_vector.copy( this.origin ).addScaledVector( this.direction, directionDistance );\r\n\r\n\t\treturn _vector.distanceToSquared( point );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the squared distance between this ray and the given line segment.\r\n\t *\r\n\t * @param {Vector3} v0 - The start point of the line segment.\r\n\t * @param {Vector3} v1 - The end point of the line segment.\r\n\t * @param {Vector3} [optionalPointOnRay] - When provided, it receives the point on this ray that is closest to the segment.\r\n\t * @param {Vector3} [optionalPointOnSegment] - When provided, it receives the point on the line segment that is closest to this ray.\r\n\t * @return {number} The squared distance.\r\n\t */\r\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t// It returns the min distance between the ray and the segment\r\n\t\t// defined by v0 and v1\r\n\t\t// It can also set two optional targets :\r\n\t\t// - The closest point on the ray\r\n\t\t// - The closest point on the segment\r\n\r\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t_diff.copy( this.origin ).sub( _segCenter );\r\n\r\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\tconst a01 = - this.direction.dot( _segDir );\r\n\t\tconst b0 = _diff.dot( this.direction );\r\n\t\tconst b1 = - _diff.dot( _segDir );\r\n\t\tconst c = _diff.lengthSq();\r\n\t\tconst det = Math.abs( 1 - a01 * a01 );\r\n\t\tlet s0, s1, sqrDist, extDet;\r\n\r\n\t\tif ( det > 0 ) {\r\n\r\n\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\textDet = segExtent * det;\r\n\r\n\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\tconst invDet = 1 / det;\r\n\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t}\r\n\r\n\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn sqrDist;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Intersects this ray with the given sphere, returning the intersection\r\n\t * point or `null` if there is no intersection.\r\n\t *\r\n\t * @param {Sphere} sphere - The sphere to intersect.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {?Vector3} The intersection point.\r\n\t */\r\n\tintersectSphere( sphere, target ) {\r\n\r\n\t\t_vector.subVectors( sphere.center, this.origin );\r\n\t\tconst tca = _vector.dot( this.direction );\r\n\t\tconst d2 = _vector.dot( _vector ) - tca * tca;\r\n\t\tconst radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\tconst thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\tconst t0 = tca - thc;\r\n\r\n\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\tconst t1 = tca + thc;\r\n\r\n\t\t// test to see if t1 is behind the ray - if so, return null\r\n\t\tif ( t1 < 0 ) return null;\r\n\r\n\t\t// test to see if t0 is behind the ray:\r\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\tif ( t0 < 0 ) return this.at( t1, target );\r\n\r\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\treturn this.at( t0, target );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this ray intersects with the given sphere.\r\n\t *\r\n\t * @param {Sphere} sphere - The sphere to intersect.\r\n\t * @return {boolean} Whether this ray intersects with the given sphere or not.\r\n\t */\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\tif ( sphere.radius < 0 ) return false; // handle empty spheres, see #31187\r\n\r\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the distance from the ray's origin to the given plane. Returns `null` if the ray\r\n\t * does not intersect with the plane.\r\n\t *\r\n\t * @param {Plane} plane - The plane to compute the distance to.\r\n\t * @return {?number} Whether this ray intersects with the given sphere or not.\r\n\t */\r\n\tdistanceToPlane( plane ) {\r\n\r\n\t\tconst denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t : null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Intersects this ray with the given plane, returning the intersection\r\n\t * point or `null` if there is no intersection.\r\n\t *\r\n\t * @param {Plane} plane - The plane to intersect.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {?Vector3} The intersection point.\r\n\t */\r\n\tintersectPlane( plane, target ) {\r\n\r\n\t\tconst t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, target );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this ray intersects with the given plane.\r\n\t *\r\n\t * @param {Plane} plane - The plane to intersect.\r\n\t * @return {boolean} Whether this ray intersects with the given plane or not.\r\n\t */\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tconst denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Intersects this ray with the given bounding box, returning the intersection\r\n\t * point or `null` if there is no intersection.\r\n\t *\r\n\t * @param {Box3} box - The box to intersect.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {?Vector3} The intersection point.\r\n\t */\r\n\tintersectBox( box, target ) {\r\n\r\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tconst invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tconst origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this ray intersects with the given box.\r\n\t *\r\n\t * @param {Box3} box - The box to intersect.\r\n\t * @return {boolean} Whether this ray intersects with the given box or not.\r\n\t */\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn this.intersectBox( box, _vector ) !== null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Intersects this ray with the given triangle, returning the intersection\r\n\t * point or `null` if there is no intersection.\r\n\t *\r\n\t * @param {Vector3} a - The first vertex of the triangle.\r\n\t * @param {Vector3} b - The second vertex of the triangle.\r\n\t * @param {Vector3} c - The third vertex of the triangle.\r\n\t * @param {boolean} backfaceCulling - Whether to use backface culling or not.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {?Vector3} The intersection point.\r\n\t */\r\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\r\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n\t\t_edge1.subVectors( b, a );\r\n\t\t_edge2.subVectors( c, a );\r\n\t\t_normal.crossVectors( _edge1, _edge2 );\r\n\r\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\tlet DdN = this.direction.dot( _normal );\r\n\t\tlet sign;\r\n\r\n\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\tsign = 1;\r\n\r\n\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\tsign = - 1;\r\n\t\t\tDdN = - DdN;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t_diff.subVectors( this.origin, a );\r\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\r\n\r\n\t\t// b1 < 0, no intersection\r\n\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\r\n\r\n\t\t// b2 < 0, no intersection\r\n\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// b1+b2 > 1, no intersection\r\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Line intersects triangle, check if ray does.\r\n\t\tconst QdN = - sign * _diff.dot( _normal );\r\n\r\n\t\t// t < 0, no intersection\r\n\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Ray intersects triangle.\r\n\t\treturn this.at( QdN / DdN, target );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms this ray with the given 4x4 transformation matrix.\r\n\t *\r\n\t * @param {Matrix4} matrix4 - The transformation matrix.\r\n\t * @return {Ray} A reference to this ray.\r\n\t */\r\n\tapplyMatrix4( matrix4 ) {\r\n\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.transformDirection( matrix4 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this ray is equal with the given one.\r\n\t *\r\n\t * @param {Ray} ray - The ray to test for equality.\r\n\t * @return {boolean} Whether this ray is equal with the given one.\r\n\t */\r\n\tequals( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new ray with copied values from this instance.\r\n\t *\r\n\t * @return {Ray} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Ray };\r\n","import { Vector3 } from './Vector3.js';\r\nimport { Vector4 } from './Vector4.js';\r\n\r\nconst _v0 = /*@__PURE__*/ new Vector3();\r\nconst _v1 = /*@__PURE__*/ new Vector3();\r\nconst _v2 = /*@__PURE__*/ new Vector3();\r\nconst _v3 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _vab = /*@__PURE__*/ new Vector3();\r\nconst _vac = /*@__PURE__*/ new Vector3();\r\nconst _vbc = /*@__PURE__*/ new Vector3();\r\nconst _vap = /*@__PURE__*/ new Vector3();\r\nconst _vbp = /*@__PURE__*/ new Vector3();\r\nconst _vcp = /*@__PURE__*/ new Vector3();\r\n\r\nconst _v40 = /*@__PURE__*/ new Vector4();\r\nconst _v41 = /*@__PURE__*/ new Vector4();\r\nconst _v42 = /*@__PURE__*/ new Vector4();\r\n\r\n/**\r\n * A geometric triangle as defined by three vectors representing its three corners.\r\n */\r\nclass Triangle {\r\n\r\n\t/**\r\n\t * Constructs a new triangle.\r\n\t *\r\n\t * @param {Vector3} [a=(0,0,0)] - The first corner of the triangle.\r\n\t * @param {Vector3} [b=(0,0,0)] - The second corner of the triangle.\r\n\t * @param {Vector3} [c=(0,0,0)] - The third corner of the triangle.\r\n\t */\r\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\r\n\r\n\t\t/**\r\n\t\t * The first corner of the triangle.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\t\tthis.a = a;\r\n\r\n\t\t/**\r\n\t\t * The second corner of the triangle.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\t\tthis.b = b;\r\n\r\n\t\t/**\r\n\t\t * The third corner of the triangle.\r\n\t\t *\r\n\t\t * @type {Vector3}\r\n\t\t */\r\n\t\tthis.c = c;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the normal vector of a triangle.\r\n\t *\r\n\t * @param {Vector3} a - The first corner of the triangle.\r\n\t * @param {Vector3} b - The second corner of the triangle.\r\n\t * @param {Vector3} c - The third corner of the triangle.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The triangle's normal.\r\n\t */\r\n\tstatic getNormal( a, b, c, target ) {\r\n\r\n\t\ttarget.subVectors( c, b );\r\n\t\t_v0.subVectors( a, b );\r\n\t\ttarget.cross( _v0 );\r\n\r\n\t\tconst targetLengthSq = target.lengthSq();\r\n\t\tif ( targetLengthSq > 0 ) {\r\n\r\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn target.set( 0, 0, 0 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes a barycentric coordinates from the given vector.\r\n\t * Returns `null` if the triangle is degenerate.\r\n\t *\r\n\t * @param {Vector3} point - A point in 3D space.\r\n\t * @param {Vector3} a - The first corner of the triangle.\r\n\t * @param {Vector3} b - The second corner of the triangle.\r\n\t * @param {Vector3} c - The third corner of the triangle.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {?Vector3} The barycentric coordinates for the given point\r\n\t */\r\n\tstatic getBarycoord( point, a, b, c, target ) {\r\n\r\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\r\n\t\t_v0.subVectors( c, a );\r\n\t\t_v1.subVectors( b, a );\r\n\t\t_v2.subVectors( point, a );\r\n\r\n\t\tconst dot00 = _v0.dot( _v0 );\r\n\t\tconst dot01 = _v0.dot( _v1 );\r\n\t\tconst dot02 = _v0.dot( _v2 );\r\n\t\tconst dot11 = _v1.dot( _v1 );\r\n\t\tconst dot12 = _v1.dot( _v2 );\r\n\r\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\ttarget.set( 0, 0, 0 );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst invDenom = 1 / denom;\r\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn target.set( 1 - u - v, v, u );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given point, when projected onto the plane of the\r\n\t * triangle, lies within the triangle.\r\n\t *\r\n\t * @param {Vector3} point - The point in 3D space to test.\r\n\t * @param {Vector3} a - The first corner of the triangle.\r\n\t * @param {Vector3} b - The second corner of the triangle.\r\n\t * @param {Vector3} c - The third corner of the triangle.\r\n\t * @return {boolean} Whether the given point, when projected onto the plane of the\r\n\t * triangle, lies within the triangle or not.\r\n\t */\r\n\tstatic containsPoint( point, a, b, c ) {\r\n\r\n\t\t// if the triangle is degenerate then we can't contain a point\r\n\t\tif ( this.getBarycoord( point, a, b, c, _v3 ) === null ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the value barycentrically interpolated for the given point on the\r\n\t * triangle. Returns `null` if the triangle is degenerate.\r\n\t *\r\n\t * @param {Vector3} point - Position of interpolated point.\r\n\t * @param {Vector3} p1 - The first corner of the triangle.\r\n\t * @param {Vector3} p2 - The second corner of the triangle.\r\n\t * @param {Vector3} p3 - The third corner of the triangle.\r\n\t * @param {Vector3} v1 - Value to interpolate of first vertex.\r\n\t * @param {Vector3} v2 - Value to interpolate of second vertex.\r\n\t * @param {Vector3} v3 - Value to interpolate of third vertex.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {?Vector3} The interpolated value.\r\n\t */\r\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\r\n\r\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3 ) === null ) {\r\n\r\n\t\t\ttarget.x = 0;\r\n\t\t\ttarget.y = 0;\r\n\t\t\tif ( 'z' in target ) target.z = 0;\r\n\t\t\tif ( 'w' in target ) target.w = 0;\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.setScalar( 0 );\r\n\t\ttarget.addScaledVector( v1, _v3.x );\r\n\t\ttarget.addScaledVector( v2, _v3.y );\r\n\t\ttarget.addScaledVector( v3, _v3.z );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the value barycentrically interpolated for the given attribute and indices.\r\n\t *\r\n\t * @param {BufferAttribute} attr - The attribute to interpolate.\r\n\t * @param {number} i1 - Index of first vertex.\r\n\t * @param {number} i2 - Index of second vertex.\r\n\t * @param {number} i3 - Index of third vertex.\r\n\t * @param {Vector3} barycoord - The barycoordinate value to use to interpolate.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The interpolated attribute value.\r\n\t */\r\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\r\n\r\n\t\t_v40.setScalar( 0 );\r\n\t\t_v41.setScalar( 0 );\r\n\t\t_v42.setScalar( 0 );\r\n\r\n\t\t_v40.fromBufferAttribute( attr, i1 );\r\n\t\t_v41.fromBufferAttribute( attr, i2 );\r\n\t\t_v42.fromBufferAttribute( attr, i3 );\r\n\r\n\t\ttarget.setScalar( 0 );\r\n\t\ttarget.addScaledVector( _v40, barycoord.x );\r\n\t\ttarget.addScaledVector( _v41, barycoord.y );\r\n\t\ttarget.addScaledVector( _v42, barycoord.z );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the triangle is oriented towards the given direction.\r\n\t *\r\n\t * @param {Vector3} a - The first corner of the triangle.\r\n\t * @param {Vector3} b - The second corner of the triangle.\r\n\t * @param {Vector3} c - The third corner of the triangle.\r\n\t * @param {Vector3} direction - The (normalized) direction vector.\r\n\t * @return {boolean} Whether the triangle is oriented towards the given direction or not.\r\n\t */\r\n\tstatic isFrontFacing( a, b, c, direction ) {\r\n\r\n\t\t_v0.subVectors( c, b );\r\n\t\t_v1.subVectors( a, b );\r\n\r\n\t\t// strictly front facing\r\n\t\treturn ( _v0.cross( _v1 ).dot( direction ) < 0 ) ? true : false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the triangle's vertices by copying the given values.\r\n\t *\r\n\t * @param {Vector3} a - The first corner of the triangle.\r\n\t * @param {Vector3} b - The second corner of the triangle.\r\n\t * @param {Vector3} c - The third corner of the triangle.\r\n\t * @return {Triangle} A reference to this triangle.\r\n\t */\r\n\tset( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the triangle's vertices by copying the given array values.\r\n\t *\r\n\t * @param {Array<Vector3>} points - An array with 3D points.\r\n\t * @param {number} i0 - The array index representing the first corner of the triangle.\r\n\t * @param {number} i1 - The array index representing the second corner of the triangle.\r\n\t * @param {number} i2 - The array index representing the third corner of the triangle.\r\n\t * @return {Triangle} A reference to this triangle.\r\n\t */\r\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the triangle's vertices by copying the given attribute values.\r\n\t *\r\n\t * @param {BufferAttribute} attribute - A buffer attribute with 3D points data.\r\n\t * @param {number} i0 - The attribute index representing the first corner of the triangle.\r\n\t * @param {number} i1 - The attribute index representing the second corner of the triangle.\r\n\t * @param {number} i2 - The attribute index representing the third corner of the triangle.\r\n\t * @return {Triangle} A reference to this triangle.\r\n\t */\r\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\r\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\r\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new triangle with copied values from this instance.\r\n\t *\r\n\t * @return {Triangle} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given triangle to this instance.\r\n\t *\r\n\t * @param {Triangle} triangle - The triangle to copy.\r\n\t * @return {Triangle} A reference to this triangle.\r\n\t */\r\n\tcopy( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the area of the triangle.\r\n\t *\r\n\t * @return {number} The triangle's area.\r\n\t */\r\n\tgetArea() {\r\n\r\n\t\t_v0.subVectors( this.c, this.b );\r\n\t\t_v1.subVectors( this.a, this.b );\r\n\r\n\t\treturn _v0.cross( _v1 ).length() * 0.5;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the midpoint of the triangle.\r\n\t *\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The triangle's midpoint.\r\n\t */\r\n\tgetMidpoint( target ) {\r\n\r\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the normal of the triangle.\r\n\t *\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The triangle's normal.\r\n\t */\r\n\tgetNormal( target ) {\r\n\r\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes a plane the triangle lies within.\r\n\t *\r\n\t * @param {Plane} target - The target vector that is used to store the method's result.\r\n\t * @return {Plane} The plane the triangle lies within.\r\n\t */\r\n\tgetPlane( target ) {\r\n\r\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes a barycentric coordinates from the given vector.\r\n\t * Returns `null` if the triangle is degenerate.\r\n\t *\r\n\t * @param {Vector3} point - A point in 3D space.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {?Vector3} The barycentric coordinates for the given point\r\n\t */\r\n\tgetBarycoord( point, target ) {\r\n\r\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the value barycentrically interpolated for the given point on the\r\n\t * triangle. Returns `null` if the triangle is degenerate.\r\n\t *\r\n\t * @param {Vector3} point - Position of interpolated point.\r\n\t * @param {Vector3} v1 - Value to interpolate of first vertex.\r\n\t * @param {Vector3} v2 - Value to interpolate of second vertex.\r\n\t * @param {Vector3} v3 - Value to interpolate of third vertex.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {?Vector3} The interpolated value.\r\n\t */\r\n\tgetInterpolation( point, v1, v2, v3, target ) {\r\n\r\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the given point, when projected onto the plane of the\r\n\t * triangle, lies within the triangle.\r\n\t *\r\n\t * @param {Vector3} point - The point in 3D space to test.\r\n\t * @return {boolean} Whether the given point, when projected onto the plane of the\r\n\t * triangle, lies within the triangle or not.\r\n\t */\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the triangle is oriented towards the given direction.\r\n\t *\r\n\t * @param {Vector3} direction - The (normalized) direction vector.\r\n\t * @return {boolean} Whether the triangle is oriented towards the given direction or not.\r\n\t */\r\n\tisFrontFacing( direction ) {\r\n\r\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this triangle intersects with the given box.\r\n\t *\r\n\t * @param {Box3} box - The box to intersect.\r\n\t * @return {boolean} Whether this triangle intersects with the given box or not.\r\n\t */\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsTriangle( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the closest point on the triangle to the given point.\r\n\t *\r\n\t * @param {Vector3} p - The point to compute the closest point for.\r\n\t * @param {Vector3} target - The target vector that is used to store the method's result.\r\n\t * @return {Vector3} The closest point on the triangle.\r\n\t */\r\n\tclosestPointToPoint( p, target ) {\r\n\r\n\t\tconst a = this.a, b = this.b, c = this.c;\r\n\t\tlet v, w;\r\n\r\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\r\n\t\t// the point lies in with the minimum amount of redundant computation.\r\n\r\n\t\t_vab.subVectors( b, a );\r\n\t\t_vac.subVectors( c, a );\r\n\t\t_vap.subVectors( p, a );\r\n\t\tconst d1 = _vab.dot( _vap );\r\n\t\tconst d2 = _vac.dot( _vap );\r\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\r\n\r\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\r\n\t\t\treturn target.copy( a );\r\n\r\n\t\t}\r\n\r\n\t\t_vbp.subVectors( p, b );\r\n\t\tconst d3 = _vab.dot( _vbp );\r\n\t\tconst d4 = _vac.dot( _vbp );\r\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\r\n\r\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\r\n\t\t\treturn target.copy( b );\r\n\r\n\t\t}\r\n\r\n\t\tconst vc = d1 * d4 - d3 * d2;\r\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\r\n\r\n\t\t\tv = d1 / ( d1 - d3 );\r\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\r\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\r\n\r\n\t\t}\r\n\r\n\t\t_vcp.subVectors( p, c );\r\n\t\tconst d5 = _vab.dot( _vcp );\r\n\t\tconst d6 = _vac.dot( _vcp );\r\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\r\n\r\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\r\n\t\t\treturn target.copy( c );\r\n\r\n\t\t}\r\n\r\n\t\tconst vb = d5 * d2 - d1 * d6;\r\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\r\n\r\n\t\t\tw = d2 / ( d2 - d6 );\r\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\r\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\r\n\r\n\t\t}\r\n\r\n\t\tconst va = d3 * d6 - d5 * d4;\r\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\r\n\r\n\t\t\t_vbc.subVectors( c, b );\r\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\r\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\r\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\r\n\r\n\t\t}\r\n\r\n\t\t// face region\r\n\t\tconst denom = 1 / ( va + vb + vc );\r\n\t\t// u = va * denom\r\n\t\tv = vb * denom;\r\n\t\tw = vc * denom;\r\n\r\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this triangle is equal with the given one.\r\n\t *\r\n\t * @param {Triangle} triangle - The triangle to test for equality.\r\n\t * @return {boolean} Whether this triangle is equal with the given one.\r\n\t */\r\n\tequals( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Triangle };\r\n","import { Material } from './Material.js';\r\nimport { MultiplyOperation } from '../constants.js';\r\nimport { Color } from '../math/Color.js';\r\nimport { Euler } from '../math/Euler.js';\r\n\r\n/**\r\n * A material for drawing geometries in a simple shaded (flat or wireframe) way.\r\n *\r\n * This material is not affected by lights.\r\n *\r\n * @augments Material\r\n */\r\nclass MeshBasicMaterial extends Material {\r\n\r\n\t/**\r\n\t * Constructs a new mesh basic material.\r\n\t *\r\n\t * @param {Object} [parameters] - An object with one or more properties\r\n\t * defining the material's appearance. Any property of the material\r\n\t * (including any property from inherited materials) can be passed\r\n\t * in here. Color values can be passed any type of value accepted\r\n\t * by {@link Color#set}.\r\n\t */\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isMeshBasicMaterial = true;\r\n\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\r\n\t\t/**\r\n\t\t * Color of the material.\r\n\t\t *\r\n\t\t * @type {Color}\r\n\t\t * @default (1,1,1)\r\n\t\t */\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\r\n\t\t/**\r\n\t\t * The color map. May optionally include an alpha channel, typically combined\r\n\t\t * with {@link Material#transparent} or {@link Material#alphaTest}. The texture map\r\n\t\t * color is modulated by the diffuse `color`.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.map = null;\r\n\r\n\t\t/**\r\n\t\t * The light map. Requires a second set of UVs.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.lightMap = null;\r\n\r\n\t\t/**\r\n\t\t * Intensity of the baked light.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\t/**\r\n\t\t * The red channel of this texture is used as the ambient occlusion map.\r\n\t\t * Requires a second set of UVs.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.aoMap = null;\r\n\r\n\t\t/**\r\n\t\t * Intensity of the ambient occlusion effect. Range is `[0,1]`, where `0`\r\n\t\t * disables ambient occlusion. Where intensity is `1` and the AO map's\r\n\t\t * red channel is also `1`, ambient light is fully occluded on a surface.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\t/**\r\n\t\t * Specular map used by the material.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.specularMap = null;\r\n\r\n\t\t/**\r\n\t\t * The alpha map is a grayscale texture that controls the opacity across the\r\n\t\t * surface (black: fully transparent; white: fully opaque).\r\n\t\t *\r\n\t\t * Only the color of the texture is used, ignoring the alpha channel if one\r\n\t\t * exists. For RGB and RGBA textures, the renderer will use the green channel\r\n\t\t * when sampling this texture due to the extra bit of precision provided for\r\n\t\t * green in DXT-compressed and uncompressed RGB 565 formats. Luminance-only and\r\n\t\t * luminance/alpha textures will also still work as expected.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\t/**\r\n\t\t * The environment map.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.envMap = null;\r\n\r\n\t\t/**\r\n\t\t * The rotation of the environment map in radians.\r\n\t\t *\r\n\t\t * @type {Euler}\r\n\t\t * @default (0,0,0)\r\n\t\t */\r\n\t\tthis.envMapRotation = new Euler();\r\n\r\n\t\t/**\r\n\t\t * How to combine the result of the surface's color with the environment map, if any.\r\n\t\t *\r\n\t\t * When set to `MixOperation`, the {@link MeshBasicMaterial#reflectivity} is used to\r\n\t\t * blend between the two colors.\r\n\t\t *\r\n\t\t * @type {(MultiplyOperation|MixOperation|AddOperation)}\r\n\t\t * @default MultiplyOperation\r\n\t\t */\r\n\t\tthis.combine = MultiplyOperation;\r\n\r\n\t\t/**\r\n\t\t * How much the environment map affects the surface.\r\n\t\t * The valid range is between `0` (no reflections) and `1` (full reflections).\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.reflectivity = 1;\r\n\r\n\t\t/**\r\n\t\t * The index of refraction (IOR) of air (approximately 1) divided by the\r\n\t\t * index of refraction of the material. It is used with environment mapping\r\n\t\t * modes {@link CubeRefractionMapping} and {@link EquirectangularRefractionMapping}.\r\n\t\t * The refraction ratio should not exceed `1`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0.98\r\n\t\t */\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\t/**\r\n\t\t * Renders the geometry as a wireframe.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.wireframe = false;\r\n\r\n\t\t/**\r\n\t\t * Controls the thickness of the wireframe.\r\n\t\t *\r\n\t\t * Can only be used with {@link SVGRenderer}.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\t/**\r\n\t\t * Defines appearance of wireframe ends.\r\n\t\t *\r\n\t\t * Can only be used with {@link SVGRenderer}.\r\n\t\t *\r\n\t\t * @type {('round'|'bevel'|'miter')}\r\n\t\t * @default 'round'\r\n\t\t */\r\n\t\tthis.wireframeLinecap = 'round';\r\n\r\n\t\t/**\r\n\t\t * Defines appearance of wireframe joints.\r\n\t\t *\r\n\t\t * Can only be used with {@link SVGRenderer}.\r\n\t\t *\r\n\t\t * @type {('round'|'bevel'|'miter')}\r\n\t\t * @default 'round'\r\n\t\t */\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\t/**\r\n\t\t * Whether the material is affected by fog or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapRotation.copy( source.envMapRotation );\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { MeshBasicMaterial };\r\n","import { Vector3 } from '../math/Vector3.js';\r\nimport { Vector2 } from '../math/Vector2.js';\r\nimport { Sphere } from '../math/Sphere.js';\r\nimport { Ray } from '../math/Ray.js';\r\nimport { Matrix4 } from '../math/Matrix4.js';\r\nimport { Object3D } from '../core/Object3D.js';\r\nimport { Triangle } from '../math/Triangle.js';\r\nimport { BackSide, FrontSide } from '../constants.js';\r\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\r\nimport { BufferGeometry } from '../core/BufferGeometry.js';\r\n\r\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _ray = /*@__PURE__*/ new Ray();\r\nconst _sphere = /*@__PURE__*/ new Sphere();\r\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\r\n\r\nconst _vA = /*@__PURE__*/ new Vector3();\r\nconst _vB = /*@__PURE__*/ new Vector3();\r\nconst _vC = /*@__PURE__*/ new Vector3();\r\n\r\nconst _tempA = /*@__PURE__*/ new Vector3();\r\nconst _morphA = /*@__PURE__*/ new Vector3();\r\n\r\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\r\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\r\n\r\n/**\r\n * Class representing triangular polygon mesh based objects.\r\n *\r\n * ```js\r\n * const geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n * const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\r\n * const mesh = new THREE.Mesh( geometry, material );\r\n * scene.add( mesh );\r\n * ```\r\n *\r\n * @augments Object3D\r\n */\r\nclass Mesh extends Object3D {\r\n\r\n\t/**\r\n\t * Constructs a new mesh.\r\n\t *\r\n\t * @param {BufferGeometry} [geometry] - The mesh geometry.\r\n\t * @param {Material|Array<Material>} [material] - The mesh material.\r\n\t */\r\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isMesh = true;\r\n\r\n\t\tthis.type = 'Mesh';\r\n\r\n\t\t/**\r\n\t\t * The mesh geometry.\r\n\t\t *\r\n\t\t * @type {BufferGeometry}\r\n\t\t */\r\n\t\tthis.geometry = geometry;\r\n\r\n\t\t/**\r\n\t\t * The mesh material.\r\n\t\t *\r\n\t\t * @type {Material|Array<Material>}\r\n\t\t * @default MeshBasicMaterial\r\n\t\t */\r\n\t\tthis.material = material;\r\n\r\n\t\t/**\r\n\t\t * A dictionary representing the morph targets in the geometry. The key is the\r\n\t\t * morph targets name, the value its attribute index. This member is `undefined`\r\n\t\t * by default and only set when morph targets are detected in the geometry.\r\n\t\t *\r\n\t\t * @type {Object<String,number>|undefined}\r\n\t\t * @default undefined\r\n\t\t */\r\n\t\tthis.morphTargetDictionary = undefined;\r\n\r\n\t\t/**\r\n\t\t * An array of weights typically in the range `[0,1]` that specify how much of the morph\r\n\t\t * is applied. This member is `undefined` by default and only set when morph targets are\r\n\t\t * detected in the geometry.\r\n\t\t *\r\n\t\t * @type {Array<number>|undefined}\r\n\t\t * @default undefined\r\n\t\t */\r\n\t\tthis.morphTargetInfluences = undefined;\r\n\r\n\t\t/**\r\n\t\t * The number of instances of this mesh.\r\n\t\t * Can only be used with {@link WebGPURenderer}.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.count = 1;\r\n\r\n\t\tthis.updateMorphTargets();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tif ( source.morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\r\n\r\n\t\t}\r\n\r\n\t\tif ( source.morphTargetDictionary !== undefined ) {\r\n\r\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\r\n\r\n\t\t}\r\n\r\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\r\n\t\tthis.geometry = source.geometry;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the values of {@link Mesh#morphTargetDictionary} and {@link Mesh#morphTargetInfluences}\r\n\t * to make sure existing morph targets can influence this 3D object.\r\n\t */\r\n\tupdateMorphTargets() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\tconst keys = Object.keys( morphAttributes );\r\n\r\n\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n\r\n\t\t\tif ( morphAttribute !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\r\n\r\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the local-space position of the vertex at the given index, taking into\r\n\t * account the current animation state of both morph targets and skinning.\r\n\t *\r\n\t * @param {number} index - The vertex index.\r\n\t * @param {Vector3} target - The target object that is used to store the method's result.\r\n\t * @return {Vector3} The vertex position in local space.\r\n\t */\r\n\tgetVertexPosition( index, target ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst position = geometry.attributes.position;\r\n\t\tconst morphPosition = geometry.morphAttributes.position;\r\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\r\n\r\n\t\ttarget.fromBufferAttribute( position, index );\r\n\r\n\t\tconst morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\tif ( morphPosition && morphInfluences ) {\r\n\r\n\t\t\t_morphA.set( 0, 0, 0 );\r\n\r\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst influence = morphInfluences[ i ];\r\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\r\n\r\n\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\r\n\r\n\t\t\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.add( _morphA );\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes intersection points between a casted ray and this line.\r\n\t *\r\n\t * @param {Raycaster} raycaster - The raycaster.\r\n\t * @param {Array<Object>} intersects - The target array that holds the intersection points.\r\n\t */\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst material = this.material;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// test with bounding sphere in world space\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t_sphere.copy( geometry.boundingSphere );\r\n\t\t_sphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t// check distance from ray origin to bounding sphere\r\n\r\n\t\t_ray.copy( raycaster.ray ).recast( raycaster.near );\r\n\r\n\t\tif ( _sphere.containsPoint( _ray.origin ) === false ) {\r\n\r\n\t\t\tif ( _ray.intersectSphere( _sphere, _sphereHitAt ) === null ) return;\r\n\r\n\t\t\tif ( _ray.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\r\n\r\n\t\t}\r\n\r\n\t\t// convert ray to local space of mesh\r\n\r\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\r\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\r\n\r\n\t\t// test with bounding box in local space\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\r\n\t\t}\r\n\r\n\t\t// test for intersections with geometry\r\n\r\n\t\tthis._computeIntersections( raycaster, intersects, _ray );\r\n\r\n\t}\r\n\r\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\r\n\r\n\t\tlet intersection;\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst material = this.material;\r\n\r\n\t\tconst index = geometry.index;\r\n\t\tconst position = geometry.attributes.position;\r\n\t\tconst uv = geometry.attributes.uv;\r\n\t\tconst uv1 = geometry.attributes.uv1;\r\n\t\tconst normal = geometry.attributes.normal;\r\n\t\tconst groups = geometry.groups;\r\n\t\tconst drawRange = geometry.drawRange;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\t// indexed buffer geometry\r\n\r\n\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst group = groups[ i ];\r\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\r\n\r\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\tconst a = index.getX( j );\r\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\r\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\r\n\r\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tconst a = index.getX( i );\r\n\t\t\t\t\tconst b = index.getX( i + 1 );\r\n\t\t\t\t\tconst c = index.getX( i + 2 );\r\n\r\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\t// non-indexed buffer geometry\r\n\r\n\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst group = groups[ i ];\r\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\r\n\r\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\tconst a = j;\r\n\t\t\t\t\t\tconst b = j + 1;\r\n\t\t\t\t\t\tconst c = j + 2;\r\n\r\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tconst a = i;\r\n\t\t\t\t\tconst b = i + 1;\r\n\t\t\t\t\tconst c = i + 2;\r\n\r\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\tlet intersect;\r\n\r\n\tif ( material.side === BackSide ) {\r\n\r\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t} else {\r\n\r\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\r\n\r\n\t}\r\n\r\n\tif ( intersect === null ) return null;\r\n\r\n\t_intersectionPointWorld.copy( point );\r\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\r\n\r\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\treturn {\r\n\t\tdistance: distance,\r\n\t\tpoint: _intersectionPointWorld.clone(),\r\n\t\tobject: object\r\n\t};\r\n\r\n}\r\n\r\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\r\n\r\n\tobject.getVertexPosition( a, _vA );\r\n\tobject.getVertexPosition( b, _vB );\r\n\tobject.getVertexPosition( c, _vC );\r\n\r\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\r\n\r\n\tif ( intersection ) {\r\n\r\n\t\tconst barycoord = new Vector3();\r\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA, _vB, _vC, barycoord );\r\n\r\n\t\tif ( uv ) {\r\n\r\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv1 ) {\r\n\r\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\r\n\r\n\t\t}\r\n\r\n\t\tif ( normal ) {\r\n\r\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\r\n\r\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\r\n\r\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst face = {\r\n\t\t\ta: a,\r\n\t\t\tb: b,\r\n\t\t\tc: c,\r\n\t\t\tnormal: new Vector3(),\r\n\t\t\tmaterialIndex: 0\r\n\t\t};\r\n\r\n\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\r\n\r\n\t\tintersection.face = face;\r\n\t\tintersection.barycoord = barycoord;\r\n\r\n\t}\r\n\r\n\treturn intersection;\r\n\r\n}\r\n\r\nexport { Mesh };\r\n","export default /* glsl */`\r\n#ifdef USE_ALPHAHASH\r\n\r\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ALPHAHASH\r\n\r\n\t/**\r\n\t * See: https://casual-effects.com/research/Wyman2017Hashed/index.html\r\n\t */\r\n\r\n\tconst float ALPHA_HASH_SCALE = 0.05; // Derived from trials only, and may be changed.\r\n\r\n\tfloat hash2D( vec2 value ) {\r\n\r\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\r\n\r\n\t}\r\n\r\n\tfloat hash3D( vec3 value ) {\r\n\r\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\r\n\r\n\t}\r\n\r\n\tfloat getAlphaHashThreshold( vec3 position ) {\r\n\r\n\t\t// Find the discretized derivatives of our coordinates\r\n\t\tfloat maxDeriv = max(\r\n\t\t\tlength( dFdx( position.xyz ) ),\r\n\t\t\tlength( dFdy( position.xyz ) )\r\n\t\t);\r\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\r\n\r\n\t\t// Find two nearest log-discretized noise scales\r\n\t\tvec2 pixScales = vec2(\r\n\t\t\texp2( floor( log2( pixScale ) ) ),\r\n\t\t\texp2( ceil( log2( pixScale ) ) )\r\n\t\t);\r\n\r\n\t\t// Compute alpha thresholds at our two noise scales\r\n\t\tvec2 alpha = vec2(\r\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\r\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\r\n\t\t);\r\n\r\n\t\t// Factor to interpolate lerp with\r\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\r\n\r\n\t\t// Interpolate alpha threshold from noise at two scales\r\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\r\n\r\n\t\t// Pass into CDF to compute uniformly distrib threshold\r\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\r\n\t\tvec3 cases = vec3(\r\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\r\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\r\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\r\n\t\t);\r\n\r\n\t\t// Find our final, uniformly distributed alpha threshold (ατ)\r\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\r\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\r\n\t\t\t: cases.z;\r\n\r\n\t\t// Avoids ατ == 0. Could also do ατ =1-ατ\r\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ALPHAMAP\r\n\r\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ALPHAMAP\r\n\r\n\tuniform sampler2D alphaMap;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ALPHATEST\r\n\r\n\t#ifdef ALPHA_TO_COVERAGE\r\n\r\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\r\n\tif ( diffuseColor.a == 0.0 ) discard;\r\n\r\n\t#else\r\n\r\n\tif ( diffuseColor.a < alphaTest ) discard;\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ALPHATEST\r\n\tuniform float alphaTest;\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_AOMAP\r\n\r\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\r\n\r\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\r\n\r\n\t#if defined( USE_CLEARCOAT ) \r\n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\r\n\t#endif\r\n\r\n\t#if defined( USE_SHEEN ) \r\n\t\tsheenSpecularIndirect *= ambientOcclusion;\r\n\t#endif\r\n\r\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\r\n\r\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\r\n\r\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_AOMAP\r\n\r\n\tuniform sampler2D aoMap;\r\n\tuniform float aoMapIntensity;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_BATCHING\r\n\t#if ! defined( GL_ANGLE_multi_draw )\r\n\t#define gl_DrawID _gl_DrawID\r\n\tuniform int _gl_DrawID;\r\n\t#endif\r\n\r\n\tuniform highp sampler2D batchingTexture;\r\n\tuniform highp usampler2D batchingIdTexture;\r\n\tmat4 getBatchingMatrix( const in float i ) {\r\n\r\n\t\tint size = textureSize( batchingTexture, 0 ).x;\r\n\t\tint j = int( i ) * 4;\r\n\t\tint x = j % size;\r\n\t\tint y = j / size;\r\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\r\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\r\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\r\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\r\n\t\treturn mat4( v1, v2, v3, v4 );\r\n\r\n\t}\r\n\r\n\tfloat getIndirectIndex( const in int i ) {\r\n\r\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\r\n\t\tint x = i % size;\r\n\t\tint y = i / size;\r\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n#ifdef USE_BATCHING_COLOR\r\n\r\n\tuniform sampler2D batchingColorTexture;\r\n\tvec3 getBatchingColor( const in float i ) {\r\n\r\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\r\n\t\tint j = int( i );\r\n\t\tint x = j % size;\r\n\t\tint y = j / size;\r\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_BATCHING\r\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\nvec3 transformed = vec3( position );\r\n\r\n#ifdef USE_ALPHAHASH\r\n\r\n\tvPosition = vec3( position );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\nvec3 objectNormal = vec3( normal );\r\n\r\n#ifdef USE_TANGENT\r\n\r\n\tvec3 objectTangent = vec3( tangent.xyz );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n\r\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\r\n\r\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\r\n\treturn 0.25;\r\n\r\n}\r\n\r\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\r\n\r\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\r\n\r\n}\r\n\r\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\r\n\r\n\tvec3 halfDir = normalize( lightDir + viewDir );\r\n\r\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\r\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\r\n\r\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\r\n\r\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\r\n\r\n\tfloat D = D_BlinnPhong( shininess, dotNH );\r\n\r\n\treturn F * ( G * D );\r\n\r\n} // validated\r\n\r\n`;\r\n","export default /* glsl */`\r\n\r\n#ifdef USE_IRIDESCENCE\r\n\r\n\t// XYZ to linear-sRGB color space\r\n\tconst mat3 XYZ_TO_REC709 = mat3(\r\n\t\t 3.2404542, -0.9692660,  0.0556434,\r\n\t\t-1.5371385,  1.8760108, -0.2040259,\r\n\t\t-0.4985314,  0.0415560,  1.0572252\r\n\t);\r\n\r\n\t// Assume air interface for top\r\n\t// Note: We don't handle the case fresnel0 == 1\r\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\r\n\r\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\r\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\r\n\r\n\t}\r\n\r\n\t// Conversion FO/IOR\r\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\r\n\r\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\r\n\r\n\t}\r\n\r\n\t// ior is a value between 1.0 and 3.0. 1.0 is air interface\r\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\r\n\r\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\r\n\r\n\t}\r\n\r\n\t// Fresnel equations for dielectric/dielectric interfaces.\r\n\t// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\r\n\t// Evaluation XYZ sensitivity curves in Fourier space\r\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\r\n\r\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\r\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\r\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\r\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\r\n\r\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\r\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\r\n\t\txyz /= 1.0685e-7;\r\n\r\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\r\n\t\treturn rgb;\r\n\r\n\t}\r\n\r\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\r\n\r\n\t\tvec3 I;\r\n\r\n\t\t// Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\r\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\r\n\t\t// Evaluate the cosTheta on the base layer (Snell law)\r\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\r\n\r\n\t\t// Handle TIR:\r\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\r\n\t\tif ( cosTheta2Sq < 0.0 ) {\r\n\r\n\t\t\treturn vec3( 1.0 );\r\n\r\n\t\t}\r\n\r\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\r\n\r\n\t\t// First interface\r\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\r\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\r\n\t\tfloat T121 = 1.0 - R12;\r\n\t\tfloat phi12 = 0.0;\r\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\r\n\t\tfloat phi21 = PI - phi12;\r\n\r\n\t\t// Second interface\r\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) ); // guard against 1.0\r\n\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\r\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\r\n\t\tvec3 phi23 = vec3( 0.0 );\r\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\r\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\r\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\r\n\r\n\t\t// Phase shift\r\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\r\n\t\tvec3 phi = vec3( phi21 ) + phi23;\r\n\r\n\t\t// Compound terms\r\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\r\n\t\tvec3 r123 = sqrt( R123 );\r\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\r\n\r\n\t\t// Reflectance term for m = 0 (DC term amplitude)\r\n\t\tvec3 C0 = R12 + Rs;\r\n\t\tI = C0;\r\n\r\n\t\t// Reflectance term for m > 0 (pairs of diracs)\r\n\t\tvec3 Cm = Rs - T121;\r\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\r\n\r\n\t\t\tCm *= r123;\r\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\r\n\t\t\tI += Cm * Sm;\r\n\r\n\t\t}\r\n\r\n\t\t// Since out of gamut colors might be produced, negative color values are clamped to 0.\r\n\t\treturn max( I, vec3( 0.0 ) );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_BUMPMAP\r\n\r\n\tuniform sampler2D bumpMap;\r\n\tuniform float bumpScale;\r\n\r\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\r\n\t// https://mmikk.github.io/papers3d/mm_sfgrad_bump.pdf\r\n\r\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\r\n\r\n\tvec2 dHdxy_fwd() {\r\n\r\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\r\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\r\n\r\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\r\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\r\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\r\n\r\n\t\treturn vec2( dBx, dBy );\r\n\r\n\t}\r\n\r\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\r\n\r\n\t\t// normalize is done to ensure that the bump map looks the same regardless of the texture's scale\r\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\r\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\r\n\t\tvec3 vN = surf_norm; // normalized\r\n\r\n\t\tvec3 R1 = cross( vSigmaY, vN );\r\n\t\tvec3 R2 = cross( vN, vSigmaX );\r\n\r\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\r\n\r\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\r\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if NUM_CLIPPING_PLANES > 0\r\n\r\n\tvec4 plane;\r\n\r\n\t#ifdef ALPHA_TO_COVERAGE\r\n\r\n\t\tfloat distanceToPlane, distanceGradient;\r\n\t\tfloat clipOpacity = 1.0;\r\n\r\n\t\t#pragma unroll_loop_start\r\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\r\n\r\n\t\t\tplane = clippingPlanes[ i ];\r\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\r\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\r\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\r\n\r\n\t\t\tif ( clipOpacity == 0.0 ) discard;\r\n\r\n\t\t}\r\n\t\t#pragma unroll_loop_end\r\n\r\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\r\n\r\n\t\t\tfloat unionClipOpacity = 1.0;\r\n\r\n\t\t\t#pragma unroll_loop_start\r\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\r\n\r\n\t\t\t\tplane = clippingPlanes[ i ];\r\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\r\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\r\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\r\n\r\n\t\t\t}\r\n\t\t\t#pragma unroll_loop_end\r\n\r\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\r\n\r\n\t\t#endif\r\n\r\n\t\tdiffuseColor.a *= clipOpacity;\r\n\r\n\t\tif ( diffuseColor.a == 0.0 ) discard;\r\n\r\n\t#else\r\n\r\n\t\t#pragma unroll_loop_start\r\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\r\n\r\n\t\t\tplane = clippingPlanes[ i ];\r\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\r\n\r\n\t\t}\r\n\t\t#pragma unroll_loop_end\r\n\r\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\r\n\r\n\t\t\tbool clipped = true;\r\n\r\n\t\t\t#pragma unroll_loop_start\r\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\r\n\r\n\t\t\t\tplane = clippingPlanes[ i ];\r\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\r\n\r\n\t\t\t}\r\n\t\t\t#pragma unroll_loop_end\r\n\r\n\t\t\tif ( clipped ) discard;\r\n\r\n\t\t#endif\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if NUM_CLIPPING_PLANES > 0\r\n\r\n\tvarying vec3 vClipPosition;\r\n\r\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if NUM_CLIPPING_PLANES > 0\r\n\r\n\tvarying vec3 vClipPosition;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if NUM_CLIPPING_PLANES > 0\r\n\r\n\tvClipPosition = - mvPosition.xyz;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_COLOR_ALPHA )\r\n\r\n\tdiffuseColor *= vColor;\r\n\r\n#elif defined( USE_COLOR )\r\n\r\n\tdiffuseColor.rgb *= vColor;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_COLOR_ALPHA )\r\n\r\n\tvarying vec4 vColor;\r\n\r\n#elif defined( USE_COLOR )\r\n\r\n\tvarying vec3 vColor;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_COLOR_ALPHA )\r\n\r\n\tvarying vec4 vColor;\r\n\r\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\r\n\r\n\tvarying vec3 vColor;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_COLOR_ALPHA )\r\n\r\n\tvColor = vec4( 1.0 );\r\n\r\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\r\n\r\n\tvColor = vec3( 1.0 );\r\n\r\n#endif\r\n\r\n#ifdef USE_COLOR\r\n\r\n\tvColor *= color;\r\n\r\n#endif\r\n\r\n#ifdef USE_INSTANCING_COLOR\r\n\r\n\tvColor.xyz *= instanceColor.xyz;\r\n\r\n#endif\r\n\r\n#ifdef USE_BATCHING_COLOR\r\n\r\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\r\n\r\n\tvColor.xyz *= batchingColor.xyz;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#define PI 3.141592653589793\r\n#define PI2 6.283185307179586\r\n#define PI_HALF 1.5707963267948966\r\n#define RECIPROCAL_PI 0.3183098861837907\r\n#define RECIPROCAL_PI2 0.15915494309189535\r\n#define EPSILON 1e-6\r\n\r\n#ifndef saturate\r\n// <tonemapping_pars_fragment> may have defined saturate() already\r\n#define saturate( a ) clamp( a, 0.0, 1.0 )\r\n#endif\r\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\r\n\r\nfloat pow2( const in float x ) { return x*x; }\r\nvec3 pow2( const in vec3 x ) { return x*x; }\r\nfloat pow3( const in float x ) { return x*x*x; }\r\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\r\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\r\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\r\n\r\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\r\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\r\nhighp float rand( const in vec2 uv ) {\r\n\r\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\r\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\r\n\r\n\treturn fract( sin( sn ) * c );\r\n\r\n}\r\n\r\n#ifdef HIGH_PRECISION\r\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\r\n#else\r\n\tfloat precisionSafeLength( vec3 v ) {\r\n\t\tfloat maxComponent = max3( abs( v ) );\r\n\t\treturn length( v / maxComponent ) * maxComponent;\r\n\t}\r\n#endif\r\n\r\nstruct IncidentLight {\r\n\tvec3 color;\r\n\tvec3 direction;\r\n\tbool visible;\r\n};\r\n\r\nstruct ReflectedLight {\r\n\tvec3 directDiffuse;\r\n\tvec3 directSpecular;\r\n\tvec3 indirectDiffuse;\r\n\tvec3 indirectSpecular;\r\n};\r\n\r\n#ifdef USE_ALPHAHASH\r\n\r\n\tvarying vec3 vPosition;\r\n\r\n#endif\r\n\r\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\r\n\r\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\r\n\r\n}\r\n\r\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\r\n\r\n\t// dir can be either a direction vector or a normal vector\r\n\t// upper-left 3x3 of matrix is assumed to be orthogonal\r\n\r\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\r\n\r\n}\r\n\r\nmat3 transposeMat3( const in mat3 m ) {\r\n\r\n\tmat3 tmp;\r\n\r\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\r\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\r\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\r\n\r\n\treturn tmp;\r\n\r\n}\r\n\r\nbool isPerspectiveMatrix( mat4 m ) {\r\n\r\n\treturn m[ 2 ][ 3 ] == - 1.0;\r\n\r\n}\r\n\r\nvec2 equirectUv( in vec3 dir ) {\r\n\r\n\t// dir is assumed to be unit length\r\n\r\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\r\n\r\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\r\n\r\n\treturn vec2( u, v );\r\n\r\n}\r\n\r\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\r\n\r\n\treturn RECIPROCAL_PI * diffuseColor;\r\n\r\n} // validated\r\n\r\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\r\n\r\n\t// Original approximation by Christophe Schlick '94\r\n\t// float fresnel = pow( 1.0 - dotVH, 5.0 );\r\n\r\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\r\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\r\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\r\n\r\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\r\n\r\n} // validated\r\n\r\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\r\n\r\n\t// Original approximation by Christophe Schlick '94\r\n\t// float fresnel = pow( 1.0 - dotVH, 5.0 );\r\n\r\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\r\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\r\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\r\n\r\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\r\n\r\n} // validated\r\n`;\r\n","export default /* glsl */`\r\n#ifdef ENVMAP_TYPE_CUBE_UV\r\n\r\n\t#define cubeUV_minMipLevel 4.0\r\n\t#define cubeUV_minTileSize 16.0\r\n\r\n\t// These shader functions convert between the UV coordinates of a single face of\r\n\t// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\r\n\t// sampling a textureCube (not generally normalized ).\r\n\r\n\tfloat getFace( vec3 direction ) {\r\n\r\n\t\tvec3 absDirection = abs( direction );\r\n\r\n\t\tfloat face = - 1.0;\r\n\r\n\t\tif ( absDirection.x > absDirection.z ) {\r\n\r\n\t\t\tif ( absDirection.x > absDirection.y )\r\n\r\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\r\n\r\n\t\t\telse\r\n\r\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( absDirection.z > absDirection.y )\r\n\r\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\r\n\r\n\t\t\telse\r\n\r\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\r\n\r\n\t\t}\r\n\r\n\t\treturn face;\r\n\r\n\t}\r\n\r\n\t// RH coordinate system; PMREM face-indexing convention\r\n\tvec2 getUV( vec3 direction, float face ) {\r\n\r\n\t\tvec2 uv;\r\n\r\n\t\tif ( face == 0.0 ) {\r\n\r\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x ); // pos x\r\n\r\n\t\t} else if ( face == 1.0 ) {\r\n\r\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y ); // pos y\r\n\r\n\t\t} else if ( face == 2.0 ) {\r\n\r\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z ); // pos z\r\n\r\n\t\t} else if ( face == 3.0 ) {\r\n\r\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x ); // neg x\r\n\r\n\t\t} else if ( face == 4.0 ) {\r\n\r\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y ); // neg y\r\n\r\n\t\t} else {\r\n\r\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z ); // neg z\r\n\r\n\t\t}\r\n\r\n\t\treturn 0.5 * ( uv + 1.0 );\r\n\r\n\t}\r\n\r\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\r\n\r\n\t\tfloat face = getFace( direction );\r\n\r\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\r\n\r\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\r\n\r\n\t\tfloat faceSize = exp2( mipInt );\r\n\r\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0; // #25071\r\n\r\n\t\tif ( face > 2.0 ) {\r\n\r\n\t\t\tuv.y += faceSize;\r\n\r\n\t\t\tface -= 3.0;\r\n\r\n\t\t}\r\n\r\n\t\tuv.x += face * faceSize;\r\n\r\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\r\n\r\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\r\n\r\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\r\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\r\n\r\n\t\t#ifdef texture2DGradEXT\r\n\r\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb; // disable anisotropic filtering\r\n\r\n\t\t#else\r\n\r\n\t\t\treturn texture2D( envMap, uv ).rgb;\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n\t// These defines must match with PMREMGenerator\r\n\r\n\t#define cubeUV_r0 1.0\r\n\t#define cubeUV_m0 - 2.0\r\n\t#define cubeUV_r1 0.8\r\n\t#define cubeUV_m1 - 1.0\r\n\t#define cubeUV_r4 0.4\r\n\t#define cubeUV_m4 2.0\r\n\t#define cubeUV_r5 0.305\r\n\t#define cubeUV_m5 3.0\r\n\t#define cubeUV_r6 0.21\r\n\t#define cubeUV_m6 4.0\r\n\r\n\tfloat roughnessToMip( float roughness ) {\r\n\r\n\t\tfloat mip = 0.0;\r\n\r\n\t\tif ( roughness >= cubeUV_r1 ) {\r\n\r\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\r\n\r\n\t\t} else if ( roughness >= cubeUV_r4 ) {\r\n\r\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\r\n\r\n\t\t} else if ( roughness >= cubeUV_r5 ) {\r\n\r\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\r\n\r\n\t\t} else if ( roughness >= cubeUV_r6 ) {\r\n\r\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness ); // 1.16 = 1.79^0.25\r\n\t\t}\r\n\r\n\t\treturn mip;\r\n\r\n\t}\r\n\r\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\r\n\r\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\r\n\r\n\t\tfloat mipF = fract( mip );\r\n\r\n\t\tfloat mipInt = floor( mip );\r\n\r\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\r\n\r\n\t\tif ( mipF == 0.0 ) {\r\n\r\n\t\t\treturn vec4( color0, 1.0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\r\n\r\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n\r\nvec3 transformedNormal = objectNormal;\r\n#ifdef USE_TANGENT\r\n\r\n\tvec3 transformedTangent = objectTangent;\r\n\r\n#endif\r\n\r\n#ifdef USE_BATCHING\r\n\r\n\t// this is in lieu of a per-instance normal-matrix\r\n\t// shear transforms in the instance matrix are not supported\r\n\r\n\tmat3 bm = mat3( batchingMatrix );\r\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\r\n\ttransformedNormal = bm * transformedNormal;\r\n\r\n\t#ifdef USE_TANGENT\r\n\r\n\t\ttransformedTangent = bm * transformedTangent;\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#ifdef USE_INSTANCING\r\n\r\n\t// this is in lieu of a per-instance normal-matrix\r\n\t// shear transforms in the instance matrix are not supported\r\n\r\n\tmat3 im = mat3( instanceMatrix );\r\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\r\n\ttransformedNormal = im * transformedNormal;\r\n\r\n\t#ifdef USE_TANGENT\r\n\r\n\t\ttransformedTangent = im * transformedTangent;\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\ntransformedNormal = normalMatrix * transformedNormal;\r\n\r\n#ifdef FLIP_SIDED\r\n\r\n\ttransformedNormal = - transformedNormal;\r\n\r\n#endif\r\n\r\n#ifdef USE_TANGENT\r\n\r\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\r\n\r\n\t#ifdef FLIP_SIDED\r\n\r\n\t\ttransformedTangent = - transformedTangent;\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_DISPLACEMENTMAP\r\n\r\n\tuniform sampler2D displacementMap;\r\n\tuniform float displacementScale;\r\n\tuniform float displacementBias;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_DISPLACEMENTMAP\r\n\r\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_EMISSIVEMAP\r\n\r\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\r\n\r\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\r\n\r\n\t\t// use inline sRGB decode until browsers properly support SRGB8_ALPHA8 with video textures (#26516)\r\n\r\n\t\temissiveColor = sRGBTransferEOTF( emissiveColor );\r\n\r\n\t#endif\r\n\r\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_EMISSIVEMAP\r\n\r\n\tuniform sampler2D emissiveMap;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\ngl_FragColor = linearToOutputTexel( gl_FragColor );\r\n`;\r\n","export default /* glsl */`\r\n\r\nvec4 LinearTransferOETF( in vec4 value ) {\r\n\treturn value;\r\n}\r\n\r\nvec4 sRGBTransferEOTF( in vec4 value ) {\r\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\r\n}\r\n\r\nvec4 sRGBTransferOETF( in vec4 value ) {\r\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\r\n}\r\n\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ENVMAP\r\n\r\n\t#ifdef ENV_WORLDPOS\r\n\r\n\t\tvec3 cameraToFrag;\r\n\r\n\t\tif ( isOrthographic ) {\r\n\r\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\r\n\r\n\t\t}\r\n\r\n\t\t// Transforming Normal Vectors with the Inverse Transformation\r\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\r\n\r\n\t\t#ifdef ENVMAP_MODE_REFLECTION\r\n\r\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\r\n\r\n\t\t#else\r\n\r\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\r\n\r\n\t\t#endif\r\n\r\n\t#else\r\n\r\n\t\tvec3 reflectVec = vReflect;\r\n\r\n\t#endif\r\n\r\n\t#ifdef ENVMAP_TYPE_CUBE\r\n\r\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\r\n\r\n\t#else\r\n\r\n\t\tvec4 envColor = vec4( 0.0 );\r\n\r\n\t#endif\r\n\r\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\r\n\r\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\r\n\r\n\t#elif defined( ENVMAP_BLENDING_MIX )\r\n\r\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\r\n\r\n\t#elif defined( ENVMAP_BLENDING_ADD )\r\n\r\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ENVMAP\r\n\r\n\tuniform float envMapIntensity;\r\n\tuniform float flipEnvMap;\r\n\tuniform mat3 envMapRotation;\r\n\r\n\t#ifdef ENVMAP_TYPE_CUBE\r\n\t\tuniform samplerCube envMap;\r\n\t#else\r\n\t\tuniform sampler2D envMap;\r\n\t#endif\r\n\t\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ENVMAP\r\n\r\n\tuniform float reflectivity;\r\n\r\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\r\n\r\n\t\t#define ENV_WORLDPOS\r\n\r\n\t#endif\r\n\r\n\t#ifdef ENV_WORLDPOS\r\n\r\n\t\tvarying vec3 vWorldPosition;\r\n\t\tuniform float refractionRatio;\r\n\t#else\r\n\t\tvarying vec3 vReflect;\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ENVMAP\r\n\r\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\r\n\r\n\t\t#define ENV_WORLDPOS\r\n\r\n\t#endif\r\n\r\n\t#ifdef ENV_WORLDPOS\r\n\t\t\r\n\t\tvarying vec3 vWorldPosition;\r\n\r\n\t#else\r\n\r\n\t\tvarying vec3 vReflect;\r\n\t\tuniform float refractionRatio;\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ENVMAP\r\n\r\n\t#ifdef ENV_WORLDPOS\r\n\r\n\t\tvWorldPosition = worldPosition.xyz;\r\n\r\n\t#else\r\n\r\n\t\tvec3 cameraToVertex;\r\n\r\n\t\tif ( isOrthographic ) {\r\n\r\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\r\n\r\n\t\t}\r\n\r\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\r\n\r\n\t\t#ifdef ENVMAP_MODE_REFLECTION\r\n\r\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\r\n\r\n\t\t#else\r\n\r\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\r\n\r\n\t\t#endif\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_FOG\r\n\r\n\tvFogDepth = - mvPosition.z;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_FOG\r\n\r\n\tvarying float vFogDepth;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_FOG\r\n\r\n\t#ifdef FOG_EXP2\r\n\r\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\r\n\r\n\t#else\r\n\r\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\r\n\r\n\t#endif\r\n\r\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_FOG\r\n\r\n\tuniform vec3 fogColor;\r\n\tvarying float vFogDepth;\r\n\r\n\t#ifdef FOG_EXP2\r\n\r\n\t\tuniform float fogDensity;\r\n\r\n\t#else\r\n\r\n\t\tuniform float fogNear;\r\n\t\tuniform float fogFar;\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n\r\n#ifdef USE_GRADIENTMAP\r\n\r\n\tuniform sampler2D gradientMap;\r\n\r\n#endif\r\n\r\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\r\n\r\n\t// dotNL will be from -1.0 to 1.0\r\n\tfloat dotNL = dot( normal, lightDirection );\r\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\r\n\r\n\t#ifdef USE_GRADIENTMAP\r\n\r\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\r\n\r\n\t#else\r\n\r\n\t\tvec2 fw = fwidth( coord ) * 0.5;\r\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\r\n\r\n\t#endif\r\n\r\n}\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_LIGHTMAP\r\n\r\n\tuniform sampler2D lightMap;\r\n\tuniform float lightMapIntensity;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\nLambertMaterial material;\r\nmaterial.diffuseColor = diffuseColor.rgb;\r\nmaterial.specularStrength = specularStrength;\r\n`;\r\n","export default /* glsl */`\r\nvarying vec3 vViewPosition;\r\n\r\nstruct LambertMaterial {\r\n\r\n\tvec3 diffuseColor;\r\n\tfloat specularStrength;\r\n\r\n};\r\n\r\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\r\n\tvec3 irradiance = dotNL * directLight.color;\r\n\r\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\r\n\r\n}\r\n\r\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\r\n\r\n}\r\n\r\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\r\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert\r\n`;\r\n","export default /* glsl */`\r\nuniform bool receiveShadow;\r\nuniform vec3 ambientLightColor;\r\n\r\n#if defined( USE_LIGHT_PROBES )\r\n\r\n\tuniform vec3 lightProbe[ 9 ];\r\n\r\n#endif\r\n\r\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\r\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\r\n\r\n\t// normal is assumed to have unit length\r\n\r\n\tfloat x = normal.x, y = normal.y, z = normal.z;\r\n\r\n\t// band 0\r\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\r\n\r\n\t// band 1\r\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\r\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\r\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\r\n\r\n\t// band 2\r\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\r\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\r\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\r\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\r\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\r\n\r\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\r\n\r\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\r\n\r\n\treturn irradiance;\r\n\r\n}\r\n\r\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\r\n\r\n\tvec3 irradiance = ambientLightColor;\r\n\r\n\treturn irradiance;\r\n\r\n}\r\n\r\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\r\n\r\n\t// based upon Frostbite 3 Moving to Physically-based Rendering\r\n\t// page 32, equation 26: E[window1]\r\n\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\r\n\r\n\tif ( cutoffDistance > 0.0 ) {\r\n\r\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\r\n\r\n\t}\r\n\r\n\treturn distanceFalloff;\r\n\r\n}\r\n\r\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\r\n\r\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\r\n\r\n}\r\n\r\n#if NUM_DIR_LIGHTS > 0\r\n\r\n\tstruct DirectionalLight {\r\n\t\tvec3 direction;\r\n\t\tvec3 color;\r\n\t};\r\n\r\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\r\n\r\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\r\n\r\n\t\tlight.color = directionalLight.color;\r\n\t\tlight.direction = directionalLight.direction;\r\n\t\tlight.visible = true;\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n\r\n#if NUM_POINT_LIGHTS > 0\r\n\r\n\tstruct PointLight {\r\n\t\tvec3 position;\r\n\t\tvec3 color;\r\n\t\tfloat distance;\r\n\t\tfloat decay;\r\n\t};\r\n\r\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\r\n\r\n\t// light is an out parameter as having it as a return value caused compiler errors on some devices\r\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\r\n\r\n\t\tvec3 lVector = pointLight.position - geometryPosition;\r\n\r\n\t\tlight.direction = normalize( lVector );\r\n\r\n\t\tfloat lightDistance = length( lVector );\r\n\r\n\t\tlight.color = pointLight.color;\r\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\r\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n\r\n#if NUM_SPOT_LIGHTS > 0\r\n\r\n\tstruct SpotLight {\r\n\t\tvec3 position;\r\n\t\tvec3 direction;\r\n\t\tvec3 color;\r\n\t\tfloat distance;\r\n\t\tfloat decay;\r\n\t\tfloat coneCos;\r\n\t\tfloat penumbraCos;\r\n\t};\r\n\r\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\r\n\r\n\t// light is an out parameter as having it as a return value caused compiler errors on some devices\r\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\r\n\r\n\t\tvec3 lVector = spotLight.position - geometryPosition;\r\n\r\n\t\tlight.direction = normalize( lVector );\r\n\r\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\r\n\r\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\r\n\r\n\t\tif ( spotAttenuation > 0.0 ) {\r\n\r\n\t\t\tfloat lightDistance = length( lVector );\r\n\r\n\t\t\tlight.color = spotLight.color * spotAttenuation;\r\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\r\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlight.color = vec3( 0.0 );\r\n\t\t\tlight.visible = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n\r\n#if NUM_RECT_AREA_LIGHTS > 0\r\n\r\n\tstruct RectAreaLight {\r\n\t\tvec3 color;\r\n\t\tvec3 position;\r\n\t\tvec3 halfWidth;\r\n\t\tvec3 halfHeight;\r\n\t};\r\n\r\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\r\n\t// BRDF approximation Texture is 64x64\r\n\tuniform sampler2D ltc_1; // RGBA Float\r\n\tuniform sampler2D ltc_2; // RGBA Float\r\n\r\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\r\n\r\n#endif\r\n\r\n\r\n#if NUM_HEMI_LIGHTS > 0\r\n\r\n\tstruct HemisphereLight {\r\n\t\tvec3 direction;\r\n\t\tvec3 skyColor;\r\n\t\tvec3 groundColor;\r\n\t};\r\n\r\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\r\n\r\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\r\n\r\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\r\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\r\n\r\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\r\n\r\n\t\treturn irradiance;\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ENVMAP\r\n\r\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\r\n\r\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\r\n\r\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\r\n\r\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\r\n\r\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\r\n\r\n\t\t#else\r\n\r\n\t\t\treturn vec3( 0.0 );\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\r\n\r\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\r\n\r\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\r\n\r\n\t\t\t// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\r\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\r\n\r\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\r\n\r\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\r\n\r\n\t\t\treturn envMapColor.rgb * envMapIntensity;\r\n\r\n\t\t#else\r\n\r\n\t\t\treturn vec3( 0.0 );\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n\t#ifdef USE_ANISOTROPY\r\n\r\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\r\n\r\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\r\n\r\n\t\t\t  // https://google.github.io/filament/Filament.md.html#lighting/imagebasedlights/anisotropy\r\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\r\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\r\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\r\n\r\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\r\n\r\n\t\t\t#else\r\n\r\n\t\t\t\treturn vec3( 0.0 );\r\n\r\n\t\t\t#endif\r\n\r\n\t\t}\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\nToonMaterial material;\r\nmaterial.diffuseColor = diffuseColor.rgb;\r\n`;\r\n","export default /* glsl */`\r\nvarying vec3 vViewPosition;\r\n\r\nstruct ToonMaterial {\r\n\r\n\tvec3 diffuseColor;\r\n\r\n};\r\n\r\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\r\n\r\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\r\n\r\n}\r\n\r\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\r\n\r\n}\r\n\r\n#define RE_Direct\t\t\t\tRE_Direct_Toon\r\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\r\n`;\r\n","export default /* glsl */`\r\nBlinnPhongMaterial material;\r\nmaterial.diffuseColor = diffuseColor.rgb;\r\nmaterial.specularColor = specular;\r\nmaterial.specularShininess = shininess;\r\nmaterial.specularStrength = specularStrength;\r\n`;\r\n","export default /* glsl */`\r\nvarying vec3 vViewPosition;\r\n\r\nstruct BlinnPhongMaterial {\r\n\r\n\tvec3 diffuseColor;\r\n\tvec3 specularColor;\r\n\tfloat specularShininess;\r\n\tfloat specularStrength;\r\n\r\n};\r\n\r\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\r\n\tvec3 irradiance = dotNL * directLight.color;\r\n\r\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\r\n\r\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\r\n\r\n}\r\n\r\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\r\n\r\n}\r\n\r\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\r\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\r\n`;\r\n","export default /* glsl */`\r\nPhysicalMaterial material;\r\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\r\n\r\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\r\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\r\n\r\nmaterial.roughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\r\nmaterial.roughness += geometryRoughness;\r\nmaterial.roughness = min( material.roughness, 1.0 );\r\n\r\n#ifdef IOR\r\n\r\n\tmaterial.ior = ior;\r\n\r\n\t#ifdef USE_SPECULAR\r\n\r\n\t\tfloat specularIntensityFactor = specularIntensity;\r\n\t\tvec3 specularColorFactor = specularColor;\r\n\r\n\t\t#ifdef USE_SPECULAR_COLORMAP\r\n\r\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\r\n\r\n\t\t#endif\r\n\r\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\r\n\r\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\r\n\r\n\t\t#endif\r\n\r\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\r\n\r\n\t#else\r\n\r\n\t\tfloat specularIntensityFactor = 1.0;\r\n\t\tvec3 specularColorFactor = vec3( 1.0 );\r\n\t\tmaterial.specularF90 = 1.0;\r\n\r\n\t#endif\r\n\r\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\r\n\r\n#else\r\n\r\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\r\n\tmaterial.specularF90 = 1.0;\r\n\r\n#endif\r\n\r\n#ifdef USE_CLEARCOAT\r\n\r\n\tmaterial.clearcoat = clearcoat;\r\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\r\n\tmaterial.clearcoatF0 = vec3( 0.04 );\r\n\tmaterial.clearcoatF90 = 1.0;\r\n\r\n\t#ifdef USE_CLEARCOATMAP\r\n\r\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\r\n\r\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\r\n\r\n\t#endif\r\n\r\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\r\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\r\n\tmaterial.clearcoatRoughness += geometryRoughness;\r\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\r\n\r\n#endif\r\n\r\n#ifdef USE_DISPERSION\r\n\r\n\tmaterial.dispersion = dispersion;\r\n\r\n#endif\r\n\r\n#ifdef USE_IRIDESCENCE\r\n\r\n\tmaterial.iridescence = iridescence;\r\n\tmaterial.iridescenceIOR = iridescenceIOR;\r\n\r\n\t#ifdef USE_IRIDESCENCEMAP\r\n\r\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\r\n\r\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\r\n\r\n\t#else\r\n\r\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#ifdef USE_SHEEN\r\n\r\n\tmaterial.sheenColor = sheenColor;\r\n\r\n\t#ifdef USE_SHEEN_COLORMAP\r\n\r\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\r\n\r\n\t#endif\r\n\r\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\r\n\r\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\r\n\r\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#ifdef USE_ANISOTROPY\r\n\r\n\t#ifdef USE_ANISOTROPYMAP\r\n\r\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\r\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\r\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\r\n\r\n\t#else\r\n\r\n\t\tvec2 anisotropyV = anisotropyVector;\r\n\r\n\t#endif\r\n\r\n\tmaterial.anisotropy = length( anisotropyV );\r\n\r\n\tif( material.anisotropy == 0.0 ) {\r\n\t\tanisotropyV = vec2( 1.0, 0.0 );\r\n\t} else {\r\n\t\tanisotropyV /= material.anisotropy;\r\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\r\n\t}\r\n\r\n\t// Roughness along the anisotropy bitangent is the material roughness, while the tangent roughness increases with anisotropy.\r\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\r\n\r\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\r\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n\r\nstruct PhysicalMaterial {\r\n\r\n\tvec3 diffuseColor;\r\n\tfloat roughness;\r\n\tvec3 specularColor;\r\n\tfloat specularF90;\r\n\tfloat dispersion;\r\n\r\n\t#ifdef USE_CLEARCOAT\r\n\t\tfloat clearcoat;\r\n\t\tfloat clearcoatRoughness;\r\n\t\tvec3 clearcoatF0;\r\n\t\tfloat clearcoatF90;\r\n\t#endif\r\n\r\n\t#ifdef USE_IRIDESCENCE\r\n\t\tfloat iridescence;\r\n\t\tfloat iridescenceIOR;\r\n\t\tfloat iridescenceThickness;\r\n\t\tvec3 iridescenceFresnel;\r\n\t\tvec3 iridescenceF0;\r\n\t#endif\r\n\r\n\t#ifdef USE_SHEEN\r\n\t\tvec3 sheenColor;\r\n\t\tfloat sheenRoughness;\r\n\t#endif\r\n\r\n\t#ifdef IOR\r\n\t\tfloat ior;\r\n\t#endif\r\n\r\n\t#ifdef USE_TRANSMISSION\r\n\t\tfloat transmission;\r\n\t\tfloat transmissionAlpha;\r\n\t\tfloat thickness;\r\n\t\tfloat attenuationDistance;\r\n\t\tvec3 attenuationColor;\r\n\t#endif\r\n\r\n\t#ifdef USE_ANISOTROPY\r\n\t\tfloat anisotropy;\r\n\t\tfloat alphaT;\r\n\t\tvec3 anisotropyT;\r\n\t\tvec3 anisotropyB;\r\n\t#endif\r\n\r\n};\r\n\r\n// temporary\r\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\r\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\r\nvec3 sheenSpecularDirect = vec3( 0.0 );\r\nvec3 sheenSpecularIndirect = vec3(0.0 );\r\n\r\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\r\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\r\n    float x2 = x * x;\r\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\r\n\r\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\r\n}\r\n\r\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\r\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\r\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\r\n\r\n\treturn 0.5 / max( gv + gl, EPSILON );\r\n\r\n}\r\n\r\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\r\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\r\n// alpha is \"roughness squared\" in Disney’s reparameterization\r\nfloat D_GGX( const in float alpha, const in float dotNH ) {\r\n\r\n\tfloat a2 = pow2( alpha );\r\n\r\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\r\n\r\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\r\n\r\n}\r\n\r\n// https://google.github.io/filament/Filament.md.html#materialsystem/anisotropicmodel/anisotropicspecularbrdf\r\n#ifdef USE_ANISOTROPY\r\n\r\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\r\n\r\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\r\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\r\n\t\tfloat v = 0.5 / ( gv + gl );\r\n\r\n\t\treturn saturate(v);\r\n\r\n\t}\r\n\r\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\r\n\r\n\t\tfloat a2 = alphaT * alphaB;\r\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\r\n\t\thighp float v2 = dot( v, v );\r\n\t\tfloat w2 = a2 / v2;\r\n\r\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\n#ifdef USE_CLEARCOAT\r\n\r\n\t// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\r\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\r\n\r\n\t\tvec3 f0 = material.clearcoatF0;\r\n\t\tfloat f90 = material.clearcoatF90;\r\n\t\tfloat roughness = material.clearcoatRoughness;\r\n\r\n\t\tfloat alpha = pow2( roughness ); // UE4's roughness\r\n\r\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\r\n\r\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\r\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\r\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\r\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\r\n\r\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\r\n\r\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\r\n\r\n\t\tfloat D = D_GGX( alpha, dotNH );\r\n\r\n\t\treturn F * ( V * D );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\r\n\r\n\tvec3 f0 = material.specularColor;\r\n\tfloat f90 = material.specularF90;\r\n\tfloat roughness = material.roughness;\r\n\r\n\tfloat alpha = pow2( roughness ); // UE4's roughness\r\n\r\n\tvec3 halfDir = normalize( lightDir + viewDir );\r\n\r\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\r\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\r\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\r\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\r\n\r\n\tvec3 F = F_Schlick( f0, f90, dotVH );\r\n\r\n\t#ifdef USE_IRIDESCENCE\r\n\r\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_ANISOTROPY\r\n\r\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\r\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\r\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\r\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\r\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\r\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\r\n\r\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\r\n\r\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\r\n\r\n\t#else\r\n\r\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\r\n\r\n\t\tfloat D = D_GGX( alpha, dotNH );\r\n\r\n\t#endif\r\n\r\n\treturn F * ( V * D );\r\n\r\n}\r\n\r\n// Rect Area Light\r\n\r\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\r\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\r\n// code: https://github.com/selfshadow/ltc_code/\r\n\r\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\r\n\r\n\tconst float LUT_SIZE = 64.0;\r\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\r\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\r\n\r\n\tfloat dotNV = saturate( dot( N, V ) );\r\n\r\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\r\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\r\n\r\n\tuv = uv * LUT_SCALE + LUT_BIAS;\r\n\r\n\treturn uv;\r\n\r\n}\r\n\r\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\r\n\r\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\r\n\t// An approximation of the form factor of a horizon-clipped rectangle.\r\n\r\n\tfloat l = length( f );\r\n\r\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\r\n\r\n}\r\n\r\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\r\n\r\n\tfloat x = dot( v1, v2 );\r\n\r\n\tfloat y = abs( x );\r\n\r\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\r\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\r\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\r\n\tfloat v = a / b;\r\n\r\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\r\n\r\n\treturn cross( v1, v2 ) * theta_sintheta;\r\n\r\n}\r\n\r\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\r\n\r\n\t// bail if point is on back side of plane of light\r\n\t// assumes ccw winding order of light vertices\r\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\r\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\r\n\tvec3 lightNormal = cross( v1, v2 );\r\n\r\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\r\n\r\n\t// construct orthonormal basis around N\r\n\tvec3 T1, T2;\r\n\tT1 = normalize( V - N * dot( V, N ) );\r\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\r\n\r\n\t// compute transform\r\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\r\n\r\n\t// transform rect\r\n\tvec3 coords[ 4 ];\r\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\r\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\r\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\r\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\r\n\r\n\t// project rect onto sphere\r\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\r\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\r\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\r\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\r\n\r\n\t// calculate vector form factor\r\n\tvec3 vectorFormFactor = vec3( 0.0 );\r\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\r\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\r\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\r\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\r\n\r\n\t// adjust for horizon clipping\r\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\r\n\r\n/*\r\n\t// alternate method of adjusting for horizon clipping (see reference)\r\n\t// refactoring required\r\n\tfloat len = length( vectorFormFactor );\r\n\tfloat z = vectorFormFactor.z / len;\r\n\r\n\tconst float LUT_SIZE = 64.0;\r\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\r\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\r\n\r\n\t// tabulated horizon-clipped sphere, apparently...\r\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\r\n\tuv = uv * LUT_SCALE + LUT_BIAS;\r\n\r\n\tfloat scale = texture2D( ltc_2, uv ).w;\r\n\r\n\tfloat result = len * scale;\r\n*/\r\n\r\n\treturn vec3( result );\r\n\r\n}\r\n\r\n// End Rect Area Light\r\n\r\n#if defined( USE_SHEEN )\r\n\r\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\r\nfloat D_Charlie( float roughness, float dotNH ) {\r\n\r\n\tfloat alpha = pow2( roughness );\r\n\r\n\t// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\"\r\n\tfloat invAlpha = 1.0 / alpha;\r\n\tfloat cos2h = dotNH * dotNH;\r\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 ); // 2^(-14/2), so sin2h^2 > 0 in fp16\r\n\r\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\r\n\r\n}\r\n\r\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\r\nfloat V_Neubelt( float dotNV, float dotNL ) {\r\n\r\n\t// Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\r\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\r\n\r\n}\r\n\r\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\r\n\r\n\tvec3 halfDir = normalize( lightDir + viewDir );\r\n\r\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\r\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\r\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\r\n\r\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\r\n\tfloat V = V_Neubelt( dotNV, dotNL );\r\n\r\n\treturn sheenColor * ( D * V );\r\n\r\n}\r\n\r\n#endif\r\n\r\n// This is a curve-fit approximation to the \"Charlie sheen\" BRDF integrated over the hemisphere from\r\n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\r\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\r\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\r\n\r\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\r\n\r\n\tfloat r2 = roughness * roughness;\r\n\r\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\r\n\r\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\r\n\r\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\r\n\r\n\treturn saturate( DG * RECIPROCAL_PI );\r\n\r\n}\r\n\r\n// Analytical approximation of the DFG LUT, one half of the\r\n// split-sum approximation used in indirect specular lighting.\r\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\r\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\r\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\r\n\r\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\r\n\r\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\r\n\r\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\r\n\r\n\tvec4 r = roughness * c0 + c1;\r\n\r\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\r\n\r\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\r\n\r\n\treturn fab;\r\n\r\n}\r\n\r\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\r\n\r\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\r\n\r\n\treturn specularColor * fab.x + specularF90 * fab.y;\r\n\r\n}\r\n\r\n// Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\r\n// Approximates multiscattering in order to preserve energy.\r\n// http://www.jcgt.org/published/0008/01/03/\r\n#ifdef USE_IRIDESCENCE\r\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\r\n#else\r\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\r\n#endif\r\n\r\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\r\n\r\n\t#ifdef USE_IRIDESCENCE\r\n\r\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\r\n\r\n\t#else\r\n\r\n\t\tvec3 Fr = specularColor;\r\n\r\n\t#endif\r\n\r\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\r\n\r\n\tfloat Ess = fab.x + fab.y;\r\n\tfloat Ems = 1.0 - Ess;\r\n\r\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619; // 1/21\r\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\r\n\r\n\tsingleScatter += FssEss;\r\n\tmultiScatter += Fms * Ems;\r\n\r\n}\r\n\r\n#if NUM_RECT_AREA_LIGHTS > 0\r\n\r\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\t\tvec3 normal = geometryNormal;\r\n\t\tvec3 viewDir = geometryViewDir;\r\n\t\tvec3 position = geometryPosition;\r\n\t\tvec3 lightPos = rectAreaLight.position;\r\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\r\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\r\n\t\tvec3 lightColor = rectAreaLight.color;\r\n\t\tfloat roughness = material.roughness;\r\n\r\n\t\tvec3 rectCoords[ 4 ];\r\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\r\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\r\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\r\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\r\n\r\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\r\n\r\n\t\tvec4 t1 = texture2D( ltc_1, uv );\r\n\t\tvec4 t2 = texture2D( ltc_2, uv );\r\n\r\n\t\tmat3 mInv = mat3(\r\n\t\t\tvec3( t1.x, 0, t1.y ),\r\n\t\t\tvec3(    0, 1,    0 ),\r\n\t\t\tvec3( t1.z, 0, t1.w )\r\n\t\t);\r\n\r\n\t\t// LTC Fresnel Approximation by Stephen Hill\r\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\r\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\r\n\r\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\r\n\r\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\r\n\r\n\tvec3 irradiance = dotNL * directLight.color;\r\n\r\n\t#ifdef USE_CLEARCOAT\r\n\r\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\r\n\r\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\r\n\r\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_SHEEN\r\n\r\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\r\n\r\n\t#endif\r\n\r\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\r\n\r\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\r\n}\r\n\r\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\r\n\r\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\r\n\r\n}\r\n\r\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\r\n\r\n\t#ifdef USE_CLEARCOAT\r\n\r\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_SHEEN\r\n\r\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\r\n\r\n\t#endif\r\n\r\n\t// Both indirect specular and indirect diffuse light accumulate here\r\n\r\n\tvec3 singleScattering = vec3( 0.0 );\r\n\tvec3 multiScattering = vec3( 0.0 );\r\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\r\n\r\n\t#ifdef USE_IRIDESCENCE\r\n\r\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\r\n\r\n\t#else\r\n\r\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\r\n\r\n\t#endif\r\n\r\n\tvec3 totalScattering = singleScattering + multiScattering;\r\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\r\n\r\n\treflectedLight.indirectSpecular += radiance * singleScattering;\r\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\r\n\r\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\r\n\r\n}\r\n\r\n#define RE_Direct\t\t\t\tRE_Direct_Physical\r\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\r\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\r\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\r\n\r\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\r\n\r\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\r\n\r\n}\r\n`;\r\n","export default /* glsl */`\r\n/**\r\n * This is a template that can be used to light a material, it uses pluggable\r\n * RenderEquations (RE)for specific lighting scenarios.\r\n *\r\n * Instructions for use:\r\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\r\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\r\n *\r\n * TODO:\r\n * - Add area light support.\r\n * - Add sphere light support.\r\n * - Add diffuse light probe (irradiance cubemap) support.\r\n */\r\n\r\nvec3 geometryPosition = - vViewPosition;\r\nvec3 geometryNormal = normal;\r\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\r\n\r\nvec3 geometryClearcoatNormal = vec3( 0.0 );\r\n\r\n#ifdef USE_CLEARCOAT\r\n\r\n\tgeometryClearcoatNormal = clearcoatNormal;\r\n\r\n#endif\r\n\r\n#ifdef USE_IRIDESCENCE\r\n\r\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\r\n\r\n\tif ( material.iridescenceThickness == 0.0 ) {\r\n\r\n\t\tmaterial.iridescence = 0.0;\r\n\r\n\t} else {\r\n\r\n\t\tmaterial.iridescence = saturate( material.iridescence );\r\n\r\n\t}\r\n\r\n\tif ( material.iridescence > 0.0 ) {\r\n\r\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\r\n\r\n\t\t// Iridescence F0 approximation\r\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\r\n\r\n\t}\r\n\r\n#endif\r\n\r\nIncidentLight directLight;\r\n\r\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\r\n\r\n\tPointLight pointLight;\r\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\r\n\tPointLightShadow pointLightShadow;\r\n\t#endif\r\n\r\n\t#pragma unroll_loop_start\r\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\r\n\r\n\t\tpointLight = pointLights[ i ];\r\n\r\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\r\n\r\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\r\n\t\tpointLightShadow = pointLightShadows[ i ];\r\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\r\n\t\t#endif\r\n\r\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\r\n\r\n\t}\r\n\t#pragma unroll_loop_end\r\n\r\n#endif\r\n\r\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\r\n\r\n\tSpotLight spotLight;\r\n\tvec4 spotColor;\r\n\tvec3 spotLightCoord;\r\n\tbool inSpotLightMap;\r\n\r\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\r\n\tSpotLightShadow spotLightShadow;\r\n\t#endif\r\n\r\n\t#pragma unroll_loop_start\r\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\r\n\r\n\t\tspotLight = spotLights[ i ];\r\n\r\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\r\n\r\n\t\t// spot lights are ordered [shadows with maps, shadows without maps, maps without shadows, none]\r\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\r\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\r\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\r\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\r\n\t\t#else\r\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\r\n\t\t#endif\r\n\r\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\r\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\r\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\r\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\r\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\r\n\t\t#endif\r\n\r\n\t\t#undef SPOT_LIGHT_MAP_INDEX\r\n\r\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\r\n\t\tspotLightShadow = spotLightShadows[ i ];\r\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\r\n\t\t#endif\r\n\r\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\r\n\r\n\t}\r\n\t#pragma unroll_loop_end\r\n\r\n#endif\r\n\r\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\r\n\r\n\tDirectionalLight directionalLight;\r\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\r\n\tDirectionalLightShadow directionalLightShadow;\r\n\t#endif\r\n\r\n\t#pragma unroll_loop_start\r\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\r\n\r\n\t\tdirectionalLight = directionalLights[ i ];\r\n\r\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\r\n\r\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\r\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\r\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\r\n\t\t#endif\r\n\r\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\r\n\r\n\t}\r\n\t#pragma unroll_loop_end\r\n\r\n#endif\r\n\r\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\r\n\r\n\tRectAreaLight rectAreaLight;\r\n\r\n\t#pragma unroll_loop_start\r\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\r\n\r\n\t\trectAreaLight = rectAreaLights[ i ];\r\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\r\n\r\n\t}\r\n\t#pragma unroll_loop_end\r\n\r\n#endif\r\n\r\n#if defined( RE_IndirectDiffuse )\r\n\r\n\tvec3 iblIrradiance = vec3( 0.0 );\r\n\r\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\r\n\r\n\t#if defined( USE_LIGHT_PROBES )\r\n\r\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\r\n\r\n\t#endif\r\n\r\n\t#if ( NUM_HEMI_LIGHTS > 0 )\r\n\r\n\t\t#pragma unroll_loop_start\r\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\r\n\r\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\r\n\r\n\t\t}\r\n\t\t#pragma unroll_loop_end\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if defined( RE_IndirectSpecular )\r\n\r\n\tvec3 radiance = vec3( 0.0 );\r\n\tvec3 clearcoatRadiance = vec3( 0.0 );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( RE_IndirectDiffuse )\r\n\r\n\t#ifdef USE_LIGHTMAP\r\n\r\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\r\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\r\n\r\n\t\tirradiance += lightMapIrradiance;\r\n\r\n\t#endif\r\n\r\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\r\n\r\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\r\n\r\n\t#ifdef USE_ANISOTROPY\r\n\r\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\r\n\r\n\t#else\r\n\r\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_CLEARCOAT\r\n\r\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( RE_IndirectDiffuse )\r\n\r\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\r\n\r\n#endif\r\n\r\n#if defined( RE_IndirectSpecular )\r\n\r\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )\r\n\r\n\t// Doing a strict comparison with == 1.0 can cause noise artifacts\r\n\t// on some platforms. See issue #17623.\r\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )\r\n\r\n\tuniform float logDepthBufFC;\r\n\tvarying float vFragDepth;\r\n\tvarying float vIsPerspective;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_LOGARITHMIC_DEPTH_BUFFER\r\n\r\n\tvarying float vFragDepth;\r\n\tvarying float vIsPerspective;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_LOGARITHMIC_DEPTH_BUFFER\r\n\r\n\tvFragDepth = 1.0 + gl_Position.w;\r\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_MAP\r\n\r\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\r\n\r\n\t#ifdef DECODE_VIDEO_TEXTURE\r\n\r\n\t\t// use inline sRGB decode until browsers properly support SRGB8_ALPHA8 with video textures (#26516)\r\n\r\n\t\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\r\n\r\n\t#endif\r\n\r\n\tdiffuseColor *= sampledDiffuseColor;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_MAP\r\n\r\n\tuniform sampler2D map;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\r\n\r\n\t#if defined( USE_POINTS_UV )\r\n\r\n\t\tvec2 uv = vUv;\r\n\r\n\t#else\r\n\r\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#ifdef USE_MAP\r\n\r\n\tdiffuseColor *= texture2D( map, uv );\r\n\r\n#endif\r\n\r\n#ifdef USE_ALPHAMAP\r\n\r\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_POINTS_UV )\r\n\r\n\tvarying vec2 vUv;\r\n\r\n#else\r\n\r\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\r\n\r\n\t\tuniform mat3 uvTransform;\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#ifdef USE_MAP\r\n\r\n\tuniform sampler2D map;\r\n\r\n#endif\r\n\r\n#ifdef USE_ALPHAMAP\r\n\r\n\tuniform sampler2D alphaMap;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\nfloat metalnessFactor = metalness;\r\n\r\n#ifdef USE_METALNESSMAP\r\n\r\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\r\n\r\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n\tmetalnessFactor *= texelMetalness.b;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_METALNESSMAP\r\n\r\n\tuniform sampler2D metalnessMap;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_INSTANCING_MORPH\r\n\r\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\r\n\r\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\r\n\r\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\r\n\r\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\r\n\r\n\t}\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_MORPHCOLORS )\r\n\r\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\r\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\r\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\r\n\tvColor *= morphTargetBaseInfluence;\r\n\r\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\r\n\r\n\t\t#if defined( USE_COLOR_ALPHA )\r\n\r\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\r\n\r\n\t\t#elif defined( USE_COLOR )\r\n\r\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_MORPHNORMALS\r\n\r\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\r\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\r\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\r\n\tobjectNormal *= morphTargetBaseInfluence;\r\n\r\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\r\n\r\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_MORPHTARGETS\r\n\r\n\t#ifndef USE_INSTANCING_MORPH\r\n\r\n\t\tuniform float morphTargetBaseInfluence;\r\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\r\n\r\n\t#endif\r\n\r\n\tuniform sampler2DArray morphTargetsTexture;\r\n\tuniform ivec2 morphTargetsTextureSize;\r\n\r\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\r\n\r\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\r\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\r\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\r\n\r\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\r\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_MORPHTARGETS\r\n\r\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\r\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)\r\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\r\n\ttransformed *= morphTargetBaseInfluence;\r\n\r\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\r\n\r\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\nfloat faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\r\n\r\n#ifdef FLAT_SHADED\r\n\r\n\tvec3 fdx = dFdx( vViewPosition );\r\n\tvec3 fdy = dFdy( vViewPosition );\r\n\tvec3 normal = normalize( cross( fdx, fdy ) );\r\n\r\n#else\r\n\r\n\tvec3 normal = normalize( vNormal );\r\n\r\n\t#ifdef DOUBLE_SIDED\r\n\r\n\t\tnormal *= faceDirection;\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\r\n\r\n\t#ifdef USE_TANGENT\r\n\r\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\r\n\r\n\t#else\r\n\r\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\r\n\t\t#if defined( USE_NORMALMAP )\r\n\t\t\tvNormalMapUv\r\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\r\n\t\t\tvClearcoatNormalMapUv\r\n\t\t#else\r\n\t\t\tvUv\r\n\t\t#endif\r\n\t\t);\r\n\r\n\t#endif\r\n\r\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\r\n\r\n\t\ttbn[0] *= faceDirection;\r\n\t\ttbn[1] *= faceDirection;\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n#ifdef USE_CLEARCOAT_NORMALMAP\r\n\r\n\t#ifdef USE_TANGENT\r\n\r\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\r\n\r\n\t#else\r\n\r\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\r\n\r\n\t#endif\r\n\r\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\r\n\r\n\t\ttbn2[0] *= faceDirection;\r\n\t\ttbn2[1] *= faceDirection;\r\n\r\n\t#endif\r\n\r\n#endif\r\n\r\n// non perturbed normal for clearcoat among others\r\n\r\nvec3 nonPerturbedNormal = normal;\r\n\r\n`;\r\n","export default /* glsl */`\r\n\r\n#ifdef USE_NORMALMAP_OBJECTSPACE\r\n\r\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\r\n\r\n\t#ifdef FLIP_SIDED\r\n\r\n\t\tnormal = - normal;\r\n\r\n\t#endif\r\n\r\n\t#ifdef DOUBLE_SIDED\r\n\r\n\t\tnormal = normal * faceDirection;\r\n\r\n\t#endif\r\n\r\n\tnormal = normalize( normalMatrix * normal );\r\n\r\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\r\n\r\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\r\n\tmapN.xy *= normalScale;\r\n\r\n\tnormal = normalize( tbn * mapN );\r\n\r\n#elif defined( USE_BUMPMAP )\r\n\r\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n\t#ifdef USE_TANGENT\r\n\r\n\t\tvarying vec3 vTangent;\r\n\t\tvarying vec3 vBitangent;\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n\t#ifdef USE_TANGENT\r\n\r\n\t\tvarying vec3 vTangent;\r\n\t\tvarying vec3 vBitangent;\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifndef FLAT_SHADED // normal is computed with derivatives when FLAT_SHADED\r\n\r\n\tvNormal = normalize( transformedNormal );\r\n\r\n\t#ifdef USE_TANGENT\r\n\r\n\t\tvTangent = normalize( transformedTangent );\r\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_NORMALMAP\r\n\r\n\tuniform sampler2D normalMap;\r\n\tuniform vec2 normalScale;\r\n\r\n#endif\r\n\r\n#ifdef USE_NORMALMAP_OBJECTSPACE\r\n\r\n\tuniform mat3 normalMatrix;\r\n\r\n#endif\r\n\r\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\r\n\r\n\t// Normal Mapping Without Precomputed Tangents\r\n\t// http://www.thetenthplanet.de/archives/1180\r\n\r\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\r\n\r\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\r\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\r\n\t\tvec2 st0 = dFdx( uv.st );\r\n\t\tvec2 st1 = dFdy( uv.st );\r\n\r\n\t\tvec3 N = surf_norm; // normalized\r\n\r\n\t\tvec3 q1perp = cross( q1, N );\r\n\t\tvec3 q0perp = cross( N, q0 );\r\n\r\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\r\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\r\n\r\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\r\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\r\n\r\n\t\treturn mat3( T * scale, B * scale, N );\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_CLEARCOAT\r\n\r\n\tvec3 clearcoatNormal = nonPerturbedNormal;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_CLEARCOAT_NORMALMAP\r\n\r\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\r\n\tclearcoatMapN.xy *= clearcoatNormalScale;\r\n\r\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n\r\n#ifdef USE_CLEARCOATMAP\r\n\r\n\tuniform sampler2D clearcoatMap;\r\n\r\n#endif\r\n\r\n#ifdef USE_CLEARCOAT_NORMALMAP\r\n\r\n\tuniform sampler2D clearcoatNormalMap;\r\n\tuniform vec2 clearcoatNormalScale;\r\n\r\n#endif\r\n\r\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\r\n\r\n\tuniform sampler2D clearcoatRoughnessMap;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n\r\n#ifdef USE_IRIDESCENCEMAP\r\n\r\n\tuniform sampler2D iridescenceMap;\r\n\r\n#endif\r\n\r\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\r\n\r\n\tuniform sampler2D iridescenceThicknessMap;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef OPAQUE\r\ndiffuseColor.a = 1.0;\r\n#endif\r\n\r\n#ifdef USE_TRANSMISSION\r\ndiffuseColor.a *= material.transmissionAlpha;\r\n#endif\r\n\r\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\r\n`;\r\n","export default /* glsl */`\r\nvec3 packNormalToRGB( const in vec3 normal ) {\r\n\treturn normalize( normal ) * 0.5 + 0.5;\r\n}\r\n\r\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\r\n\treturn 2.0 * rgb.xyz - 1.0;\r\n}\r\n\r\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\r\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\r\nconst float ShiftRight8 = 1. / 256.;\r\nconst float Inv255 = 1. / 255.;\r\n\r\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\r\n\r\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\r\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\r\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\r\n\r\nvec4 packDepthToRGBA( const in float v ) {\r\n\tif( v <= 0.0 )\r\n\t\treturn vec4( 0., 0., 0., 0. );\r\n\tif( v >= 1.0 )\r\n\t\treturn vec4( 1., 1., 1., 1. );\r\n\tfloat vuf;\r\n\tfloat af = modf( v * PackFactors.a, vuf );\r\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\r\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\r\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\r\n}\r\n\r\nvec3 packDepthToRGB( const in float v ) {\r\n\tif( v <= 0.0 )\r\n\t\treturn vec3( 0., 0., 0. );\r\n\tif( v >= 1.0 )\r\n\t\treturn vec3( 1., 1., 1. );\r\n\tfloat vuf;\r\n\tfloat bf = modf( v * PackFactors.b, vuf );\r\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\r\n\t// the 0.9999 tweak is unimportant, very tiny empirical improvement\r\n\t// return vec3( vuf * Inv255, gf * PackUpscale, bf * 0.9999 );\r\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\r\n}\r\n\r\nvec2 packDepthToRG( const in float v ) {\r\n\tif( v <= 0.0 )\r\n\t\treturn vec2( 0., 0. );\r\n\tif( v >= 1.0 )\r\n\t\treturn vec2( 1., 1. );\r\n\tfloat vuf;\r\n\tfloat gf = modf( v * 256., vuf );\r\n\treturn vec2( vuf * Inv255, gf );\r\n}\r\n\r\nfloat unpackRGBAToDepth( const in vec4 v ) {\r\n\treturn dot( v, UnpackFactors4 );\r\n}\r\n\r\nfloat unpackRGBToDepth( const in vec3 v ) {\r\n\treturn dot( v, UnpackFactors3 );\r\n}\r\n\r\nfloat unpackRGToDepth( const in vec2 v ) {\r\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\r\n}\r\n\r\nvec4 pack2HalfToRGBA( const in vec2 v ) {\r\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\r\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\r\n}\r\n\r\nvec2 unpackRGBATo2Half( const in vec4 v ) {\r\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\r\n}\r\n\r\n// NOTE: viewZ, the z-coordinate in camera space, is negative for points in front of the camera\r\n\r\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\r\n\t// -near maps to 0; -far maps to 1\r\n\treturn ( viewZ + near ) / ( near - far );\r\n}\r\n\r\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\r\n\t// maps orthographic depth in [ 0, 1 ] to viewZ\r\n\treturn depth * ( near - far ) - near;\r\n}\r\n\r\n// NOTE: https://twitter.com/gonnavis/status/1377183786949959682\r\n\r\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\r\n\t// -near maps to 0; -far maps to 1\r\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\r\n}\r\n\r\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\r\n\t// maps perspective depth in [ 0, 1 ] to viewZ\r\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\r\n}\r\n`;\r\n","export default /* glsl */`\r\n#ifdef PREMULTIPLIED_ALPHA\r\n\r\n\t// Get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\r\n\tgl_FragColor.rgb *= gl_FragColor.a;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\nvec4 mvPosition = vec4( transformed, 1.0 );\r\n\r\n#ifdef USE_BATCHING\r\n\r\n\tmvPosition = batchingMatrix * mvPosition;\r\n\r\n#endif\r\n\r\n#ifdef USE_INSTANCING\r\n\r\n\tmvPosition = instanceMatrix * mvPosition;\r\n\r\n#endif\r\n\r\nmvPosition = modelViewMatrix * mvPosition;\r\n\r\ngl_Position = projectionMatrix * mvPosition;\r\n`;\r\n","export default /* glsl */`\r\n#ifdef DITHERING\r\n\r\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef DITHERING\r\n\r\n\t// based on https://www.shadertoy.com/view/MslGR8\r\n\tvec3 dithering( vec3 color ) {\r\n\t\t//Calculate grid position\r\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\r\n\r\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\r\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\r\n\r\n\t\t//modify shift according to grid position.\r\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\r\n\r\n\t\t//shift the color by dither_shift\r\n\t\treturn color + dither_shift_RGB;\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\nfloat roughnessFactor = roughness;\r\n\r\n#ifdef USE_ROUGHNESSMAP\r\n\r\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\r\n\r\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\r\n\troughnessFactor *= texelRoughness.g;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_ROUGHNESSMAP\r\n\r\n\tuniform sampler2D roughnessMap;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if NUM_SPOT_LIGHT_COORDS > 0\r\n\r\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\r\n\r\n#endif\r\n\r\n#if NUM_SPOT_LIGHT_MAPS > 0\r\n\r\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\r\n\r\n#endif\r\n\r\n#ifdef USE_SHADOWMAP\r\n\r\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\r\n\r\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\r\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\r\n\r\n\t\tstruct DirectionalLightShadow {\r\n\t\t\tfloat shadowIntensity;\r\n\t\t\tfloat shadowBias;\r\n\t\t\tfloat shadowNormalBias;\r\n\t\t\tfloat shadowRadius;\r\n\t\t\tvec2 shadowMapSize;\r\n\t\t};\r\n\r\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\r\n\r\n\t#endif\r\n\r\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\r\n\r\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\r\n\r\n\t\tstruct SpotLightShadow {\r\n\t\t\tfloat shadowIntensity;\r\n\t\t\tfloat shadowBias;\r\n\t\t\tfloat shadowNormalBias;\r\n\t\t\tfloat shadowRadius;\r\n\t\t\tvec2 shadowMapSize;\r\n\t\t};\r\n\r\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\r\n\r\n\t#endif\r\n\r\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\r\n\r\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\r\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\r\n\r\n\t\tstruct PointLightShadow {\r\n\t\t\tfloat shadowIntensity;\r\n\t\t\tfloat shadowBias;\r\n\t\t\tfloat shadowNormalBias;\r\n\t\t\tfloat shadowRadius;\r\n\t\t\tvec2 shadowMapSize;\r\n\t\t\tfloat shadowCameraNear;\r\n\t\t\tfloat shadowCameraFar;\r\n\t\t};\r\n\r\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\r\n\r\n\t#endif\r\n\r\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\r\n\r\n\t\tfloat depth = unpackRGBAToDepth( texture2D( depths, uv ) );\r\n\r\n\t\t#ifdef USE_REVERSED_DEPTH_BUFFER\r\n\r\n\t\t\treturn step( depth, compare );\r\n\r\n\t\t#else\r\n\r\n\t\t\treturn step( compare, depth );\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\r\n\r\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\r\n\r\n\t}\r\n\r\n\tfloat VSMShadow( sampler2D shadow, vec2 uv, float compare ) {\r\n\r\n\t\tfloat occlusion = 1.0;\r\n\r\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\r\n\r\n\t\t#ifdef USE_REVERSED_DEPTH_BUFFER\r\n\r\n\t\t\tfloat hard_shadow = step( distribution.x, compare );\r\n\r\n\t\t#else\r\n\r\n\t\t\tfloat hard_shadow = step( compare, distribution.x );\r\n\r\n\t\t#endif\r\n\r\n\t\tif ( hard_shadow != 1.0 ) {\r\n\r\n\t\t\tfloat distance = compare - distribution.x;\r\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\r\n\t\t\tfloat softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\r\n\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\r\n\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\r\n\r\n\t\t}\r\n\t\treturn occlusion;\r\n\r\n\t}\r\n\r\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\r\n\r\n\t\tfloat shadow = 1.0;\r\n\r\n\t\tshadowCoord.xyz /= shadowCoord.w;\r\n\t\tshadowCoord.z += shadowBias;\r\n\r\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\r\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\r\n\r\n\t\tif ( frustumTest ) {\r\n\r\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\r\n\r\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\r\n\r\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\r\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\r\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\r\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\r\n\t\t\tfloat dx2 = dx0 / 2.0;\r\n\t\t\tfloat dy2 = dy0 / 2.0;\r\n\t\t\tfloat dx3 = dx1 / 2.0;\r\n\t\t\tfloat dy3 = dy1 / 2.0;\r\n\r\n\t\t\tshadow = (\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\r\n\t\t\t) * ( 1.0 / 17.0 );\r\n\r\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\r\n\r\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\r\n\t\t\tfloat dx = texelSize.x;\r\n\t\t\tfloat dy = texelSize.y;\r\n\r\n\t\t\tvec2 uv = shadowCoord.xy;\r\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\r\n\t\t\tuv -= f * texelSize;\r\n\r\n\t\t\tshadow = (\r\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\r\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\r\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\r\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\r\n\t\t\t\t\t f.x ) +\r\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\r\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\r\n\t\t\t\t\t f.x ) +\r\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\r\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\r\n\t\t\t\t\t f.y ) +\r\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\r\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\r\n\t\t\t\t\t f.y ) +\r\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\r\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\r\n\t\t\t\t\t\t  f.x ),\r\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\r\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\r\n\t\t\t\t\t\t  f.x ),\r\n\t\t\t\t\t f.y )\r\n\t\t\t) * ( 1.0 / 9.0 );\r\n\r\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\r\n\r\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\r\n\r\n\t\t#else // no percentage-closer filtering:\r\n\r\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\r\n\r\n\t\t#endif\r\n\r\n\t\t}\r\n\r\n\t\treturn mix( 1.0, shadow, shadowIntensity );\r\n\r\n\t}\r\n\r\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\r\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\r\n\t// 2D texture:\r\n\t//\r\n\t// xzXZ\r\n\t//  y Y\r\n\t//\r\n\t// Y - Positive y direction\r\n\t// y - Negative y direction\r\n\t// X - Positive x direction\r\n\t// x - Negative x direction\r\n\t// Z - Positive z direction\r\n\t// z - Negative z direction\r\n\t//\r\n\t// Source and test bed:\r\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\r\n\r\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\r\n\r\n\t\t// Number of texels to avoid at the edge of each square\r\n\r\n\t\tvec3 absV = abs( v );\r\n\r\n\t\t// Intersect unit cube\r\n\r\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\r\n\t\tabsV *= scaleToCube;\r\n\r\n\t\t// Apply scale to avoid seams\r\n\r\n\t\t// two texels less per square (one texel will do for NEAREST)\r\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\r\n\r\n\t\t// Unwrap\r\n\r\n\t\t// space: -1 ... 1 range for each square\r\n\t\t//\r\n\t\t// #X##\t\tdim    := ( 4 , 2 )\r\n\t\t//  # #\t\tcenter := ( 1 , 1 )\r\n\r\n\t\tvec2 planar = v.xy;\r\n\r\n\t\tfloat almostATexel = 1.5 * texelSizeY;\r\n\t\tfloat almostOne = 1.0 - almostATexel;\r\n\r\n\t\tif ( absV.z >= almostOne ) {\r\n\r\n\t\t\tif ( v.z > 0.0 )\r\n\t\t\t\tplanar.x = 4.0 - v.x;\r\n\r\n\t\t} else if ( absV.x >= almostOne ) {\r\n\r\n\t\t\tfloat signX = sign( v.x );\r\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\r\n\r\n\t\t} else if ( absV.y >= almostOne ) {\r\n\r\n\t\t\tfloat signY = sign( v.y );\r\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\r\n\t\t\tplanar.y = v.z * signY - 2.0;\r\n\r\n\t\t}\r\n\r\n\t\t// Transform to UV space\r\n\r\n\t\t// scale := 0.5 / dim\r\n\t\t// translate := ( center + 0.5 ) / dim\r\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\r\n\r\n\t}\r\n\r\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\r\n\r\n\t\tfloat shadow = 1.0;\r\n\r\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\r\n\t\t// the vector from the light to the world-space position of the fragment.\r\n\t\tvec3 lightToPosition = shadowCoord.xyz;\r\n\t\t\r\n\t\tfloat lightToPositionLength = length( lightToPosition );\r\n\r\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\r\n\r\n\t\t\t// dp = normalized distance from light to fragment position\r\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\r\n\t\t\tdp += shadowBias;\r\n\r\n\t\t\t// bd3D = base direction 3D\r\n\t\t\tvec3 bd3D = normalize( lightToPosition );\r\n\r\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\r\n\r\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\r\n\r\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\r\n\r\n\t\t\t\tshadow = (\r\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\r\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\r\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\r\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\r\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\r\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\r\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\r\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\r\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\r\n\t\t\t\t) * ( 1.0 / 9.0 );\r\n\r\n\t\t\t#else // no percentage-closer filtering\r\n\r\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\r\n\r\n\t\t\t#endif\r\n\r\n\t\t}\r\n\r\n\t\treturn mix( 1.0, shadow, shadowIntensity );\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n\r\n#if NUM_SPOT_LIGHT_COORDS > 0\r\n\r\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\r\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\r\n\r\n#endif\r\n\r\n#ifdef USE_SHADOWMAP\r\n\r\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\r\n\r\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\r\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\r\n\r\n\t\tstruct DirectionalLightShadow {\r\n\t\t\tfloat shadowIntensity;\r\n\t\t\tfloat shadowBias;\r\n\t\t\tfloat shadowNormalBias;\r\n\t\t\tfloat shadowRadius;\r\n\t\t\tvec2 shadowMapSize;\r\n\t\t};\r\n\r\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\r\n\r\n\t#endif\r\n\r\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\r\n\r\n\t\tstruct SpotLightShadow {\r\n\t\t\tfloat shadowIntensity;\r\n\t\t\tfloat shadowBias;\r\n\t\t\tfloat shadowNormalBias;\r\n\t\t\tfloat shadowRadius;\r\n\t\t\tvec2 shadowMapSize;\r\n\t\t};\r\n\r\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\r\n\r\n\t#endif\r\n\r\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\r\n\r\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\r\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\r\n\r\n\t\tstruct PointLightShadow {\r\n\t\t\tfloat shadowIntensity;\r\n\t\t\tfloat shadowBias;\r\n\t\t\tfloat shadowNormalBias;\r\n\t\t\tfloat shadowRadius;\r\n\t\t\tvec2 shadowMapSize;\r\n\t\t\tfloat shadowCameraNear;\r\n\t\t\tfloat shadowCameraFar;\r\n\t\t};\r\n\r\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\r\n\r\n\t#endif\r\n\r\n\t/*\r\n\t#if NUM_RECT_AREA_LIGHTS > 0\r\n\r\n\t\t// TODO (abelnation): uniforms for area light shadows\r\n\r\n\t#endif\r\n\t*/\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n\r\n#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\r\n\r\n\t// Offsetting the position used for querying occlusion along the world normal can be used to reduce shadow acne.\r\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\r\n\tvec4 shadowWorldPosition;\r\n\r\n#endif\r\n\r\n#if defined( USE_SHADOWMAP )\r\n\r\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\r\n\r\n\t\t#pragma unroll_loop_start\r\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\r\n\r\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\r\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\r\n\r\n\t\t}\r\n\t\t#pragma unroll_loop_end\r\n\r\n\t#endif\r\n\r\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\r\n\r\n\t\t#pragma unroll_loop_start\r\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\r\n\r\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\r\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\r\n\r\n\t\t}\r\n\t\t#pragma unroll_loop_end\r\n\r\n\t#endif\r\n\r\n\t/*\r\n\t#if NUM_RECT_AREA_LIGHTS > 0\r\n\r\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\r\n\r\n\t#endif\r\n\t*/\r\n\r\n#endif\r\n\r\n// spot lights can be evaluated without active shadow mapping (when SpotLight.map is used)\r\n\r\n#if NUM_SPOT_LIGHT_COORDS > 0\r\n\r\n\t#pragma unroll_loop_start\r\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\r\n\r\n\t\tshadowWorldPosition = worldPosition;\r\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\r\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\r\n\t\t#endif\r\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\r\n\r\n\t}\r\n\t#pragma unroll_loop_end\r\n\r\n#endif\r\n\r\n\r\n`;\r\n","export default /* glsl */`\r\nfloat getShadowMask() {\r\n\r\n\tfloat shadow = 1.0;\r\n\r\n\t#ifdef USE_SHADOWMAP\r\n\r\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\r\n\r\n\tDirectionalLightShadow directionalLight;\r\n\r\n\t#pragma unroll_loop_start\r\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\r\n\r\n\t\tdirectionalLight = directionalLightShadows[ i ];\r\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\r\n\r\n\t}\r\n\t#pragma unroll_loop_end\r\n\r\n\t#endif\r\n\r\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\r\n\r\n\tSpotLightShadow spotLight;\r\n\r\n\t#pragma unroll_loop_start\r\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\r\n\r\n\t\tspotLight = spotLightShadows[ i ];\r\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\r\n\r\n\t}\r\n\t#pragma unroll_loop_end\r\n\r\n\t#endif\r\n\r\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\r\n\r\n\tPointLightShadow pointLight;\r\n\r\n\t#pragma unroll_loop_start\r\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\r\n\r\n\t\tpointLight = pointLightShadows[ i ];\r\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\r\n\r\n\t}\r\n\t#pragma unroll_loop_end\r\n\r\n\t#endif\r\n\r\n\t/*\r\n\t#if NUM_RECT_AREA_LIGHTS > 0\r\n\r\n\t\t// TODO (abelnation): update shadow for Area light\r\n\r\n\t#endif\r\n\t*/\r\n\r\n\t#endif\r\n\r\n\treturn shadow;\r\n\r\n}\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_SKINNING\r\n\r\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\r\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\r\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\r\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_SKINNING\r\n\r\n\tuniform mat4 bindMatrix;\r\n\tuniform mat4 bindMatrixInverse;\r\n\r\n\tuniform highp sampler2D boneTexture;\r\n\r\n\tmat4 getBoneMatrix( const in float i ) {\r\n\r\n\t\tint size = textureSize( boneTexture, 0 ).x;\r\n\t\tint j = int( i ) * 4;\r\n\t\tint x = j % size;\r\n\t\tint y = j / size;\r\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\r\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\r\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\r\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\r\n\r\n\t\treturn mat4( v1, v2, v3, v4 );\r\n\r\n\t}\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_SKINNING\r\n\r\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\r\n\r\n\tvec4 skinned = vec4( 0.0 );\r\n\tskinned += boneMatX * skinVertex * skinWeight.x;\r\n\tskinned += boneMatY * skinVertex * skinWeight.y;\r\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\r\n\tskinned += boneMatW * skinVertex * skinWeight.w;\r\n\r\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_SKINNING\r\n\r\n\tmat4 skinMatrix = mat4( 0.0 );\r\n\tskinMatrix += skinWeight.x * boneMatX;\r\n\tskinMatrix += skinWeight.y * boneMatY;\r\n\tskinMatrix += skinWeight.z * boneMatZ;\r\n\tskinMatrix += skinWeight.w * boneMatW;\r\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\r\n\r\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\r\n\r\n\t#ifdef USE_TANGENT\r\n\r\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\r\n\r\n\t#endif\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\nfloat specularStrength;\r\n\r\n#ifdef USE_SPECULARMAP\r\n\r\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\r\n\tspecularStrength = texelSpecular.r;\r\n\r\n#else\r\n\r\n\tspecularStrength = 1.0;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_SPECULARMAP\r\n\r\n\tuniform sampler2D specularMap;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( TONE_MAPPING )\r\n\r\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifndef saturate\r\n// <common> may have defined saturate() already\r\n#define saturate( a ) clamp( a, 0.0, 1.0 )\r\n#endif\r\n\r\nuniform float toneMappingExposure;\r\n\r\n// exposure only\r\nvec3 LinearToneMapping( vec3 color ) {\r\n\r\n\treturn saturate( toneMappingExposure * color );\r\n\r\n}\r\n\r\n// source: https://www.cs.utah.edu/docs/techreports/2002/pdf/UUCS-02-001.pdf\r\nvec3 ReinhardToneMapping( vec3 color ) {\r\n\r\n\tcolor *= toneMappingExposure;\r\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\r\n\r\n}\r\n\r\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\r\nvec3 CineonToneMapping( vec3 color ) {\r\n\r\n\t// filmic operator by Jim Hejl and Richard Burgess-Dawson\r\n\tcolor *= toneMappingExposure;\r\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\r\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\r\n\r\n}\r\n\r\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\r\nvec3 RRTAndODTFit( vec3 v ) {\r\n\r\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\r\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\r\n\treturn a / b;\r\n\r\n}\r\n\r\n// this implementation of ACES is modified to accommodate a brighter viewing environment.\r\n// the scale factor of 1/0.6 is subjective. see discussion in #19621.\r\n\r\nvec3 ACESFilmicToneMapping( vec3 color ) {\r\n\r\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\r\n\tconst mat3 ACESInputMat = mat3(\r\n\t\tvec3( 0.59719, 0.07600, 0.02840 ), // transposed from source\r\n\t\tvec3( 0.35458, 0.90834, 0.13383 ),\r\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\r\n\t);\r\n\r\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\r\n\tconst mat3 ACESOutputMat = mat3(\r\n\t\tvec3(  1.60475, -0.10208, -0.00327 ), // transposed from source\r\n\t\tvec3( -0.53108,  1.10813, -0.07276 ),\r\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\r\n\t);\r\n\r\n\tcolor *= toneMappingExposure / 0.6;\r\n\r\n\tcolor = ACESInputMat * color;\r\n\r\n\t// Apply RRT and ODT\r\n\tcolor = RRTAndODTFit( color );\r\n\r\n\tcolor = ACESOutputMat * color;\r\n\r\n\t// Clamp to [0, 1]\r\n\treturn saturate( color );\r\n\r\n}\r\n\r\n// Matrices for rec 2020 <> rec 709 color space conversion\r\n// matrix provided in row-major order so it has been transposed\r\n// https://www.itu.int/pub/R-REP-BT.2407-2017\r\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\r\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\r\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\r\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\r\n);\r\n\r\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\r\n\tvec3( 0.6274, 0.0691, 0.0164 ),\r\n\tvec3( 0.3293, 0.9195, 0.0880 ),\r\n\tvec3( 0.0433, 0.0113, 0.8956 )\r\n);\r\n\r\n// https://iolite-engine.com/blog_posts/minimal_agx_implementation\r\n// Mean error^2: 3.6705141e-06\r\nvec3 agxDefaultContrastApprox( vec3 x ) {\r\n\r\n\tvec3 x2 = x * x;\r\n\tvec3 x4 = x2 * x2;\r\n\r\n\treturn + 15.5 * x4 * x2\r\n\t\t- 40.14 * x4 * x\r\n\t\t+ 31.96 * x4\r\n\t\t- 6.868 * x2 * x\r\n\t\t+ 0.4298 * x2\r\n\t\t+ 0.1191 * x\r\n\t\t- 0.00232;\r\n\r\n}\r\n\r\n// AgX Tone Mapping implementation based on Filament, which in turn is based\r\n// on Blender's implementation using rec 2020 primaries\r\n// https://github.com/google/filament/pull/7236\r\n// Inputs and outputs are encoded as Linear-sRGB.\r\n\r\nvec3 AgXToneMapping( vec3 color ) {\r\n\r\n\t// AgX constants\r\n\tconst mat3 AgXInsetMatrix = mat3(\r\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\r\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\r\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\r\n\t);\r\n\r\n\t// explicit AgXOutsetMatrix generated from Filaments AgXOutsetMatrixInv\r\n\tconst mat3 AgXOutsetMatrix = mat3(\r\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\r\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\r\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\r\n\t);\r\n\r\n\t// LOG2_MIN      = -10.0\r\n\t// LOG2_MAX      =  +6.5\r\n\t// MIDDLE_GRAY   =  0.18\r\n\tconst float AgxMinEv = - 12.47393;  // log2( pow( 2, LOG2_MIN ) * MIDDLE_GRAY )\r\n\tconst float AgxMaxEv = 4.026069;    // log2( pow( 2, LOG2_MAX ) * MIDDLE_GRAY )\r\n\r\n\tcolor *= toneMappingExposure;\r\n\r\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\r\n\r\n\tcolor = AgXInsetMatrix * color;\r\n\r\n\t// Log2 encoding\r\n\tcolor = max( color, 1e-10 ); // avoid 0 or negative numbers for log2\r\n\tcolor = log2( color );\r\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\r\n\r\n\tcolor = clamp( color, 0.0, 1.0 );\r\n\r\n\t// Apply sigmoid\r\n\tcolor = agxDefaultContrastApprox( color );\r\n\r\n\t// Apply AgX look\r\n\t// v = agxLook(v, look);\r\n\r\n\tcolor = AgXOutsetMatrix * color;\r\n\r\n\t// Linearize\r\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\r\n\r\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\r\n\r\n\t// Gamut mapping. Simple clamp for now.\r\n\tcolor = clamp( color, 0.0, 1.0 );\r\n\r\n\treturn color;\r\n\r\n}\r\n\r\n// https://modelviewer.dev/examples/tone-mapping\r\n\r\nvec3 NeutralToneMapping( vec3 color ) {\r\n\r\n\tconst float StartCompression = 0.8 - 0.04;\r\n\tconst float Desaturation = 0.15;\r\n\r\n\tcolor *= toneMappingExposure;\r\n\r\n\tfloat x = min( color.r, min( color.g, color.b ) );\r\n\r\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\r\n\r\n\tcolor -= offset;\r\n\r\n\tfloat peak = max( color.r, max( color.g, color.b ) );\r\n\r\n\tif ( peak < StartCompression ) return color;\r\n\r\n\tfloat d = 1. - StartCompression;\r\n\r\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\r\n\r\n\tcolor *= newPeak / peak;\r\n\r\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\r\n\r\n\treturn mix( color, vec3( newPeak ), g );\r\n\r\n}\r\n\r\nvec3 CustomToneMapping( vec3 color ) { return color; }\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_TRANSMISSION\r\n\r\n\tmaterial.transmission = transmission;\r\n\tmaterial.transmissionAlpha = 1.0;\r\n\tmaterial.thickness = thickness;\r\n\tmaterial.attenuationDistance = attenuationDistance;\r\n\tmaterial.attenuationColor = attenuationColor;\r\n\r\n\t#ifdef USE_TRANSMISSIONMAP\r\n\r\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_THICKNESSMAP\r\n\r\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\r\n\r\n\t#endif\r\n\r\n\tvec3 pos = vWorldPosition;\r\n\tvec3 v = normalize( cameraPosition - pos );\r\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\r\n\r\n\tvec4 transmitted = getIBLVolumeRefraction(\r\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\r\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\r\n\t\tmaterial.attenuationColor, material.attenuationDistance );\r\n\r\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\r\n\r\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#ifdef USE_TRANSMISSION\r\n\r\n\t// Transmission code is based on glTF-Sampler-Viewer\r\n\t// https://github.com/KhronosGroup/glTF-Sample-Viewer\r\n\r\n\tuniform float transmission;\r\n\tuniform float thickness;\r\n\tuniform float attenuationDistance;\r\n\tuniform vec3 attenuationColor;\r\n\r\n\t#ifdef USE_TRANSMISSIONMAP\r\n\r\n\t\tuniform sampler2D transmissionMap;\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_THICKNESSMAP\r\n\r\n\t\tuniform sampler2D thicknessMap;\r\n\r\n\t#endif\r\n\r\n\tuniform vec2 transmissionSamplerSize;\r\n\tuniform sampler2D transmissionSamplerMap;\r\n\r\n\tuniform mat4 modelMatrix;\r\n\tuniform mat4 projectionMatrix;\r\n\r\n\tvarying vec3 vWorldPosition;\r\n\r\n\t// Mipped Bicubic Texture Filtering by N8\r\n\t// https://www.shadertoy.com/view/Dl2SDW\r\n\r\n\tfloat w0( float a ) {\r\n\r\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\r\n\r\n\t}\r\n\r\n\tfloat w1( float a ) {\r\n\r\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\r\n\r\n\t}\r\n\r\n\tfloat w2( float a ){\r\n\r\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\r\n\r\n\t}\r\n\r\n\tfloat w3( float a ) {\r\n\r\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\r\n\r\n\t}\r\n\r\n\t// g0 and g1 are the two amplitude functions\r\n\tfloat g0( float a ) {\r\n\r\n\t\treturn w0( a ) + w1( a );\r\n\r\n\t}\r\n\r\n\tfloat g1( float a ) {\r\n\r\n\t\treturn w2( a ) + w3( a );\r\n\r\n\t}\r\n\r\n\t// h0 and h1 are the two offset functions\r\n\tfloat h0( float a ) {\r\n\r\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\r\n\r\n\t}\r\n\r\n\tfloat h1( float a ) {\r\n\r\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\r\n\r\n\t}\r\n\r\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\r\n\r\n\t\tuv = uv * texelSize.zw + 0.5;\r\n\r\n\t\tvec2 iuv = floor( uv );\r\n\t\tvec2 fuv = fract( uv );\r\n\r\n\t\tfloat g0x = g0( fuv.x );\r\n\t\tfloat g1x = g1( fuv.x );\r\n\t\tfloat h0x = h0( fuv.x );\r\n\t\tfloat h1x = h1( fuv.x );\r\n\t\tfloat h0y = h0( fuv.y );\r\n\t\tfloat h1y = h1( fuv.y );\r\n\r\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\r\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\r\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\r\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\r\n\r\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\r\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\r\n\r\n\t}\r\n\r\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\r\n\r\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\r\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\r\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\r\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\r\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\r\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\r\n\t\treturn mix( fSample, cSample, fract( lod ) );\r\n\r\n\t}\r\n\r\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\r\n\r\n\t\t// Direction of refracted light.\r\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\r\n\r\n\t\t// Compute rotation-independent scaling of the model matrix.\r\n\t\tvec3 modelScale;\r\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\r\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\r\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\r\n\r\n\t\t// The thickness is specified in local space.\r\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\r\n\r\n\t}\r\n\r\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\r\n\r\n\t\t// Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and\r\n\t\t// an IOR of 1.5 results in the default amount of microfacet refraction.\r\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\r\n\r\n\t}\r\n\r\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\r\n\r\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\r\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\r\n\r\n\t}\r\n\r\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\r\n\r\n\t\tif ( isinf( attenuationDistance ) ) {\r\n\r\n\t\t\t// Attenuation distance is +∞, i.e. the transmitted color is not attenuated at all.\r\n\t\t\treturn vec3( 1.0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Compute light attenuation using Beer's law.\r\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\r\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law\r\n\t\t\treturn transmittance;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\r\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\r\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\r\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\r\n\r\n\t\tvec4 transmittedLight;\r\n\t\tvec3 transmittance;\r\n\r\n\t\t#ifdef USE_DISPERSION\r\n\r\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\r\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\r\n\r\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\r\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\r\n\r\n\t\t\t\t// Project refracted vector on the framebuffer, while mapping to normalized device coordinates.\r\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\r\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\r\n\t\t\t\trefractionCoords += 1.0;\r\n\t\t\t\trefractionCoords /= 2.0;\r\n\r\n\t\t\t\t// Sample framebuffer to get pixel the refracted ray hits.\r\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\r\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\r\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\r\n\r\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttransmittedLight.a /= 3.0;\r\n\r\n\t\t#else\r\n\r\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\r\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\r\n\r\n\t\t\t// Project refracted vector on the framebuffer, while mapping to normalized device coordinates.\r\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\r\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\r\n\t\t\trefractionCoords += 1.0;\r\n\t\t\trefractionCoords /= 2.0;\r\n\r\n\t\t\t// Sample framebuffer to get pixel the refracted ray hits.\r\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\r\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\r\n\r\n\t\t#endif\r\n\r\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\r\n\r\n\t\t// Get the specular component.\r\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\r\n\r\n\t\t// As less light is transmitted, the opacity should be increased. This simple approximation does a decent job\r\n\t\t// of modulating a CSS background, and has no effect when the buffer is opaque, due to a solid object or clear color.\r\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\r\n\r\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\r\n\r\n\t}\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_UV ) || defined( USE_ANISOTROPY )\r\n\r\n\tvarying vec2 vUv;\r\n\r\n#endif\r\n#ifdef USE_MAP\r\n\r\n\tvarying vec2 vMapUv;\r\n\r\n#endif\r\n#ifdef USE_ALPHAMAP\r\n\r\n\tvarying vec2 vAlphaMapUv;\r\n\r\n#endif\r\n#ifdef USE_LIGHTMAP\r\n\r\n\tvarying vec2 vLightMapUv;\r\n\r\n#endif\r\n#ifdef USE_AOMAP\r\n\r\n\tvarying vec2 vAoMapUv;\r\n\r\n#endif\r\n#ifdef USE_BUMPMAP\r\n\r\n\tvarying vec2 vBumpMapUv;\r\n\r\n#endif\r\n#ifdef USE_NORMALMAP\r\n\r\n\tvarying vec2 vNormalMapUv;\r\n\r\n#endif\r\n#ifdef USE_EMISSIVEMAP\r\n\r\n\tvarying vec2 vEmissiveMapUv;\r\n\r\n#endif\r\n#ifdef USE_METALNESSMAP\r\n\r\n\tvarying vec2 vMetalnessMapUv;\r\n\r\n#endif\r\n#ifdef USE_ROUGHNESSMAP\r\n\r\n\tvarying vec2 vRoughnessMapUv;\r\n\r\n#endif\r\n#ifdef USE_ANISOTROPYMAP\r\n\r\n\tvarying vec2 vAnisotropyMapUv;\r\n\r\n#endif\r\n#ifdef USE_CLEARCOATMAP\r\n\r\n\tvarying vec2 vClearcoatMapUv;\r\n\r\n#endif\r\n#ifdef USE_CLEARCOAT_NORMALMAP\r\n\r\n\tvarying vec2 vClearcoatNormalMapUv;\r\n\r\n#endif\r\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\r\n\r\n\tvarying vec2 vClearcoatRoughnessMapUv;\r\n\r\n#endif\r\n#ifdef USE_IRIDESCENCEMAP\r\n\r\n\tvarying vec2 vIridescenceMapUv;\r\n\r\n#endif\r\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\r\n\r\n\tvarying vec2 vIridescenceThicknessMapUv;\r\n\r\n#endif\r\n#ifdef USE_SHEEN_COLORMAP\r\n\r\n\tvarying vec2 vSheenColorMapUv;\r\n\r\n#endif\r\n#ifdef USE_SHEEN_ROUGHNESSMAP\r\n\r\n\tvarying vec2 vSheenRoughnessMapUv;\r\n\r\n#endif\r\n#ifdef USE_SPECULARMAP\r\n\r\n\tvarying vec2 vSpecularMapUv;\r\n\r\n#endif\r\n#ifdef USE_SPECULAR_COLORMAP\r\n\r\n\tvarying vec2 vSpecularColorMapUv;\r\n\r\n#endif\r\n#ifdef USE_SPECULAR_INTENSITYMAP\r\n\r\n\tvarying vec2 vSpecularIntensityMapUv;\r\n\r\n#endif\r\n#ifdef USE_TRANSMISSIONMAP\r\n\r\n\tuniform mat3 transmissionMapTransform;\r\n\tvarying vec2 vTransmissionMapUv;\r\n\r\n#endif\r\n#ifdef USE_THICKNESSMAP\r\n\r\n\tuniform mat3 thicknessMapTransform;\r\n\tvarying vec2 vThicknessMapUv;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_UV ) || defined( USE_ANISOTROPY )\r\n\r\n\tvarying vec2 vUv;\r\n\r\n#endif\r\n#ifdef USE_MAP\r\n\r\n\tuniform mat3 mapTransform;\r\n\tvarying vec2 vMapUv;\r\n\r\n#endif\r\n#ifdef USE_ALPHAMAP\r\n\r\n\tuniform mat3 alphaMapTransform;\r\n\tvarying vec2 vAlphaMapUv;\r\n\r\n#endif\r\n#ifdef USE_LIGHTMAP\r\n\r\n\tuniform mat3 lightMapTransform;\r\n\tvarying vec2 vLightMapUv;\r\n\r\n#endif\r\n#ifdef USE_AOMAP\r\n\r\n\tuniform mat3 aoMapTransform;\r\n\tvarying vec2 vAoMapUv;\r\n\r\n#endif\r\n#ifdef USE_BUMPMAP\r\n\r\n\tuniform mat3 bumpMapTransform;\r\n\tvarying vec2 vBumpMapUv;\r\n\r\n#endif\r\n#ifdef USE_NORMALMAP\r\n\r\n\tuniform mat3 normalMapTransform;\r\n\tvarying vec2 vNormalMapUv;\r\n\r\n#endif\r\n#ifdef USE_DISPLACEMENTMAP\r\n\r\n\tuniform mat3 displacementMapTransform;\r\n\tvarying vec2 vDisplacementMapUv;\r\n\r\n#endif\r\n#ifdef USE_EMISSIVEMAP\r\n\r\n\tuniform mat3 emissiveMapTransform;\r\n\tvarying vec2 vEmissiveMapUv;\r\n\r\n#endif\r\n#ifdef USE_METALNESSMAP\r\n\r\n\tuniform mat3 metalnessMapTransform;\r\n\tvarying vec2 vMetalnessMapUv;\r\n\r\n#endif\r\n#ifdef USE_ROUGHNESSMAP\r\n\r\n\tuniform mat3 roughnessMapTransform;\r\n\tvarying vec2 vRoughnessMapUv;\r\n\r\n#endif\r\n#ifdef USE_ANISOTROPYMAP\r\n\r\n\tuniform mat3 anisotropyMapTransform;\r\n\tvarying vec2 vAnisotropyMapUv;\r\n\r\n#endif\r\n#ifdef USE_CLEARCOATMAP\r\n\r\n\tuniform mat3 clearcoatMapTransform;\r\n\tvarying vec2 vClearcoatMapUv;\r\n\r\n#endif\r\n#ifdef USE_CLEARCOAT_NORMALMAP\r\n\r\n\tuniform mat3 clearcoatNormalMapTransform;\r\n\tvarying vec2 vClearcoatNormalMapUv;\r\n\r\n#endif\r\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\r\n\r\n\tuniform mat3 clearcoatRoughnessMapTransform;\r\n\tvarying vec2 vClearcoatRoughnessMapUv;\r\n\r\n#endif\r\n#ifdef USE_SHEEN_COLORMAP\r\n\r\n\tuniform mat3 sheenColorMapTransform;\r\n\tvarying vec2 vSheenColorMapUv;\r\n\r\n#endif\r\n#ifdef USE_SHEEN_ROUGHNESSMAP\r\n\r\n\tuniform mat3 sheenRoughnessMapTransform;\r\n\tvarying vec2 vSheenRoughnessMapUv;\r\n\r\n#endif\r\n#ifdef USE_IRIDESCENCEMAP\r\n\r\n\tuniform mat3 iridescenceMapTransform;\r\n\tvarying vec2 vIridescenceMapUv;\r\n\r\n#endif\r\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\r\n\r\n\tuniform mat3 iridescenceThicknessMapTransform;\r\n\tvarying vec2 vIridescenceThicknessMapUv;\r\n\r\n#endif\r\n#ifdef USE_SPECULARMAP\r\n\r\n\tuniform mat3 specularMapTransform;\r\n\tvarying vec2 vSpecularMapUv;\r\n\r\n#endif\r\n#ifdef USE_SPECULAR_COLORMAP\r\n\r\n\tuniform mat3 specularColorMapTransform;\r\n\tvarying vec2 vSpecularColorMapUv;\r\n\r\n#endif\r\n#ifdef USE_SPECULAR_INTENSITYMAP\r\n\r\n\tuniform mat3 specularIntensityMapTransform;\r\n\tvarying vec2 vSpecularIntensityMapUv;\r\n\r\n#endif\r\n#ifdef USE_TRANSMISSIONMAP\r\n\r\n\tuniform mat3 transmissionMapTransform;\r\n\tvarying vec2 vTransmissionMapUv;\r\n\r\n#endif\r\n#ifdef USE_THICKNESSMAP\r\n\r\n\tuniform mat3 thicknessMapTransform;\r\n\tvarying vec2 vThicknessMapUv;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_UV ) || defined( USE_ANISOTROPY )\r\n\r\n\tvUv = vec3( uv, 1 ).xy;\r\n\r\n#endif\r\n#ifdef USE_MAP\r\n\r\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_ALPHAMAP\r\n\r\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_LIGHTMAP\r\n\r\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_AOMAP\r\n\r\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_BUMPMAP\r\n\r\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_NORMALMAP\r\n\r\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_DISPLACEMENTMAP\r\n\r\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_EMISSIVEMAP\r\n\r\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_METALNESSMAP\r\n\r\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_ROUGHNESSMAP\r\n\r\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_ANISOTROPYMAP\r\n\r\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_CLEARCOATMAP\r\n\r\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_CLEARCOAT_NORMALMAP\r\n\r\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\r\n\r\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_IRIDESCENCEMAP\r\n\r\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\r\n\r\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_SHEEN_COLORMAP\r\n\r\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_SHEEN_ROUGHNESSMAP\r\n\r\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_SPECULARMAP\r\n\r\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_SPECULAR_COLORMAP\r\n\r\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_SPECULAR_INTENSITYMAP\r\n\r\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_TRANSMISSIONMAP\r\n\r\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n#ifdef USE_THICKNESSMAP\r\n\r\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\r\n\r\n#endif\r\n`;\r\n","export default /* glsl */`\r\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\r\n\r\n\tvec4 worldPosition = vec4( transformed, 1.0 );\r\n\r\n\t#ifdef USE_BATCHING\r\n\r\n\t\tworldPosition = batchingMatrix * worldPosition;\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_INSTANCING\r\n\r\n\t\tworldPosition = instanceMatrix * worldPosition;\r\n\r\n\t#endif\r\n\r\n\tworldPosition = modelMatrix * worldPosition;\r\n\r\n#endif\r\n`;\r\n","export const vertex = /* glsl */`\r\nvarying vec2 vUv;\r\nuniform mat3 uvTransform;\r\n\r\nvoid main() {\r\n\r\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\r\n\r\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\nuniform sampler2D t2D;\r\nuniform float backgroundIntensity;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texColor = texture2D( t2D, vUv );\r\n\r\n\t#ifdef DECODE_VIDEO_TEXTURE\r\n\r\n\t\t// use inline sRGB decode until browsers properly support SRGB8_ALPHA8 with video textures\r\n\r\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\r\n\r\n\t#endif\r\n\r\n\ttexColor.rgb *= backgroundIntensity;\r\n\r\n\tgl_FragColor = texColor;\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\nvarying vec3 vWorldDirection;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n\tvWorldDirection = transformDirection( position, modelMatrix );\r\n\r\n\t#include <begin_vertex>\r\n\t#include <project_vertex>\r\n\r\n\tgl_Position.z = gl_Position.w; // set z to camera.far\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\n\r\n#ifdef ENVMAP_TYPE_CUBE\r\n\r\n\tuniform samplerCube envMap;\r\n\r\n#elif defined( ENVMAP_TYPE_CUBE_UV )\r\n\r\n\tuniform sampler2D envMap;\r\n\r\n#endif\r\n\r\nuniform float flipEnvMap;\r\nuniform float backgroundBlurriness;\r\nuniform float backgroundIntensity;\r\nuniform mat3 backgroundRotation;\r\n\r\nvarying vec3 vWorldDirection;\r\n\r\n#include <cube_uv_reflection_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#ifdef ENVMAP_TYPE_CUBE\r\n\r\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\r\n\r\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\r\n\r\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\r\n\r\n\t#else\r\n\r\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\r\n\t#endif\r\n\r\n\ttexColor.rgb *= backgroundIntensity;\r\n\r\n\tgl_FragColor = texColor;\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\nvarying vec3 vWorldDirection;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n\tvWorldDirection = transformDirection( position, modelMatrix );\r\n\r\n\t#include <begin_vertex>\r\n\t#include <project_vertex>\r\n\r\n\tgl_Position.z = gl_Position.w; // set z to camera.far\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\nuniform samplerCube tCube;\r\nuniform float tFlip;\r\nuniform float opacity;\r\n\r\nvarying vec3 vWorldDirection;\r\n\r\nvoid main() {\r\n\r\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\r\n\r\n\tgl_FragColor = texColor;\r\n\tgl_FragColor.a *= opacity;\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\n#include <common>\r\n#include <batching_pars_vertex>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\r\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\r\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\r\nvarying vec2 vHighPrecisionZW;\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\r\n\t#include <batching_vertex>\r\n\t#include <skinbase_vertex>\r\n\r\n\t#include <morphinstance_vertex>\r\n\r\n\t#ifdef USE_DISPLACEMENTMAP\r\n\r\n\t\t#include <beginnormal_vertex>\r\n\t\t#include <morphnormal_vertex>\r\n\t\t#include <skinnormal_vertex>\r\n\r\n\t#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvHighPrecisionZW = gl_Position.zw;\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\n#if DEPTH_PACKING == 3200\r\n\r\n\tuniform float opacity;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <alphahash_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvarying vec2 vHighPrecisionZW;\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( 1.0 );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\t#if DEPTH_PACKING == 3200\r\n\r\n\t\tdiffuseColor.a = opacity;\r\n\r\n\t#endif\r\n\r\n\t#include <map_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <alphahash_fragment>\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\r\n\t// Higher precision equivalent of gl_FragCoord.z\r\n\r\n\t#ifdef USE_REVERSED_DEPTH_BUFFER\r\n\r\n\t\tfloat fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];\r\n\r\n\t#else\r\n\r\n\t\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;\r\n\r\n\t#endif\r\n\r\n\t#if DEPTH_PACKING == 3200\r\n\r\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\r\n\r\n\t#elif DEPTH_PACKING == 3201\r\n\r\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\r\n\r\n\t#elif DEPTH_PACKING == 3202\r\n\r\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\r\n\r\n\t#elif DEPTH_PACKING == 3203\r\n\r\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\r\n\r\n\t#endif\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\n#define DISTANCE\r\n\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <batching_pars_vertex>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\r\n\t#include <batching_vertex>\r\n\t#include <skinbase_vertex>\r\n\r\n\t#include <morphinstance_vertex>\r\n\r\n\t#ifdef USE_DISPLACEMENTMAP\r\n\r\n\t\t#include <beginnormal_vertex>\r\n\t\t#include <morphnormal_vertex>\r\n\t\t#include <skinnormal_vertex>\r\n\r\n\t#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <worldpos_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvWorldPosition = worldPosition.xyz;\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\n#define DISTANCE\r\n\r\nuniform vec3 referencePosition;\r\nuniform float nearDistance;\r\nuniform float farDistance;\r\nvarying vec3 vWorldPosition;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <alphahash_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main () {\r\n\r\n\tvec4 diffuseColor = vec4( 1.0 );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\t#include <map_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <alphahash_fragment>\r\n\r\n\tfloat dist = length( vWorldPosition - referencePosition );\r\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\r\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\r\n\r\n\tgl_FragColor = packDepthToRGBA( dist );\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\nvarying vec3 vWorldDirection;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n\tvWorldDirection = transformDirection( position, modelMatrix );\r\n\r\n\t#include <begin_vertex>\r\n\t#include <project_vertex>\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\nuniform sampler2D tEquirect;\r\n\r\nvarying vec3 vWorldDirection;\r\n\r\n#include <common>\r\n\r\nvoid main() {\r\n\r\n\tvec3 direction = normalize( vWorldDirection );\r\n\r\n\tvec2 sampleUV = equirectUv( direction );\r\n\r\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\nuniform float scale;\r\nattribute float lineDistance;\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\tvLineDistance = scale * lineDistance;\r\n\r\n\t#include <uv_vertex>\r\n\t#include <color_vertex>\r\n\t#include <morphinstance_vertex>\r\n\t#include <morphcolor_vertex>\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\nuniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\nuniform float dashSize;\r\nuniform float totalSize;\r\n\r\nvarying float vLineDistance;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\r\n\r\n\t\tdiscard;\r\n\r\n\t}\r\n\r\n\tvec3 outgoingLight = vec3( 0.0 );\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\r\n\toutgoingLight = diffuseColor.rgb; // simple shader\r\n\r\n\t#include <opaque_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\n#include <common>\r\n#include <batching_pars_vertex>\r\n#include <uv_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <color_vertex>\r\n\t#include <morphinstance_vertex>\r\n\t#include <morphcolor_vertex>\r\n\t#include <batching_vertex>\r\n\r\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\r\n\r\n\t\t#include <beginnormal_vertex>\r\n\t\t#include <morphnormal_vertex>\r\n\t\t#include <skinbase_vertex>\r\n\t\t#include <skinnormal_vertex>\r\n\t\t#include <defaultnormal_vertex>\r\n\r\n\t#endif\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <envmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\nuniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#ifndef FLAT_SHADED\r\n\r\n\tvarying vec3 vNormal;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <alphahash_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <envmap_common_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <alphahash_fragment>\r\n\t#include <specularmap_fragment>\r\n\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\r\n\t// accumulation (baked indirect lighting only)\r\n\t#ifdef USE_LIGHTMAP\r\n\r\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\r\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\r\n\r\n\t#else\r\n\r\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\r\n\r\n\t#endif\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\r\n\r\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\r\n\r\n\t#include <envmap_fragment>\r\n\r\n\t#include <opaque_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\n#define LAMBERT\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#include <common>\r\n#include <batching_pars_vertex>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <normal_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <color_vertex>\r\n\t#include <morphinstance_vertex>\r\n\t#include <morphcolor_vertex>\r\n\t#include <batching_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\t#include <normal_vertex>\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <envmap_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\n#define LAMBERT\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <alphahash_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_common_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <normal_pars_fragment>\r\n#include <lights_lambert_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\tvec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <alphahash_fragment>\r\n\t#include <specularmap_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\t#include <emissivemap_fragment>\r\n\r\n\t// accumulation\r\n\t#include <lights_lambert_fragment>\r\n\t#include <lights_fragment_begin>\r\n\t#include <lights_fragment_maps>\r\n\t#include <lights_fragment_end>\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\r\n\r\n\t#include <envmap_fragment>\r\n\t#include <opaque_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\n#define MATCAP\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#include <common>\r\n#include <batching_pars_vertex>\r\n#include <uv_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <normal_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <color_vertex>\r\n\t#include <morphinstance_vertex>\r\n\t#include <morphcolor_vertex>\r\n\t#include <batching_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\t#include <normal_vertex>\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <fog_vertex>\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\n#define MATCAP\r\n\r\nuniform vec3 diffuse;\r\nuniform float opacity;\r\nuniform sampler2D matcap;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#include <common>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <alphahash_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <normal_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <alphahash_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\r\n\tvec3 viewDir = normalize( vViewPosition );\r\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\r\n\tvec3 y = cross( viewDir, x );\r\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\r\n\r\n\t#ifdef USE_MATCAP\r\n\r\n\t\tvec4 matcapColor = texture2D( matcap, uv );\r\n\r\n\t#else\r\n\r\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 ); // default if matcap is missing\r\n\r\n\t#endif\r\n\r\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\r\n\r\n\t#include <opaque_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\n#define NORMAL\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\r\n\r\n\tvarying vec3 vViewPosition;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <batching_pars_vertex>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <normal_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <batching_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphinstance_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\t#include <normal_vertex>\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n#endif\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\n#define NORMAL\r\n\r\nuniform float opacity;\r\n\r\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\r\n\r\n\tvarying vec3 vViewPosition;\r\n\r\n#endif\r\n\r\n#include <packing>\r\n#include <uv_pars_fragment>\r\n#include <normal_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\r\n\r\n\t#include <clipping_planes_fragment>\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\r\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\r\n\r\n\t#ifdef OPAQUE\r\n\r\n\t\tgl_FragColor.a = 1.0;\r\n\r\n\t#endif\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\n#define PHONG\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#include <common>\r\n#include <batching_pars_vertex>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <envmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <normal_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <color_vertex>\r\n\t#include <morphcolor_vertex>\r\n\t#include <batching_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphinstance_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\t#include <normal_vertex>\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <envmap_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\n#define PHONG\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <alphahash_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_common_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <normal_pars_fragment>\r\n#include <lights_phong_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\tvec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <alphahash_fragment>\r\n\t#include <specularmap_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\t#include <emissivemap_fragment>\r\n\r\n\t// accumulation\r\n\t#include <lights_phong_fragment>\r\n\t#include <lights_fragment_begin>\r\n\t#include <lights_fragment_maps>\r\n\t#include <lights_fragment_end>\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n\t#include <envmap_fragment>\r\n\t#include <opaque_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\n#define STANDARD\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#ifdef USE_TRANSMISSION\r\n\r\n\tvarying vec3 vWorldPosition;\r\n\r\n#endif\r\n\r\n#include <common>\r\n#include <batching_pars_vertex>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <normal_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <color_vertex>\r\n\t#include <morphinstance_vertex>\r\n\t#include <morphcolor_vertex>\r\n\t#include <batching_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\t#include <normal_vertex>\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n#ifdef USE_TRANSMISSION\r\n\r\n\tvWorldPosition = worldPosition.xyz;\r\n\r\n#endif\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\n#define STANDARD\r\n\r\n#ifdef PHYSICAL\r\n\t#define IOR\r\n\t#define USE_SPECULAR\r\n#endif\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float roughness;\r\nuniform float metalness;\r\nuniform float opacity;\r\n\r\n#ifdef IOR\r\n\tuniform float ior;\r\n#endif\r\n\r\n#ifdef USE_SPECULAR\r\n\tuniform float specularIntensity;\r\n\tuniform vec3 specularColor;\r\n\r\n\t#ifdef USE_SPECULAR_COLORMAP\r\n\t\tuniform sampler2D specularColorMap;\r\n\t#endif\r\n\r\n\t#ifdef USE_SPECULAR_INTENSITYMAP\r\n\t\tuniform sampler2D specularIntensityMap;\r\n\t#endif\r\n#endif\r\n\r\n#ifdef USE_CLEARCOAT\r\n\tuniform float clearcoat;\r\n\tuniform float clearcoatRoughness;\r\n#endif\r\n\r\n#ifdef USE_DISPERSION\r\n\tuniform float dispersion;\r\n#endif\r\n\r\n#ifdef USE_IRIDESCENCE\r\n\tuniform float iridescence;\r\n\tuniform float iridescenceIOR;\r\n\tuniform float iridescenceThicknessMinimum;\r\n\tuniform float iridescenceThicknessMaximum;\r\n#endif\r\n\r\n#ifdef USE_SHEEN\r\n\tuniform vec3 sheenColor;\r\n\tuniform float sheenRoughness;\r\n\r\n\t#ifdef USE_SHEEN_COLORMAP\r\n\t\tuniform sampler2D sheenColorMap;\r\n\t#endif\r\n\r\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\r\n\t\tuniform sampler2D sheenRoughnessMap;\r\n\t#endif\r\n#endif\r\n\r\n#ifdef USE_ANISOTROPY\r\n\tuniform vec2 anisotropyVector;\r\n\r\n\t#ifdef USE_ANISOTROPYMAP\r\n\t\tuniform sampler2D anisotropyMap;\r\n\t#endif\r\n#endif\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <alphahash_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <iridescence_fragment>\r\n#include <cube_uv_reflection_fragment>\r\n#include <envmap_common_pars_fragment>\r\n#include <envmap_physical_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <lights_pars_begin>\r\n#include <normal_pars_fragment>\r\n#include <lights_physical_pars_fragment>\r\n#include <transmission_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <clearcoat_pars_fragment>\r\n#include <iridescence_pars_fragment>\r\n#include <roughnessmap_pars_fragment>\r\n#include <metalnessmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\tvec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <alphahash_fragment>\r\n\t#include <roughnessmap_fragment>\r\n\t#include <metalnessmap_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\t#include <clearcoat_normal_fragment_begin>\r\n\t#include <clearcoat_normal_fragment_maps>\r\n\t#include <emissivemap_fragment>\r\n\r\n\t// accumulation\r\n\t#include <lights_physical_fragment>\r\n\t#include <lights_fragment_begin>\r\n\t#include <lights_fragment_maps>\r\n\t#include <lights_fragment_end>\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\r\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\r\n\r\n\t#include <transmission_fragment>\r\n\r\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\r\n\r\n\t#ifdef USE_SHEEN\r\n\r\n\t\t// Sheen energy compensation approximation calculation can be found at the end of\r\n\t\t// https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\r\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\r\n\r\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\r\n\r\n\t#endif\r\n\r\n\t#ifdef USE_CLEARCOAT\r\n\r\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\r\n\r\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\r\n\r\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\r\n\r\n\t#endif\r\n\r\n\t#include <opaque_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\n#define TOON\r\n\r\nvarying vec3 vViewPosition;\r\n\r\n#include <common>\r\n#include <batching_pars_vertex>\r\n#include <uv_pars_vertex>\r\n#include <displacementmap_pars_vertex>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <normal_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\t#include <color_vertex>\r\n\t#include <morphinstance_vertex>\r\n\t#include <morphcolor_vertex>\r\n\t#include <batching_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\t#include <normal_vertex>\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <displacementmap_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\r\n\tvViewPosition = - mvPosition.xyz;\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\n#define TOON\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <alphahash_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <gradientmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <normal_pars_fragment>\r\n#include <lights_toon_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\r\n\tvec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <alphahash_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\t#include <emissivemap_fragment>\r\n\r\n\t// accumulation\r\n\t#include <lights_toon_fragment>\r\n\t#include <lights_fragment_begin>\r\n\t#include <lights_fragment_maps>\r\n\t#include <lights_fragment_end>\r\n\r\n\t// modulation\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\r\n\r\n\t#include <opaque_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\nuniform float size;\r\nuniform float scale;\r\n\r\n#include <common>\r\n#include <color_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\n#ifdef USE_POINTS_UV\r\n\r\n\tvarying vec2 vUv;\r\n\tuniform mat3 uvTransform;\r\n\r\n#endif\r\n\r\nvoid main() {\r\n\r\n\t#ifdef USE_POINTS_UV\r\n\r\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\r\n\r\n\t#endif\r\n\r\n\t#include <color_vertex>\r\n\t#include <morphinstance_vertex>\r\n\t#include <morphcolor_vertex>\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <project_vertex>\r\n\r\n\tgl_PointSize = size;\r\n\r\n\t#ifdef USE_SIZEATTENUATION\r\n\r\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\r\n\r\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\r\n\r\n\t#endif\r\n\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <worldpos_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\nuniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <color_pars_fragment>\r\n#include <map_particle_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <alphahash_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec3 outgoingLight = vec3( 0.0 );\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_particle_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <alphahash_fragment>\r\n\r\n\toutgoingLight = diffuseColor.rgb;\r\n\r\n\t#include <opaque_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\n#include <common>\r\n#include <batching_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <morphtarget_pars_vertex>\r\n#include <skinning_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <shadowmap_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <batching_vertex>\r\n\r\n\t#include <beginnormal_vertex>\r\n\t#include <morphinstance_vertex>\r\n\t#include <morphnormal_vertex>\r\n\t#include <skinbase_vertex>\r\n\t#include <skinnormal_vertex>\r\n\t#include <defaultnormal_vertex>\r\n\r\n\t#include <begin_vertex>\r\n\t#include <morphtarget_vertex>\r\n\t#include <skinning_vertex>\r\n\t#include <project_vertex>\r\n\t#include <logdepthbuf_vertex>\r\n\r\n\t#include <worldpos_vertex>\r\n\t#include <shadowmap_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\nuniform vec3 color;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <shadowmask_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\r\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\r\n\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\t#include <fog_fragment>\r\n\r\n}\r\n`;\r\n","export const vertex = /* glsl */`\r\nuniform float rotation;\r\nuniform vec2 center;\r\n\r\n#include <common>\r\n#include <uv_pars_vertex>\r\n#include <fog_pars_vertex>\r\n#include <logdepthbuf_pars_vertex>\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\t#include <uv_vertex>\r\n\r\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\r\n\r\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\r\n\r\n\t#ifndef USE_SIZEATTENUATION\r\n\r\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\r\n\r\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\r\n\r\n\t#endif\r\n\r\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\r\n\r\n\tvec2 rotatedPosition;\r\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\r\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\r\n\r\n\tmvPosition.xy += rotatedPosition;\r\n\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\t#include <logdepthbuf_vertex>\r\n\t#include <clipping_planes_vertex>\r\n\t#include <fog_vertex>\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\nuniform vec3 diffuse;\r\nuniform float opacity;\r\n\r\n#include <common>\r\n#include <uv_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <alphahash_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\r\n\tvec4 diffuseColor = vec4( diffuse, opacity );\r\n\t#include <clipping_planes_fragment>\r\n\r\n\tvec3 outgoingLight = vec3( 0.0 );\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <alphahash_fragment>\r\n\r\n\toutgoingLight = diffuseColor.rgb;\r\n\r\n\t#include <opaque_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <colorspace_fragment>\r\n\t#include <fog_fragment>\r\n\r\n}\r\n`;\r\n","import alphahash_fragment from './ShaderChunk/alphahash_fragment.glsl.js';\r\nimport alphahash_pars_fragment from './ShaderChunk/alphahash_pars_fragment.glsl.js';\r\nimport alphamap_fragment from './ShaderChunk/alphamap_fragment.glsl.js';\r\nimport alphamap_pars_fragment from './ShaderChunk/alphamap_pars_fragment.glsl.js';\r\nimport alphatest_fragment from './ShaderChunk/alphatest_fragment.glsl.js';\r\nimport alphatest_pars_fragment from './ShaderChunk/alphatest_pars_fragment.glsl.js';\r\nimport aomap_fragment from './ShaderChunk/aomap_fragment.glsl.js';\r\nimport aomap_pars_fragment from './ShaderChunk/aomap_pars_fragment.glsl.js';\r\nimport batching_pars_vertex from './ShaderChunk/batching_pars_vertex.glsl.js';\r\nimport batching_vertex from './ShaderChunk/batching_vertex.glsl.js';\r\nimport begin_vertex from './ShaderChunk/begin_vertex.glsl.js';\r\nimport beginnormal_vertex from './ShaderChunk/beginnormal_vertex.glsl.js';\r\nimport bsdfs from './ShaderChunk/bsdfs.glsl.js';\r\nimport iridescence_fragment from './ShaderChunk/iridescence_fragment.glsl.js';\r\nimport bumpmap_pars_fragment from './ShaderChunk/bumpmap_pars_fragment.glsl.js';\r\nimport clipping_planes_fragment from './ShaderChunk/clipping_planes_fragment.glsl.js';\r\nimport clipping_planes_pars_fragment from './ShaderChunk/clipping_planes_pars_fragment.glsl.js';\r\nimport clipping_planes_pars_vertex from './ShaderChunk/clipping_planes_pars_vertex.glsl.js';\r\nimport clipping_planes_vertex from './ShaderChunk/clipping_planes_vertex.glsl.js';\r\nimport color_fragment from './ShaderChunk/color_fragment.glsl.js';\r\nimport color_pars_fragment from './ShaderChunk/color_pars_fragment.glsl.js';\r\nimport color_pars_vertex from './ShaderChunk/color_pars_vertex.glsl.js';\r\nimport color_vertex from './ShaderChunk/color_vertex.glsl.js';\r\nimport common from './ShaderChunk/common.glsl.js';\r\nimport cube_uv_reflection_fragment from './ShaderChunk/cube_uv_reflection_fragment.glsl.js';\r\nimport defaultnormal_vertex from './ShaderChunk/defaultnormal_vertex.glsl.js';\r\nimport displacementmap_pars_vertex from './ShaderChunk/displacementmap_pars_vertex.glsl.js';\r\nimport displacementmap_vertex from './ShaderChunk/displacementmap_vertex.glsl.js';\r\nimport emissivemap_fragment from './ShaderChunk/emissivemap_fragment.glsl.js';\r\nimport emissivemap_pars_fragment from './ShaderChunk/emissivemap_pars_fragment.glsl.js';\r\nimport colorspace_fragment from './ShaderChunk/colorspace_fragment.glsl.js';\r\nimport colorspace_pars_fragment from './ShaderChunk/colorspace_pars_fragment.glsl.js';\r\nimport envmap_fragment from './ShaderChunk/envmap_fragment.glsl.js';\r\nimport envmap_common_pars_fragment from './ShaderChunk/envmap_common_pars_fragment.glsl.js';\r\nimport envmap_pars_fragment from './ShaderChunk/envmap_pars_fragment.glsl.js';\r\nimport envmap_pars_vertex from './ShaderChunk/envmap_pars_vertex.glsl.js';\r\nimport envmap_vertex from './ShaderChunk/envmap_vertex.glsl.js';\r\nimport fog_vertex from './ShaderChunk/fog_vertex.glsl.js';\r\nimport fog_pars_vertex from './ShaderChunk/fog_pars_vertex.glsl.js';\r\nimport fog_fragment from './ShaderChunk/fog_fragment.glsl.js';\r\nimport fog_pars_fragment from './ShaderChunk/fog_pars_fragment.glsl.js';\r\nimport gradientmap_pars_fragment from './ShaderChunk/gradientmap_pars_fragment.glsl.js';\r\nimport lightmap_pars_fragment from './ShaderChunk/lightmap_pars_fragment.glsl.js';\r\nimport lights_lambert_fragment from './ShaderChunk/lights_lambert_fragment.glsl.js';\r\nimport lights_lambert_pars_fragment from './ShaderChunk/lights_lambert_pars_fragment.glsl.js';\r\nimport lights_pars_begin from './ShaderChunk/lights_pars_begin.glsl.js';\r\nimport envmap_physical_pars_fragment from './ShaderChunk/envmap_physical_pars_fragment.glsl.js';\r\nimport lights_toon_fragment from './ShaderChunk/lights_toon_fragment.glsl.js';\r\nimport lights_toon_pars_fragment from './ShaderChunk/lights_toon_pars_fragment.glsl.js';\r\nimport lights_phong_fragment from './ShaderChunk/lights_phong_fragment.glsl.js';\r\nimport lights_phong_pars_fragment from './ShaderChunk/lights_phong_pars_fragment.glsl.js';\r\nimport lights_physical_fragment from './ShaderChunk/lights_physical_fragment.glsl.js';\r\nimport lights_physical_pars_fragment from './ShaderChunk/lights_physical_pars_fragment.glsl.js';\r\nimport lights_fragment_begin from './ShaderChunk/lights_fragment_begin.glsl.js';\r\nimport lights_fragment_maps from './ShaderChunk/lights_fragment_maps.glsl.js';\r\nimport lights_fragment_end from './ShaderChunk/lights_fragment_end.glsl.js';\r\nimport logdepthbuf_fragment from './ShaderChunk/logdepthbuf_fragment.glsl.js';\r\nimport logdepthbuf_pars_fragment from './ShaderChunk/logdepthbuf_pars_fragment.glsl.js';\r\nimport logdepthbuf_pars_vertex from './ShaderChunk/logdepthbuf_pars_vertex.glsl.js';\r\nimport logdepthbuf_vertex from './ShaderChunk/logdepthbuf_vertex.glsl.js';\r\nimport map_fragment from './ShaderChunk/map_fragment.glsl.js';\r\nimport map_pars_fragment from './ShaderChunk/map_pars_fragment.glsl.js';\r\nimport map_particle_fragment from './ShaderChunk/map_particle_fragment.glsl.js';\r\nimport map_particle_pars_fragment from './ShaderChunk/map_particle_pars_fragment.glsl.js';\r\nimport metalnessmap_fragment from './ShaderChunk/metalnessmap_fragment.glsl.js';\r\nimport metalnessmap_pars_fragment from './ShaderChunk/metalnessmap_pars_fragment.glsl.js';\r\nimport morphinstance_vertex from './ShaderChunk/morphinstance_vertex.glsl.js';\r\nimport morphcolor_vertex from './ShaderChunk/morphcolor_vertex.glsl.js';\r\nimport morphnormal_vertex from './ShaderChunk/morphnormal_vertex.glsl.js';\r\nimport morphtarget_pars_vertex from './ShaderChunk/morphtarget_pars_vertex.glsl.js';\r\nimport morphtarget_vertex from './ShaderChunk/morphtarget_vertex.glsl.js';\r\nimport normal_fragment_begin from './ShaderChunk/normal_fragment_begin.glsl.js';\r\nimport normal_fragment_maps from './ShaderChunk/normal_fragment_maps.glsl.js';\r\nimport normal_pars_fragment from './ShaderChunk/normal_pars_fragment.glsl.js';\r\nimport normal_pars_vertex from './ShaderChunk/normal_pars_vertex.glsl.js';\r\nimport normal_vertex from './ShaderChunk/normal_vertex.glsl.js';\r\nimport normalmap_pars_fragment from './ShaderChunk/normalmap_pars_fragment.glsl.js';\r\nimport clearcoat_normal_fragment_begin from './ShaderChunk/clearcoat_normal_fragment_begin.glsl.js';\r\nimport clearcoat_normal_fragment_maps from './ShaderChunk/clearcoat_normal_fragment_maps.glsl.js';\r\nimport clearcoat_pars_fragment from './ShaderChunk/clearcoat_pars_fragment.glsl.js';\r\nimport iridescence_pars_fragment from './ShaderChunk/iridescence_pars_fragment.glsl.js';\r\nimport opaque_fragment from './ShaderChunk/opaque_fragment.glsl.js';\r\nimport packing from './ShaderChunk/packing.glsl.js';\r\nimport premultiplied_alpha_fragment from './ShaderChunk/premultiplied_alpha_fragment.glsl.js';\r\nimport project_vertex from './ShaderChunk/project_vertex.glsl.js';\r\nimport dithering_fragment from './ShaderChunk/dithering_fragment.glsl.js';\r\nimport dithering_pars_fragment from './ShaderChunk/dithering_pars_fragment.glsl.js';\r\nimport roughnessmap_fragment from './ShaderChunk/roughnessmap_fragment.glsl.js';\r\nimport roughnessmap_pars_fragment from './ShaderChunk/roughnessmap_pars_fragment.glsl.js';\r\nimport shadowmap_pars_fragment from './ShaderChunk/shadowmap_pars_fragment.glsl.js';\r\nimport shadowmap_pars_vertex from './ShaderChunk/shadowmap_pars_vertex.glsl.js';\r\nimport shadowmap_vertex from './ShaderChunk/shadowmap_vertex.glsl.js';\r\nimport shadowmask_pars_fragment from './ShaderChunk/shadowmask_pars_fragment.glsl.js';\r\nimport skinbase_vertex from './ShaderChunk/skinbase_vertex.glsl.js';\r\nimport skinning_pars_vertex from './ShaderChunk/skinning_pars_vertex.glsl.js';\r\nimport skinning_vertex from './ShaderChunk/skinning_vertex.glsl.js';\r\nimport skinnormal_vertex from './ShaderChunk/skinnormal_vertex.glsl.js';\r\nimport specularmap_fragment from './ShaderChunk/specularmap_fragment.glsl.js';\r\nimport specularmap_pars_fragment from './ShaderChunk/specularmap_pars_fragment.glsl.js';\r\nimport tonemapping_fragment from './ShaderChunk/tonemapping_fragment.glsl.js';\r\nimport tonemapping_pars_fragment from './ShaderChunk/tonemapping_pars_fragment.glsl.js';\r\nimport transmission_fragment from './ShaderChunk/transmission_fragment.glsl.js';\r\nimport transmission_pars_fragment from './ShaderChunk/transmission_pars_fragment.glsl.js';\r\nimport uv_pars_fragment from './ShaderChunk/uv_pars_fragment.glsl.js';\r\nimport uv_pars_vertex from './ShaderChunk/uv_pars_vertex.glsl.js';\r\nimport uv_vertex from './ShaderChunk/uv_vertex.glsl.js';\r\nimport worldpos_vertex from './ShaderChunk/worldpos_vertex.glsl.js';\r\n\r\nimport * as background from './ShaderLib/background.glsl.js';\r\nimport * as backgroundCube from './ShaderLib/backgroundCube.glsl.js';\r\nimport * as cube from './ShaderLib/cube.glsl.js';\r\nimport * as depth from './ShaderLib/depth.glsl.js';\r\nimport * as distanceRGBA from './ShaderLib/distanceRGBA.glsl.js';\r\nimport * as equirect from './ShaderLib/equirect.glsl.js';\r\nimport * as linedashed from './ShaderLib/linedashed.glsl.js';\r\nimport * as meshbasic from './ShaderLib/meshbasic.glsl.js';\r\nimport * as meshlambert from './ShaderLib/meshlambert.glsl.js';\r\nimport * as meshmatcap from './ShaderLib/meshmatcap.glsl.js';\r\nimport * as meshnormal from './ShaderLib/meshnormal.glsl.js';\r\nimport * as meshphong from './ShaderLib/meshphong.glsl.js';\r\nimport * as meshphysical from './ShaderLib/meshphysical.glsl.js';\r\nimport * as meshtoon from './ShaderLib/meshtoon.glsl.js';\r\nimport * as points from './ShaderLib/points.glsl.js';\r\nimport * as shadow from './ShaderLib/shadow.glsl.js';\r\nimport * as sprite from './ShaderLib/sprite.glsl.js';\r\n\r\nexport const ShaderChunk = {\r\n\talphahash_fragment: alphahash_fragment,\r\n\talphahash_pars_fragment: alphahash_pars_fragment,\r\n\talphamap_fragment: alphamap_fragment,\r\n\talphamap_pars_fragment: alphamap_pars_fragment,\r\n\talphatest_fragment: alphatest_fragment,\r\n\talphatest_pars_fragment: alphatest_pars_fragment,\r\n\taomap_fragment: aomap_fragment,\r\n\taomap_pars_fragment: aomap_pars_fragment,\r\n\tbatching_pars_vertex: batching_pars_vertex,\r\n\tbatching_vertex: batching_vertex,\r\n\tbegin_vertex: begin_vertex,\r\n\tbeginnormal_vertex: beginnormal_vertex,\r\n\tbsdfs: bsdfs,\r\n\tiridescence_fragment: iridescence_fragment,\r\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\r\n\tclipping_planes_fragment: clipping_planes_fragment,\r\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\r\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\r\n\tclipping_planes_vertex: clipping_planes_vertex,\r\n\tcolor_fragment: color_fragment,\r\n\tcolor_pars_fragment: color_pars_fragment,\r\n\tcolor_pars_vertex: color_pars_vertex,\r\n\tcolor_vertex: color_vertex,\r\n\tcommon: common,\r\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\r\n\tdefaultnormal_vertex: defaultnormal_vertex,\r\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\r\n\tdisplacementmap_vertex: displacementmap_vertex,\r\n\temissivemap_fragment: emissivemap_fragment,\r\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\r\n\tcolorspace_fragment: colorspace_fragment,\r\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\r\n\tenvmap_fragment: envmap_fragment,\r\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\r\n\tenvmap_pars_fragment: envmap_pars_fragment,\r\n\tenvmap_pars_vertex: envmap_pars_vertex,\r\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\r\n\tenvmap_vertex: envmap_vertex,\r\n\tfog_vertex: fog_vertex,\r\n\tfog_pars_vertex: fog_pars_vertex,\r\n\tfog_fragment: fog_fragment,\r\n\tfog_pars_fragment: fog_pars_fragment,\r\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\r\n\tlightmap_pars_fragment: lightmap_pars_fragment,\r\n\tlights_lambert_fragment: lights_lambert_fragment,\r\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\r\n\tlights_pars_begin: lights_pars_begin,\r\n\tlights_toon_fragment: lights_toon_fragment,\r\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\r\n\tlights_phong_fragment: lights_phong_fragment,\r\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\r\n\tlights_physical_fragment: lights_physical_fragment,\r\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\r\n\tlights_fragment_begin: lights_fragment_begin,\r\n\tlights_fragment_maps: lights_fragment_maps,\r\n\tlights_fragment_end: lights_fragment_end,\r\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\r\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\r\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\r\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\r\n\tmap_fragment: map_fragment,\r\n\tmap_pars_fragment: map_pars_fragment,\r\n\tmap_particle_fragment: map_particle_fragment,\r\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\r\n\tmetalnessmap_fragment: metalnessmap_fragment,\r\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\r\n\tmorphinstance_vertex: morphinstance_vertex,\r\n\tmorphcolor_vertex: morphcolor_vertex,\r\n\tmorphnormal_vertex: morphnormal_vertex,\r\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\r\n\tmorphtarget_vertex: morphtarget_vertex,\r\n\tnormal_fragment_begin: normal_fragment_begin,\r\n\tnormal_fragment_maps: normal_fragment_maps,\r\n\tnormal_pars_fragment: normal_pars_fragment,\r\n\tnormal_pars_vertex: normal_pars_vertex,\r\n\tnormal_vertex: normal_vertex,\r\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\r\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\r\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\r\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\r\n\tiridescence_pars_fragment: iridescence_pars_fragment,\r\n\topaque_fragment: opaque_fragment,\r\n\tpacking: packing,\r\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\r\n\tproject_vertex: project_vertex,\r\n\tdithering_fragment: dithering_fragment,\r\n\tdithering_pars_fragment: dithering_pars_fragment,\r\n\troughnessmap_fragment: roughnessmap_fragment,\r\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\r\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\r\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\r\n\tshadowmap_vertex: shadowmap_vertex,\r\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\r\n\tskinbase_vertex: skinbase_vertex,\r\n\tskinning_pars_vertex: skinning_pars_vertex,\r\n\tskinning_vertex: skinning_vertex,\r\n\tskinnormal_vertex: skinnormal_vertex,\r\n\tspecularmap_fragment: specularmap_fragment,\r\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\r\n\ttonemapping_fragment: tonemapping_fragment,\r\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\r\n\ttransmission_fragment: transmission_fragment,\r\n\ttransmission_pars_fragment: transmission_pars_fragment,\r\n\tuv_pars_fragment: uv_pars_fragment,\r\n\tuv_pars_vertex: uv_pars_vertex,\r\n\tuv_vertex: uv_vertex,\r\n\tworldpos_vertex: worldpos_vertex,\r\n\r\n\tbackground_vert: background.vertex,\r\n\tbackground_frag: background.fragment,\r\n\tbackgroundCube_vert: backgroundCube.vertex,\r\n\tbackgroundCube_frag: backgroundCube.fragment,\r\n\tcube_vert: cube.vertex,\r\n\tcube_frag: cube.fragment,\r\n\tdepth_vert: depth.vertex,\r\n\tdepth_frag: depth.fragment,\r\n\tdistanceRGBA_vert: distanceRGBA.vertex,\r\n\tdistanceRGBA_frag: distanceRGBA.fragment,\r\n\tequirect_vert: equirect.vertex,\r\n\tequirect_frag: equirect.fragment,\r\n\tlinedashed_vert: linedashed.vertex,\r\n\tlinedashed_frag: linedashed.fragment,\r\n\tmeshbasic_vert: meshbasic.vertex,\r\n\tmeshbasic_frag: meshbasic.fragment,\r\n\tmeshlambert_vert: meshlambert.vertex,\r\n\tmeshlambert_frag: meshlambert.fragment,\r\n\tmeshmatcap_vert: meshmatcap.vertex,\r\n\tmeshmatcap_frag: meshmatcap.fragment,\r\n\tmeshnormal_vert: meshnormal.vertex,\r\n\tmeshnormal_frag: meshnormal.fragment,\r\n\tmeshphong_vert: meshphong.vertex,\r\n\tmeshphong_frag: meshphong.fragment,\r\n\tmeshphysical_vert: meshphysical.vertex,\r\n\tmeshphysical_frag: meshphysical.fragment,\r\n\tmeshtoon_vert: meshtoon.vertex,\r\n\tmeshtoon_frag: meshtoon.fragment,\r\n\tpoints_vert: points.vertex,\r\n\tpoints_frag: points.fragment,\r\n\tshadow_vert: shadow.vertex,\r\n\tshadow_frag: shadow.fragment,\r\n\tsprite_vert: sprite.vertex,\r\n\tsprite_frag: sprite.fragment\r\n};\r\n","import { Color } from '../../math/Color.js';\r\nimport { Vector2 } from '../../math/Vector2.js';\r\nimport { Matrix3 } from '../../math/Matrix3.js';\r\n\r\n// Uniforms library for shared webgl shaders\r\nconst UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\r\n\t\topacity: { value: 1.0 },\r\n\r\n\t\tmap: { value: null },\r\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\r\n\t\talphaMap: { value: null },\r\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\r\n\t\talphaTest: { value: 0 }\r\n\r\n\t},\r\n\r\n\tspecularmap: {\r\n\r\n\t\tspecularMap: { value: null },\r\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tenvmap: {\r\n\r\n\t\tenvMap: { value: null },\r\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\tflipEnvMap: { value: - 1 },\r\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\r\n\t\tior: { value: 1.5 }, // physical\r\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\taoMap: { value: null },\r\n\t\taoMapIntensity: { value: 1 },\r\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\tlightMap: { value: null },\r\n\t\tlightMapIntensity: { value: 1 },\r\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\tbumpMap: { value: null },\r\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\tbumpScale: { value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\tnormalMap: { value: null },\r\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\tdisplacementMap: { value: null },\r\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\tdisplacementScale: { value: 1 },\r\n\t\tdisplacementBias: { value: 0 }\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\temissiveMap: { value: null },\r\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tmetalnessmap: {\r\n\r\n\t\tmetalnessMap: { value: null },\r\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\troughnessmap: {\r\n\r\n\t\troughnessMap: { value: null },\r\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tgradientmap: {\r\n\r\n\t\tgradientMap: { value: null }\r\n\r\n\t},\r\n\r\n\tfog: {\r\n\r\n\t\tfogDensity: { value: 0.00025 },\r\n\t\tfogNear: { value: 1 },\r\n\t\tfogFar: { value: 2000 },\r\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\tambientLightColor: { value: [] },\r\n\r\n\t\tlightProbe: { value: [] },\r\n\r\n\t\tdirectionalLights: { value: [], properties: {\r\n\t\t\tdirection: {},\r\n\t\t\tcolor: {}\r\n\t\t} },\r\n\r\n\t\tdirectionalLightShadows: { value: [], properties: {\r\n\t\t\tshadowIntensity: 1,\r\n\t\t\tshadowBias: {},\r\n\t\t\tshadowNormalBias: {},\r\n\t\t\tshadowRadius: {},\r\n\t\t\tshadowMapSize: {}\r\n\t\t} },\r\n\r\n\t\tdirectionalShadowMap: { value: [] },\r\n\t\tdirectionalShadowMatrix: { value: [] },\r\n\r\n\t\tspotLights: { value: [], properties: {\r\n\t\t\tcolor: {},\r\n\t\t\tposition: {},\r\n\t\t\tdirection: {},\r\n\t\t\tdistance: {},\r\n\t\t\tconeCos: {},\r\n\t\t\tpenumbraCos: {},\r\n\t\t\tdecay: {}\r\n\t\t} },\r\n\r\n\t\tspotLightShadows: { value: [], properties: {\r\n\t\t\tshadowIntensity: 1,\r\n\t\t\tshadowBias: {},\r\n\t\t\tshadowNormalBias: {},\r\n\t\t\tshadowRadius: {},\r\n\t\t\tshadowMapSize: {}\r\n\t\t} },\r\n\r\n\t\tspotLightMap: { value: [] },\r\n\t\tspotShadowMap: { value: [] },\r\n\t\tspotLightMatrix: { value: [] },\r\n\r\n\t\tpointLights: { value: [], properties: {\r\n\t\t\tcolor: {},\r\n\t\t\tposition: {},\r\n\t\t\tdecay: {},\r\n\t\t\tdistance: {}\r\n\t\t} },\r\n\r\n\t\tpointLightShadows: { value: [], properties: {\r\n\t\t\tshadowIntensity: 1,\r\n\t\t\tshadowBias: {},\r\n\t\t\tshadowNormalBias: {},\r\n\t\t\tshadowRadius: {},\r\n\t\t\tshadowMapSize: {},\r\n\t\t\tshadowCameraNear: {},\r\n\t\t\tshadowCameraFar: {}\r\n\t\t} },\r\n\r\n\t\tpointShadowMap: { value: [] },\r\n\t\tpointShadowMatrix: { value: [] },\r\n\r\n\t\themisphereLights: { value: [], properties: {\r\n\t\t\tdirection: {},\r\n\t\t\tskyColor: {},\r\n\t\t\tgroundColor: {}\r\n\t\t} },\r\n\r\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\r\n\t\trectAreaLights: { value: [], properties: {\r\n\t\t\tcolor: {},\r\n\t\t\tposition: {},\r\n\t\t\twidth: {},\r\n\t\t\theight: {}\r\n\t\t} },\r\n\r\n\t\tltc_1: { value: null },\r\n\t\tltc_2: { value: null }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\r\n\t\topacity: { value: 1.0 },\r\n\t\tsize: { value: 1.0 },\r\n\t\tscale: { value: 1.0 },\r\n\t\tmap: { value: null },\r\n\t\talphaMap: { value: null },\r\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\talphaTest: { value: 0 },\r\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\r\n\r\n\t},\r\n\r\n\tsprite: {\r\n\r\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\r\n\t\topacity: { value: 1.0 },\r\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\r\n\t\trotation: { value: 0.0 },\r\n\t\tmap: { value: null },\r\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\talphaMap: { value: null },\r\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\talphaTest: { value: 0 }\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { UniformsLib };\r\n","import { ShaderChunk } from './ShaderChunk.js';\r\nimport { mergeUniforms } from './UniformsUtils.js';\r\nimport { Vector2 } from '../../math/Vector2.js';\r\nimport { Vector3 } from '../../math/Vector3.js';\r\nimport { UniformsLib } from './UniformsLib.js';\r\nimport { Color } from '../../math/Color.js';\r\nimport { Matrix3 } from '../../math/Matrix3.js';\r\n\r\nconst ShaderLib = {\r\n\r\n\tbasic: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.specularmap,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.fog\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\r\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\r\n\r\n\t},\r\n\r\n\tlambert: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.specularmap,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\r\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\r\n\r\n\t},\r\n\r\n\tphong: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.specularmap,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\r\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\r\n\t\t\t\tshininess: { value: 30 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshphong_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphong_frag\r\n\r\n\t},\r\n\r\n\tstandard: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.envmap,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.roughnessmap,\r\n\t\t\tUniformsLib.metalnessmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\r\n\t\t\t\troughness: { value: 1.0 },\r\n\t\t\t\tmetalness: { value: 0.0 },\r\n\t\t\t\tenvMapIntensity: { value: 1 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n\t},\r\n\r\n\ttoon: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.aomap,\r\n\t\t\tUniformsLib.lightmap,\r\n\t\t\tUniformsLib.emissivemap,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.gradientmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\tUniformsLib.lights,\r\n\t\t\t{\r\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\r\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\r\n\r\n\t},\r\n\r\n\tmatcap: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\t{\r\n\t\t\t\tmatcap: { value: null }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\r\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.points,\r\n\t\t\tUniformsLib.fog\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.points_vert,\r\n\t\tfragmentShader: ShaderChunk.points_frag\r\n\r\n\t},\r\n\r\n\tdashed: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\t{\r\n\t\t\t\tscale: { value: 1 },\r\n\t\t\t\tdashSize: { value: 1 },\r\n\t\t\t\ttotalSize: { value: 2 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.linedashed_vert,\r\n\t\tfragmentShader: ShaderChunk.linedashed_frag\r\n\r\n\t},\r\n\r\n\tdepth: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.displacementmap\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.depth_vert,\r\n\t\tfragmentShader: ShaderChunk.depth_frag\r\n\r\n\t},\r\n\r\n\tnormal: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.bumpmap,\r\n\t\t\tUniformsLib.normalmap,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\t{\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\r\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\r\n\r\n\t},\r\n\r\n\tsprite: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.sprite,\r\n\t\t\tUniformsLib.fog\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.sprite_vert,\r\n\t\tfragmentShader: ShaderChunk.sprite_frag\r\n\r\n\t},\r\n\r\n\tbackground: {\r\n\r\n\t\tuniforms: {\r\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tt2D: { value: null },\r\n\t\t\tbackgroundIntensity: { value: 1 }\r\n\t\t},\r\n\r\n\t\tvertexShader: ShaderChunk.background_vert,\r\n\t\tfragmentShader: ShaderChunk.background_frag\r\n\r\n\t},\r\n\r\n\tbackgroundCube: {\r\n\r\n\t\tuniforms: {\r\n\t\t\tenvMap: { value: null },\r\n\t\t\tflipEnvMap: { value: - 1 },\r\n\t\t\tbackgroundBlurriness: { value: 0 },\r\n\t\t\tbackgroundIntensity: { value: 1 },\r\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\r\n\t\t},\r\n\r\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\r\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\r\n\r\n\t},\r\n\r\n\tcube: {\r\n\r\n\t\tuniforms: {\r\n\t\t\ttCube: { value: null },\r\n\t\t\ttFlip: { value: - 1 },\r\n\t\t\topacity: { value: 1.0 }\r\n\t\t},\r\n\r\n\t\tvertexShader: ShaderChunk.cube_vert,\r\n\t\tfragmentShader: ShaderChunk.cube_frag\r\n\r\n\t},\r\n\r\n\tequirect: {\r\n\r\n\t\tuniforms: {\r\n\t\t\ttEquirect: { value: null },\r\n\t\t},\r\n\r\n\t\tvertexShader: ShaderChunk.equirect_vert,\r\n\t\tfragmentShader: ShaderChunk.equirect_frag\r\n\r\n\t},\r\n\r\n\tdistanceRGBA: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.common,\r\n\t\t\tUniformsLib.displacementmap,\r\n\t\t\t{\r\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\r\n\t\t\t\tnearDistance: { value: 1 },\r\n\t\t\t\tfarDistance: { value: 1000 }\r\n\t\t\t}\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\r\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\r\n\r\n\t},\r\n\r\n\tshadow: {\r\n\r\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\t\tUniformsLib.lights,\r\n\t\t\tUniformsLib.fog,\r\n\t\t\t{\r\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t},\r\n\t\t] ),\r\n\r\n\t\tvertexShader: ShaderChunk.shadow_vert,\r\n\t\tfragmentShader: ShaderChunk.shadow_frag\r\n\r\n\t}\r\n\r\n};\r\n\r\nShaderLib.physical = {\r\n\r\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\r\n\t\tShaderLib.standard.uniforms,\r\n\t\t{\r\n\t\t\tclearcoat: { value: 0 },\r\n\t\t\tclearcoatMap: { value: null },\r\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tclearcoatNormalMap: { value: null },\r\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\r\n\t\t\tclearcoatRoughness: { value: 0 },\r\n\t\t\tclearcoatRoughnessMap: { value: null },\r\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tdispersion: { value: 0 },\r\n\t\t\tiridescence: { value: 0 },\r\n\t\t\tiridescenceMap: { value: null },\r\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tiridescenceIOR: { value: 1.3 },\r\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\r\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\r\n\t\t\tiridescenceThicknessMap: { value: null },\r\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tsheen: { value: 0 },\r\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\r\n\t\t\tsheenColorMap: { value: null },\r\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tsheenRoughness: { value: 1 },\r\n\t\t\tsheenRoughnessMap: { value: null },\r\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\ttransmission: { value: 0 },\r\n\t\t\ttransmissionMap: { value: null },\r\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\r\n\t\t\ttransmissionSamplerMap: { value: null },\r\n\t\t\tthickness: { value: 0 },\r\n\t\t\tthicknessMap: { value: null },\r\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tattenuationDistance: { value: 0 },\r\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\r\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\r\n\t\t\tspecularColorMap: { value: null },\r\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tspecularIntensity: { value: 1 },\r\n\t\t\tspecularIntensityMap: { value: null },\r\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\r\n\t\t\tanisotropyMap: { value: null },\r\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\r\n\t\t}\r\n\t] ),\r\n\r\n\tvertexShader: ShaderChunk.meshphysical_vert,\r\n\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n};\r\n\r\n\r\nexport { ShaderLib };\r\n","import { BackSide, FrontSide, CubeUVReflectionMapping, SRGBTransfer } from '../../constants.js';\r\nimport { BoxGeometry } from '../../geometries/BoxGeometry.js';\r\nimport { PlaneGeometry } from '../../geometries/PlaneGeometry.js';\r\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\r\nimport { Color } from '../../math/Color.js';\r\nimport { ColorManagement } from '../../math/ColorManagement.js';\r\nimport { Euler } from '../../math/Euler.js';\r\nimport { Matrix4 } from '../../math/Matrix4.js';\r\nimport { Mesh } from '../../objects/Mesh.js';\r\nimport { ShaderLib } from '../shaders/ShaderLib.js';\r\nimport { cloneUniforms, getUnlitUniformColorSpace } from '../shaders/UniformsUtils.js';\r\n\r\nconst _rgb = { r: 0, b: 0, g: 0 };\r\nconst _e1 = /*@__PURE__*/ new Euler();\r\nconst _m1 = /*@__PURE__*/ new Matrix4();\r\n\r\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\r\n\r\n\tconst clearColor = new Color( 0x000000 );\r\n\tlet clearAlpha = alpha === true ? 0 : 1;\r\n\r\n\tlet planeMesh;\r\n\tlet boxMesh;\r\n\r\n\tlet currentBackground = null;\r\n\tlet currentBackgroundVersion = 0;\r\n\tlet currentTonemapping = null;\r\n\r\n\tfunction getBackground( scene ) {\r\n\r\n\t\tlet background = scene.isScene === true ? scene.background : null;\r\n\r\n\t\tif ( background && background.isTexture ) {\r\n\r\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\r\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\r\n\r\n\t\t}\r\n\r\n\t\treturn background;\r\n\r\n\t}\r\n\r\n\tfunction render( scene ) {\r\n\r\n\t\tlet forceClear = false;\r\n\t\tconst background = getBackground( scene );\r\n\r\n\t\tif ( background === null ) {\r\n\r\n\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t} else if ( background && background.isColor ) {\r\n\r\n\t\t\tsetClear( background, 1 );\r\n\t\t\tforceClear = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\r\n\r\n\t\tif ( environmentBlendMode === 'additive' ) {\r\n\r\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\r\n\r\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\r\n\r\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderer.autoClear || forceClear ) {\r\n\r\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\r\n\r\n\t\t\tstate.buffers.depth.setTest( true );\r\n\t\t\tstate.buffers.depth.setMask( true );\r\n\t\t\tstate.buffers.color.setMask( true );\r\n\r\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction addToRenderList( renderList, scene ) {\r\n\r\n\t\tconst background = getBackground( scene );\r\n\r\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\r\n\r\n\t\t\tif ( boxMesh === undefined ) {\r\n\r\n\t\t\t\tboxMesh = new Mesh(\r\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\r\n\t\t\t\t\tnew ShaderMaterial( {\r\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\r\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\r\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\r\n\t\t\t\t\t\tside: BackSide,\r\n\t\t\t\t\t\tdepthTest: false,\r\n\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\tfog: false,\r\n\t\t\t\t\t\tallowOverride: false\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\r\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\r\n\r\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\r\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\r\n\r\n\t\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tobjects.update( boxMesh );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_e1.copy( scene.backgroundRotation );\r\n\r\n\t\t\t// accommodate left-handed frame\r\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\r\n\r\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\r\n\r\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\r\n\t\t\t\t_e1.y *= - 1;\r\n\t\t\t\t_e1.z *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\r\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\r\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\r\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\r\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\r\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\r\n\r\n\t\t\tif ( currentBackground !== background ||\r\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\r\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\r\n\r\n\t\t\t\tboxMesh.material.needsUpdate = true;\r\n\r\n\t\t\t\tcurrentBackground = background;\r\n\t\t\t\tcurrentBackgroundVersion = background.version;\r\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tboxMesh.layers.enableAll();\r\n\r\n\t\t\t// push to the pre-sorted opaque render list\r\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\r\n\r\n\t\t} else if ( background && background.isTexture ) {\r\n\r\n\t\t\tif ( planeMesh === undefined ) {\r\n\r\n\t\t\t\tplaneMesh = new Mesh(\r\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\r\n\t\t\t\t\tnew ShaderMaterial( {\r\n\t\t\t\t\t\tname: 'BackgroundMaterial',\r\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\r\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\r\n\t\t\t\t\t\tside: FrontSide,\r\n\t\t\t\t\t\tdepthTest: false,\r\n\t\t\t\t\t\tdepthWrite: false,\r\n\t\t\t\t\t\tfog: false,\r\n\t\t\t\t\t\tallowOverride: false\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\r\n\r\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\r\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\r\n\r\n\t\t\t\t\tget: function () {\r\n\r\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tobjects.update( planeMesh );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\r\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\r\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\r\n\r\n\t\t\tif ( background.matrixAutoUpdate === true ) {\r\n\r\n\t\t\t\tbackground.updateMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\r\n\r\n\t\t\tif ( currentBackground !== background ||\r\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\r\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\r\n\r\n\t\t\t\tplaneMesh.material.needsUpdate = true;\r\n\r\n\t\t\t\tcurrentBackground = background;\r\n\t\t\t\tcurrentBackgroundVersion = background.version;\r\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tplaneMesh.layers.enableAll();\r\n\r\n\t\t\t// push to the pre-sorted opaque render list\r\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setClear( color, alpha ) {\r\n\r\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\r\n\r\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tif ( boxMesh !== undefined ) {\r\n\r\n\t\t\tboxMesh.geometry.dispose();\r\n\t\t\tboxMesh.material.dispose();\r\n\r\n\t\t\tboxMesh = undefined;\r\n\r\n\t\t}\r\n\r\n\t\tif ( planeMesh !== undefined ) {\r\n\r\n\t\t\tplaneMesh.geometry.dispose();\r\n\t\t\tplaneMesh.material.dispose();\r\n\r\n\t\t\tplaneMesh = undefined;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tgetClearColor: function () {\r\n\r\n\t\t\treturn clearColor;\r\n\r\n\t\t},\r\n\t\tsetClearColor: function ( color, alpha = 1 ) {\r\n\r\n\t\t\tclearColor.set( color );\r\n\t\t\tclearAlpha = alpha;\r\n\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t},\r\n\t\tgetClearAlpha: function () {\r\n\r\n\t\t\treturn clearAlpha;\r\n\r\n\t\t},\r\n\t\tsetClearAlpha: function ( alpha ) {\r\n\r\n\t\t\tclearAlpha = alpha;\r\n\t\t\tsetClear( clearColor, clearAlpha );\r\n\r\n\t\t},\r\n\t\trender: render,\r\n\t\taddToRenderList: addToRenderList,\r\n\t\tdispose: dispose\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLBackground };\r\n","import { IntType } from '../../constants.js';\r\n\r\nfunction WebGLBindingStates( gl, attributes ) {\r\n\r\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\r\n\tconst bindingStates = {};\r\n\r\n\tconst defaultState = createBindingState( null );\r\n\tlet currentState = defaultState;\r\n\tlet forceUpdate = false;\r\n\r\n\tfunction setup( object, material, program, geometry, index ) {\r\n\r\n\t\tlet updateBuffers = false;\r\n\r\n\t\tconst state = getBindingState( geometry, program, material );\r\n\r\n\t\tif ( currentState !== state ) {\r\n\r\n\t\t\tcurrentState = state;\r\n\t\t\tbindVertexArrayObject( currentState.object );\r\n\r\n\t\t}\r\n\r\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\r\n\r\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers || forceUpdate ) {\r\n\r\n\t\t\tforceUpdate = false;\r\n\r\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createVertexArrayObject() {\r\n\r\n\t\treturn gl.createVertexArray();\r\n\r\n\t}\r\n\r\n\tfunction bindVertexArrayObject( vao ) {\r\n\r\n\t\treturn gl.bindVertexArray( vao );\r\n\r\n\t}\r\n\r\n\tfunction deleteVertexArrayObject( vao ) {\r\n\r\n\t\treturn gl.deleteVertexArray( vao );\r\n\r\n\t}\r\n\r\n\tfunction getBindingState( geometry, program, material ) {\r\n\r\n\t\tconst wireframe = ( material.wireframe === true );\r\n\r\n\t\tlet programMap = bindingStates[ geometry.id ];\r\n\r\n\t\tif ( programMap === undefined ) {\r\n\r\n\t\t\tprogramMap = {};\r\n\t\t\tbindingStates[ geometry.id ] = programMap;\r\n\r\n\t\t}\r\n\r\n\t\tlet stateMap = programMap[ program.id ];\r\n\r\n\t\tif ( stateMap === undefined ) {\r\n\r\n\t\t\tstateMap = {};\r\n\t\t\tprogramMap[ program.id ] = stateMap;\r\n\r\n\t\t}\r\n\r\n\t\tlet state = stateMap[ wireframe ];\r\n\r\n\t\tif ( state === undefined ) {\r\n\r\n\t\t\tstate = createBindingState( createVertexArrayObject() );\r\n\t\t\tstateMap[ wireframe ] = state;\r\n\r\n\t\t}\r\n\r\n\t\treturn state;\r\n\r\n\t}\r\n\r\n\tfunction createBindingState( vao ) {\r\n\r\n\t\tconst newAttributes = [];\r\n\t\tconst enabledAttributes = [];\r\n\t\tconst attributeDivisors = [];\r\n\r\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\t\t\tenabledAttributes[ i ] = 0;\r\n\t\t\tattributeDivisors[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\r\n\t\t\t// for backward compatibility on non-VAO support browser\r\n\t\t\tgeometry: null,\r\n\t\t\tprogram: null,\r\n\t\t\twireframe: false,\r\n\r\n\t\t\tnewAttributes: newAttributes,\r\n\t\t\tenabledAttributes: enabledAttributes,\r\n\t\t\tattributeDivisors: attributeDivisors,\r\n\t\t\tobject: vao,\r\n\t\t\tattributes: {},\r\n\t\t\tindex: null\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction needsUpdate( object, geometry, program, index ) {\r\n\r\n\t\tconst cachedAttributes = currentState.attributes;\r\n\t\tconst geometryAttributes = geometry.attributes;\r\n\r\n\t\tlet attributesNum = 0;\r\n\r\n\t\tconst programAttributes = program.getAttributes();\r\n\r\n\t\tfor ( const name in programAttributes ) {\r\n\r\n\t\t\tconst programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute.location >= 0 ) {\r\n\r\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\r\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute === undefined ) {\r\n\r\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\r\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\r\n\r\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\r\n\r\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\r\n\r\n\t\t\t\tattributesNum ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\r\n\r\n\t\tif ( currentState.index !== index ) return true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction saveCache( object, geometry, program, index ) {\r\n\r\n\t\tconst cache = {};\r\n\t\tconst attributes = geometry.attributes;\r\n\t\tlet attributesNum = 0;\r\n\r\n\t\tconst programAttributes = program.getAttributes();\r\n\r\n\t\tfor ( const name in programAttributes ) {\r\n\r\n\t\t\tconst programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute.location >= 0 ) {\r\n\r\n\t\t\t\tlet attribute = attributes[ name ];\r\n\r\n\t\t\t\tif ( attribute === undefined ) {\r\n\r\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\r\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = {};\r\n\t\t\t\tdata.attribute = attribute;\r\n\r\n\t\t\t\tif ( attribute && attribute.data ) {\r\n\r\n\t\t\t\t\tdata.data = attribute.data;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcache[ name ] = data;\r\n\r\n\t\t\t\tattributesNum ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcurrentState.attributes = cache;\r\n\t\tcurrentState.attributesNum = attributesNum;\r\n\r\n\t\tcurrentState.index = index;\r\n\r\n\t}\r\n\r\n\tfunction initAttributes() {\r\n\r\n\t\tconst newAttributes = currentState.newAttributes;\r\n\r\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction enableAttribute( attribute ) {\r\n\r\n\t\tenableAttributeAndDivisor( attribute, 0 );\r\n\r\n\t}\r\n\r\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\r\n\r\n\t\tconst newAttributes = currentState.newAttributes;\r\n\t\tconst enabledAttributes = currentState.enabledAttributes;\r\n\t\tconst attributeDivisors = currentState.attributeDivisors;\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\r\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\r\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction disableUnusedAttributes() {\r\n\r\n\t\tconst newAttributes = currentState.newAttributes;\r\n\t\tconst enabledAttributes = currentState.enabledAttributes;\r\n\r\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\r\n\r\n\t\tif ( integer === true ) {\r\n\r\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\r\n\r\n\t\tinitAttributes();\r\n\r\n\t\tconst geometryAttributes = geometry.attributes;\r\n\r\n\t\tconst programAttributes = program.getAttributes();\r\n\r\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( const name in programAttributes ) {\r\n\r\n\t\t\tconst programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute.location >= 0 ) {\r\n\r\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute === undefined ) {\r\n\r\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\r\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\r\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\r\n\r\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\r\n\r\n\t\t\t\t\t// TODO Attribute may not be available on context restore\r\n\r\n\t\t\t\t\tif ( attribute === undefined ) continue;\r\n\r\n\t\t\t\t\tconst buffer = attribute.buffer;\r\n\t\t\t\t\tconst type = attribute.type;\r\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\r\n\r\n\t\t\t\t\t// check for integer attributes\r\n\r\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\r\n\r\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tconst data = geometryAttribute.data;\r\n\t\t\t\t\t\tconst stride = data.stride;\r\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\r\n\r\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvertexAttribPointer(\r\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\r\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t\tnormalized,\r\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\r\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\r\n\t\t\t\t\t\t\t\tinteger\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\r\n\r\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvertexAttribPointer(\r\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\r\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\r\n\t\t\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\t\t\tnormalized,\r\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\r\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\r\n\t\t\t\t\t\t\t\tinteger\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdisableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\treset();\r\n\r\n\t\tfor ( const geometryId in bindingStates ) {\r\n\r\n\t\t\tconst programMap = bindingStates[ geometryId ];\r\n\r\n\t\t\tfor ( const programId in programMap ) {\r\n\r\n\t\t\t\tconst stateMap = programMap[ programId ];\r\n\r\n\t\t\t\tfor ( const wireframe in stateMap ) {\r\n\r\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\r\n\r\n\t\t\t\t\tdelete stateMap[ wireframe ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete programMap[ programId ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete bindingStates[ geometryId ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction releaseStatesOfGeometry( geometry ) {\r\n\r\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\r\n\r\n\t\tconst programMap = bindingStates[ geometry.id ];\r\n\r\n\t\tfor ( const programId in programMap ) {\r\n\r\n\t\t\tconst stateMap = programMap[ programId ];\r\n\r\n\t\t\tfor ( const wireframe in stateMap ) {\r\n\r\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\r\n\r\n\t\t\t\tdelete stateMap[ wireframe ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete programMap[ programId ];\r\n\r\n\t\t}\r\n\r\n\t\tdelete bindingStates[ geometry.id ];\r\n\r\n\t}\r\n\r\n\tfunction releaseStatesOfProgram( program ) {\r\n\r\n\t\tfor ( const geometryId in bindingStates ) {\r\n\r\n\t\t\tconst programMap = bindingStates[ geometryId ];\r\n\r\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\r\n\r\n\t\t\tconst stateMap = programMap[ program.id ];\r\n\r\n\t\t\tfor ( const wireframe in stateMap ) {\r\n\r\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\r\n\r\n\t\t\t\tdelete stateMap[ wireframe ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete programMap[ program.id ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reset() {\r\n\r\n\t\tresetDefaultState();\r\n\t\tforceUpdate = true;\r\n\r\n\t\tif ( currentState === defaultState ) return;\r\n\r\n\t\tcurrentState = defaultState;\r\n\t\tbindVertexArrayObject( currentState.object );\r\n\r\n\t}\r\n\r\n\t// for backward-compatibility\r\n\r\n\tfunction resetDefaultState() {\r\n\r\n\t\tdefaultState.geometry = null;\r\n\t\tdefaultState.program = null;\r\n\t\tdefaultState.wireframe = false;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tsetup: setup,\r\n\t\treset: reset,\r\n\t\tresetDefaultState: resetDefaultState,\r\n\t\tdispose: dispose,\r\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\r\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\r\n\r\n\t\tinitAttributes: initAttributes,\r\n\t\tenableAttribute: enableAttribute,\r\n\t\tdisableUnusedAttributes: disableUnusedAttributes\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLBindingStates };\r\n","function WebGLBufferRenderer( gl, extensions, info ) {\r\n\r\n\tlet mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\tgl.drawArrays( mode, start, count );\r\n\r\n\t\tinfo.update( count, mode, 1 );\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( start, count, primcount ) {\r\n\r\n\t\tif ( primcount === 0 ) return;\r\n\r\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\r\n\r\n\t\tinfo.update( count, mode, primcount );\r\n\r\n\t}\r\n\r\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\r\n\r\n\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\r\n\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\r\n\r\n\t\tlet elementCount = 0;\r\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\telementCount += counts[ i ];\r\n\r\n\t\t}\r\n\r\n\t\tinfo.update( elementCount, mode, 1 );\r\n\r\n\t}\r\n\r\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\r\n\r\n\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\r\n\r\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\r\n\r\n\t\t\tlet elementCount = 0;\r\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfo.update( elementCount, mode, 1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\tthis.renderMultiDraw = renderMultiDraw;\r\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\r\n\r\n}\r\n\r\n\r\nexport { WebGLBufferRenderer };\r\n","import { FloatType, HalfFloatType, RGBAFormat, UnsignedByteType } from '../../constants.js';\r\nimport { warn } from '../../utils.js';\r\n\r\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\r\n\r\n\tlet maxAnisotropy;\r\n\r\n\tfunction getMaxAnisotropy() {\r\n\r\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\r\n\r\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\r\n\r\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaxAnisotropy = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxAnisotropy;\r\n\r\n\t}\r\n\r\n\tfunction textureFormatReadable( textureFormat ) {\r\n\r\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction textureTypeReadable( textureType ) {\r\n\r\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\r\n\r\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\r\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n\tconst maxPrecision = getMaxPrecision( precision );\r\n\r\n\tif ( maxPrecision !== precision ) {\r\n\r\n\t\twarn( 'WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\r\n\t\tprecision = maxPrecision;\r\n\r\n\t}\r\n\r\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\r\n\tconst reversedDepthBuffer = parameters.reversedDepthBuffer === true && extensions.has( 'EXT_clip_control' );\r\n\r\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tconst vertexTextures = maxVertexTextures > 0;\r\n\r\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\r\n\r\n\treturn {\r\n\r\n\t\tisWebGL2: true, // keeping this for backwards compatibility\r\n\r\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\r\n\t\tgetMaxPrecision: getMaxPrecision,\r\n\r\n\t\ttextureFormatReadable: textureFormatReadable,\r\n\t\ttextureTypeReadable: textureTypeReadable,\r\n\r\n\t\tprecision: precision,\r\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\t\treversedDepthBuffer: reversedDepthBuffer,\r\n\r\n\t\tmaxTextures: maxTextures,\r\n\t\tmaxVertexTextures: maxVertexTextures,\r\n\t\tmaxTextureSize: maxTextureSize,\r\n\t\tmaxCubemapSize: maxCubemapSize,\r\n\r\n\t\tmaxAttributes: maxAttributes,\r\n\t\tmaxVertexUniforms: maxVertexUniforms,\r\n\t\tmaxVaryings: maxVaryings,\r\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\r\n\r\n\t\tvertexTextures: vertexTextures,\r\n\r\n\t\tmaxSamples: maxSamples\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLCapabilities };\r\n","import { Matrix3 } from '../../math/Matrix3.js';\r\nimport { Plane } from '../../math/Plane.js';\r\n\r\nfunction WebGLClipping( properties ) {\r\n\r\n\tconst scope = this;\r\n\r\n\tlet globalState = null,\r\n\t\tnumGlobalPlanes = 0,\r\n\t\tlocalClippingEnabled = false,\r\n\t\trenderingShadows = false;\r\n\r\n\tconst plane = new Plane(),\r\n\t\tviewNormalMatrix = new Matrix3(),\r\n\r\n\t\tuniform = { value: null, needsUpdate: false };\r\n\r\n\tthis.uniform = uniform;\r\n\tthis.numPlanes = 0;\r\n\tthis.numIntersection = 0;\r\n\r\n\tthis.init = function ( planes, enableLocalClipping ) {\r\n\r\n\t\tconst enabled =\r\n\t\t\tplanes.length !== 0 ||\r\n\t\t\tenableLocalClipping ||\r\n\t\t\t// enable state of previous frame - the clipping code has to\r\n\t\t\t// run another frame in order to reset the state:\r\n\t\t\tnumGlobalPlanes !== 0 ||\r\n\t\t\tlocalClippingEnabled;\r\n\r\n\t\tlocalClippingEnabled = enableLocalClipping;\r\n\r\n\t\tnumGlobalPlanes = planes.length;\r\n\r\n\t\treturn enabled;\r\n\r\n\t};\r\n\r\n\tthis.beginShadows = function () {\r\n\r\n\t\trenderingShadows = true;\r\n\t\tprojectPlanes( null );\r\n\r\n\t};\r\n\r\n\tthis.endShadows = function () {\r\n\r\n\t\trenderingShadows = false;\r\n\r\n\t};\r\n\r\n\tthis.setGlobalState = function ( planes, camera ) {\r\n\r\n\t\tglobalState = projectPlanes( planes, camera, 0 );\r\n\r\n\t};\r\n\r\n\tthis.setState = function ( material, camera, useCache ) {\r\n\r\n\t\tconst planes = material.clippingPlanes,\r\n\t\t\tclipIntersection = material.clipIntersection,\r\n\t\t\tclipShadows = material.clipShadows;\r\n\r\n\t\tconst materialProperties = properties.get( material );\r\n\r\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\r\n\r\n\t\t\t// there's no local clipping\r\n\r\n\t\t\tif ( renderingShadows ) {\r\n\r\n\t\t\t\t// there's no global clipping\r\n\r\n\t\t\t\tprojectPlanes( null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresetGlobalState();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n\t\t\t\tlGlobal = nGlobal * 4;\r\n\r\n\t\t\tlet dstArray = materialProperties.clippingState || null;\r\n\r\n\t\t\tuniform.value = dstArray; // ensure unique state\r\n\r\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\r\n\r\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\r\n\r\n\t\t\t\tdstArray[ i ] = globalState[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialProperties.clippingState = dstArray;\r\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\r\n\t\t\tthis.numPlanes += nGlobal;\r\n\r\n\t\t}\r\n\r\n\r\n\t};\r\n\r\n\tfunction resetGlobalState() {\r\n\r\n\t\tif ( uniform.value !== globalState ) {\r\n\r\n\t\t\tuniform.value = globalState;\r\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\r\n\r\n\t\t}\r\n\r\n\t\tscope.numPlanes = numGlobalPlanes;\r\n\t\tscope.numIntersection = 0;\r\n\r\n\t}\r\n\r\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\r\n\r\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\r\n\t\tlet dstArray = null;\r\n\r\n\t\tif ( nPlanes !== 0 ) {\r\n\r\n\t\t\tdstArray = uniform.value;\r\n\r\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\r\n\r\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\r\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\r\n\r\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\r\n\r\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\r\n\r\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\r\n\r\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\r\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniform.value = dstArray;\r\n\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tscope.numPlanes = nPlanes;\r\n\t\tscope.numIntersection = 0;\r\n\r\n\t\treturn dstArray;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport { WebGLClipping };\r\n","import { createElementNS, warn } from '../utils.js';\r\nimport { SRGBToLinear } from '../math/ColorManagement.js';\r\n\r\nlet _canvas;\r\n\r\n/**\r\n * A class containing utility functions for images.\r\n *\r\n * @hideconstructor\r\n */\r\nclass ImageUtils {\r\n\r\n\t/**\r\n\t * Returns a data URI containing a representation of the given image.\r\n\t *\r\n\t * @param {(HTMLImageElement|HTMLCanvasElement)} image - The image object.\r\n\t * @param {string} [type='image/png'] - Indicates the image format.\r\n\t * @return {string} The data URI.\r\n\t */\r\n\tstatic getDataURL( image, type = 'image/png' ) {\r\n\r\n\t\tif ( /^data:/i.test( image.src ) ) {\r\n\r\n\t\t\treturn image.src;\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\r\n\r\n\t\t\treturn image.src;\r\n\r\n\t\t}\r\n\r\n\t\tlet canvas;\r\n\r\n\t\tif ( image instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\tcanvas = image;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\r\n\r\n\t\t\t_canvas.width = image.width;\r\n\t\t\t_canvas.height = image.height;\r\n\r\n\t\t\tconst context = _canvas.getContext( '2d' );\r\n\r\n\t\t\tif ( image instanceof ImageData ) {\r\n\r\n\t\t\t\tcontext.putImageData( image, 0, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcanvas = _canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn canvas.toDataURL( type );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given sRGB image data to linear color space.\r\n\t *\r\n\t * @param {(HTMLImageElement|HTMLCanvasElement|ImageBitmap|Object)} image - The image object.\r\n\t * @return {HTMLCanvasElement|Object} The converted image.\r\n\t */\r\n\tstatic sRGBToLinear( image ) {\r\n\r\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\r\n\r\n\t\t\tconst canvas = createElementNS( 'canvas' );\r\n\r\n\t\t\tcanvas.width = image.width;\r\n\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\tconst context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\r\n\t\t\tconst data = imageData.data;\r\n\r\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t} else if ( image.data ) {\r\n\r\n\t\t\tconst data = image.data.slice( 0 );\r\n\r\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\r\n\r\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// assuming float\r\n\r\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata: data,\r\n\t\t\t\twidth: image.width,\r\n\t\t\t\theight: image.height\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\twarn( 'ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\r\n\t\t\treturn image;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ImageUtils };\r\n","import { ImageUtils } from '../extras/ImageUtils.js';\r\nimport { generateUUID } from '../math/MathUtils.js';\r\nimport { warn } from '../utils.js';\r\n\r\nlet _sourceId = 0;\r\n\r\n/**\r\n * Represents the data source of a texture.\r\n *\r\n * The main purpose of this class is to decouple the data definition from the texture\r\n * definition so the same data can be used with multiple texture instances.\r\n */\r\nclass Source {\r\n\r\n\t/**\r\n\t * Constructs a new video texture.\r\n\t *\r\n\t * @param {any} [data=null] - The data definition of a texture.\r\n\t */\r\n\tconstructor( data = null ) {\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isSource = true;\r\n\r\n\t\t/**\r\n\t\t * The ID of the source.\r\n\t\t *\r\n\t\t * @name Source#id\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\r\n\r\n\t\t/**\r\n\t\t * The UUID of the source.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\t/**\r\n\t\t * The data definition of a texture.\r\n\t\t *\r\n\t\t * @type {any}\r\n\t\t */\r\n\t\tthis.data = data;\r\n\r\n\t\t/**\r\n\t\t * This property is only relevant when {@link Source#needsUpdate} is set to `true` and\r\n\t\t * provides more control on how texture data should be processed. When `dataReady` is set\r\n\t\t * to `false`, the engine performs the memory allocation (if necessary) but does not transfer\r\n\t\t * the data into the GPU memory.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.dataReady = true;\r\n\r\n\t\t/**\r\n\t\t * This starts at `0` and counts how many times {@link Source#needsUpdate} is set to `true`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the dimensions of the source into the given target vector.\r\n\t *\r\n\t * @param {(Vector2|Vector3)} target - The target object the result is written into.\r\n\t * @return {(Vector2|Vector3)} The dimensions of the source.\r\n\t */\r\n\tgetSize( target ) {\r\n\r\n\t\tconst data = this.data;\r\n\r\n\t\tif ( ( typeof HTMLVideoElement !== 'undefined' ) && ( data instanceof HTMLVideoElement ) ) {\r\n\r\n\t\t\ttarget.set( data.videoWidth, data.videoHeight, 0 );\r\n\r\n\t\t} else if ( data instanceof VideoFrame ) {\r\n\r\n\t\t\ttarget.set( data.displayHeight, data.displayWidth, 0 );\r\n\r\n\t\t} else if ( data !== null ) {\r\n\r\n\t\t\ttarget.set( data.width, data.height, data.depth || 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttarget.set( 0, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * When the property is set to `true`, the engine allocates the memory\r\n\t * for the texture (if necessary) and triggers the actual texture upload\r\n\t * to the GPU next time the source is used.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @default false\r\n\t * @param {boolean} value\r\n\t */\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes the source into JSON.\r\n\t *\r\n\t * @param {?(Object|string)} meta - An optional value holding meta information about the serialization.\r\n\t * @return {Object} A JSON object representing the serialized source.\r\n\t * @see {@link ObjectLoader#parse}\r\n\t */\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.images[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tconst output = {\r\n\t\t\tuuid: this.uuid,\r\n\t\t\turl: ''\r\n\t\t};\r\n\r\n\t\tconst data = this.data;\r\n\r\n\t\tif ( data !== null ) {\r\n\r\n\t\t\tlet url;\r\n\r\n\t\t\tif ( Array.isArray( data ) ) {\r\n\r\n\t\t\t\t// cube texture\r\n\r\n\t\t\t\turl = [];\r\n\r\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\r\n\r\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// texture\r\n\r\n\t\t\t\turl = serializeImage( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.url = url;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! isRootObject ) {\r\n\r\n\t\t\tmeta.images[ this.uuid ] = output;\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction serializeImage( image ) {\r\n\r\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\r\n\r\n\t\t// default images\r\n\r\n\t\treturn ImageUtils.getDataURL( image );\r\n\r\n\t} else {\r\n\r\n\t\tif ( image.data ) {\r\n\r\n\t\t\t// images of DataTexture\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata: Array.from( image.data ),\r\n\t\t\t\twidth: image.width,\r\n\t\t\t\theight: image.height,\r\n\t\t\t\ttype: image.data.constructor.name\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\twarn( 'Texture: Unable to serialize Texture.' );\r\n\t\t\treturn {};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Source };\r\n","import { EventDispatcher } from '../core/EventDispatcher.js';\r\nimport {\r\n\tMirroredRepeatWrapping,\r\n\tClampToEdgeWrapping,\r\n\tRepeatWrapping,\r\n\tUnsignedByteType,\r\n\tRGBAFormat,\r\n\tLinearMipmapLinearFilter,\r\n\tLinearFilter,\r\n\tUVMapping,\r\n\tNoColorSpace,\r\n} from '../constants.js';\r\nimport { generateUUID } from '../math/MathUtils.js';\r\nimport { Vector2 } from '../math/Vector2.js';\r\nimport { Vector3 } from '../math/Vector3.js';\r\nimport { Matrix3 } from '../math/Matrix3.js';\r\nimport { Source } from './Source.js';\r\nimport { warn } from '../utils.js';\r\n\r\nlet _textureId = 0;\r\n\r\nconst _tempVec3 = /*@__PURE__*/ new Vector3();\r\n\r\n/**\r\n * Base class for all textures.\r\n *\r\n * Note: After the initial use of a texture, its dimensions, format, and type\r\n * cannot be changed. Instead, call {@link Texture#dispose} on the texture and instantiate a new one.\r\n *\r\n * @augments EventDispatcher\r\n */\r\nclass Texture extends EventDispatcher {\r\n\r\n\t/**\r\n\t * Constructs a new texture.\r\n\t *\r\n\t * @param {?Object} [image=Texture.DEFAULT_IMAGE] - The image holding the texture data.\r\n\t * @param {number} [mapping=Texture.DEFAULT_MAPPING] - The texture mapping.\r\n\t * @param {number} [wrapS=ClampToEdgeWrapping] - The wrapS value.\r\n\t * @param {number} [wrapT=ClampToEdgeWrapping] - The wrapT value.\r\n\t * @param {number} [magFilter=LinearFilter] - The mag filter value.\r\n\t * @param {number} [minFilter=LinearMipmapLinearFilter] - The min filter value.\r\n\t * @param {number} [format=RGBAFormat] - The texture format.\r\n\t * @param {number} [type=UnsignedByteType] - The texture type.\r\n\t * @param {number} [anisotropy=Texture.DEFAULT_ANISOTROPY] - The anisotropy value.\r\n\t * @param {string} [colorSpace=NoColorSpace] - The color space.\r\n\t */\r\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isTexture = true;\r\n\r\n\t\t/**\r\n\t\t * The ID of the texture.\r\n\t\t *\r\n\t\t * @name Texture#id\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\r\n\r\n\t\t/**\r\n\t\t * The UUID of the material.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t * @readonly\r\n\t\t */\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\t/**\r\n\t\t * The name of the material.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t */\r\n\t\tthis.name = '';\r\n\r\n\t\t/**\r\n\t\t * The data definition of a texture. A reference to the data source can be\r\n\t\t * shared across textures. This is often useful in context of spritesheets\r\n\t\t * where multiple textures render the same data but with different texture\r\n\t\t * transformations.\r\n\t\t *\r\n\t\t * @type {Source}\r\n\t\t */\r\n\t\tthis.source = new Source( image );\r\n\r\n\t\t/**\r\n\t\t * An array holding user-defined mipmaps.\r\n\t\t *\r\n\t\t * @type {Array<Object>}\r\n\t\t */\r\n\t\tthis.mipmaps = [];\r\n\r\n\t\t/**\r\n\t\t * How the texture is applied to the object. The value `UVMapping`\r\n\t\t * is the default, where texture or uv coordinates are used to apply the map.\r\n\t\t *\r\n\t\t * @type {(UVMapping|CubeReflectionMapping|CubeRefractionMapping|EquirectangularReflectionMapping|EquirectangularRefractionMapping|CubeUVReflectionMapping)}\r\n\t\t * @default UVMapping\r\n\t\t*/\r\n\t\tthis.mapping = mapping;\r\n\r\n\t\t/**\r\n\t\t * Lets you select the uv attribute to map the texture to. `0` for `uv`,\r\n\t\t * `1` for `uv1`, `2` for `uv2` and `3` for `uv3`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.channel = 0;\r\n\r\n\t\t/**\r\n\t\t * This defines how the texture is wrapped horizontally and corresponds to\r\n\t\t * *U* in UV mapping.\r\n\t\t *\r\n\t\t * @type {(RepeatWrapping|ClampToEdgeWrapping|MirroredRepeatWrapping)}\r\n\t\t * @default ClampToEdgeWrapping\r\n\t\t */\r\n\t\tthis.wrapS = wrapS;\r\n\r\n\t\t/**\r\n\t\t * This defines how the texture is wrapped horizontally and corresponds to\r\n\t\t * *V* in UV mapping.\r\n\t\t *\r\n\t\t * @type {(RepeatWrapping|ClampToEdgeWrapping|MirroredRepeatWrapping)}\r\n\t\t * @default ClampToEdgeWrapping\r\n\t\t */\r\n\t\tthis.wrapT = wrapT;\r\n\r\n\t\t/**\r\n\t\t * How the texture is sampled when a texel covers more than one pixel.\r\n\t\t *\r\n\t\t * @type {(NearestFilter|NearestMipmapNearestFilter|NearestMipmapLinearFilter|LinearFilter|LinearMipmapNearestFilter|LinearMipmapLinearFilter)}\r\n\t\t * @default LinearFilter\r\n\t\t */\r\n\t\tthis.magFilter = magFilter;\r\n\r\n\t\t/**\r\n\t\t * How the texture is sampled when a texel covers less than one pixel.\r\n\t\t *\r\n\t\t * @type {(NearestFilter|NearestMipmapNearestFilter|NearestMipmapLinearFilter|LinearFilter|LinearMipmapNearestFilter|LinearMipmapLinearFilter)}\r\n\t\t * @default LinearMipmapLinearFilter\r\n\t\t */\r\n\t\tthis.minFilter = minFilter;\r\n\r\n\t\t/**\r\n\t\t * The number of samples taken along the axis through the pixel that has the\r\n\t\t * highest density of texels. By default, this value is `1`. A higher value\r\n\t\t * gives a less blurry result than a basic mipmap, at the cost of more\r\n\t\t * texture samples being used.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.anisotropy = anisotropy;\r\n\r\n\t\t/**\r\n\t\t * The format of the texture.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default RGBAFormat\r\n\t\t */\r\n\t\tthis.format = format;\r\n\r\n\t\t/**\r\n\t\t * The default internal format is derived from {@link Texture#format} and {@link Texture#type} and\r\n\t\t * defines how the texture data is going to be stored on the GPU.\r\n\t\t *\r\n\t\t * This property allows to overwrite the default format.\r\n\t\t *\r\n\t\t * @type {?string}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.internalFormat = null;\r\n\r\n\t\t/**\r\n\t\t * The data type of the texture.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default UnsignedByteType\r\n\t\t */\r\n\t\tthis.type = type;\r\n\r\n\t\t/**\r\n\t\t * How much a single repetition of the texture is offset from the beginning,\r\n\t\t * in each direction U and V. Typical range is `0.0` to `1.0`.\r\n\t\t *\r\n\t\t * @type {Vector2}\r\n\t\t * @default (0,0)\r\n\t\t */\r\n\t\tthis.offset = new Vector2( 0, 0 );\r\n\r\n\t\t/**\r\n\t\t * How many times the texture is repeated across the surface, in each\r\n\t\t * direction U and V. If repeat is set greater than `1` in either direction,\r\n\t\t * the corresponding wrap parameter should also be set to `RepeatWrapping`\r\n\t\t * or `MirroredRepeatWrapping` to achieve the desired tiling effect.\r\n\t\t *\r\n\t\t * @type {Vector2}\r\n\t\t * @default (1,1)\r\n\t\t */\r\n\t\tthis.repeat = new Vector2( 1, 1 );\r\n\r\n\t\t/**\r\n\t\t * The point around which rotation occurs. A value of `(0.5, 0.5)` corresponds\r\n\t\t * to the center of the texture. Default is `(0, 0)`, the lower left.\r\n\t\t *\r\n\t\t * @type {Vector2}\r\n\t\t * @default (0,0)\r\n\t\t */\r\n\t\tthis.center = new Vector2( 0, 0 );\r\n\r\n\t\t/**\r\n\t\t * How much the texture is rotated around the center point, in radians.\r\n\t\t * Positive values are counter-clockwise.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.rotation = 0;\r\n\r\n\t\t/**\r\n\t\t * Whether to update the texture's uv-transformation {@link Texture#matrix}\r\n\t\t * from the properties {@link Texture#offset}, {@link Texture#repeat},\r\n\t\t * {@link Texture#rotation}, and {@link Texture#center}.\r\n\t\t *\r\n\t\t * Set this to `false` if you are specifying the uv-transform matrix directly.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.matrixAutoUpdate = true;\r\n\r\n\t\t/**\r\n\t\t * The uv-transformation matrix of the texture.\r\n\t\t *\r\n\t\t * @type {Matrix3}\r\n\t\t */\r\n\t\tthis.matrix = new Matrix3();\r\n\r\n\t\t/**\r\n\t\t * Whether to generate mipmaps (if possible) for a texture.\r\n\t\t *\r\n\t\t * Set this to `false` if you are creating mipmaps manually.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.generateMipmaps = true;\r\n\r\n\t\t/**\r\n\t\t * If set to `true`, the alpha channel, if present, is multiplied into the\r\n\t\t * color channels when the texture is uploaded to the GPU.\r\n\t\t *\r\n\t\t * Note that this property has no effect when using `ImageBitmap`. You need to\r\n\t\t * configure premultiply alpha on bitmap creation instead.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.premultiplyAlpha = false;\r\n\r\n\t\t/**\r\n\t\t * If set to `true`, the texture is flipped along the vertical axis when\r\n\t\t * uploaded to the GPU.\r\n\t\t *\r\n\t\t * Note that this property has no effect when using `ImageBitmap`. You need to\r\n\t\t * configure the flip on bitmap creation instead.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.flipY = true;\r\n\r\n\t\t/**\r\n\t\t * Specifies the alignment requirements for the start of each pixel row in memory.\r\n\t\t * The allowable values are `1` (byte-alignment), `2` (rows aligned to even-numbered bytes),\r\n\t\t * `4` (word-alignment), and `8` (rows start on double-word boundaries).\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 4\r\n\t\t */\r\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\t\t/**\r\n\t\t * Textures containing color data should be annotated with `SRGBColorSpace` or `LinearSRGBColorSpace`.\r\n\t\t *\r\n\t\t * @type {string}\r\n\t\t * @default NoColorSpace\r\n\t\t */\r\n\t\tthis.colorSpace = colorSpace;\r\n\r\n\t\t/**\r\n\t\t * An object that can be used to store custom data about the texture. It\r\n\t\t * should not hold references to functions as these will not be cloned.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.userData = {};\r\n\r\n\t\t/**\r\n\t\t * This can be used to only update a subregion or specific rows of the texture (for example, just the\r\n\t\t * first 3 rows). Use the `addUpdateRange()` function to add ranges to this array.\r\n\t\t *\r\n\t\t * @type {Array<Object>}\r\n\t\t */\r\n\t\tthis.updateRanges = [];\r\n\r\n\t\t/**\r\n\t\t * This starts at `0` and counts how many times {@link Texture#needsUpdate} is set to `true`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.version = 0;\r\n\r\n\t\t/**\r\n\t\t * A callback function, called when the texture is updated (e.g., when\r\n\t\t * {@link Texture#needsUpdate} has been set to true and then the texture is used).\r\n\t\t *\r\n\t\t * @type {?Function}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.onUpdate = null;\r\n\r\n\t\t/**\r\n\t\t * An optional back reference to the textures render target.\r\n\t\t *\r\n\t\t * @type {?(RenderTarget|WebGLRenderTarget)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.renderTarget = null;\r\n\r\n\t\t/**\r\n\t\t * Indicates whether a texture belongs to a render target or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.isRenderTargetTexture = false;\r\n\r\n\t\t/**\r\n\t\t * Indicates if a texture should be handled like a texture array.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.isArrayTexture = image && image.depth && image.depth > 1 ? true : false;\r\n\r\n\t\t/**\r\n\t\t * Indicates whether this texture should be processed by `PMREMGenerator` or not\r\n\t\t * (only relevant for render target textures).\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @readonly\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.pmremVersion = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The width of the texture in pixels.\r\n\t */\r\n\tget width() {\r\n\r\n\t\treturn this.source.getSize( _tempVec3 ).x;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The height of the texture in pixels.\r\n\t */\r\n\tget height() {\r\n\r\n\t\treturn this.source.getSize( _tempVec3 ).y;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The depth of the texture in pixels.\r\n\t */\r\n\tget depth() {\r\n\r\n\t\treturn this.source.getSize( _tempVec3 ).z;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The image object holding the texture data.\r\n\t *\r\n\t * @type {?Object}\r\n\t */\r\n\tget image() {\r\n\r\n\t\treturn this.source.data;\r\n\r\n\t}\r\n\r\n\tset image( value = null ) {\r\n\r\n\t\tthis.source.data = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the texture transformation matrix from the from the properties {@link Texture#offset},\r\n\t * {@link Texture#repeat}, {@link Texture#rotation}, and {@link Texture#center}.\r\n\t */\r\n\tupdateMatrix() {\r\n\r\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a range of data in the data texture to be updated on the GPU.\r\n\t *\r\n\t * @param {number} start - Position at which to start update.\r\n\t * @param {number} count - The number of components to update.\r\n\t */\r\n\taddUpdateRange( start, count ) {\r\n\r\n\t\tthis.updateRanges.push( { start, count } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the update ranges.\r\n\t */\r\n\tclearUpdateRanges() {\r\n\r\n\t\tthis.updateRanges.length = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new texture with copied values from this instance.\r\n\t *\r\n\t * @return {Texture} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the values of the given texture to this instance.\r\n\t *\r\n\t * @param {Texture} source - The texture to copy.\r\n\t * @return {Texture} A reference to this instance.\r\n\t */\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.source = source.source;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\t\tthis.channel = source.channel;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.internalFormat = source.internalFormat;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\t\tthis.center.copy( source.center );\r\n\t\tthis.rotation = source.rotation;\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrix.copy( source.matrix );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\tthis.colorSpace = source.colorSpace;\r\n\r\n\t\tthis.renderTarget = source.renderTarget;\r\n\t\tthis.isRenderTargetTexture = source.isRenderTargetTexture;\r\n\t\tthis.isArrayTexture = source.isArrayTexture;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets this texture's properties based on `values`.\r\n\t * @param {Object} values - A container with texture parameters.\r\n\t */\r\n\tsetValues( values ) {\r\n\r\n\t\tfor ( const key in values ) {\r\n\r\n\t\t\tconst newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\twarn( `Texture.setValues(): parameter '${ key }' has value of undefined.` );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\twarn( `Texture.setValues(): property '${ key }' does not exist.` );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( currentValue && newValue ) && ( currentValue.isVector2 && newValue.isVector2 ) ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( ( currentValue && newValue ) && ( currentValue.isVector3 && newValue.isVector3 ) ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( ( currentValue && newValue ) && ( currentValue.isMatrix3 && newValue.isMatrix3 ) ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes the texture into JSON.\r\n\t *\r\n\t * @param {?(Object|string)} meta - An optional value holding meta information about the serialization.\r\n\t * @return {Object} A JSON object representing the serialized texture.\r\n\t * @see {@link ObjectLoader#parse}\r\n\t */\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tconst output = {\r\n\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.7,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\timage: this.source.toJSON( meta ).uuid,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\t\t\tchannel: this.channel,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\tcenter: [ this.center.x, this.center.y ],\r\n\t\t\trotation: this.rotation,\r\n\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tformat: this.format,\r\n\t\t\tinternalFormat: this.internalFormat,\r\n\t\t\ttype: this.type,\r\n\t\t\tcolorSpace: this.colorSpace,\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy,\r\n\r\n\t\t\tflipY: this.flipY,\r\n\r\n\t\t\tgenerateMipmaps: this.generateMipmaps,\r\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\r\n\t\t\tunpackAlignment: this.unpackAlignment\r\n\r\n\t\t};\r\n\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\r\n\r\n\t\tif ( ! isRootObject ) {\r\n\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Frees the GPU-related resources allocated by this instance. Call this\r\n\t * method whenever this instance is no longer used in your app.\r\n\t *\r\n\t * @fires Texture#dispose\r\n\t */\r\n\tdispose() {\r\n\r\n\t\t/**\r\n\t\t * Fires when the texture has been disposed of.\r\n\t\t *\r\n\t\t * @event Texture#dispose\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the given uv vector with the textures uv transformation matrix.\r\n\t *\r\n\t * @param {Vector2} uv - The uv vector.\r\n\t * @return {Vector2} The transformed uv vector.\r\n\t */\r\n\ttransformUv( uv ) {\r\n\r\n\t\tif ( this.mapping !== UVMapping ) return uv;\r\n\r\n\t\tuv.applyMatrix3( this.matrix );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn uv;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Setting this property to `true` indicates the engine the texture\r\n\t * must be updated in the next render. This triggers a texture upload\r\n\t * to the GPU and ensures correct texture parameter configuration.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @default false\r\n\t * @param {boolean} value\r\n\t */\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) {\r\n\r\n\t\t\tthis.version ++;\r\n\t\t\tthis.source.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Setting this property to `true` indicates the engine the PMREM\r\n\t * must be regenerated.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @default false\r\n\t * @param {boolean} value\r\n\t */\r\n\tset needsPMREMUpdate( value ) {\r\n\r\n\t\tif ( value === true ) {\r\n\r\n\t\t\tthis.pmremVersion ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * The default image for all textures.\r\n *\r\n * @static\r\n * @type {?Image}\r\n * @default null\r\n */\r\nTexture.DEFAULT_IMAGE = null;\r\n\r\n/**\r\n * The default mapping for all textures.\r\n *\r\n * @static\r\n * @type {number}\r\n * @default UVMapping\r\n */\r\nTexture.DEFAULT_MAPPING = UVMapping;\r\n\r\n/**\r\n * The default anisotropy value for all textures.\r\n *\r\n * @static\r\n * @type {number}\r\n * @default 1\r\n */\r\nTexture.DEFAULT_ANISOTROPY = 1;\r\n\r\nexport { Texture };\r\n","import { EventDispatcher } from './EventDispatcher.js';\r\nimport { Texture } from '../textures/Texture.js';\r\nimport { LinearFilter } from '../constants.js';\r\nimport { Vector4 } from '../math/Vector4.js';\r\nimport { Source } from '../textures/Source.js';\r\n\r\n/**\r\n * A render target is a buffer where the video card draws pixels for a scene\r\n * that is being rendered in the background. It is used in different effects,\r\n * such as applying postprocessing to a rendered image before displaying it\r\n * on the screen.\r\n *\r\n * @augments EventDispatcher\r\n */\r\nclass RenderTarget extends EventDispatcher {\r\n\r\n\t/**\r\n\t * Render target options.\r\n\t *\r\n\t * @typedef {Object} RenderTarget~Options\r\n\t * @property {boolean} [generateMipmaps=false] - Whether to generate mipmaps or not.\r\n\t * @property {number} [magFilter=LinearFilter] - The mag filter.\r\n\t * @property {number} [minFilter=LinearFilter] - The min filter.\r\n\t * @property {number} [format=RGBAFormat] - The texture format.\r\n\t * @property {number} [type=UnsignedByteType] - The texture type.\r\n\t * @property {?string} [internalFormat=null] - The texture's internal format.\r\n\t * @property {number} [wrapS=ClampToEdgeWrapping] - The texture's uv wrapping mode.\r\n\t * @property {number} [wrapT=ClampToEdgeWrapping] - The texture's uv wrapping mode.\r\n\t * @property {number} [anisotropy=1] - The texture's anisotropy value.\r\n\t * @property {string} [colorSpace=NoColorSpace] - The texture's color space.\r\n\t * @property {boolean} [depthBuffer=true] - Whether to allocate a depth buffer or not.\r\n\t * @property {boolean} [stencilBuffer=false] - Whether to allocate a stencil buffer or not.\r\n\t * @property {boolean} [resolveDepthBuffer=true] - Whether to resolve the depth buffer or not.\r\n\t * @property {boolean} [resolveStencilBuffer=true] - Whether  to resolve the stencil buffer or not.\r\n\t * @property {?Texture} [depthTexture=null] - Reference to a depth texture.\r\n\t * @property {number} [samples=0] - The MSAA samples count.\r\n\t * @property {number} [count=1] - Defines the number of color attachments . Must be at least `1`.\r\n\t * @property {number} [depth=1] - The texture depth.\r\n\t * @property {boolean} [multiview=false] - Whether this target is used for multiview rendering.\r\n\t */\r\n\r\n\t/**\r\n\t * Constructs a new render target.\r\n\t *\r\n\t * @param {number} [width=1] - The width of the render target.\r\n\t * @param {number} [height=1] - The height of the render target.\r\n\t * @param {RenderTarget~Options} [options] - The configuration object.\r\n\t */\r\n\tconstructor( width = 1, height = 1, options = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\toptions = Object.assign( {\r\n\t\t\tgenerateMipmaps: false,\r\n\t\t\tinternalFormat: null,\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tdepthBuffer: true,\r\n\t\t\tstencilBuffer: false,\r\n\t\t\tresolveDepthBuffer: true,\r\n\t\t\tresolveStencilBuffer: true,\r\n\t\t\tdepthTexture: null,\r\n\t\t\tsamples: 0,\r\n\t\t\tcount: 1,\r\n\t\t\tdepth: 1,\r\n\t\t\tmultiview: false\r\n\t\t}, options );\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isRenderTarget = true;\r\n\r\n\t\t/**\r\n\t\t * The width of the render target.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.width = width;\r\n\r\n\t\t/**\r\n\t\t * The height of the render target.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.height = height;\r\n\r\n\t\t/**\r\n\t\t * The depth of the render target.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.depth = options.depth;\r\n\r\n\t\t/**\r\n\t\t * A rectangular area inside the render target's viewport. Fragments that are\r\n\t\t * outside the area will be discarded.\r\n\t\t *\r\n\t\t * @type {Vector4}\r\n\t\t * @default (0,0,width,height)\r\n\t\t */\r\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\r\n\r\n\t\t/**\r\n\t\t * Indicates whether the scissor test should be enabled when rendering into\r\n\t\t * this render target or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.scissorTest = false;\r\n\r\n\t\t/**\r\n\t\t * A rectangular area representing the render target's viewport.\r\n\t\t *\r\n\t\t * @type {Vector4}\r\n\t\t * @default (0,0,width,height)\r\n\t\t */\r\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\r\n\r\n\t\tconst image = { width: width, height: height, depth: options.depth };\r\n\r\n\t\tconst texture = new Texture( image );\r\n\r\n\t\t/**\r\n\t\t * An array of textures. Each color attachment is represented as a separate texture.\r\n\t\t * Has at least a single entry for the default color attachment.\r\n\t\t *\r\n\t\t * @type {Array<Texture>}\r\n\t\t */\r\n\t\tthis.textures = [];\r\n\r\n\t\tconst count = options.count;\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tthis.textures[ i ] = texture.clone();\r\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\r\n\t\t\tthis.textures[ i ].renderTarget = this;\r\n\r\n\t\t}\r\n\r\n\t\tthis._setTextureOptions( options );\r\n\r\n\t\t/**\r\n\t\t * Whether to allocate a depth buffer or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.depthBuffer = options.depthBuffer;\r\n\r\n\t\t/**\r\n\t\t * Whether to allocate a stencil buffer or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.stencilBuffer = options.stencilBuffer;\r\n\r\n\t\t/**\r\n\t\t * Whether to resolve the depth buffer or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\r\n\r\n\t\t/**\r\n\t\t * Whether to resolve the stencil buffer or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\r\n\r\n\t\tthis._depthTexture = null;\r\n\t\tthis.depthTexture = options.depthTexture;\r\n\r\n\t\t/**\r\n\t\t * The number of MSAA samples.\r\n\t\t *\r\n\t\t * A value of `0` disables MSAA.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.samples = options.samples;\r\n\r\n\t\t/**\r\n\t\t * Whether to this target is used in multiview rendering.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.multiview = options.multiview;\r\n\r\n\t}\r\n\r\n\t_setTextureOptions( options = {} ) {\r\n\r\n\t\tconst values = {\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tgenerateMipmaps: false,\r\n\t\t\tflipY: false,\r\n\t\t\tinternalFormat: null\r\n\t\t};\r\n\r\n\t\tif ( options.mapping !== undefined ) values.mapping = options.mapping;\r\n\t\tif ( options.wrapS !== undefined ) values.wrapS = options.wrapS;\r\n\t\tif ( options.wrapT !== undefined ) values.wrapT = options.wrapT;\r\n\t\tif ( options.wrapR !== undefined ) values.wrapR = options.wrapR;\r\n\t\tif ( options.magFilter !== undefined ) values.magFilter = options.magFilter;\r\n\t\tif ( options.minFilter !== undefined ) values.minFilter = options.minFilter;\r\n\t\tif ( options.format !== undefined ) values.format = options.format;\r\n\t\tif ( options.type !== undefined ) values.type = options.type;\r\n\t\tif ( options.anisotropy !== undefined ) values.anisotropy = options.anisotropy;\r\n\t\tif ( options.colorSpace !== undefined ) values.colorSpace = options.colorSpace;\r\n\t\tif ( options.flipY !== undefined ) values.flipY = options.flipY;\r\n\t\tif ( options.generateMipmaps !== undefined ) values.generateMipmaps = options.generateMipmaps;\r\n\t\tif ( options.internalFormat !== undefined ) values.internalFormat = options.internalFormat;\r\n\r\n\t\tfor ( let i = 0; i < this.textures.length; i ++ ) {\r\n\r\n\t\t\tconst texture = this.textures[ i ];\r\n\t\t\ttexture.setValues( values );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The texture representing the default color attachment.\r\n\t *\r\n\t * @type {Texture}\r\n\t */\r\n\tget texture() {\r\n\r\n\t\treturn this.textures[ 0 ];\r\n\r\n\t}\r\n\r\n\tset texture( value ) {\r\n\r\n\t\tthis.textures[ 0 ] = value;\r\n\r\n\t}\r\n\r\n\tset depthTexture( current ) {\r\n\r\n\t\tif ( this._depthTexture !== null ) this._depthTexture.renderTarget = null;\r\n\t\tif ( current !== null ) current.renderTarget = this;\r\n\r\n\t\tthis._depthTexture = current;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Instead of saving the depth in a renderbuffer, a texture\r\n\t * can be used instead which is useful for further processing\r\n\t * e.g. in context of post-processing.\r\n\t *\r\n\t * @type {?DepthTexture}\r\n\t * @default null\r\n\t */\r\n\tget depthTexture() {\r\n\r\n\t\treturn this._depthTexture;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the size of this render target.\r\n\t *\r\n\t * @param {number} width - The width.\r\n\t * @param {number} height - The height.\r\n\t * @param {number} [depth=1] - The depth.\r\n\t */\r\n\tsetSize( width, height, depth = 1 ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.depth = depth;\r\n\r\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.textures[ i ].image.width = width;\r\n\t\t\t\tthis.textures[ i ].image.height = height;\r\n\t\t\t\tthis.textures[ i ].image.depth = depth;\r\n\r\n\t\t\t\tif ( this.textures[ i ].isData3DTexture !== true ) { // Fix for #31693\r\n\r\n\t\t\t\t\t// TODO: Reconsider setting isArrayTexture flag here and in the ctor of Texture.\r\n\t\t\t\t\t// Maybe a method `isArrayTexture()` or just a getter could replace a flag since\r\n\t\t\t\t\t// both are evaluated on each call?\r\n\r\n\t\t\t\t\tthis.textures[ i ].isArrayTexture = this.textures[ i ].image.depth > 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new render target with copied values from this instance.\r\n\t *\r\n\t * @return {RenderTarget} A clone of this instance.\r\n\t */\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies the settings of the given render target. This is a structural copy so\r\n\t * no resources are shared between render targets after the copy. That includes\r\n\t * all MRT textures and the depth texture.\r\n\t *\r\n\t * @param {RenderTarget} source - The render target to copy.\r\n\t * @return {RenderTarget} A reference to this instance.\r\n\t */\r\n\tcopy( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\t\tthis.depth = source.depth;\r\n\r\n\t\tthis.scissor.copy( source.scissor );\r\n\t\tthis.scissorTest = source.scissorTest;\r\n\r\n\t\tthis.viewport.copy( source.viewport );\r\n\r\n\t\tthis.textures.length = 0;\r\n\r\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\r\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\r\n\t\t\tthis.textures[ i ].renderTarget = this;\r\n\r\n\t\t\t// ensure image object is not shared, see #20328\r\n\r\n\t\t\tconst image = Object.assign( {}, source.textures[ i ].image );\r\n\t\t\tthis.textures[ i ].source = new Source( image );\r\n\r\n\t\t}\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\r\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\r\n\r\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\r\n\r\n\t\tthis.samples = source.samples;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Frees the GPU-related resources allocated by this instance. Call this\r\n\t * method whenever this instance is no longer used in your app.\r\n\t *\r\n\t * @fires RenderTarget#dispose\r\n\t */\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { RenderTarget };\r\n","import { RenderTarget } from '../core/RenderTarget.js';\r\n\r\n/**\r\n * A render target used in context of {@link WebGLRenderer}.\r\n *\r\n * @augments RenderTarget\r\n */\r\nclass WebGLRenderTarget extends RenderTarget {\r\n\r\n\t/**\r\n\t * Constructs a new 3D render target.\r\n\t *\r\n\t * @param {number} [width=1] - The width of the render target.\r\n\t * @param {number} [height=1] - The height of the render target.\r\n\t * @param {RenderTarget~Options} [options] - The configuration object.\r\n\t */\r\n\tconstructor( width = 1, height = 1, options = {} ) {\r\n\r\n\t\tsuper( width, height, options );\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isWebGLRenderTarget = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { WebGLRenderTarget };\r\n","import { WebGLCoordinateSystem } from '../constants.js';\r\nimport { Matrix4 } from '../math/Matrix4.js';\r\nimport { Object3D } from '../core/Object3D.js';\r\n\r\n/**\r\n * Abstract base class for cameras. This class should always be inherited\r\n * when you build a new camera.\r\n *\r\n * @abstract\r\n * @augments Object3D\r\n */\r\nclass Camera extends Object3D {\r\n\r\n\t/**\r\n\t * Constructs a new camera.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isCamera = true;\r\n\r\n\t\tthis.type = 'Camera';\r\n\r\n\t\t/**\r\n\t\t * The inverse of the camera's world matrix.\r\n\t\t *\r\n\t\t * @type {Matrix4}\r\n\t\t */\r\n\t\tthis.matrixWorldInverse = new Matrix4();\r\n\r\n\t\t/**\r\n\t\t * The camera's projection matrix.\r\n\t\t *\r\n\t\t * @type {Matrix4}\r\n\t\t */\r\n\t\tthis.projectionMatrix = new Matrix4();\r\n\r\n\t\t/**\r\n\t\t * The inverse of the camera's projection matrix.\r\n\t\t *\r\n\t\t * @type {Matrix4}\r\n\t\t */\r\n\t\tthis.projectionMatrixInverse = new Matrix4();\r\n\r\n\t\t/**\r\n\t\t * The coordinate system in which the camera is used.\r\n\t\t *\r\n\t\t * @type {(WebGLCoordinateSystem|WebGPUCoordinateSystem)}\r\n\t\t */\r\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\r\n\r\n\t\tthis._reversedDepth = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The flag that indicates whether the camera uses a reversed depth buffer.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @default false\r\n\t */\r\n\tget reversedDepth() {\r\n\r\n\t\treturn this._reversedDepth;\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\r\n\r\n\t\tthis.coordinateSystem = source.coordinateSystem;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a vector representing the (\"look\") direction of the 3D object in world space.\r\n\t *\r\n\t * This method is overwritten since cameras have a different forward vector compared to other\r\n\t * 3D objects. A camera looks down its local, negative z-axis by default.\r\n\t *\r\n\t * @param {Vector3} target - The target vector the result is stored to.\r\n\t * @return {Vector3} The 3D object's direction in world space.\r\n\t */\r\n\tgetWorldDirection( target ) {\r\n\r\n\t\treturn super.getWorldDirection( target ).negate();\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\r\n\r\n\t}\r\n\r\n\tupdateWorldMatrix( updateParents, updateChildren ) {\r\n\r\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\r\n\r\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Camera };\r\n","import { Camera } from './Camera.js';\r\nimport { RAD2DEG, DEG2RAD } from '../math/MathUtils.js';\r\nimport { Vector2 } from '../math/Vector2.js';\r\nimport { Vector3 } from '../math/Vector3.js';\r\n\r\nconst _v3 = /*@__PURE__*/ new Vector3();\r\nconst _minTarget = /*@__PURE__*/ new Vector2();\r\nconst _maxTarget = /*@__PURE__*/ new Vector2();\r\n\r\n/**\r\n * Camera that uses [perspective projection]{@link https://en.wikipedia.org/wiki/Perspective_(graphical)}.\r\n *\r\n * This projection mode is designed to mimic the way the human eye sees. It\r\n * is the most common projection mode used for rendering a 3D scene.\r\n *\r\n * ```js\r\n * const camera = new THREE.PerspectiveCamera( 45, width / height, 1, 1000 );\r\n * scene.add( camera );\r\n * ```\r\n *\r\n * @augments Camera\r\n */\r\nclass PerspectiveCamera extends Camera {\r\n\r\n\t/**\r\n\t * Constructs a new perspective camera.\r\n\t *\r\n\t * @param {number} [fov=50] - The vertical field of view.\r\n\t * @param {number} [aspect=1] - The aspect ratio.\r\n\t * @param {number} [near=0.1] - The camera's near plane.\r\n\t * @param {number} [far=2000] - The camera's far plane.\r\n\t */\r\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isPerspectiveCamera = true;\r\n\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\r\n\t\t/**\r\n\t\t * The vertical field of view, from bottom to top of view,\r\n\t\t * in degrees.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 50\r\n\t\t */\r\n\t\tthis.fov = fov;\r\n\r\n\t\t/**\r\n\t\t * The zoom factor of the camera.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.zoom = 1;\r\n\r\n\t\t/**\r\n\t\t * The camera's near plane. The valid range is greater than `0`\r\n\t\t * and less than the current value of {@link PerspectiveCamera#far}.\r\n\t\t *\r\n\t\t * Note that, unlike for the {@link OrthographicCamera}, `0` is <em>not</em> a\r\n\t\t * valid value for a perspective camera's near plane.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0.1\r\n\t\t */\r\n\t\tthis.near = near;\r\n\r\n\t\t/**\r\n\t\t * The camera's far plane. Must be greater than the\r\n\t\t * current value of {@link PerspectiveCamera#near}.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 2000\r\n\t\t */\r\n\t\tthis.far = far;\r\n\r\n\t\t/**\r\n\t\t * Object distance used for stereoscopy and depth-of-field effects. This\r\n\t\t * parameter does not influence the projection matrix unless a\r\n\t\t * {@link StereoCamera} is being used.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 10\r\n\t\t */\r\n\t\tthis.focus = 10;\r\n\r\n\t\t/**\r\n\t\t * The aspect ratio, usually the canvas width / canvas height.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.aspect = aspect;\r\n\r\n\t\t/**\r\n\t\t * Represents the frustum window specification. This property should not be edited\r\n\t\t * directly but via {@link PerspectiveCamera#setViewOffset} and {@link PerspectiveCamera#clearViewOffset}.\r\n\t\t *\r\n\t\t * @type {?Object}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.view = null;\r\n\r\n\t\t/**\r\n\t\t * Film size used for the larger axis. Default is `35` (millimeters). This\r\n\t\t * parameter does not influence the projection matrix unless {@link PerspectiveCamera#filmOffset}\r\n\t\t * is set to a nonzero value.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 35\r\n\t\t */\r\n\t\tthis.filmGauge = 35;\r\n\r\n\t\t/**\r\n\t\t * Horizontal off-center offset in the same unit as {@link PerspectiveCamera#filmGauge}.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.filmOffset = 0;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.zoom = source.zoom;\r\n\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\tthis.focus = source.focus;\r\n\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\tthis.filmGauge = source.filmGauge;\r\n\t\tthis.filmOffset = source.filmOffset;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the FOV by focal length in respect to the current {@link PerspectiveCamera#filmGauge}.\r\n\t *\r\n\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t * a 35mm (full frame) camera.\r\n\t *\r\n\t * @param {number} focalLength - Values for focal length and film gauge must have the same unit.\r\n\t */\r\n\tsetFocalLength( focalLength ) {\r\n\r\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\r\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\r\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the focal length from the current {@link PerspectiveCamera#fov} and\r\n\t * {@link PerspectiveCamera#filmGauge}.\r\n\t *\r\n\t * @return {number} The computed focal length.\r\n\t */\r\n\tgetFocalLength() {\r\n\r\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\r\n\r\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the current vertical field of view angle in degrees considering {@link PerspectiveCamera#zoom}.\r\n\t *\r\n\t * @return {number} The effective FOV.\r\n\t */\r\n\tgetEffectiveFOV() {\r\n\r\n\t\treturn RAD2DEG * 2 * Math.atan(\r\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the width of the image on the film. If {@link PerspectiveCamera#aspect} is greater than or\r\n\t * equal to one (landscape format), the result equals {@link PerspectiveCamera#filmGauge}.\r\n\t *\r\n\t * @return {number} The film width.\r\n\t */\r\n\tgetFilmWidth() {\r\n\r\n\t\t// film not completely covered in portrait format (aspect < 1)\r\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the height of the image on the film. If {@link PerspectiveCamera#aspect} is greater than or\r\n\t * equal to one (landscape format), the result equals {@link PerspectiveCamera#filmGauge}.\r\n\t *\r\n\t * @return {number} The film width.\r\n\t */\r\n\tgetFilmHeight() {\r\n\r\n\t\t// film not completely covered in landscape format (aspect > 1)\r\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\r\n\t * Sets `minTarget` and `maxTarget` to the coordinates of the lower-left and upper-right corners of the view rectangle.\r\n\t *\r\n\t * @param {number} distance - The viewing distance.\r\n\t * @param {Vector2} minTarget - The lower-left corner of the view rectangle is written into this vector.\r\n\t * @param {Vector2} maxTarget - The upper-right corner of the view rectangle is written into this vector.\r\n\t */\r\n\tgetViewBounds( distance, minTarget, maxTarget ) {\r\n\r\n\t\t_v3.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\r\n\r\n\t\tminTarget.set( _v3.x, _v3.y ).multiplyScalar( - distance / _v3.z );\r\n\r\n\t\t_v3.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\r\n\r\n\t\tmaxTarget.set( _v3.x, _v3.y ).multiplyScalar( - distance / _v3.z );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\r\n\t *\r\n\t * @param {number} distance - The viewing distance.\r\n\t * @param {Vector2} target - The target vector that is used to store result where x is width and y is height.\r\n\t * @returns {Vector2} The view size.\r\n\t */\r\n\tgetViewSize( distance, target ) {\r\n\r\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\r\n\r\n\t\treturn target.subVectors( _maxTarget, _minTarget );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *```\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *```\r\n\t * then for each monitor you would call it like this:\r\n\t *```js\r\n\t * const w = 1920;\r\n\t * const h = 1080;\r\n\t * const fullWidth = w * 3;\r\n\t * const fullHeight = h * 2;\r\n\t *\r\n\t * // --A--\r\n\t * camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t * // --B--\r\n\t * camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t * // --C--\r\n\t * camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t * // --D--\r\n\t * camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t * // --E--\r\n\t * camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t * // --F--\r\n\t * camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t * ```\r\n\t *\r\n\t * Note there is no reason monitors have to be the same size or in a grid.\r\n\t *\r\n\t * @param {number} fullWidth - The full width of multiview setup.\r\n\t * @param {number} fullHeight - The full height of multiview setup.\r\n\t * @param {number} x - The horizontal offset of the subcamera.\r\n\t * @param {number} y - The vertical offset of the subcamera.\r\n\t * @param {number} width - The width of subcamera.\r\n\t * @param {number} height - The height of subcamera.\r\n\t */\r\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n\t\tif ( this.view === null ) {\r\n\r\n\t\t\tthis.view = {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tfullWidth: 1,\r\n\t\t\t\tfullHeight: 1,\r\n\t\t\t\toffsetX: 0,\r\n\t\t\t\toffsetY: 0,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\theight: 1\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.view.enabled = true;\r\n\t\tthis.view.fullWidth = fullWidth;\r\n\t\tthis.view.fullHeight = fullHeight;\r\n\t\tthis.view.offsetX = x;\r\n\t\tthis.view.offsetY = y;\r\n\t\tthis.view.width = width;\r\n\t\tthis.view.height = height;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the view offset from the projection matrix.\r\n\t */\r\n\tclearViewOffset() {\r\n\r\n\t\tif ( this.view !== null ) {\r\n\r\n\t\t\tthis.view.enabled = false;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the camera's projection matrix. Must be called after any change of\r\n\t * camera properties.\r\n\t */\r\n\tupdateProjectionMatrix() {\r\n\r\n\t\tconst near = this.near;\r\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\r\n\t\tlet height = 2 * top;\r\n\t\tlet width = this.aspect * height;\r\n\t\tlet left = - 0.5 * width;\r\n\t\tconst view = this.view;\r\n\r\n\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\tconst fullWidth = view.fullWidth,\r\n\t\t\t\tfullHeight = view.fullHeight;\r\n\r\n\t\t\tleft += view.offsetX * width / fullWidth;\r\n\t\t\ttop -= view.offsetY * height / fullHeight;\r\n\t\t\twidth *= view.width / fullWidth;\r\n\t\t\theight *= view.height / fullHeight;\r\n\r\n\t\t}\r\n\r\n\t\tconst skew = this.filmOffset;\r\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\r\n\r\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem, this.reversedDepth );\r\n\r\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.zoom = this.zoom;\r\n\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\tdata.object.focus = this.focus;\r\n\r\n\t\tdata.object.aspect = this.aspect;\r\n\r\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\tdata.object.filmGauge = this.filmGauge;\r\n\t\tdata.object.filmOffset = this.filmOffset;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { PerspectiveCamera };\r\n","import { WebGLCoordinateSystem, WebGPUCoordinateSystem } from '../constants.js';\r\nimport { Object3D } from '../core/Object3D.js';\r\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\r\n\r\nconst fov = - 90; // negative fov is not an error\r\nconst aspect = 1;\r\n\r\n/**\r\n * A special type of camera that is positioned in 3D space to render its surroundings into a\r\n * cube render target. The render target can then be used as an environment map for rendering\r\n * realtime reflections in your scene.\r\n *\r\n * ```js\r\n * // Create cube render target\r\n * const cubeRenderTarget = new THREE.WebGLCubeRenderTarget( 256, { generateMipmaps: true, minFilter: THREE.LinearMipmapLinearFilter } );\r\n *\r\n * // Create cube camera\r\n * const cubeCamera = new THREE.CubeCamera( 1, 100000, cubeRenderTarget );\r\n * scene.add( cubeCamera );\r\n *\r\n * // Create car\r\n * const chromeMaterial = new THREE.MeshLambertMaterial( { color: 0xffffff, envMap: cubeRenderTarget.texture } );\r\n * const car = new THREE.Mesh( carGeometry, chromeMaterial );\r\n * scene.add( car );\r\n *\r\n * // Update the render target cube\r\n * car.visible = false;\r\n * cubeCamera.position.copy( car.position );\r\n * cubeCamera.update( renderer, scene );\r\n *\r\n * // Render the scene\r\n * car.visible = true;\r\n * renderer.render( scene, camera );\r\n * ```\r\n *\r\n * @augments Object3D\r\n */\r\nclass CubeCamera extends Object3D {\r\n\r\n\t/**\r\n\t * Constructs a new cube camera.\r\n\t *\r\n\t * @param {number} near - The camera's near plane.\r\n\t * @param {number} far - The camera's far plane.\r\n\t * @param {WebGLCubeRenderTarget} renderTarget - The cube render target.\r\n\t */\r\n\tconstructor( near, far, renderTarget ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'CubeCamera';\r\n\r\n\t\t/**\r\n\t\t * A reference to the cube render target.\r\n\t\t *\r\n\t\t * @type {WebGLCubeRenderTarget}\r\n\t\t */\r\n\t\tthis.renderTarget = renderTarget;\r\n\r\n\t\t/**\r\n\t\t * The current active coordinate system.\r\n\t\t *\r\n\t\t * @type {?(WebGLCoordinateSystem|WebGPUCoordinateSystem)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.coordinateSystem = null;\r\n\r\n\t\t/**\r\n\t\t * The current active mipmap level\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.activeMipmapLevel = 0;\r\n\r\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.layers = this.layers;\r\n\t\tthis.add( cameraPX );\r\n\r\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.layers = this.layers;\r\n\t\tthis.add( cameraNX );\r\n\r\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.layers = this.layers;\r\n\t\tthis.add( cameraPY );\r\n\r\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.layers = this.layers;\r\n\t\tthis.add( cameraNY );\r\n\r\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.layers = this.layers;\r\n\t\tthis.add( cameraPZ );\r\n\r\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.layers = this.layers;\r\n\t\tthis.add( cameraNZ );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Must be called when the coordinate system of the cube camera is changed.\r\n\t */\r\n\tupdateCoordinateSystem() {\r\n\r\n\t\tconst coordinateSystem = this.coordinateSystem;\r\n\r\n\t\tconst cameras = this.children.concat();\r\n\r\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\r\n\r\n\t\tfor ( const camera of cameras ) this.remove( camera );\r\n\r\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\tcameraPX.up.set( 0, 1, 0 );\r\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\r\n\r\n\t\t\tcameraNX.up.set( 0, 1, 0 );\r\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\r\n\r\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\r\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\r\n\r\n\t\t\tcameraNY.up.set( 0, 0, 1 );\r\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\r\n\r\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\r\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\r\n\r\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\r\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\r\n\r\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\r\n\r\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\r\n\r\n\t\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\r\n\r\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\r\n\r\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\r\n\r\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const camera of cameras ) {\r\n\r\n\t\t\tthis.add( camera );\r\n\r\n\t\t\tcamera.updateMatrixWorld();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calling this method will render the given scene with the given renderer\r\n\t * into the cube render target of the camera.\r\n\t *\r\n\t * @param {(Renderer|WebGLRenderer)} renderer - The renderer.\r\n\t * @param {Scene} scene - The scene to render.\r\n\t */\r\n\tupdate( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tconst { renderTarget, activeMipmapLevel } = this;\r\n\r\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\r\n\r\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\r\n\r\n\t\t\tthis.updateCoordinateSystem();\r\n\r\n\t\t}\r\n\r\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\r\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\r\n\r\n\t\tconst currentXrEnabled = renderer.xr.enabled;\r\n\r\n\t\trenderer.xr.enabled = false;\r\n\r\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraPX );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraNX );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraPY );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraNY );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraPZ );\r\n\r\n\t\t// mipmaps are generated during the last call of render()\r\n\t\t// at this point, all sides of the cube render target are defined\r\n\r\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraNZ );\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\r\n\r\n\t\trenderer.xr.enabled = currentXrEnabled;\r\n\r\n\t\trenderTarget.texture.needsPMREMUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { CubeCamera };\r\n","import { Texture } from './Texture.js';\r\nimport { CubeReflectionMapping } from '../constants.js';\r\n\r\n/**\r\n * Creates a cube texture made up of six images.\r\n *\r\n * ```js\r\n * const loader = new THREE.CubeTextureLoader();\r\n * loader.setPath( 'textures/cube/pisa/' );\r\n *\r\n * const textureCube = loader.load( [\r\n * \t'px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png'\r\n * ] );\r\n *\r\n * const material = new THREE.MeshBasicMaterial( { color: 0xffffff, envMap: textureCube } );\r\n * ```\r\n *\r\n * @augments Texture\r\n */\r\nclass CubeTexture extends Texture {\r\n\r\n\t/**\r\n\t * Constructs a new cube texture.\r\n\t *\r\n\t * @param {Array<Image>} [images=[]] - An array holding a image for each side of a cube.\r\n\t * @param {number} [mapping=CubeReflectionMapping] - The texture mapping.\r\n\t * @param {number} [wrapS=ClampToEdgeWrapping] - The wrapS value.\r\n\t * @param {number} [wrapT=ClampToEdgeWrapping] - The wrapT value.\r\n\t * @param {number} [magFilter=LinearFilter] - The mag filter value.\r\n\t * @param {number} [minFilter=LinearMipmapLinearFilter] - The min filter value.\r\n\t * @param {number} [format=RGBAFormat] - The texture format.\r\n\t * @param {number} [type=UnsignedByteType] - The texture type.\r\n\t * @param {number} [anisotropy=Texture.DEFAULT_ANISOTROPY] - The anisotropy value.\r\n\t * @param {string} [colorSpace=NoColorSpace] - The color space value.\r\n\t */\r\n\tconstructor( images = [], mapping = CubeReflectionMapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\r\n\r\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isCubeTexture = true;\r\n\r\n\t\t/**\r\n\t\t * If set to `true`, the texture is flipped along the vertical axis when\r\n\t\t * uploaded to the GPU.\r\n\t\t *\r\n\t\t * Overwritten and set to `false` by default.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.flipY = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Alias for {@link CubeTexture#image}.\r\n\t *\r\n\t * @type {Array<Image>}\r\n\t */\r\n\tget images() {\r\n\r\n\t\treturn this.image;\r\n\r\n\t}\r\n\r\n\tset images( value ) {\r\n\r\n\t\tthis.image = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { CubeTexture };\r\n","import { BackSide, LinearFilter, LinearMipmapLinearFilter, NoBlending } from '../constants.js';\r\nimport { Mesh } from '../objects/Mesh.js';\r\nimport { BoxGeometry } from '../geometries/BoxGeometry.js';\r\nimport { ShaderMaterial } from '../materials/ShaderMaterial.js';\r\nimport { cloneUniforms } from './shaders/UniformsUtils.js';\r\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\r\nimport { CubeCamera } from '../cameras/CubeCamera.js';\r\nimport { CubeTexture } from '../textures/CubeTexture.js';\r\n\r\n/**\r\n * A cube render target used in context of {@link WebGLRenderer}.\r\n *\r\n * @augments WebGLRenderTarget\r\n */\r\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\r\n\r\n\t/**\r\n\t * Constructs a new cube render target.\r\n\t *\r\n\t * @param {number} [size=1] - The size of the render target.\r\n\t * @param {RenderTarget~Options} [options] - The configuration object.\r\n\t */\r\n\tconstructor( size = 1, options = {} ) {\r\n\r\n\t\tsuper( size, size, options );\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isWebGLCubeRenderTarget = true;\r\n\r\n\t\tconst image = { width: size, height: size, depth: 1 };\r\n\t\tconst images = [ image, image, image, image, image, image ];\r\n\r\n\t\t/**\r\n\t\t * Overwritten with a different texture type.\r\n\t\t *\r\n\t\t * @type {DataArrayTexture}\r\n\t\t */\r\n\t\tthis.texture = new CubeTexture( images );\r\n\t\tthis._setTextureOptions( options );\r\n\r\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\r\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\r\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\r\n\r\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\r\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\r\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\r\n\r\n\t\tthis.texture.isRenderTargetTexture = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given equirectangular texture to a cube map.\r\n\t *\r\n\t * @param {WebGLRenderer} renderer - The renderer.\r\n\t * @param {Texture} texture - The equirectangular texture.\r\n\t * @return {WebGLCubeRenderTarget} A reference to this cube render target.\r\n\t */\r\n\tfromEquirectangularTexture( renderer, texture ) {\r\n\r\n\t\tthis.texture.type = texture.type;\r\n\t\tthis.texture.colorSpace = texture.colorSpace;\r\n\r\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\r\n\t\tthis.texture.minFilter = texture.minFilter;\r\n\t\tthis.texture.magFilter = texture.magFilter;\r\n\r\n\t\tconst shader = {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\ttEquirect: { value: null },\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: /* glsl */`\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\r\n\r\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\r\n\r\n\t\t\t\t\t#include <begin_vertex>\r\n\t\t\t\t\t#include <project_vertex>\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\r\n\t\t\tfragmentShader: /* glsl */`\r\n\r\n\t\t\t\tuniform sampler2D tEquirect;\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\t#include <common>\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\r\n\r\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\r\n\r\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n\t\t\t\t}\r\n\t\t\t`\r\n\t\t};\r\n\r\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\r\n\r\n\t\tconst material = new ShaderMaterial( {\r\n\r\n\t\t\tname: 'CubemapFromEquirect',\r\n\r\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\tside: BackSide,\r\n\t\t\tblending: NoBlending\r\n\r\n\t\t} );\r\n\r\n\t\tmaterial.uniforms.tEquirect.value = texture;\r\n\r\n\t\tconst mesh = new Mesh( geometry, material );\r\n\r\n\t\tconst currentMinFilter = texture.minFilter;\r\n\r\n\t\t// Avoid blurred poles\r\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\r\n\r\n\t\tconst camera = new CubeCamera( 1, 10, this );\r\n\t\tcamera.update( renderer, mesh );\r\n\r\n\t\ttexture.minFilter = currentMinFilter;\r\n\r\n\t\tmesh.geometry.dispose();\r\n\t\tmesh.material.dispose();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clears this cube render target.\r\n\t *\r\n\t * @param {WebGLRenderer} renderer - The renderer.\r\n\t * @param {boolean} [color=true] - Whether the color buffer should be cleared or not.\r\n\t * @param {boolean} [depth=true] - Whether the depth buffer should be cleared or not.\r\n\t * @param {boolean} [stencil=true] - Whether the stencil buffer should be cleared or not.\r\n\t */\r\n\tclear( renderer, color = true, depth = true, stencil = true ) {\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\trenderer.setRenderTarget( this, i );\r\n\r\n\t\t\trenderer.clear( color, depth, stencil );\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { WebGLCubeRenderTarget };\r\n","import { CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping } from '../../constants.js';\r\nimport { WebGLCubeRenderTarget } from '../WebGLCubeRenderTarget.js';\r\n\r\nfunction WebGLCubeMaps( renderer ) {\r\n\r\n\tlet cubemaps = new WeakMap();\r\n\r\n\tfunction mapTextureMapping( texture, mapping ) {\r\n\r\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\r\n\r\n\t\t\ttexture.mapping = CubeReflectionMapping;\r\n\r\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\r\n\r\n\t\t\ttexture.mapping = CubeRefractionMapping;\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tfunction get( texture ) {\r\n\r\n\t\tif ( texture && texture.isTexture ) {\r\n\r\n\t\t\tconst mapping = texture.mapping;\r\n\r\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\r\n\r\n\t\t\t\tif ( cubemaps.has( texture ) ) {\r\n\r\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\r\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconst image = texture.image;\r\n\r\n\t\t\t\t\tif ( image && image.height > 0 ) {\r\n\r\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\r\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\r\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\r\n\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\r\n\r\n\t\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tconst texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tconst cubemap = cubemaps.get( texture );\r\n\r\n\t\tif ( cubemap !== undefined ) {\r\n\r\n\t\t\tcubemaps.delete( texture );\r\n\t\t\tcubemap.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tcubemaps = new WeakMap();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tget: get,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\nexport { WebGLCubeMaps };\r\n","import { Camera } from './Camera.js';\r\n\r\n/**\r\n * Camera that uses [orthographic projection]{@link https://en.wikipedia.org/wiki/Orthographic_projection}.\r\n *\r\n * In this projection mode, an object's size in the rendered image stays\r\n * constant regardless of its distance from the camera. This can be useful\r\n * for rendering 2D scenes and UI elements, amongst other things.\r\n *\r\n * ```js\r\n * const camera = new THREE.OrthographicCamera( width / - 2, width / 2, height / 2, height / - 2, 1, 1000 );\r\n * scene.add( camera );\r\n * ```\r\n *\r\n * @augments Camera\r\n */\r\nclass OrthographicCamera extends Camera {\r\n\r\n\t/**\r\n\t * Constructs a new orthographic camera.\r\n\t *\r\n\t * @param {number} [left=-1] - The left plane of the camera's frustum.\r\n\t * @param {number} [right=1] - The right plane of the camera's frustum.\r\n\t * @param {number} [top=1] - The top plane of the camera's frustum.\r\n\t * @param {number} [bottom=-1] - The bottom plane of the camera's frustum.\r\n\t * @param {number} [near=0.1] - The camera's near plane.\r\n\t * @param {number} [far=2000] - The camera's far plane.\r\n\t */\r\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isOrthographicCamera = true;\r\n\r\n\t\tthis.type = 'OrthographicCamera';\r\n\r\n\t\t/**\r\n\t\t * The zoom factor of the camera.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.zoom = 1;\r\n\r\n\t\t/**\r\n\t\t * Represents the frustum window specification. This property should not be edited\r\n\t\t * directly but via {@link PerspectiveCamera#setViewOffset} and {@link PerspectiveCamera#clearViewOffset}.\r\n\t\t *\r\n\t\t * @type {?Object}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.view = null;\r\n\r\n\t\t/**\r\n\t\t * The left plane of the camera's frustum.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default -1\r\n\t\t */\r\n\t\tthis.left = left;\r\n\r\n\t\t/**\r\n\t\t * The right plane of the camera's frustum.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.right = right;\r\n\r\n\t\t/**\r\n\t\t * The top plane of the camera's frustum.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.top = top;\r\n\r\n\t\t/**\r\n\t\t * The bottom plane of the camera's frustum.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default -1\r\n\t\t */\r\n\t\tthis.bottom = bottom;\r\n\r\n\t\t/**\r\n\t\t * The camera's near plane. The valid range is greater than `0`\r\n\t\t * and less than the current value of {@link OrthographicCamera#far}.\r\n\t\t *\r\n\t\t * Note that, unlike for the {@link PerspectiveCamera}, `0` is a\r\n\t\t * valid value for an orthographic camera's near plane.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0.1\r\n\t\t */\r\n\t\tthis.near = near;\r\n\r\n\t\t/**\r\n\t\t * The camera's far plane. Must be greater than the\r\n\t\t * current value of {@link OrthographicCamera#near}.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 2000\r\n\t\t */\r\n\t\tthis.far = far;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\r\n\t\tthis.zoom = source.zoom;\r\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * @param {number} fullWidth - The full width of multiview setup.\r\n\t * @param {number} fullHeight - The full height of multiview setup.\r\n\t * @param {number} x - The horizontal offset of the subcamera.\r\n\t * @param {number} y - The vertical offset of the subcamera.\r\n\t * @param {number} width - The width of subcamera.\r\n\t * @param {number} height - The height of subcamera.\r\n\t * @see {@link PerspectiveCamera#setViewOffset}\r\n\t */\r\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\tif ( this.view === null ) {\r\n\r\n\t\t\tthis.view = {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tfullWidth: 1,\r\n\t\t\t\tfullHeight: 1,\r\n\t\t\t\toffsetX: 0,\r\n\t\t\t\toffsetY: 0,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\theight: 1\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.view.enabled = true;\r\n\t\tthis.view.fullWidth = fullWidth;\r\n\t\tthis.view.fullHeight = fullHeight;\r\n\t\tthis.view.offsetX = x;\r\n\t\tthis.view.offsetY = y;\r\n\t\tthis.view.width = width;\r\n\t\tthis.view.height = height;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the view offset from the projection matrix.\r\n\t */\r\n\tclearViewOffset() {\r\n\r\n\t\tif ( this.view !== null ) {\r\n\r\n\t\t\tthis.view.enabled = false;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the camera's projection matrix. Must be called after any change of\r\n\t * camera properties.\r\n\t */\r\n\tupdateProjectionMatrix() {\r\n\r\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tconst cx = ( this.right + this.left ) / 2;\r\n\t\tconst cy = ( this.top + this.bottom ) / 2;\r\n\r\n\t\tlet left = cx - dx;\r\n\t\tlet right = cx + dx;\r\n\t\tlet top = cy + dy;\r\n\t\tlet bottom = cy - dy;\r\n\r\n\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\r\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\r\n\r\n\t\t\tleft += scaleW * this.view.offsetX;\r\n\t\t\tright = left + scaleW * this.view.width;\r\n\t\t\ttop -= scaleH * this.view.offsetY;\r\n\t\t\tbottom = top - scaleH * this.view.height;\r\n\r\n\t\t}\r\n\r\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem, this.reversedDepth );\r\n\r\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\r\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { OrthographicCamera };\r\n","import {\r\n\tCubeReflectionMapping,\r\n\tCubeRefractionMapping,\r\n\tCubeUVReflectionMapping,\r\n\tLinearFilter,\r\n\tNoToneMapping,\r\n\tNoBlending,\r\n\tRGBAFormat,\r\n\tHalfFloatType,\r\n\tBackSide,\r\n\tLinearSRGBColorSpace\r\n} from '../constants.js';\r\n\r\nimport { BufferAttribute } from '../core/BufferAttribute.js';\r\nimport { BufferGeometry } from '../core/BufferGeometry.js';\r\nimport { Mesh } from '../objects/Mesh.js';\r\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\r\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\r\nimport { ShaderMaterial } from '../materials/ShaderMaterial.js';\r\nimport { Vector3 } from '../math/Vector3.js';\r\nimport { Color } from '../math/Color.js';\r\nimport { WebGLRenderTarget } from '../renderers/WebGLRenderTarget.js';\r\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\r\nimport { BoxGeometry } from '../geometries/BoxGeometry.js';\r\nimport { error, warn } from '../utils.js';\r\n\r\nconst LOD_MIN = 4;\r\n\r\n// The standard deviations (radians) associated with the extra mips. These are\r\n// chosen to approximate a Trowbridge-Reitz distribution function times the\r\n// geometric shadowing function. These sigma values squared must match the\r\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\r\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\r\n\r\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\r\n// samples and exit early, but not recompile the shader.\r\nconst MAX_SAMPLES = 20;\r\n\r\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\r\nconst _clearColor = /*@__PURE__*/ new Color();\r\nlet _oldTarget = null;\r\nlet _oldActiveCubeFace = 0;\r\nlet _oldActiveMipmapLevel = 0;\r\nlet _oldXrEnabled = false;\r\n\r\n// Golden Ratio\r\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\r\nconst INV_PHI = 1 / PHI;\r\n\r\n// Vertices of a dodecahedron (except the opposites, which represent the\r\n// same axis), used as axis directions evenly spread on a sphere.\r\nconst _axisDirections = [\r\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\r\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\r\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\r\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\r\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\r\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\r\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\r\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\r\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\r\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\r\n\r\nconst _origin = /*@__PURE__*/ new Vector3();\r\n\r\n/**\r\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\r\n * (PMREM) from a cubeMap environment texture. This allows different levels of\r\n * blur to be quickly accessed based on material roughness. It is packed into a\r\n * special CubeUV format that allows us to perform custom interpolation so that\r\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\r\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\r\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\r\n * higher roughness levels. In this way we maintain resolution to smoothly\r\n * interpolate diffuse lighting while limiting sampling computation.\r\n *\r\n * Paper: Fast, Accurate Image-Based Lighting:\r\n * {@link https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view}\r\n*/\r\nclass PMREMGenerator {\r\n\r\n\t/**\r\n\t * Constructs a new PMREM generator.\r\n\t *\r\n\t * @param {WebGLRenderer} renderer - The renderer.\r\n\t */\r\n\tconstructor( renderer ) {\r\n\r\n\t\tthis._renderer = renderer;\r\n\t\tthis._pingPongRenderTarget = null;\r\n\r\n\t\tthis._lodMax = 0;\r\n\t\tthis._cubeSize = 0;\r\n\t\tthis._lodPlanes = [];\r\n\t\tthis._sizeLods = [];\r\n\t\tthis._sigmas = [];\r\n\r\n\t\tthis._blurMaterial = null;\r\n\t\tthis._cubemapMaterial = null;\r\n\t\tthis._equirectMaterial = null;\r\n\r\n\t\tthis._compileMaterial( this._blurMaterial );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\r\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\r\n\t * in radians to be applied to the scene before PMREM generation. Optional near\r\n\t * and far planes ensure the scene is rendered in its entirety.\r\n\t *\r\n\t * @param {Scene} scene - The scene to be captured.\r\n\t * @param {number} [sigma=0] - The blur radius in radians.\r\n\t * @param {number} [near=0.1] - The near plane distance.\r\n\t * @param {number} [far=100] - The far plane distance.\r\n\t * @param {Object} [options={}] - The configuration options.\r\n\t * @param {number} [options.size=256] - The texture size of the PMREM.\r\n\t * @param {Vector3} [options.renderTarget=origin] - The position of the internal cube camera that renders the scene.\r\n\t * @return {WebGLRenderTarget} The resulting PMREM.\r\n\t */\r\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100, options = {} ) {\r\n\r\n\t\tconst {\r\n\t\t\tsize = 256,\r\n\t\t\tposition = _origin,\r\n\t\t} = options;\r\n\r\n\t\t_oldTarget = this._renderer.getRenderTarget();\r\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\r\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\r\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\r\n\r\n\t\tthis._renderer.xr.enabled = false;\r\n\r\n\t\tthis._setSize( size );\r\n\r\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\r\n\t\tcubeUVRenderTarget.depthBuffer = true;\r\n\r\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget, position );\r\n\r\n\t\tif ( sigma > 0 ) {\r\n\r\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\r\n\r\n\t\t}\r\n\r\n\t\tthis._applyPMREM( cubeUVRenderTarget );\r\n\t\tthis._cleanup( cubeUVRenderTarget );\r\n\r\n\t\treturn cubeUVRenderTarget;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\r\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\r\n\t * as this matches best with the 256 x 256 cubemap output.\r\n\t *\r\n\t * @param {Texture} equirectangular - The equirectangular texture to be converted.\r\n\t * @param {?WebGLRenderTarget} [renderTarget=null] - The render target to use.\r\n\t * @return {WebGLRenderTarget} The resulting PMREM.\r\n\t */\r\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\r\n\r\n\t\treturn this._fromTexture( equirectangular, renderTarget );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\r\n\t * or HDR. The ideal input cube size is 256 x 256,\r\n\t * as this matches best with the 256 x 256 cubemap output.\r\n\t *\r\n\t * @param {Texture} cubemap - The cubemap texture to be converted.\r\n\t * @param {?WebGLRenderTarget} [renderTarget=null] - The render target to use.\r\n\t * @return {WebGLRenderTarget} The resulting PMREM.\r\n\t */\r\n\tfromCubemap( cubemap, renderTarget = null ) {\r\n\r\n\t\treturn this._fromTexture( cubemap, renderTarget );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\r\n\t * your texture's network fetch for increased concurrency.\r\n\t */\r\n\tcompileCubemapShader() {\r\n\r\n\t\tif ( this._cubemapMaterial === null ) {\r\n\r\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\r\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\r\n\t * your texture's network fetch for increased concurrency.\r\n\t */\r\n\tcompileEquirectangularShader() {\r\n\r\n\t\tif ( this._equirectMaterial === null ) {\r\n\r\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\r\n\t\t\tthis._compileMaterial( this._equirectMaterial );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\r\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\r\n\t * one of them will cause any others to also become unusable.\r\n\t */\r\n\tdispose() {\r\n\r\n\t\tthis._dispose();\r\n\r\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\r\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\r\n\r\n\t}\r\n\r\n\t// private interface\r\n\r\n\t_setSize( cubeSize ) {\r\n\r\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\r\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\r\n\r\n\t}\r\n\r\n\t_dispose() {\r\n\r\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\r\n\r\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\r\n\r\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\r\n\r\n\t\t\tthis._lodPlanes[ i ].dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_cleanup( outputTarget ) {\r\n\r\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\r\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\r\n\r\n\t\toutputTarget.scissorTest = false;\r\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\r\n\r\n\t}\r\n\r\n\t_fromTexture( texture, renderTarget ) {\r\n\r\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\r\n\r\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\r\n\r\n\t\t} else { // Equirectangular\r\n\r\n\t\t\tthis._setSize( texture.image.width / 4 );\r\n\r\n\t\t}\r\n\r\n\t\t_oldTarget = this._renderer.getRenderTarget();\r\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\r\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\r\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\r\n\r\n\t\tthis._renderer.xr.enabled = false;\r\n\r\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\r\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\r\n\t\tthis._applyPMREM( cubeUVRenderTarget );\r\n\t\tthis._cleanup( cubeUVRenderTarget );\r\n\r\n\t\treturn cubeUVRenderTarget;\r\n\r\n\t}\r\n\r\n\t_allocateTargets() {\r\n\r\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\r\n\t\tconst height = 4 * this._cubeSize;\r\n\r\n\t\tconst params = {\r\n\t\t\tmagFilter: LinearFilter,\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tgenerateMipmaps: false,\r\n\t\t\ttype: HalfFloatType,\r\n\t\t\tformat: RGBAFormat,\r\n\t\t\tcolorSpace: LinearSRGBColorSpace,\r\n\t\t\tdepthBuffer: false\r\n\t\t};\r\n\r\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\r\n\r\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\r\n\r\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\r\n\r\n\t\t\t\tthis._dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\r\n\r\n\t\t\tconst { _lodMax } = this;\r\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\r\n\r\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\r\n\r\n\t\t}\r\n\r\n\t\treturn cubeUVRenderTarget;\r\n\r\n\t}\r\n\r\n\t_compileMaterial( material ) {\r\n\r\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\r\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\r\n\r\n\t}\r\n\r\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget, position ) {\r\n\r\n\t\tconst fov = 90;\r\n\t\tconst aspect = 1;\r\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\r\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\r\n\t\tconst renderer = this._renderer;\r\n\r\n\t\tconst originalAutoClear = renderer.autoClear;\r\n\t\tconst toneMapping = renderer.toneMapping;\r\n\t\trenderer.getClearColor( _clearColor );\r\n\r\n\t\trenderer.toneMapping = NoToneMapping;\r\n\t\trenderer.autoClear = false;\r\n\r\n\t\t// https://github.com/mrdoob/three.js/issues/31413#issuecomment-3095966812\r\n\t\tconst reversedDepthBuffer = renderer.state.buffers.depth.getReversed();\r\n\r\n\t\tif ( reversedDepthBuffer ) {\r\n\r\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\r\n\t\t\trenderer.clearDepth();\r\n\t\t\trenderer.setRenderTarget( null );\r\n\r\n\t\t}\r\n\r\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\r\n\t\t\tname: 'PMREM.Background',\r\n\t\t\tside: BackSide,\r\n\t\t\tdepthWrite: false,\r\n\t\t\tdepthTest: false,\r\n\t\t} );\r\n\r\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\r\n\r\n\t\tlet useSolidColor = false;\r\n\t\tconst background = scene.background;\r\n\r\n\t\tif ( background ) {\r\n\r\n\t\t\tif ( background.isColor ) {\r\n\r\n\t\t\t\tbackgroundMaterial.color.copy( background );\r\n\t\t\t\tscene.background = null;\r\n\t\t\t\tuseSolidColor = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\r\n\t\t\tuseSolidColor = true;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tconst col = i % 3;\r\n\r\n\t\t\tif ( col === 0 ) {\r\n\r\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\r\n\t\t\t\tcubeCamera.position.set( position.x, position.y, position.z );\r\n\t\t\t\tcubeCamera.lookAt( position.x + forwardSign[ i ], position.y, position.z );\r\n\r\n\t\t\t} else if ( col === 1 ) {\r\n\r\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\r\n\t\t\t\tcubeCamera.position.set( position.x, position.y, position.z );\r\n\t\t\t\tcubeCamera.lookAt( position.x, position.y + forwardSign[ i ], position.z );\r\n\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\r\n\t\t\t\tcubeCamera.position.set( position.x, position.y, position.z );\r\n\t\t\t\tcubeCamera.lookAt( position.x, position.y, position.z + forwardSign[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst size = this._cubeSize;\r\n\r\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\r\n\r\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\r\n\r\n\t\t\tif ( useSolidColor ) {\r\n\r\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( scene, cubeCamera );\r\n\r\n\t\t}\r\n\r\n\t\tbackgroundBox.geometry.dispose();\r\n\t\tbackgroundBox.material.dispose();\r\n\r\n\t\trenderer.toneMapping = toneMapping;\r\n\t\trenderer.autoClear = originalAutoClear;\r\n\t\tscene.background = background;\r\n\r\n\t}\r\n\r\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\r\n\r\n\t\tconst renderer = this._renderer;\r\n\r\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\r\n\r\n\t\tif ( isCubeTexture ) {\r\n\r\n\t\t\tif ( this._cubemapMaterial === null ) {\r\n\r\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( this._equirectMaterial === null ) {\r\n\r\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\r\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\r\n\r\n\t\tconst uniforms = material.uniforms;\r\n\r\n\t\tuniforms[ 'envMap' ].value = texture;\r\n\r\n\t\tconst size = this._cubeSize;\r\n\r\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\r\n\r\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\r\n\t\trenderer.render( mesh, _flatCamera );\r\n\r\n\t}\r\n\r\n\t_applyPMREM( cubeUVRenderTarget ) {\r\n\r\n\t\tconst renderer = this._renderer;\r\n\t\tconst autoClear = renderer.autoClear;\r\n\t\trenderer.autoClear = false;\r\n\t\tconst n = this._lodPlanes.length;\r\n\r\n\t\tfor ( let i = 1; i < n; i ++ ) {\r\n\r\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\r\n\r\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\r\n\r\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\r\n\r\n\t\t}\r\n\r\n\t\trenderer.autoClear = autoClear;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\r\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\r\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\r\n\t * the poles) to approximate the orthogonally-separable blur. It is least\r\n\t * accurate at the poles, but still does a decent job.\r\n\t *\r\n\t * @private\r\n\t * @param {WebGLRenderTarget} cubeUVRenderTarget\r\n\t * @param {number} lodIn\r\n\t * @param {number} lodOut\r\n\t * @param {number} sigma\r\n\t * @param {Vector3} [poleAxis]\r\n\t */\r\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\r\n\r\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\r\n\r\n\t\tthis._halfBlur(\r\n\t\t\tcubeUVRenderTarget,\r\n\t\t\tpingPongRenderTarget,\r\n\t\t\tlodIn,\r\n\t\t\tlodOut,\r\n\t\t\tsigma,\r\n\t\t\t'latitudinal',\r\n\t\t\tpoleAxis );\r\n\r\n\t\tthis._halfBlur(\r\n\t\t\tpingPongRenderTarget,\r\n\t\t\tcubeUVRenderTarget,\r\n\t\t\tlodOut,\r\n\t\t\tlodOut,\r\n\t\t\tsigma,\r\n\t\t\t'longitudinal',\r\n\t\t\tpoleAxis );\r\n\r\n\t}\r\n\r\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\r\n\r\n\t\tconst renderer = this._renderer;\r\n\t\tconst blurMaterial = this._blurMaterial;\r\n\r\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\r\n\r\n\t\t\terror(\r\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\r\n\r\n\t\t}\r\n\r\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\r\n\t\tconst STANDARD_DEVIATIONS = 3;\r\n\r\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\r\n\t\tconst blurUniforms = blurMaterial.uniforms;\r\n\r\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\r\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\r\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\r\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\r\n\r\n\t\tif ( samples > MAX_SAMPLES ) {\r\n\r\n\t\t\twarn( `sigmaRadians, ${\r\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\r\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\r\n\r\n\t\t}\r\n\r\n\t\tconst weights = [];\r\n\t\tlet sum = 0;\r\n\r\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\r\n\r\n\t\t\tconst x = i / sigmaPixels;\r\n\t\t\tconst weight = Math.exp( - x * x / 2 );\r\n\t\t\tweights.push( weight );\r\n\r\n\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\tsum += weight;\r\n\r\n\t\t\t} else if ( i < samples ) {\r\n\r\n\t\t\t\tsum += 2 * weight;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\r\n\r\n\t\t\tweights[ i ] = weights[ i ] / sum;\r\n\r\n\t\t}\r\n\r\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\r\n\t\tblurUniforms[ 'samples' ].value = samples;\r\n\t\tblurUniforms[ 'weights' ].value = weights;\r\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\r\n\r\n\t\tif ( poleAxis ) {\r\n\r\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\r\n\r\n\t\t}\r\n\r\n\t\tconst { _lodMax } = this;\r\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\r\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\r\n\r\n\t\tconst outputSize = this._sizeLods[ lodOut ];\r\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\r\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\r\n\r\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\r\n\t\trenderer.setRenderTarget( targetOut );\r\n\t\trenderer.render( blurMesh, _flatCamera );\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\nfunction _createPlanes( lodMax ) {\r\n\r\n\tconst lodPlanes = [];\r\n\tconst sizeLods = [];\r\n\tconst sigmas = [];\r\n\r\n\tlet lod = lodMax;\r\n\r\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\r\n\r\n\tfor ( let i = 0; i < totalLods; i ++ ) {\r\n\r\n\t\tconst sizeLod = Math.pow( 2, lod );\r\n\t\tsizeLods.push( sizeLod );\r\n\t\tlet sigma = 1.0 / sizeLod;\r\n\r\n\t\tif ( i > lodMax - LOD_MIN ) {\r\n\r\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\r\n\r\n\t\t} else if ( i === 0 ) {\r\n\r\n\t\t\tsigma = 0;\r\n\r\n\t\t}\r\n\r\n\t\tsigmas.push( sigma );\r\n\r\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\r\n\t\tconst min = - texelSize;\r\n\t\tconst max = 1 + texelSize;\r\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\r\n\r\n\t\tconst cubeFaces = 6;\r\n\t\tconst vertices = 6;\r\n\t\tconst positionSize = 3;\r\n\t\tconst uvSize = 2;\r\n\t\tconst faceIndexSize = 1;\r\n\r\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\r\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\r\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\r\n\r\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\r\n\r\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\r\n\t\t\tconst y = face > 2 ? 0 : - 1;\r\n\t\t\tconst coordinates = [\r\n\t\t\t\tx, y, 0,\r\n\t\t\t\tx + 2 / 3, y, 0,\r\n\t\t\t\tx + 2 / 3, y + 1, 0,\r\n\t\t\t\tx, y, 0,\r\n\t\t\t\tx + 2 / 3, y + 1, 0,\r\n\t\t\t\tx, y + 1, 0\r\n\t\t\t];\r\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\r\n\t\t\tuv.set( uv1, uvSize * vertices * face );\r\n\t\t\tconst fill = [ face, face, face, face, face, face ];\r\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\r\n\r\n\t\t}\r\n\r\n\t\tconst planes = new BufferGeometry();\r\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\r\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\r\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\r\n\t\tlodPlanes.push( planes );\r\n\r\n\t\tif ( lod > LOD_MIN ) {\r\n\r\n\t\t\tlod --;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn { lodPlanes, sizeLods, sigmas };\r\n\r\n}\r\n\r\nfunction _createRenderTarget( width, height, params ) {\r\n\r\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\r\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\r\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\r\n\tcubeUVRenderTarget.scissorTest = true;\r\n\treturn cubeUVRenderTarget;\r\n\r\n}\r\n\r\nfunction _setViewport( target, x, y, width, height ) {\r\n\r\n\ttarget.viewport.set( x, y, width, height );\r\n\ttarget.scissor.set( x, y, width, height );\r\n\r\n}\r\n\r\nfunction _getBlurShader( lodMax, width, height ) {\r\n\r\n\tconst weights = new Float32Array( MAX_SAMPLES );\r\n\tconst poleAxis = new Vector3( 0, 1, 0 );\r\n\tconst shaderMaterial = new ShaderMaterial( {\r\n\r\n\t\tname: 'SphericalGaussianBlur',\r\n\r\n\t\tdefines: {\r\n\t\t\t'n': MAX_SAMPLES,\r\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\r\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\r\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\r\n\t\t},\r\n\r\n\t\tuniforms: {\r\n\t\t\t'envMap': { value: null },\r\n\t\t\t'samples': { value: 1 },\r\n\t\t\t'weights': { value: weights },\r\n\t\t\t'latitudinal': { value: false },\r\n\t\t\t'dTheta': { value: 0 },\r\n\t\t\t'mipInt': { value: 0 },\r\n\t\t\t'poleAxis': { value: poleAxis }\r\n\t\t},\r\n\r\n\t\tvertexShader: _getCommonVertexShader(),\r\n\r\n\t\tfragmentShader: /* glsl */`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform sampler2D envMap;\r\n\t\t\tuniform int samples;\r\n\t\t\tuniform float weights[ n ];\r\n\t\t\tuniform bool latitudinal;\r\n\t\t\tuniform float dTheta;\r\n\t\t\tuniform float mipInt;\r\n\t\t\tuniform vec3 poleAxis;\r\n\r\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\r\n\t\t\t#include <cube_uv_reflection_fragment>\r\n\r\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\r\n\r\n\t\t\t\tfloat cosTheta = cos( theta );\r\n\t\t\t\t// Rodrigues' axis-angle rotation\r\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\r\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\r\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\r\n\r\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\r\n\r\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\r\n\r\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\taxis = normalize( axis );\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\r\n\r\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\r\n\r\n\t\t\t\t\tif ( i >= samples ) {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfloat theta = dTheta * float( i );\r\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\r\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\r\n\t\tblending: NoBlending,\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false\r\n\r\n\t} );\r\n\r\n\treturn shaderMaterial;\r\n\r\n}\r\n\r\nfunction _getEquirectMaterial() {\r\n\r\n\treturn new ShaderMaterial( {\r\n\r\n\t\tname: 'EquirectangularToCubeUV',\r\n\r\n\t\tuniforms: {\r\n\t\t\t'envMap': { value: null }\r\n\t\t},\r\n\r\n\t\tvertexShader: _getCommonVertexShader(),\r\n\r\n\t\tfragmentShader: /* glsl */`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform sampler2D envMap;\r\n\r\n\t\t\t#include <common>\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\r\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\r\n\r\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\r\n\t\tblending: NoBlending,\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false\r\n\r\n\t} );\r\n\r\n}\r\n\r\nfunction _getCubemapMaterial() {\r\n\r\n\treturn new ShaderMaterial( {\r\n\r\n\t\tname: 'CubemapToCubeUV',\r\n\r\n\t\tuniforms: {\r\n\t\t\t'envMap': { value: null },\r\n\t\t\t'flipEnvMap': { value: - 1 }\r\n\t\t},\r\n\r\n\t\tvertexShader: _getCommonVertexShader(),\r\n\r\n\t\tfragmentShader: /* glsl */`\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tuniform float flipEnvMap;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform samplerCube envMap;\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n\r\n\t\tblending: NoBlending,\r\n\t\tdepthTest: false,\r\n\t\tdepthWrite: false\r\n\r\n\t} );\r\n\r\n}\r\n\r\nfunction _getCommonVertexShader() {\r\n\r\n\treturn /* glsl */`\r\n\r\n\t\tprecision mediump float;\r\n\t\tprecision mediump int;\r\n\r\n\t\tattribute float faceIndex;\r\n\r\n\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t// RH coordinate system; PMREM face-indexing convention\r\n\t\tvec3 getDirection( vec2 uv, float face ) {\r\n\r\n\t\t\tuv = 2.0 * uv - 1.0;\r\n\r\n\t\t\tvec3 direction = vec3( uv, 1.0 );\r\n\r\n\t\t\tif ( face == 0.0 ) {\r\n\r\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\r\n\r\n\t\t\t} else if ( face == 1.0 ) {\r\n\r\n\t\t\t\tdirection = direction.xzy;\r\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\r\n\r\n\t\t\t} else if ( face == 2.0 ) {\r\n\r\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\r\n\r\n\t\t\t} else if ( face == 3.0 ) {\r\n\r\n\t\t\t\tdirection = direction.zyx;\r\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\r\n\r\n\t\t\t} else if ( face == 4.0 ) {\r\n\r\n\t\t\t\tdirection = direction.xzy;\r\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\r\n\r\n\t\t\t} else if ( face == 5.0 ) {\r\n\r\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn direction;\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\r\n\t\t\tgl_Position = vec4( position, 1.0 );\r\n\r\n\t\t}\r\n\t`;\r\n\r\n}\r\n\r\nexport { PMREMGenerator };\r\n","import { CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping } from '../../constants.js';\r\nimport { PMREMGenerator } from '../../extras/PMREMGenerator.js';\r\n\r\nfunction WebGLCubeUVMaps( renderer ) {\r\n\r\n\tlet cubeUVmaps = new WeakMap();\r\n\r\n\tlet pmremGenerator = null;\r\n\r\n\tfunction get( texture ) {\r\n\r\n\t\tif ( texture && texture.isTexture ) {\r\n\r\n\t\t\tconst mapping = texture.mapping;\r\n\r\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\r\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\r\n\r\n\t\t\t// equirect/cube map to cubeUV conversion\r\n\r\n\t\t\tif ( isEquirectMap || isCubeMap ) {\r\n\r\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\r\n\r\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\r\n\r\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\r\n\r\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\r\n\r\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\r\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\r\n\r\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\r\n\r\n\t\t\t\t\treturn renderTarget.texture;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( renderTarget !== undefined ) {\r\n\r\n\t\t\t\t\t\treturn renderTarget.texture;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconst image = texture.image;\r\n\r\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\r\n\r\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\r\n\r\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\r\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\r\n\r\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\r\n\r\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\t\t\treturn renderTarget.texture;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\r\n\r\n\t\t\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tfunction isCubeTextureComplete( image ) {\r\n\r\n\t\tlet count = 0;\r\n\t\tconst length = 6;\r\n\r\n\t\tfor ( let i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tif ( image[ i ] !== undefined ) count ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn count === length;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tconst texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\r\n\r\n\t\tif ( cubemapUV !== undefined ) {\r\n\r\n\t\t\tcubeUVmaps.delete( texture );\r\n\t\t\tcubemapUV.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tcubeUVmaps = new WeakMap();\r\n\r\n\t\tif ( pmremGenerator !== null ) {\r\n\r\n\t\t\tpmremGenerator.dispose();\r\n\t\t\tpmremGenerator = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tget: get,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\nexport { WebGLCubeUVMaps };\r\n","import { warnOnce } from '../../utils.js';\r\n\r\nfunction WebGLExtensions( gl ) {\r\n\r\n\tconst extensions = {};\r\n\r\n\tfunction getExtension( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tlet extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'WEBGL_depth_texture':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\thas: function ( name ) {\r\n\r\n\t\t\treturn getExtension( name ) !== null;\r\n\r\n\t\t},\r\n\r\n\t\tinit: function () {\r\n\r\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\r\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\r\n\t\t\tgetExtension( 'OES_texture_float_linear' );\r\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\r\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\r\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\r\n\r\n\t\t},\r\n\r\n\t\tget: function ( name ) {\r\n\r\n\t\t\tconst extension = getExtension( name );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\twarnOnce( 'WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn extension;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLExtensions };\r\n","import { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\r\nimport { arrayNeedsUint32 } from '../../utils.js';\r\n\r\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\r\n\r\n\tconst geometries = {};\r\n\tconst wireframeAttributes = new WeakMap();\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tconst geometry = event.target;\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\tattributes.remove( geometry.index );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const name in geometry.attributes ) {\r\n\r\n\t\t\tattributes.remove( geometry.attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tconst attribute = wireframeAttributes.get( geometry );\r\n\r\n\t\tif ( attribute ) {\r\n\r\n\t\t\tattributes.remove( attribute );\r\n\t\t\twireframeAttributes.delete( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\r\n\r\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\r\n\r\n\t\t\tdelete geometry._maxInstanceCount;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction get( object, geometry ) {\r\n\r\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tgeometries[ geometry.id ] = true;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction update( geometry ) {\r\n\r\n\t\tconst geometryAttributes = geometry.attributes;\r\n\r\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\r\n\r\n\t\tfor ( const name in geometryAttributes ) {\r\n\r\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction updateWireframeAttribute( geometry ) {\r\n\r\n\t\tconst indices = [];\r\n\r\n\t\tconst geometryIndex = geometry.index;\r\n\t\tconst geometryPosition = geometry.attributes.position;\r\n\t\tlet version = 0;\r\n\r\n\t\tif ( geometryIndex !== null ) {\r\n\r\n\t\t\tconst array = geometryIndex.array;\r\n\t\t\tversion = geometryIndex.version;\r\n\r\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tconst a = array[ i + 0 ];\r\n\t\t\t\tconst b = array[ i + 1 ];\r\n\t\t\t\tconst c = array[ i + 2 ];\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometryPosition !== undefined ) {\r\n\r\n\t\t\tconst array = geometryPosition.array;\r\n\t\t\tversion = geometryPosition.version;\r\n\r\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tconst a = i + 0;\r\n\t\t\t\tconst b = i + 1;\r\n\t\t\t\tconst c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\r\n\t\tattribute.version = version;\r\n\r\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\r\n\r\n\t\t//\r\n\r\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\r\n\r\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\r\n\r\n\t\t//\r\n\r\n\t\twireframeAttributes.set( geometry, attribute );\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\r\n\r\n\t\tif ( currentAttribute ) {\r\n\r\n\t\t\tconst geometryIndex = geometry.index;\r\n\r\n\t\t\tif ( geometryIndex !== null ) {\r\n\r\n\t\t\t\t// if the attribute is obsolete, create a new one\r\n\r\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\r\n\r\n\t\t\t\t\tupdateWireframeAttribute( geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tupdateWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\treturn wireframeAttributes.get( geometry );\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tget: get,\r\n\t\tupdate: update,\r\n\r\n\t\tgetWireframeAttribute: getWireframeAttribute\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLGeometries };\r\n","function WebGLIndexedBufferRenderer( gl, extensions, info ) {\r\n\r\n\tlet mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tlet type, bytesPerElement;\r\n\r\n\tfunction setIndex( value ) {\r\n\r\n\t\ttype = value.type;\r\n\t\tbytesPerElement = value.bytesPerElement;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\r\n\r\n\t\tinfo.update( count, mode, 1 );\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( start, count, primcount ) {\r\n\r\n\t\tif ( primcount === 0 ) return;\r\n\r\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\r\n\r\n\t\tinfo.update( count, mode, primcount );\r\n\r\n\t}\r\n\r\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\r\n\r\n\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\r\n\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\r\n\r\n\t\tlet elementCount = 0;\r\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\telementCount += counts[ i ];\r\n\r\n\t\t}\r\n\r\n\t\tinfo.update( elementCount, mode, 1 );\r\n\r\n\r\n\t}\r\n\r\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\r\n\r\n\t\tif ( drawCount === 0 ) return;\r\n\r\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\r\n\r\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\r\n\r\n\t\t\tlet elementCount = 0;\r\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfo.update( elementCount, mode, 1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\tthis.renderMultiDraw = renderMultiDraw;\r\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\r\n\r\n}\r\n\r\n\r\nexport { WebGLIndexedBufferRenderer };\r\n","import { error } from '../../utils.js';\r\n\r\nfunction WebGLInfo( gl ) {\r\n\r\n\tconst memory = {\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\t};\r\n\r\n\tconst render = {\r\n\t\tframe: 0,\r\n\t\tcalls: 0,\r\n\t\ttriangles: 0,\r\n\t\tpoints: 0,\r\n\t\tlines: 0\r\n\t};\r\n\r\n\tfunction update( count, mode, instanceCount ) {\r\n\r\n\t\trender.calls ++;\r\n\r\n\t\tswitch ( mode ) {\r\n\r\n\t\t\tcase gl.TRIANGLES:\r\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase gl.LINES:\r\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase gl.LINE_STRIP:\r\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase gl.LINE_LOOP:\r\n\t\t\t\trender.lines += instanceCount * count;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase gl.POINTS:\r\n\t\t\t\trender.points += instanceCount * count;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\terror( 'WebGLInfo: Unknown draw mode:', mode );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reset() {\r\n\r\n\t\trender.calls = 0;\r\n\t\trender.triangles = 0;\r\n\t\trender.points = 0;\r\n\t\trender.lines = 0;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tmemory: memory,\r\n\t\trender: render,\r\n\t\tprograms: null,\r\n\t\tautoReset: true,\r\n\t\treset: reset,\r\n\t\tupdate: update\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLInfo };\r\n","import { Texture } from './Texture.js';\r\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\r\n\r\n/**\r\n * Creates an array of textures directly from raw buffer data.\r\n *\r\n * @augments Texture\r\n */\r\nclass DataArrayTexture extends Texture {\r\n\r\n\t/**\r\n\t * Constructs a new data array texture.\r\n\t *\r\n\t * @param {?TypedArray} [data=null] - The buffer data.\r\n\t * @param {number} [width=1] - The width of the texture.\r\n\t * @param {number} [height=1] - The height of the texture.\r\n\t * @param {number} [depth=1] - The depth of the texture.\r\n\t */\r\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\r\n\r\n\t\tsuper( null );\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isDataArrayTexture = true;\r\n\r\n\t\t/**\r\n\t\t * The image definition of a data texture.\r\n\t\t *\r\n\t\t * @type {{data:TypedArray,width:number,height:number,depth:number}}\r\n\t\t */\r\n\t\tthis.image = { data, width, height, depth };\r\n\r\n\t\t/**\r\n\t\t * How the texture is sampled when a texel covers more than one pixel.\r\n\t\t *\r\n\t\t * Overwritten and set to `NearestFilter` by default.\r\n\t\t *\r\n\t\t * @type {(NearestFilter|NearestMipmapNearestFilter|NearestMipmapLinearFilter|LinearFilter|LinearMipmapNearestFilter|LinearMipmapLinearFilter)}\r\n\t\t * @default NearestFilter\r\n\t\t */\r\n\t\tthis.magFilter = NearestFilter;\r\n\r\n\t\t/**\r\n\t\t * How the texture is sampled when a texel covers less than one pixel.\r\n\t\t *\r\n\t\t * Overwritten and set to `NearestFilter` by default.\r\n\t\t *\r\n\t\t * @type {(NearestFilter|NearestMipmapNearestFilter|NearestMipmapLinearFilter|LinearFilter|LinearMipmapNearestFilter|LinearMipmapLinearFilter)}\r\n\t\t * @default NearestFilter\r\n\t\t */\r\n\t\tthis.minFilter = NearestFilter;\r\n\r\n\t\t/**\r\n\t\t * This defines how the texture is wrapped in the depth and corresponds to\r\n\t\t * *W* in UVW mapping.\r\n\t\t *\r\n\t\t * @type {(RepeatWrapping|ClampToEdgeWrapping|MirroredRepeatWrapping)}\r\n\t\t * @default ClampToEdgeWrapping\r\n\t\t */\r\n\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\r\n\t\t/**\r\n\t\t * Whether to generate mipmaps (if possible) for a texture.\r\n\t\t *\r\n\t\t * Overwritten and set to `false` by default.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t\t/**\r\n\t\t * If set to `true`, the texture is flipped along the vertical axis when\r\n\t\t * uploaded to the GPU.\r\n\t\t *\r\n\t\t * Overwritten and set to `false` by default.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.flipY = false;\r\n\r\n\t\t/**\r\n\t\t * Specifies the alignment requirements for the start of each pixel row in memory.\r\n\t\t *\r\n\t\t * Overwritten and set to `1` by default.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t\t/**\r\n\t\t * A set of all layers which need to be updated in the texture.\r\n\t\t *\r\n\t\t * @type {Set<number>}\r\n\t\t */\r\n\t\tthis.layerUpdates = new Set();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Describes that a specific layer of the texture needs to be updated.\r\n\t * Normally when {@link Texture#needsUpdate} is set to `true`, the\r\n\t * entire data texture array is sent to the GPU. Marking specific\r\n\t * layers will only transmit subsets of all mipmaps associated with a\r\n\t * specific depth in the array which is often much more performant.\r\n\t *\r\n\t * @param {number} layerIndex - The layer index that should be updated.\r\n\t */\r\n\taddLayerUpdate( layerIndex ) {\r\n\r\n\t\tthis.layerUpdates.add( layerIndex );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the layer updates registry.\r\n\t */\r\n\tclearLayerUpdates() {\r\n\r\n\t\tthis.layerUpdates.clear();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { DataArrayTexture };\r\n","import { FloatType } from '../../constants.js';\r\nimport { DataArrayTexture } from '../../textures/DataArrayTexture.js';\r\nimport { Vector4 } from '../../math/Vector4.js';\r\nimport { Vector2 } from '../../math/Vector2.js';\r\n\r\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\r\n\r\n\tconst morphTextures = new WeakMap();\r\n\tconst morph = new Vector4();\r\n\r\n\tfunction update( object, geometry, program ) {\r\n\r\n\t\tconst objectInfluences = object.morphTargetInfluences;\r\n\r\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\r\n\r\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n\r\n\t\tlet entry = morphTextures.get( geometry );\r\n\r\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\r\n\r\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\r\n\r\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\r\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\r\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\r\n\r\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\r\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\r\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\r\n\r\n\t\t\tlet vertexDataCount = 0;\r\n\r\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\r\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\r\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\r\n\r\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\r\n\t\t\tlet height = 1;\r\n\r\n\t\t\tif ( width > capabilities.maxTextureSize ) {\r\n\r\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\r\n\t\t\t\twidth = capabilities.maxTextureSize;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\r\n\r\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\r\n\t\t\ttexture.type = FloatType;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t// fill buffer\r\n\r\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\r\n\r\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\r\n\r\n\t\t\t\tconst morphTarget = morphTargets[ i ];\r\n\t\t\t\tconst morphNormal = morphNormals[ i ];\r\n\t\t\t\tconst morphColor = morphColors[ i ];\r\n\r\n\t\t\t\tconst offset = width * height * 4 * i;\r\n\r\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\r\n\r\n\t\t\t\t\tconst stride = j * vertexDataStride;\r\n\r\n\t\t\t\t\tif ( hasMorphPosition === true ) {\r\n\r\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\r\n\r\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasMorphNormals === true ) {\r\n\r\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\r\n\r\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasMorphColors === true ) {\r\n\r\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\r\n\r\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\r\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tentry = {\r\n\t\t\t\tcount: morphTargetsCount,\r\n\t\t\t\ttexture: texture,\r\n\t\t\t\tsize: new Vector2( width, height )\r\n\t\t\t};\r\n\r\n\t\t\tmorphTextures.set( geometry, entry );\r\n\r\n\t\t\tfunction disposeTexture() {\r\n\r\n\t\t\t\ttexture.dispose();\r\n\r\n\t\t\t\tmorphTextures.delete( geometry );\r\n\r\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\r\n\r\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlet morphInfluencesSum = 0;\r\n\r\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\r\n\r\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\r\n\r\n\r\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\r\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\r\n\r\n\t\t}\r\n\r\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\r\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tupdate: update\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLMorphtargets };\r\n","function WebGLObjects( gl, geometries, attributes, info ) {\r\n\r\n\tlet updateMap = new WeakMap();\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\tconst frame = info.render.frame;\r\n\r\n\t\tconst geometry = object.geometry;\r\n\t\tconst buffergeometry = geometries.get( object, geometry );\r\n\r\n\t\t// Update once per frame\r\n\r\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\r\n\r\n\t\t\tgeometries.update( buffergeometry );\r\n\r\n\t\t\tupdateMap.set( buffergeometry, frame );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.isInstancedMesh ) {\r\n\r\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\r\n\r\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( updateMap.get( object ) !== frame ) {\r\n\r\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\r\n\r\n\t\t\t\tif ( object.instanceColor !== null ) {\r\n\r\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tupdateMap.set( object, frame );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.isSkinnedMesh ) {\r\n\r\n\t\t\tconst skeleton = object.skeleton;\r\n\r\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\r\n\r\n\t\t\t\tskeleton.update();\r\n\r\n\t\t\t\tupdateMap.set( skeleton, frame );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tupdateMap = new WeakMap();\r\n\r\n\t}\r\n\r\n\tfunction onInstancedMeshDispose( event ) {\r\n\r\n\t\tconst instancedMesh = event.target;\r\n\r\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\r\n\r\n\t\tattributes.remove( instancedMesh.instanceMatrix );\r\n\r\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tupdate: update,\r\n\t\tdispose: dispose\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLObjects };\r\n","import { Texture } from './Texture.js';\r\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\r\n\r\n/**\r\n * Creates a three-dimensional texture from raw data, with parameters to\r\n * divide it into width, height, and depth.\r\n *\r\n * @augments Texture\r\n */\r\nclass Data3DTexture extends Texture {\r\n\r\n\t/**\r\n\t * Constructs a new data array texture.\r\n\t *\r\n\t * @param {?TypedArray} [data=null] - The buffer data.\r\n\t * @param {number} [width=1] - The width of the texture.\r\n\t * @param {number} [height=1] - The height of the texture.\r\n\t * @param {number} [depth=1] - The depth of the texture.\r\n\t */\r\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\r\n\r\n\t\t// We're going to add .setXXX() methods for setting properties later.\r\n\t\t// Users can still set in Data3DTexture directly.\r\n\t\t//\r\n\t\t//\tconst texture = new THREE.Data3DTexture( data, width, height, depth );\r\n\t\t// \ttexture.anisotropy = 16;\r\n\t\t//\r\n\t\t// See #14839\r\n\r\n\t\tsuper( null );\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isData3DTexture = true;\r\n\r\n\t\t/**\r\n\t\t * The image definition of a data texture.\r\n\t\t *\r\n\t\t * @type {{data:TypedArray,width:number,height:number,depth:number}}\r\n\t\t */\r\n\t\tthis.image = { data, width, height, depth };\r\n\r\n\t\t/**\r\n\t\t * How the texture is sampled when a texel covers more than one pixel.\r\n\t\t *\r\n\t\t * Overwritten and set to `NearestFilter` by default.\r\n\t\t *\r\n\t\t * @type {(NearestFilter|NearestMipmapNearestFilter|NearestMipmapLinearFilter|LinearFilter|LinearMipmapNearestFilter|LinearMipmapLinearFilter)}\r\n\t\t * @default NearestFilter\r\n\t\t */\r\n\t\tthis.magFilter = NearestFilter;\r\n\r\n\t\t/**\r\n\t\t * How the texture is sampled when a texel covers less than one pixel.\r\n\t\t *\r\n\t\t * Overwritten and set to `NearestFilter` by default.\r\n\t\t *\r\n\t\t * @type {(NearestFilter|NearestMipmapNearestFilter|NearestMipmapLinearFilter|LinearFilter|LinearMipmapNearestFilter|LinearMipmapLinearFilter)}\r\n\t\t * @default NearestFilter\r\n\t\t */\r\n\t\tthis.minFilter = NearestFilter;\r\n\r\n\t\t/**\r\n\t\t * This defines how the texture is wrapped in the depth and corresponds to\r\n\t\t * *W* in UVW mapping.\r\n\t\t *\r\n\t\t * @type {(RepeatWrapping|ClampToEdgeWrapping|MirroredRepeatWrapping)}\r\n\t\t * @default ClampToEdgeWrapping\r\n\t\t */\r\n\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\r\n\t\t/**\r\n\t\t * Whether to generate mipmaps (if possible) for a texture.\r\n\t\t *\r\n\t\t * Overwritten and set to `false` by default.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t\t/**\r\n\t\t * If set to `true`, the texture is flipped along the vertical axis when\r\n\t\t * uploaded to the GPU.\r\n\t\t *\r\n\t\t * Overwritten and set to `false` by default.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.flipY = false;\r\n\r\n\t\t/**\r\n\t\t * Specifies the alignment requirements for the start of each pixel row in memory.\r\n\t\t *\r\n\t\t * Overwritten and set to `1` by default.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Data3DTexture };\r\n","import { Source } from './Source.js';\r\nimport { Texture } from './Texture.js';\r\nimport { NearestFilter, UnsignedIntType, DepthFormat, DepthStencilFormat } from '../constants.js';\r\n\r\n/**\r\n * This class can be used to automatically save the depth information of a\r\n * rendering into a texture.\r\n *\r\n * @augments Texture\r\n */\r\nclass DepthTexture extends Texture {\r\n\r\n\t/**\r\n\t * Constructs a new depth texture.\r\n\t *\r\n\t * @param {number} width - The width of the texture.\r\n\t * @param {number} height - The height of the texture.\r\n\t * @param {number} [type=UnsignedIntType] - The texture type.\r\n\t * @param {number} [mapping=Texture.DEFAULT_MAPPING] - The texture mapping.\r\n\t * @param {number} [wrapS=ClampToEdgeWrapping] - The wrapS value.\r\n\t * @param {number} [wrapT=ClampToEdgeWrapping] - The wrapT value.\r\n\t * @param {number} [magFilter=LinearFilter] - The mag filter value.\r\n\t * @param {number} [minFilter=LinearFilter] - The min filter value.\r\n\t * @param {number} [anisotropy=Texture.DEFAULT_ANISOTROPY] - The anisotropy value.\r\n\t * @param {number} [format=DepthFormat] - The texture format.\r\n\t * @param {number} [depth=1] - The depth of the texture.\r\n\t */\r\n\tconstructor( width, height, type = UnsignedIntType, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, format = DepthFormat, depth = 1 ) {\r\n\r\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\r\n\r\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\r\n\r\n\t\t}\r\n\r\n\t\tconst image = { width: width, height: height, depth: depth };\r\n\r\n\t\tsuper( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isDepthTexture = true;\r\n\r\n\t\t/**\r\n\t\t * If set to `true`, the texture is flipped along the vertical axis when\r\n\t\t * uploaded to the GPU.\r\n\t\t *\r\n\t\t * Overwritten and set to `false` by default.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.flipY = false;\r\n\r\n\t\t/**\r\n\t\t * Whether to generate mipmaps (if possible) for a texture.\r\n\t\t *\r\n\t\t * Overwritten and set to `false` by default.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t\t/**\r\n\t\t * Code corresponding to the depth compare function.\r\n\t\t *\r\n\t\t * @type {?(NeverCompare|LessCompare|EqualCompare|LessEqualCompare|GreaterCompare|NotEqualCompare|GreaterEqualCompare|AlwaysCompare)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.compareFunction = null;\r\n\r\n\t}\r\n\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.source = new Source( Object.assign( {}, source.image ) ); // see #30540\r\n\t\tthis.compareFunction = source.compareFunction;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { DepthTexture };\r\n","/**\r\n * Uniforms of a program.\r\n * Those form a tree structure with a special top-level container for the root,\r\n * which you get by calling 'new WebGLUniforms( gl, program )'.\r\n *\r\n *\r\n * Properties of inner nodes including the top-level container:\r\n *\r\n * .seq - array of nested uniforms\r\n * .map - nested uniforms by name\r\n *\r\n *\r\n * Methods of all nodes except the top-level container:\r\n *\r\n * .setValue( gl, value, [textures] )\r\n *\r\n * \t\tuploads a uniform value(s)\r\n *  \tthe 'textures' parameter is needed for sampler uniforms\r\n *\r\n *\r\n * Static methods of the top-level container (textures factorizations):\r\n *\r\n * .upload( gl, seq, values, textures )\r\n *\r\n * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n *\r\n * .seqWithValue( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with corresponding entry in values\r\n *\r\n *\r\n * Methods of the top-level container (textures factorizations):\r\n *\r\n * .setValue( gl, name, value, textures )\r\n *\r\n * \t\tsets uniform with  name 'name' to 'value'\r\n *\r\n * .setOptional( gl, obj, prop )\r\n *\r\n * \t\tlike .set for an optional property of the object\r\n *\r\n */\r\n\r\nimport { CubeTexture } from '../../textures/CubeTexture.js';\r\nimport { Texture } from '../../textures/Texture.js';\r\nimport { DataArrayTexture } from '../../textures/DataArrayTexture.js';\r\nimport { Data3DTexture } from '../../textures/Data3DTexture.js';\r\nimport { DepthTexture } from '../../textures/DepthTexture.js';\r\nimport { LessEqualCompare } from '../../constants.js';\r\n\r\nconst emptyTexture = /*@__PURE__*/ new Texture();\r\n\r\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\r\n\r\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\r\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\r\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\r\n\r\n// --- Utilities ---\r\n\r\n// Array Caches (provide typed arrays for temporary by size)\r\n\r\nconst arrayCacheF32 = [];\r\nconst arrayCacheI32 = [];\r\n\r\n// Float32Array caches used for uploading Matrix uniforms\r\n\r\nconst mat4array = new Float32Array( 16 );\r\nconst mat3array = new Float32Array( 9 );\r\nconst mat2array = new Float32Array( 4 );\r\n\r\n// Flattening for arrays of vectors and matrices\r\n\r\nfunction flatten( array, nBlocks, blockSize ) {\r\n\r\n\tconst firstElem = array[ 0 ];\r\n\r\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\r\n\t// unoptimized: ! isNaN( firstElem )\r\n\t// see http://jacksondunstan.com/articles/983\r\n\r\n\tconst n = nBlocks * blockSize;\r\n\tlet r = arrayCacheF32[ n ];\r\n\r\n\tif ( r === undefined ) {\r\n\r\n\t\tr = new Float32Array( n );\r\n\t\tarrayCacheF32[ n ] = r;\r\n\r\n\t}\r\n\r\n\tif ( nBlocks !== 0 ) {\r\n\r\n\t\tfirstElem.toArray( r, 0 );\r\n\r\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\r\n\r\n\t\t\toffset += blockSize;\r\n\t\t\tarray[ i ].toArray( r, offset );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn r;\r\n\r\n}\r\n\r\nfunction arraysEqual( a, b ) {\r\n\r\n\tif ( a.length !== b.length ) return false;\r\n\r\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\r\n\r\n\t\tif ( a[ i ] !== b[ i ] ) return false;\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nfunction copyArray( a, b ) {\r\n\r\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\r\n\r\n\t\ta[ i ] = b[ i ];\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Texture unit allocation\r\n\r\nfunction allocTexUnits( textures, n ) {\r\n\r\n\tlet r = arrayCacheI32[ n ];\r\n\r\n\tif ( r === undefined ) {\r\n\r\n\t\tr = new Int32Array( n );\r\n\t\tarrayCacheI32[ n ] = r;\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\tr[ i ] = textures.allocateTextureUnit();\r\n\r\n\t}\r\n\r\n\treturn r;\r\n\r\n}\r\n\r\n// --- Setters ---\r\n\r\n// Note: Defining these methods externally, because they come in a bunch\r\n// and this way their names minify.\r\n\r\n// Single scalar\r\n\r\nfunction setValueV1f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( cache[ 0 ] === v ) return;\r\n\r\n\tgl.uniform1f( this.addr, v );\r\n\r\n\tcache[ 0 ] = v;\r\n\r\n}\r\n\r\n// Single float vector (from flat array or THREE.VectorN)\r\n\r\nfunction setValueV2f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n\r\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform2fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV3f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n\r\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\r\n\t\t}\r\n\r\n\t} else if ( v.r !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\r\n\r\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\r\n\r\n\t\t\tcache[ 0 ] = v.r;\r\n\t\t\tcache[ 1 ] = v.g;\r\n\t\t\tcache[ 2 ] = v.b;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform3fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV4f( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n\r\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\t\t\tcache[ 3 ] = v.w;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform4fv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Single matrix (from flat array or THREE.MatrixN)\r\n\r\nfunction setValueM2( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst elements = v.elements;\r\n\r\n\tif ( elements === undefined ) {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\tmat2array.set( elements );\r\n\r\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\r\n\r\n\t\tcopyArray( cache, elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueM3( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst elements = v.elements;\r\n\r\n\tif ( elements === undefined ) {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\tmat3array.set( elements );\r\n\r\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\r\n\r\n\t\tcopyArray( cache, elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueM4( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst elements = v.elements;\r\n\r\n\tif ( elements === undefined ) {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, elements ) ) return;\r\n\r\n\t\tmat4array.set( elements );\r\n\r\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\r\n\r\n\t\tcopyArray( cache, elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Single integer / boolean\r\n\r\nfunction setValueV1i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( cache[ 0 ] === v ) return;\r\n\r\n\tgl.uniform1i( this.addr, v );\r\n\r\n\tcache[ 0 ] = v;\r\n\r\n}\r\n\r\n// Single integer / boolean vector (from flat array or THREE.VectorN)\r\n\r\nfunction setValueV2i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n\r\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform2iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV3i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n\r\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform3iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV4i( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n\r\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\t\t\tcache[ 3 ] = v.w;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform4iv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Single unsigned integer\r\n\r\nfunction setValueV1ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( cache[ 0 ] === v ) return;\r\n\r\n\tgl.uniform1ui( this.addr, v );\r\n\r\n\tcache[ 0 ] = v;\r\n\r\n}\r\n\r\n// Single unsigned integer vector (from flat array or THREE.VectorN)\r\n\r\nfunction setValueV2ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n\r\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform2uiv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV3ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n\r\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform3uiv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueV4ui( gl, v ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tif ( v.x !== undefined ) {\r\n\r\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n\r\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t\tcache[ 0 ] = v.x;\r\n\t\t\tcache[ 1 ] = v.y;\r\n\t\t\tcache[ 2 ] = v.z;\r\n\t\t\tcache[ 3 ] = v.w;\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tif ( arraysEqual( cache, v ) ) return;\r\n\r\n\t\tgl.uniform4uiv( this.addr, v );\r\n\r\n\t\tcopyArray( cache, v );\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Single texture (2D / Cube)\r\n\r\nfunction setValueT1( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\tlet emptyTexture2D;\r\n\r\n\tif ( this.type === gl.SAMPLER_2D_SHADOW ) {\r\n\r\n\t\temptyShadowTexture.compareFunction = LessEqualCompare; // #28670\r\n\t\temptyTexture2D = emptyShadowTexture;\r\n\r\n\t} else {\r\n\r\n\t\temptyTexture2D = emptyTexture;\r\n\r\n\t}\r\n\r\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\r\n\r\n}\r\n\r\nfunction setValueT3D1( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\ttextures.setTexture3D( v || empty3dTexture, unit );\r\n\r\n}\r\n\r\nfunction setValueT6( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\r\n\r\n}\r\n\r\nfunction setValueT2DArray1( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\tconst unit = textures.allocateTextureUnit();\r\n\r\n\tif ( cache[ 0 ] !== unit ) {\r\n\r\n\t\tgl.uniform1i( this.addr, unit );\r\n\t\tcache[ 0 ] = unit;\r\n\r\n\t}\r\n\r\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\r\n\r\n}\r\n\r\n// Helper to pick the right setter for the singular case\r\n\r\nfunction getSingularSetter( type ) {\r\n\r\n\tswitch ( type ) {\r\n\r\n\t\tcase 0x1406: return setValueV1f; // FLOAT\r\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\r\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\r\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\r\n\r\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\r\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\r\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\r\n\r\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\r\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\r\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\r\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\r\n\r\n\t\tcase 0x1405: return setValueV1ui; // UINT\r\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\r\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\r\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\r\n\r\n\t\tcase 0x8b5e: // SAMPLER_2D\r\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\t\tcase 0x8dca: // INT_SAMPLER_2D\r\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\r\n\t\t\treturn setValueT1;\r\n\r\n\t\tcase 0x8b5f: // SAMPLER_3D\r\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\r\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\r\n\t\t\treturn setValueT3D1;\r\n\r\n\t\tcase 0x8b60: // SAMPLER_CUBE\r\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\r\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\r\n\t\t\treturn setValueT6;\r\n\r\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\r\n\t\t\treturn setValueT2DArray1;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Array of scalars\r\n\r\nfunction setValueV1fArray( gl, v ) {\r\n\r\n\tgl.uniform1fv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of vectors (from flat array or array of THREE.VectorN)\r\n\r\nfunction setValueV2fArray( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 2 );\r\n\r\n\tgl.uniform2fv( this.addr, data );\r\n\r\n}\r\n\r\nfunction setValueV3fArray( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 3 );\r\n\r\n\tgl.uniform3fv( this.addr, data );\r\n\r\n}\r\n\r\nfunction setValueV4fArray( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 4 );\r\n\r\n\tgl.uniform4fv( this.addr, data );\r\n\r\n}\r\n\r\n// Array of matrices (from flat array or array of THREE.MatrixN)\r\n\r\nfunction setValueM2Array( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 4 );\r\n\r\n\tgl.uniformMatrix2fv( this.addr, false, data );\r\n\r\n}\r\n\r\nfunction setValueM3Array( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 9 );\r\n\r\n\tgl.uniformMatrix3fv( this.addr, false, data );\r\n\r\n}\r\n\r\nfunction setValueM4Array( gl, v ) {\r\n\r\n\tconst data = flatten( v, this.size, 16 );\r\n\r\n\tgl.uniformMatrix4fv( this.addr, false, data );\r\n\r\n}\r\n\r\n// Array of integer / boolean\r\n\r\nfunction setValueV1iArray( gl, v ) {\r\n\r\n\tgl.uniform1iv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of integer / boolean vectors (from flat array)\r\n\r\nfunction setValueV2iArray( gl, v ) {\r\n\r\n\tgl.uniform2iv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV3iArray( gl, v ) {\r\n\r\n\tgl.uniform3iv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV4iArray( gl, v ) {\r\n\r\n\tgl.uniform4iv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of unsigned integer\r\n\r\nfunction setValueV1uiArray( gl, v ) {\r\n\r\n\tgl.uniform1uiv( this.addr, v );\r\n\r\n}\r\n\r\n// Array of unsigned integer vectors (from flat array)\r\n\r\nfunction setValueV2uiArray( gl, v ) {\r\n\r\n\tgl.uniform2uiv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV3uiArray( gl, v ) {\r\n\r\n\tgl.uniform3uiv( this.addr, v );\r\n\r\n}\r\n\r\nfunction setValueV4uiArray( gl, v ) {\r\n\r\n\tgl.uniform4uiv( this.addr, v );\r\n\r\n}\r\n\r\n\r\n// Array of textures (2D / 3D / Cube / 2DArray)\r\n\r\nfunction setValueT1Array( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tif ( ! arraysEqual( cache, units ) ) {\r\n\r\n\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\tcopyArray( cache, units );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueT3DArray( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tif ( ! arraysEqual( cache, units ) ) {\r\n\r\n\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\tcopyArray( cache, units );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueT6Array( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tif ( ! arraysEqual( cache, units ) ) {\r\n\r\n\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\tcopyArray( cache, units );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction setValueT2DArrayArray( gl, v, textures ) {\r\n\r\n\tconst cache = this.cache;\r\n\r\n\tconst n = v.length;\r\n\r\n\tconst units = allocTexUnits( textures, n );\r\n\r\n\tif ( ! arraysEqual( cache, units ) ) {\r\n\r\n\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\tcopyArray( cache, units );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Helper to pick the right setter for a pure (bottom-level) array\r\n\r\nfunction getPureArraySetter( type ) {\r\n\r\n\tswitch ( type ) {\r\n\r\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\r\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\r\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\r\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\r\n\r\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\r\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\r\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\r\n\r\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\r\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\r\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\r\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\r\n\r\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\r\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\r\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\r\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\r\n\r\n\t\tcase 0x8b5e: // SAMPLER_2D\r\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\t\tcase 0x8dca: // INT_SAMPLER_2D\r\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\r\n\t\t\treturn setValueT1Array;\r\n\r\n\t\tcase 0x8b5f: // SAMPLER_3D\r\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\r\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\r\n\t\t\treturn setValueT3DArray;\r\n\r\n\t\tcase 0x8b60: // SAMPLER_CUBE\r\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\r\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\r\n\t\t\treturn setValueT6Array;\r\n\r\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\r\n\t\t\treturn setValueT2DArrayArray;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// --- Uniform Classes ---\r\n\r\nclass SingleUniform {\r\n\r\n\tconstructor( id, activeInfo, addr ) {\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.type = activeInfo.type;\r\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\r\n\r\n\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PureArrayUniform {\r\n\r\n\tconstructor( id, activeInfo, addr ) {\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.addr = addr;\r\n\t\tthis.cache = [];\r\n\t\tthis.type = activeInfo.type;\r\n\t\tthis.size = activeInfo.size;\r\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\r\n\r\n\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass StructuredUniform {\r\n\r\n\tconstructor( id ) {\r\n\r\n\t\tthis.id = id;\r\n\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\r\n\t}\r\n\r\n\tsetValue( gl, value, textures ) {\r\n\r\n\t\tconst seq = this.seq;\r\n\r\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst u = seq[ i ];\r\n\t\t\tu.setValue( gl, value[ u.id ], textures );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// --- Top-level ---\r\n\r\n// Parser - builds up the property tree from the path strings\r\n\r\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\r\n\r\n// extracts\r\n// \t- the identifier (member name or array index)\r\n//  - followed by an optional right bracket (found when array index)\r\n//  - followed by an optional left bracket or dot (type of subscript)\r\n//\r\n// Note: These portions can be read in a non-overlapping fashion and\r\n// allow straightforward parsing of the hierarchy that WebGL encodes\r\n// in the uniform names.\r\n\r\nfunction addUniform( container, uniformObject ) {\r\n\r\n\tcontainer.seq.push( uniformObject );\r\n\tcontainer.map[ uniformObject.id ] = uniformObject;\r\n\r\n}\r\n\r\nfunction parseUniform( activeInfo, addr, container ) {\r\n\r\n\tconst path = activeInfo.name,\r\n\t\tpathLength = path.length;\r\n\r\n\t// reset RegExp object, because of the early exit of a previous run\r\n\tRePathPart.lastIndex = 0;\r\n\r\n\twhile ( true ) {\r\n\r\n\t\tconst match = RePathPart.exec( path ),\r\n\t\t\tmatchEnd = RePathPart.lastIndex;\r\n\r\n\t\tlet id = match[ 1 ];\r\n\t\tconst idIsIndex = match[ 2 ] === ']',\r\n\t\t\tsubscript = match[ 3 ];\r\n\r\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\r\n\r\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\r\n\r\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\r\n\t\t\taddUniform( container, subscript === undefined ?\r\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\r\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// step into inner node / create it in case it doesn't exist\r\n\r\n\t\t\tconst map = container.map;\r\n\t\t\tlet next = map[ id ];\r\n\r\n\t\t\tif ( next === undefined ) {\r\n\r\n\t\t\t\tnext = new StructuredUniform( id );\r\n\t\t\t\taddUniform( container, next );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcontainer = next;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Root Container\r\n\r\nclass WebGLUniforms {\r\n\r\n\tconstructor( gl, program ) {\r\n\r\n\t\tthis.seq = [];\r\n\t\tthis.map = {};\r\n\r\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( let i = 0; i < n; ++ i ) {\r\n\r\n\t\t\tconst info = gl.getActiveUniform( program, i ),\r\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\r\n\r\n\t\t\tparseUniform( info, addr, this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetValue( gl, name, value, textures ) {\r\n\r\n\t\tconst u = this.map[ name ];\r\n\r\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\r\n\r\n\t}\r\n\r\n\tsetOptional( gl, object, name ) {\r\n\r\n\t\tconst v = object[ name ];\r\n\r\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\r\n\r\n\t}\r\n\r\n\tstatic upload( gl, seq, values, textures ) {\r\n\r\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst u = seq[ i ],\r\n\t\t\t\tv = values[ u.id ];\r\n\r\n\t\t\tif ( v.needsUpdate !== false ) {\r\n\r\n\t\t\t\t// note: always updating when .needsUpdate is undefined\r\n\t\t\t\tu.setValue( gl, v.value, textures );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic seqWithValue( seq, values ) {\r\n\r\n\t\tconst r = [];\r\n\r\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst u = seq[ i ];\r\n\t\t\tif ( u.id in values ) r.push( u );\r\n\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { WebGLUniforms };\r\n","function WebGLShader( gl, type, string ) {\r\n\r\n\tconst shader = gl.createShader( type );\r\n\r\n\tgl.shaderSource( shader, string );\r\n\tgl.compileShader( shader );\r\n\r\n\treturn shader;\r\n\r\n}\r\n\r\nexport { WebGLShader };\r\n","import { WebGLUniforms } from './WebGLUniforms.js';\r\nimport { WebGLShader } from './WebGLShader.js';\r\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\r\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, AgXToneMapping, ACESFilmicToneMapping, NeutralToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, GLSL3, LinearTransfer, SRGBTransfer } from '../../constants.js';\r\nimport { ColorManagement } from '../../math/ColorManagement.js';\r\nimport { Vector3 } from '../../math/Vector3.js';\r\nimport { Matrix3 } from '../../math/Matrix3.js';\r\nimport { warn, error } from '../../utils.js';\r\n\r\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\r\nconst COMPLETION_STATUS_KHR = 0x91B1;\r\n\r\nlet programIdCount = 0;\r\n\r\nfunction handleSource( string, errorLine ) {\r\n\r\n\tconst lines = string.split( '\\n' );\r\n\tconst lines2 = [];\r\n\r\n\tconst from = Math.max( errorLine - 6, 0 );\r\n\tconst to = Math.min( errorLine + 6, lines.length );\r\n\r\n\tfor ( let i = from; i < to; i ++ ) {\r\n\r\n\t\tconst line = i + 1;\r\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\r\n\r\n\t}\r\n\r\n\treturn lines2.join( '\\n' );\r\n\r\n}\r\n\r\nconst _m0 = /*@__PURE__*/ new Matrix3();\r\n\r\nfunction getEncodingComponents( colorSpace ) {\r\n\r\n\tColorManagement._getMatrix( _m0, ColorManagement.workingColorSpace, colorSpace );\r\n\r\n\tconst encodingMatrix = `mat3( ${ _m0.elements.map( ( v ) => v.toFixed( 4 ) ) } )`;\r\n\r\n\tswitch ( ColorManagement.getTransfer( colorSpace ) ) {\r\n\r\n\t\tcase LinearTransfer:\r\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\r\n\r\n\t\tcase SRGBTransfer:\r\n\t\t\treturn [ encodingMatrix, 'sRGBTransferOETF' ];\r\n\r\n\t\tdefault:\r\n\t\t\twarn( 'WebGLProgram: Unsupported color space: ', colorSpace );\r\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction getShaderErrors( gl, shader, type ) {\r\n\r\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\r\n\r\n\tconst shaderInfoLog = gl.getShaderInfoLog( shader ) || '';\r\n\tconst errors = shaderInfoLog.trim();\r\n\r\n\tif ( status && errors === '' ) return '';\r\n\r\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\r\n\tif ( errorMatches ) {\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\r\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\r\n\r\n\t} else {\r\n\r\n\t\treturn errors;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\r\n\r\n\tconst components = getEncodingComponents( colorSpace );\r\n\r\n\treturn [\r\n\r\n\t\t`vec4 ${functionName}( vec4 value ) {`,\r\n\r\n\t\t`\treturn ${components[ 1 ]}( vec4( value.rgb * ${components[ 0 ]}, value.a ) );`,\r\n\r\n\t\t'}',\r\n\r\n\t].join( '\\n' );\r\n\r\n}\r\n\r\nfunction getToneMappingFunction( functionName, toneMapping ) {\r\n\r\n\tlet toneMappingName;\r\n\r\n\tswitch ( toneMapping ) {\r\n\r\n\t\tcase LinearToneMapping:\r\n\t\t\ttoneMappingName = 'Linear';\r\n\t\t\tbreak;\r\n\r\n\t\tcase ReinhardToneMapping:\r\n\t\t\ttoneMappingName = 'Reinhard';\r\n\t\t\tbreak;\r\n\r\n\t\tcase CineonToneMapping:\r\n\t\t\ttoneMappingName = 'Cineon';\r\n\t\t\tbreak;\r\n\r\n\t\tcase ACESFilmicToneMapping:\r\n\t\t\ttoneMappingName = 'ACESFilmic';\r\n\t\t\tbreak;\r\n\r\n\t\tcase AgXToneMapping:\r\n\t\t\ttoneMappingName = 'AgX';\r\n\t\t\tbreak;\r\n\r\n\t\tcase NeutralToneMapping:\r\n\t\t\ttoneMappingName = 'Neutral';\r\n\t\t\tbreak;\r\n\r\n\t\tcase CustomToneMapping:\r\n\t\t\ttoneMappingName = 'Custom';\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\twarn( 'WebGLProgram: Unsupported toneMapping:', toneMapping );\r\n\t\t\ttoneMappingName = 'Linear';\r\n\r\n\t}\r\n\r\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\r\n\r\n}\r\n\r\nconst _v0 = /*@__PURE__*/ new Vector3();\r\n\r\nfunction getLuminanceFunction() {\r\n\r\n\tColorManagement.getLuminanceCoefficients( _v0 );\r\n\r\n\tconst r = _v0.x.toFixed( 4 );\r\n\tconst g = _v0.y.toFixed( 4 );\r\n\tconst b = _v0.z.toFixed( 4 );\r\n\r\n\treturn [\r\n\r\n\t\t'float luminance( const in vec3 rgb ) {',\r\n\r\n\t\t`\tconst vec3 weights = vec3( ${ r }, ${ g }, ${ b } );`,\r\n\r\n\t\t'\treturn dot( weights, rgb );',\r\n\r\n\t\t'}'\r\n\r\n\t].join( '\\n' );\r\n\r\n}\r\n\r\nfunction generateVertexExtensions( parameters ) {\r\n\r\n\tconst chunks = [\r\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\r\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\r\n\t];\r\n\r\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\r\n}\r\n\r\nfunction generateDefines( defines ) {\r\n\r\n\tconst chunks = [];\r\n\r\n\tfor ( const name in defines ) {\r\n\r\n\t\tconst value = defines[ name ];\r\n\r\n\t\tif ( value === false ) continue;\r\n\r\n\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t}\r\n\r\n\treturn chunks.join( '\\n' );\r\n\r\n}\r\n\r\nfunction fetchAttributeLocations( gl, program ) {\r\n\r\n\tconst attributes = {};\r\n\r\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\tfor ( let i = 0; i < n; i ++ ) {\r\n\r\n\t\tconst info = gl.getActiveAttrib( program, i );\r\n\t\tconst name = info.name;\r\n\r\n\t\tlet locationSize = 1;\r\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\r\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\r\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\r\n\r\n\t\t// log( 'WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\r\n\r\n\t\tattributes[ name ] = {\r\n\t\t\ttype: info.type,\r\n\t\t\tlocation: gl.getAttribLocation( program, name ),\r\n\t\t\tlocationSize: locationSize\r\n\t\t};\r\n\r\n\t}\r\n\r\n\treturn attributes;\r\n\r\n}\r\n\r\nfunction filterEmptyLine( string ) {\r\n\r\n\treturn string !== '';\r\n\r\n}\r\n\r\nfunction replaceLightNums( string, parameters ) {\r\n\r\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\r\n\r\n\treturn string\r\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\r\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\r\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\r\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\r\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\r\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\r\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\r\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\r\n\r\n}\r\n\r\nfunction replaceClippingPlaneNums( string, parameters ) {\r\n\r\n\treturn string\r\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\r\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\r\n\r\n}\r\n\r\n// Resolve Includes\r\n\r\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n\r\nfunction resolveIncludes( string ) {\r\n\r\n\treturn string.replace( includePattern, includeReplacer );\r\n\r\n}\r\n\r\nconst shaderChunkMap = new Map();\r\n\r\nfunction includeReplacer( match, include ) {\r\n\r\n\tlet string = ShaderChunk[ include ];\r\n\r\n\tif ( string === undefined ) {\r\n\r\n\t\tconst newInclude = shaderChunkMap.get( include );\r\n\r\n\t\tif ( newInclude !== undefined ) {\r\n\r\n\t\t\tstring = ShaderChunk[ newInclude ];\r\n\t\t\twarn( 'WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn resolveIncludes( string );\r\n\r\n}\r\n\r\n// Unroll Loops\r\n\r\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\r\n\r\nfunction unrollLoops( string ) {\r\n\r\n\treturn string.replace( unrollLoopPattern, loopReplacer );\r\n\r\n}\r\n\r\nfunction loopReplacer( match, start, end, snippet ) {\r\n\r\n\tlet string = '';\r\n\r\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\r\n\t\tstring += snippet\r\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\r\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\r\n\r\n\t}\r\n\r\n\treturn string;\r\n\r\n}\r\n\r\n//\r\n\r\nfunction generatePrecision( parameters ) {\r\n\r\n\tlet precisionstring = `precision ${parameters.precision} float;\r\n\tprecision ${parameters.precision} int;\r\n\tprecision ${parameters.precision} sampler2D;\r\n\tprecision ${parameters.precision} samplerCube;\r\n\tprecision ${parameters.precision} sampler3D;\r\n\tprecision ${parameters.precision} sampler2DArray;\r\n\tprecision ${parameters.precision} sampler2DShadow;\r\n\tprecision ${parameters.precision} samplerCubeShadow;\r\n\tprecision ${parameters.precision} sampler2DArrayShadow;\r\n\tprecision ${parameters.precision} isampler2D;\r\n\tprecision ${parameters.precision} isampler3D;\r\n\tprecision ${parameters.precision} isamplerCube;\r\n\tprecision ${parameters.precision} isampler2DArray;\r\n\tprecision ${parameters.precision} usampler2D;\r\n\tprecision ${parameters.precision} usampler3D;\r\n\tprecision ${parameters.precision} usamplerCube;\r\n\tprecision ${parameters.precision} usampler2DArray;\r\n\t`;\r\n\r\n\tif ( parameters.precision === 'highp' ) {\r\n\r\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\r\n\r\n\t} else if ( parameters.precision === 'mediump' ) {\r\n\r\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\r\n\r\n\t} else if ( parameters.precision === 'lowp' ) {\r\n\r\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\r\n\r\n\t}\r\n\r\n\treturn precisionstring;\r\n\r\n}\r\n\r\nfunction generateShadowMapTypeDefine( parameters ) {\r\n\r\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\r\n\r\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\r\n\r\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\r\n\r\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\r\n\r\n\t}\r\n\r\n\treturn shadowMapTypeDefine;\r\n\r\n}\r\n\r\nfunction generateEnvMapTypeDefine( parameters ) {\r\n\r\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\r\n\tif ( parameters.envMap ) {\r\n\r\n\t\tswitch ( parameters.envMapMode ) {\r\n\r\n\t\t\tcase CubeReflectionMapping:\r\n\t\t\tcase CubeRefractionMapping:\r\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase CubeUVReflectionMapping:\r\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn envMapTypeDefine;\r\n\r\n}\r\n\r\nfunction generateEnvMapModeDefine( parameters ) {\r\n\r\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\r\n\tif ( parameters.envMap ) {\r\n\r\n\t\tswitch ( parameters.envMapMode ) {\r\n\r\n\t\t\tcase CubeRefractionMapping:\r\n\r\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn envMapModeDefine;\r\n\r\n}\r\n\r\nfunction generateEnvMapBlendingDefine( parameters ) {\r\n\r\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\r\n\r\n\tif ( parameters.envMap ) {\r\n\r\n\t\tswitch ( parameters.combine ) {\r\n\r\n\t\t\tcase MultiplyOperation:\r\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase MixOperation:\r\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AddOperation:\r\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn envMapBlendingDefine;\r\n\r\n}\r\n\r\nfunction generateCubeUVSize( parameters ) {\r\n\r\n\tconst imageHeight = parameters.envMapCubeUVHeight;\r\n\r\n\tif ( imageHeight === null ) return null;\r\n\r\n\tconst maxMip = Math.log2( imageHeight ) - 2;\r\n\r\n\tconst texelHeight = 1.0 / imageHeight;\r\n\r\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\r\n\r\n\treturn { texelWidth, texelHeight, maxMip };\r\n\r\n}\r\n\r\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\r\n\r\n\t// TODO Send this event to Three.js DevTools\r\n\t// log( 'WebGLProgram', cacheKey );\r\n\r\n\tconst gl = renderer.getContext();\r\n\r\n\tconst defines = parameters.defines;\r\n\r\n\tlet vertexShader = parameters.vertexShader;\r\n\tlet fragmentShader = parameters.fragmentShader;\r\n\r\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\r\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\r\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\r\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\r\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\r\n\r\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\r\n\r\n\tconst customDefines = generateDefines( defines );\r\n\r\n\tconst program = gl.createProgram();\r\n\r\n\tlet prefixVertex, prefixFragment;\r\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\r\n\r\n\tif ( parameters.isRawShaderMaterial ) {\r\n\r\n\t\tprefixVertex = [\r\n\r\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\r\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\r\n\r\n\t\t\tcustomDefines\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\tif ( prefixVertex.length > 0 ) {\r\n\r\n\t\t\tprefixVertex += '\\n';\r\n\r\n\t\t}\r\n\r\n\t\tprefixFragment = [\r\n\r\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\r\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\r\n\r\n\t\t\tcustomDefines\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\tif ( prefixFragment.length > 0 ) {\r\n\r\n\t\t\tprefixFragment += '\\n';\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tprefixVertex = [\r\n\r\n\t\t\tgeneratePrecision( parameters ),\r\n\r\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\r\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\r\n\r\n\t\t\tcustomDefines,\r\n\r\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\r\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\r\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\r\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\r\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\r\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\r\n\r\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\r\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\r\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\r\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\r\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\r\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\r\n\r\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\r\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\r\n\r\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\r\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\r\n\r\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\r\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\r\n\r\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\r\n\r\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\r\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\r\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\r\n\r\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\r\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\r\n\r\n\t\t\t//\r\n\r\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\r\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\r\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\r\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\r\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\r\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\r\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\r\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\r\n\r\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\r\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\r\n\r\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\r\n\r\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\r\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\r\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\r\n\r\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\r\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\r\n\r\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\r\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\r\n\r\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\r\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\r\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\r\n\r\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\r\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\r\n\r\n\t\t\t//\r\n\r\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\r\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\r\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\r\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\r\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\r\n\r\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\r\n\r\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\r\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\r\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\r\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\r\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\r\n\r\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGARITHMIC_DEPTH_BUFFER' : '',\r\n\t\t\tparameters.reversedDepthBuffer ? '#define USE_REVERSED_DEPTH_BUFFER' : '',\r\n\r\n\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t'uniform vec3 cameraPosition;',\r\n\t\t\t'uniform bool isOrthographic;',\r\n\r\n\t\t\t'#ifdef USE_INSTANCING',\r\n\r\n\t\t\t'\tattribute mat4 instanceMatrix;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\r\n\r\n\t\t\t'\tattribute vec3 instanceColor;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\r\n\r\n\t\t\t'\tuniform sampler2D morphTexture;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'attribute vec3 position;',\r\n\t\t\t'attribute vec3 normal;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'#ifdef USE_UV1',\r\n\r\n\t\t\t'\tattribute vec2 uv1;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_UV2',\r\n\r\n\t\t\t'\tattribute vec2 uv2;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_UV3',\r\n\r\n\t\t\t'\tattribute vec2 uv3;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_TANGENT',\r\n\r\n\t\t\t'\tattribute vec4 tangent;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\r\n\r\n\t\t\t'\tattribute vec4 color;',\r\n\r\n\t\t\t'#elif defined( USE_COLOR )',\r\n\r\n\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t'#endif',\r\n\r\n\t\t\t'\\n'\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\tprefixFragment = [\r\n\r\n\t\t\tgeneratePrecision( parameters ),\r\n\r\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\r\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\r\n\r\n\t\t\tcustomDefines,\r\n\r\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\r\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\r\n\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\r\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\r\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\r\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\r\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\r\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\r\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\r\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\r\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\r\n\r\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\r\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\r\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\r\n\r\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\r\n\r\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\r\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\r\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\r\n\r\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\r\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\r\n\r\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\r\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\r\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\r\n\r\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\r\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\r\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\r\n\r\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\r\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\r\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\r\n\r\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\r\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\r\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\r\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\r\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\r\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\r\n\r\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\r\n\r\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\r\n\r\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\r\n\r\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\r\n\r\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\r\n\t\t\tparameters.decodeVideoTextureEmissive ? '#define DECODE_VIDEO_TEXTURE_EMISSIVE' : '',\r\n\r\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGARITHMIC_DEPTH_BUFFER' : '',\r\n\t\t\tparameters.reversedDepthBuffer ? '#define USE_REVERSED_DEPTH_BUFFER' : '',\r\n\r\n\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t'uniform vec3 cameraPosition;',\r\n\t\t\t'uniform bool isOrthographic;',\r\n\r\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\r\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\r\n\r\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\r\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\r\n\r\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\r\n\t\t\tgetLuminanceFunction(),\r\n\r\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\r\n\r\n\t\t\t'\\n'\r\n\r\n\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t}\r\n\r\n\tvertexShader = resolveIncludes( vertexShader );\r\n\tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\r\n\r\n\tfragmentShader = resolveIncludes( fragmentShader );\r\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\r\n\r\n\tvertexShader = unrollLoops( vertexShader );\r\n\tfragmentShader = unrollLoops( fragmentShader );\r\n\r\n\tif ( parameters.isRawShaderMaterial !== true ) {\r\n\r\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\r\n\r\n\t\tversionString = '#version 300 es\\n';\r\n\r\n\t\tprefixVertex = [\r\n\t\t\tcustomVertexExtensions,\r\n\t\t\t'#define attribute in',\r\n\t\t\t'#define varying out',\r\n\t\t\t'#define texture2D texture'\r\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\r\n\r\n\t\tprefixFragment = [\r\n\t\t\t'#define varying in',\r\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\r\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\r\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\r\n\t\t\t'#define texture2D texture',\r\n\t\t\t'#define textureCube texture',\r\n\t\t\t'#define texture2DProj textureProj',\r\n\t\t\t'#define texture2DLodEXT textureLod',\r\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\r\n\t\t\t'#define textureCubeLodEXT textureLod',\r\n\t\t\t'#define texture2DGradEXT textureGrad',\r\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\r\n\t\t\t'#define textureCubeGradEXT textureGrad'\r\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\r\n\r\n\t}\r\n\r\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\r\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\r\n\r\n\t// log( '*VERTEX*', vertexGlsl );\r\n\t// log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\tgl.attachShader( program, glVertexShader );\r\n\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t// Force a particular attribute to index 0.\r\n\r\n\tif ( parameters.index0AttributeName !== undefined ) {\r\n\r\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\r\n\r\n\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t}\r\n\r\n\tgl.linkProgram( program );\r\n\r\n\tfunction onFirstUse( self ) {\r\n\r\n\t\t// check for link errors\r\n\t\tif ( renderer.debug.checkShaderErrors ) {\r\n\r\n\t\t\tconst programInfoLog = gl.getProgramInfoLog( program ) || '';\r\n\t\t\tconst vertexShaderInfoLog = gl.getShaderInfoLog( glVertexShader ) || '';\r\n\t\t\tconst fragmentShaderInfoLog = gl.getShaderInfoLog( glFragmentShader ) || '';\r\n\r\n\t\t\tconst programLog = programInfoLog.trim();\r\n\t\t\tconst vertexLog = vertexShaderInfoLog.trim();\r\n\t\t\tconst fragmentLog = fragmentShaderInfoLog.trim();\r\n\r\n\t\t\tlet runnable = true;\r\n\t\t\tlet haveDiagnostics = true;\r\n\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\t\trunnable = false;\r\n\r\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\r\n\r\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// default error reporting\r\n\r\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\r\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\r\n\r\n\t\t\t\t\terror(\r\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\r\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\r\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\r\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\r\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\r\n\t\t\t\t\t\tvertexErrors + '\\n' +\r\n\t\t\t\t\t\tfragmentErrors\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\t\twarn( 'WebGLProgram: Program Info Log:', programLog );\r\n\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\t\thaveDiagnostics = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\t\tself.diagnostics = {\r\n\r\n\t\t\t\t\trunnable: runnable,\r\n\r\n\t\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Clean up\r\n\r\n\t\t// Crashes in iOS9 and iOS10. #18402\r\n\t\t// gl.detachShader( program, glVertexShader );\r\n\t\t// gl.detachShader( program, glFragmentShader );\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\r\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t}\r\n\r\n\t// set up caching for uniform locations\r\n\r\n\tlet cachedUniforms;\r\n\r\n\tthis.getUniforms = function () {\r\n\r\n\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t// Populates cachedUniforms and cachedAttributes\r\n\t\t\tonFirstUse( this );\r\n\r\n\t\t}\r\n\r\n\t\treturn cachedUniforms;\r\n\r\n\t};\r\n\r\n\t// set up caching for attribute locations\r\n\r\n\tlet cachedAttributes;\r\n\r\n\tthis.getAttributes = function () {\r\n\r\n\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t// Populates cachedAttributes and cachedUniforms\r\n\t\t\tonFirstUse( this );\r\n\r\n\t\t}\r\n\r\n\t\treturn cachedAttributes;\r\n\r\n\t};\r\n\r\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\r\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\r\n\r\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\r\n\r\n\tthis.isReady = function () {\r\n\r\n\t\tif ( programReady === false ) {\r\n\r\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\r\n\r\n\t\t}\r\n\r\n\t\treturn programReady;\r\n\r\n\t};\r\n\r\n\t// free resource\r\n\r\n\tthis.destroy = function () {\r\n\r\n\t\tbindingStates.releaseStatesOfProgram( this );\r\n\r\n\t\tgl.deleteProgram( program );\r\n\t\tthis.program = undefined;\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.type = parameters.shaderType;\r\n\tthis.name = parameters.shaderName;\r\n\tthis.id = programIdCount ++;\r\n\tthis.cacheKey = cacheKey;\r\n\tthis.usedTimes = 1;\r\n\tthis.program = program;\r\n\tthis.vertexShader = glVertexShader;\r\n\tthis.fragmentShader = glFragmentShader;\r\n\r\n\treturn this;\r\n\r\n}\r\n\r\nexport { WebGLProgram };\r\n","let _id = 0;\r\n\r\nclass WebGLShaderCache {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.shaderCache = new Map();\r\n\t\tthis.materialCache = new Map();\r\n\r\n\t}\r\n\r\n\tupdate( material ) {\r\n\r\n\t\tconst vertexShader = material.vertexShader;\r\n\t\tconst fragmentShader = material.fragmentShader;\r\n\r\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\r\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\r\n\r\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\r\n\r\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\r\n\r\n\t\t\tmaterialShaders.add( vertexShaderStage );\r\n\t\t\tvertexShaderStage.usedTimes ++;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\r\n\r\n\t\t\tmaterialShaders.add( fragmentShaderStage );\r\n\t\t\tfragmentShaderStage.usedTimes ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tremove( material ) {\r\n\r\n\t\tconst materialShaders = this.materialCache.get( material );\r\n\r\n\t\tfor ( const shaderStage of materialShaders ) {\r\n\r\n\t\t\tshaderStage.usedTimes --;\r\n\r\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\r\n\r\n\t\t}\r\n\r\n\t\tthis.materialCache.delete( material );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetVertexShaderID( material ) {\r\n\r\n\t\treturn this._getShaderStage( material.vertexShader ).id;\r\n\r\n\t}\r\n\r\n\tgetFragmentShaderID( material ) {\r\n\r\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.shaderCache.clear();\r\n\t\tthis.materialCache.clear();\r\n\r\n\t}\r\n\r\n\t_getShaderCacheForMaterial( material ) {\r\n\r\n\t\tconst cache = this.materialCache;\r\n\t\tlet set = cache.get( material );\r\n\r\n\t\tif ( set === undefined ) {\r\n\r\n\t\t\tset = new Set();\r\n\t\t\tcache.set( material, set );\r\n\r\n\t\t}\r\n\r\n\t\treturn set;\r\n\r\n\t}\r\n\r\n\t_getShaderStage( code ) {\r\n\r\n\t\tconst cache = this.shaderCache;\r\n\t\tlet stage = cache.get( code );\r\n\r\n\t\tif ( stage === undefined ) {\r\n\r\n\t\t\tstage = new WebGLShaderStage( code );\r\n\t\t\tcache.set( code, stage );\r\n\r\n\t\t}\r\n\r\n\t\treturn stage;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGLShaderStage {\r\n\r\n\tconstructor( code ) {\r\n\r\n\t\tthis.id = _id ++;\r\n\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { WebGLShaderCache };\r\n","import { BackSide, DoubleSide, CubeUVReflectionMapping, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping, NormalBlending, LinearSRGBColorSpace, SRGBTransfer } from '../../constants.js';\r\nimport { Layers } from '../../core/Layers.js';\r\nimport { WebGLProgram } from './WebGLProgram.js';\r\nimport { WebGLShaderCache } from './WebGLShaderCache.js';\r\nimport { ShaderLib } from '../shaders/ShaderLib.js';\r\nimport { UniformsUtils } from '../shaders/UniformsUtils.js';\r\nimport { ColorManagement } from '../../math/ColorManagement.js';\r\nimport { warn } from '../../utils.js';\r\n\r\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\r\n\r\n\tconst _programLayers = new Layers();\r\n\tconst _customShaders = new WebGLShaderCache();\r\n\tconst _activeChannels = new Set();\r\n\tconst programs = [];\r\n\r\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\r\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\r\n\r\n\tlet precision = capabilities.precision;\r\n\r\n\tconst shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshDistanceMaterial: 'distanceRGBA',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tMeshToonMaterial: 'toon',\r\n\t\tMeshStandardMaterial: 'physical',\r\n\t\tMeshPhysicalMaterial: 'physical',\r\n\t\tMeshMatcapMaterial: 'matcap',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points',\r\n\t\tShadowMaterial: 'shadow',\r\n\t\tSpriteMaterial: 'sprite'\r\n\t};\r\n\r\n\tfunction getChannel( value ) {\r\n\r\n\t\t_activeChannels.add( value );\r\n\r\n\t\tif ( value === 0 ) return 'uv';\r\n\r\n\t\treturn `uv${ value }`;\r\n\r\n\t}\r\n\r\n\tfunction getParameters( material, lights, shadows, scene, object ) {\r\n\r\n\t\tconst fog = scene.fog;\r\n\t\tconst geometry = object.geometry;\r\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\r\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\r\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\r\n\r\n\t\tconst shaderID = shaderIDs[ material.type ];\r\n\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\twarn( 'WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n\r\n\t\tlet morphTextureStride = 0;\r\n\r\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\r\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\r\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\r\n\r\n\t\t//\r\n\r\n\t\tlet vertexShader, fragmentShader;\r\n\t\tlet customVertexShaderID, customFragmentShaderID;\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tconst shader = ShaderLib[ shaderID ];\r\n\r\n\t\t\tvertexShader = shader.vertexShader;\r\n\t\t\tfragmentShader = shader.fragmentShader;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvertexShader = material.vertexShader;\r\n\t\t\tfragmentShader = material.fragmentShader;\r\n\r\n\t\t\t_customShaders.update( material );\r\n\r\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\r\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\r\n\r\n\t\t}\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\tconst reversedDepthBuffer = renderer.state.buffers.depth.getReversed();\r\n\r\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\r\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\r\n\r\n\t\tconst HAS_MAP = !! material.map;\r\n\t\tconst HAS_MATCAP = !! material.matcap;\r\n\t\tconst HAS_ENVMAP = !! envMap;\r\n\t\tconst HAS_AOMAP = !! material.aoMap;\r\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\r\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\r\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\r\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\r\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\r\n\r\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\r\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\r\n\r\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\r\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\r\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\r\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\r\n\t\tconst HAS_SHEEN = material.sheen > 0;\r\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\r\n\r\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\r\n\r\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\r\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\r\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\r\n\r\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\r\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\r\n\r\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\r\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\r\n\r\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\r\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\r\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\r\n\r\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\r\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\r\n\r\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\r\n\r\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\r\n\r\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\r\n\r\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\r\n\r\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\r\n\r\n\t\tlet toneMapping = NoToneMapping;\r\n\r\n\t\tif ( material.toneMapped ) {\r\n\r\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\r\n\r\n\t\t\t\ttoneMapping = renderer.toneMapping;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\t\t\tshaderType: material.type,\r\n\t\t\tshaderName: material.name,\r\n\r\n\t\t\tvertexShader: vertexShader,\r\n\t\t\tfragmentShader: fragmentShader,\r\n\t\t\tdefines: material.defines,\r\n\r\n\t\t\tcustomVertexShaderID: customVertexShaderID,\r\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\r\n\r\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\r\n\t\t\tglslVersion: material.glslVersion,\r\n\r\n\t\t\tprecision: precision,\r\n\r\n\t\t\tbatching: IS_BATCHEDMESH,\r\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\r\n\t\t\tinstancing: IS_INSTANCEDMESH,\r\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\r\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\r\n\r\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\r\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\r\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\r\n\r\n\t\t\tmap: HAS_MAP,\r\n\t\t\tmatcap: HAS_MATCAP,\r\n\t\t\tenvMap: HAS_ENVMAP,\r\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\r\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\r\n\t\t\taoMap: HAS_AOMAP,\r\n\t\t\tlightMap: HAS_LIGHTMAP,\r\n\t\t\tbumpMap: HAS_BUMPMAP,\r\n\t\t\tnormalMap: HAS_NORMALMAP,\r\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\r\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\r\n\r\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\r\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\r\n\r\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\r\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\r\n\r\n\t\t\tanisotropy: HAS_ANISOTROPY,\r\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\r\n\r\n\t\t\tclearcoat: HAS_CLEARCOAT,\r\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\r\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\r\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\r\n\r\n\t\t\tdispersion: HAS_DISPERSION,\r\n\r\n\t\t\tiridescence: HAS_IRIDESCENCE,\r\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\r\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\r\n\r\n\t\t\tsheen: HAS_SHEEN,\r\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\r\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\r\n\r\n\t\t\tspecularMap: HAS_SPECULARMAP,\r\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\r\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\r\n\r\n\t\t\ttransmission: HAS_TRANSMISSION,\r\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\r\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\r\n\r\n\t\t\tgradientMap: HAS_GRADIENTMAP,\r\n\r\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\r\n\r\n\t\t\talphaMap: HAS_ALPHAMAP,\r\n\t\t\talphaTest: HAS_ALPHATEST,\r\n\t\t\talphaHash: HAS_ALPHAHASH,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\t//\r\n\r\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\r\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\r\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\r\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\r\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\r\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\r\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\r\n\r\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\r\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\r\n\r\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\r\n\r\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\r\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\r\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\r\n\r\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\r\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\r\n\r\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\r\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\r\n\r\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\r\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\r\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\r\n\r\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\r\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\r\n\r\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\r\n\t\t\tvertexColors: material.vertexColors,\r\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\r\n\r\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\r\n\r\n\t\t\tfog: !! fog,\r\n\t\t\tuseFog: material.fog === true,\r\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\r\n\r\n\t\t\tflatShading: ( material.flatShading === true && material.wireframe === false ),\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\r\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\t\t\treversedDepthBuffer: reversedDepthBuffer,\r\n\r\n\t\t\tskinning: object.isSkinnedMesh === true,\r\n\r\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\r\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\r\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\r\n\t\t\tmorphTargetsCount: morphTargetsCount,\r\n\t\t\tmorphTextureStride: morphTextureStride,\r\n\r\n\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\tnumPointLights: lights.point.length,\r\n\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\r\n\t\t\tnumRectAreaLights: lights.rectArea.length,\r\n\t\t\tnumHemiLights: lights.hemi.length,\r\n\r\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\r\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\r\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\r\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\r\n\r\n\t\t\tnumLightProbes: lights.numLightProbes,\r\n\r\n\t\t\tnumClippingPlanes: clipping.numPlanes,\r\n\t\t\tnumClipIntersection: clipping.numIntersection,\r\n\r\n\t\t\tdithering: material.dithering,\r\n\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\r\n\t\t\ttoneMapping: toneMapping,\r\n\r\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\r\n\t\t\tdecodeVideoTextureEmissive: HAS_EMISSIVEMAP && ( material.emissiveMap.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.emissiveMap.colorSpace ) === SRGBTransfer ),\r\n\r\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\r\n\t\t\tdoubleSided: material.side === DoubleSide,\r\n\t\t\tflipSided: material.side === BackSide,\r\n\r\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\r\n\t\t\tdepthPacking: material.depthPacking || 0,\r\n\r\n\t\t\tindex0AttributeName: material.index0AttributeName,\r\n\r\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\r\n\t\t\textensionMultiDraw: ( HAS_EXTENSIONS && material.extensions.multiDraw === true || IS_BATCHEDMESH ) && extensions.has( 'WEBGL_multi_draw' ),\r\n\r\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\r\n\r\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\r\n\r\n\t\t};\r\n\r\n\t\t// the usage of getChannel() determines the active texture channels for this shader\r\n\r\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\r\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\r\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\r\n\r\n\t\t_activeChannels.clear();\r\n\r\n\t\treturn parameters;\r\n\r\n\t}\r\n\r\n\tfunction getProgramCacheKey( parameters ) {\r\n\r\n\t\tconst array = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tarray.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray.push( parameters.customVertexShaderID );\r\n\t\t\tarray.push( parameters.customFragmentShaderID );\r\n\r\n\t\t}\r\n\r\n\t\tif ( parameters.defines !== undefined ) {\r\n\r\n\t\t\tfor ( const name in parameters.defines ) {\r\n\r\n\t\t\t\tarray.push( name );\r\n\t\t\t\tarray.push( parameters.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( parameters.isRawShaderMaterial === false ) {\r\n\r\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\r\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\r\n\t\t\tarray.push( renderer.outputColorSpace );\r\n\r\n\t\t}\r\n\r\n\t\tarray.push( parameters.customProgramCacheKey );\r\n\r\n\t\treturn array.join();\r\n\r\n\t}\r\n\r\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\r\n\r\n\t\tarray.push( parameters.precision );\r\n\t\tarray.push( parameters.outputColorSpace );\r\n\t\tarray.push( parameters.envMapMode );\r\n\t\tarray.push( parameters.envMapCubeUVHeight );\r\n\t\tarray.push( parameters.mapUv );\r\n\t\tarray.push( parameters.alphaMapUv );\r\n\t\tarray.push( parameters.lightMapUv );\r\n\t\tarray.push( parameters.aoMapUv );\r\n\t\tarray.push( parameters.bumpMapUv );\r\n\t\tarray.push( parameters.normalMapUv );\r\n\t\tarray.push( parameters.displacementMapUv );\r\n\t\tarray.push( parameters.emissiveMapUv );\r\n\t\tarray.push( parameters.metalnessMapUv );\r\n\t\tarray.push( parameters.roughnessMapUv );\r\n\t\tarray.push( parameters.anisotropyMapUv );\r\n\t\tarray.push( parameters.clearcoatMapUv );\r\n\t\tarray.push( parameters.clearcoatNormalMapUv );\r\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\r\n\t\tarray.push( parameters.iridescenceMapUv );\r\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\r\n\t\tarray.push( parameters.sheenColorMapUv );\r\n\t\tarray.push( parameters.sheenRoughnessMapUv );\r\n\t\tarray.push( parameters.specularMapUv );\r\n\t\tarray.push( parameters.specularColorMapUv );\r\n\t\tarray.push( parameters.specularIntensityMapUv );\r\n\t\tarray.push( parameters.transmissionMapUv );\r\n\t\tarray.push( parameters.thicknessMapUv );\r\n\t\tarray.push( parameters.combine );\r\n\t\tarray.push( parameters.fogExp2 );\r\n\t\tarray.push( parameters.sizeAttenuation );\r\n\t\tarray.push( parameters.morphTargetsCount );\r\n\t\tarray.push( parameters.morphAttributeCount );\r\n\t\tarray.push( parameters.numDirLights );\r\n\t\tarray.push( parameters.numPointLights );\r\n\t\tarray.push( parameters.numSpotLights );\r\n\t\tarray.push( parameters.numSpotLightMaps );\r\n\t\tarray.push( parameters.numHemiLights );\r\n\t\tarray.push( parameters.numRectAreaLights );\r\n\t\tarray.push( parameters.numDirLightShadows );\r\n\t\tarray.push( parameters.numPointLightShadows );\r\n\t\tarray.push( parameters.numSpotLightShadows );\r\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\r\n\t\tarray.push( parameters.numLightProbes );\r\n\t\tarray.push( parameters.shadowMapType );\r\n\t\tarray.push( parameters.toneMapping );\r\n\t\tarray.push( parameters.numClippingPlanes );\r\n\t\tarray.push( parameters.numClipIntersection );\r\n\t\tarray.push( parameters.depthPacking );\r\n\r\n\t}\r\n\r\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\r\n\r\n\t\t_programLayers.disableAll();\r\n\r\n\t\tif ( parameters.supportsVertexTextures )\r\n\t\t\t_programLayers.enable( 0 );\r\n\t\tif ( parameters.instancing )\r\n\t\t\t_programLayers.enable( 1 );\r\n\t\tif ( parameters.instancingColor )\r\n\t\t\t_programLayers.enable( 2 );\r\n\t\tif ( parameters.instancingMorph )\r\n\t\t\t_programLayers.enable( 3 );\r\n\t\tif ( parameters.matcap )\r\n\t\t\t_programLayers.enable( 4 );\r\n\t\tif ( parameters.envMap )\r\n\t\t\t_programLayers.enable( 5 );\r\n\t\tif ( parameters.normalMapObjectSpace )\r\n\t\t\t_programLayers.enable( 6 );\r\n\t\tif ( parameters.normalMapTangentSpace )\r\n\t\t\t_programLayers.enable( 7 );\r\n\t\tif ( parameters.clearcoat )\r\n\t\t\t_programLayers.enable( 8 );\r\n\t\tif ( parameters.iridescence )\r\n\t\t\t_programLayers.enable( 9 );\r\n\t\tif ( parameters.alphaTest )\r\n\t\t\t_programLayers.enable( 10 );\r\n\t\tif ( parameters.vertexColors )\r\n\t\t\t_programLayers.enable( 11 );\r\n\t\tif ( parameters.vertexAlphas )\r\n\t\t\t_programLayers.enable( 12 );\r\n\t\tif ( parameters.vertexUv1s )\r\n\t\t\t_programLayers.enable( 13 );\r\n\t\tif ( parameters.vertexUv2s )\r\n\t\t\t_programLayers.enable( 14 );\r\n\t\tif ( parameters.vertexUv3s )\r\n\t\t\t_programLayers.enable( 15 );\r\n\t\tif ( parameters.vertexTangents )\r\n\t\t\t_programLayers.enable( 16 );\r\n\t\tif ( parameters.anisotropy )\r\n\t\t\t_programLayers.enable( 17 );\r\n\t\tif ( parameters.alphaHash )\r\n\t\t\t_programLayers.enable( 18 );\r\n\t\tif ( parameters.batching )\r\n\t\t\t_programLayers.enable( 19 );\r\n\t\tif ( parameters.dispersion )\r\n\t\t\t_programLayers.enable( 20 );\r\n\t\tif ( parameters.batchingColor )\r\n\t\t\t_programLayers.enable( 21 );\r\n\t\tif ( parameters.gradientMap )\r\n\t\t\t_programLayers.enable( 22 );\r\n\r\n\t\tarray.push( _programLayers.mask );\r\n\t\t_programLayers.disableAll();\r\n\r\n\t\tif ( parameters.fog )\r\n\t\t\t_programLayers.enable( 0 );\r\n\t\tif ( parameters.useFog )\r\n\t\t\t_programLayers.enable( 1 );\r\n\t\tif ( parameters.flatShading )\r\n\t\t\t_programLayers.enable( 2 );\r\n\t\tif ( parameters.logarithmicDepthBuffer )\r\n\t\t\t_programLayers.enable( 3 );\r\n\t\tif ( parameters.reversedDepthBuffer )\r\n\t\t\t_programLayers.enable( 4 );\r\n\t\tif ( parameters.skinning )\r\n\t\t\t_programLayers.enable( 5 );\r\n\t\tif ( parameters.morphTargets )\r\n\t\t\t_programLayers.enable( 6 );\r\n\t\tif ( parameters.morphNormals )\r\n\t\t\t_programLayers.enable( 7 );\r\n\t\tif ( parameters.morphColors )\r\n\t\t\t_programLayers.enable( 8 );\r\n\t\tif ( parameters.premultipliedAlpha )\r\n\t\t\t_programLayers.enable( 9 );\r\n\t\tif ( parameters.shadowMapEnabled )\r\n\t\t\t_programLayers.enable( 10 );\r\n\t\tif ( parameters.doubleSided )\r\n\t\t\t_programLayers.enable( 11 );\r\n\t\tif ( parameters.flipSided )\r\n\t\t\t_programLayers.enable( 12 );\r\n\t\tif ( parameters.useDepthPacking )\r\n\t\t\t_programLayers.enable( 13 );\r\n\t\tif ( parameters.dithering )\r\n\t\t\t_programLayers.enable( 14 );\r\n\t\tif ( parameters.transmission )\r\n\t\t\t_programLayers.enable( 15 );\r\n\t\tif ( parameters.sheen )\r\n\t\t\t_programLayers.enable( 16 );\r\n\t\tif ( parameters.opaque )\r\n\t\t\t_programLayers.enable( 17 );\r\n\t\tif ( parameters.pointsUvs )\r\n\t\t\t_programLayers.enable( 18 );\r\n\t\tif ( parameters.decodeVideoTexture )\r\n\t\t\t_programLayers.enable( 19 );\r\n\t\tif ( parameters.decodeVideoTextureEmissive )\r\n\t\t\t_programLayers.enable( 20 );\r\n\t\tif ( parameters.alphaToCoverage )\r\n\t\t\t_programLayers.enable( 21 );\r\n\r\n\t\tarray.push( _programLayers.mask );\r\n\r\n\t}\r\n\r\n\tfunction getUniforms( material ) {\r\n\r\n\t\tconst shaderID = shaderIDs[ material.type ];\r\n\t\tlet uniforms;\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tconst shader = ShaderLib[ shaderID ];\r\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tuniforms = material.uniforms;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction acquireProgram( parameters, cacheKey ) {\r\n\r\n\t\tlet program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tconst preexistingProgram = programs[ p ];\r\n\r\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\r\n\r\n\t\t\t\tprogram = preexistingProgram;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction releaseProgram( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tconst i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction releaseShaderCache( material ) {\r\n\r\n\t\t_customShaders.remove( material );\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\t_customShaders.dispose();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetParameters: getParameters,\r\n\t\tgetProgramCacheKey: getProgramCacheKey,\r\n\t\tgetUniforms: getUniforms,\r\n\t\tacquireProgram: acquireProgram,\r\n\t\treleaseProgram: releaseProgram,\r\n\t\treleaseShaderCache: releaseShaderCache,\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tprograms: programs,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\nexport { WebGLPrograms };\r\n","function WebGLProperties() {\r\n\r\n\tlet properties = new WeakMap();\r\n\r\n\tfunction has( object ) {\r\n\r\n\t\treturn properties.has( object );\r\n\r\n\t}\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tlet map = properties.get( object );\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties.set( object, map );\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t}\r\n\r\n\tfunction remove( object ) {\r\n\r\n\t\tproperties.delete( object );\r\n\r\n\t}\r\n\r\n\tfunction update( object, key, value ) {\r\n\r\n\t\tproperties.get( object )[ key ] = value;\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tproperties = new WeakMap();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\thas: has,\r\n\t\tget: get,\r\n\t\tremove: remove,\r\n\t\tupdate: update,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLProperties };\r\n","function painterSortStable( a, b ) {\r\n\r\n\tif ( a.groupOrder !== b.groupOrder ) {\r\n\r\n\t\treturn a.groupOrder - b.groupOrder;\r\n\r\n\t} else if ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\treturn a.material.id - b.material.id;\r\n\r\n\t} else if ( a.z !== b.z ) {\r\n\r\n\t\treturn a.z - b.z;\r\n\r\n\t} else {\r\n\r\n\t\treturn a.id - b.id;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction reversePainterSortStable( a, b ) {\r\n\r\n\tif ( a.groupOrder !== b.groupOrder ) {\r\n\r\n\t\treturn a.groupOrder - b.groupOrder;\r\n\r\n\t} else if ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t} else if ( a.z !== b.z ) {\r\n\r\n\t\treturn b.z - a.z;\r\n\r\n\t} else {\r\n\r\n\t\treturn a.id - b.id;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction WebGLRenderList() {\r\n\r\n\tconst renderItems = [];\r\n\tlet renderItemsIndex = 0;\r\n\r\n\tconst opaque = [];\r\n\tconst transmissive = [];\r\n\tconst transparent = [];\r\n\r\n\tfunction init() {\r\n\r\n\t\trenderItemsIndex = 0;\r\n\r\n\t\topaque.length = 0;\r\n\t\ttransmissive.length = 0;\r\n\t\ttransparent.length = 0;\r\n\r\n\t}\r\n\r\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\r\n\r\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\r\n\r\n\t\tif ( renderItem === undefined ) {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tgroupOrder: groupOrder,\r\n\t\t\t\trenderOrder: object.renderOrder,\r\n\t\t\t\tz: z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.groupOrder = groupOrder;\r\n\t\t\trenderItem.renderOrder = object.renderOrder;\r\n\t\t\trenderItem.z = z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t}\r\n\r\n\t\trenderItemsIndex ++;\r\n\r\n\t\treturn renderItem;\r\n\r\n\t}\r\n\r\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\r\n\r\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\r\n\r\n\t\tif ( material.transmission > 0.0 ) {\r\n\r\n\t\t\ttransmissive.push( renderItem );\r\n\r\n\t\t} else if ( material.transparent === true ) {\r\n\r\n\t\t\ttransparent.push( renderItem );\r\n\r\n\t\t} else {\r\n\r\n\t\t\topaque.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\r\n\r\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\r\n\r\n\t\tif ( material.transmission > 0.0 ) {\r\n\r\n\t\t\ttransmissive.unshift( renderItem );\r\n\r\n\t\t} else if ( material.transparent === true ) {\r\n\r\n\t\t\ttransparent.unshift( renderItem );\r\n\r\n\t\t} else {\r\n\r\n\t\t\topaque.unshift( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\r\n\r\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\r\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\r\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\r\n\r\n\t}\r\n\r\n\tfunction finish() {\r\n\r\n\t\t// Clear references from inactive renderItems in the list\r\n\r\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst renderItem = renderItems[ i ];\r\n\r\n\t\t\tif ( renderItem.id === null ) break;\r\n\r\n\t\t\trenderItem.id = null;\r\n\t\t\trenderItem.object = null;\r\n\t\t\trenderItem.geometry = null;\r\n\t\t\trenderItem.material = null;\r\n\t\t\trenderItem.group = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\topaque: opaque,\r\n\t\ttransmissive: transmissive,\r\n\t\ttransparent: transparent,\r\n\r\n\t\tinit: init,\r\n\t\tpush: push,\r\n\t\tunshift: unshift,\r\n\t\tfinish: finish,\r\n\r\n\t\tsort: sort\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLRenderLists() {\r\n\r\n\tlet lists = new WeakMap();\r\n\r\n\tfunction get( scene, renderCallDepth ) {\r\n\r\n\t\tconst listArray = lists.get( scene );\r\n\t\tlet list;\r\n\r\n\t\tif ( listArray === undefined ) {\r\n\r\n\t\t\tlist = new WebGLRenderList();\r\n\t\t\tlists.set( scene, [ list ] );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( renderCallDepth >= listArray.length ) {\r\n\r\n\t\t\t\tlist = new WebGLRenderList();\r\n\t\t\t\tlistArray.push( list );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlist = listArray[ renderCallDepth ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn list;\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tlists = new WeakMap();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tget: get,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLRenderLists, WebGLRenderList };\r\n","import { Color } from '../../math/Color.js';\r\nimport { Matrix4 } from '../../math/Matrix4.js';\r\nimport { Vector2 } from '../../math/Vector2.js';\r\nimport { Vector3 } from '../../math/Vector3.js';\r\nimport { UniformsLib } from '../shaders/UniformsLib.js';\r\n\r\nfunction UniformsCache() {\r\n\r\n\tconst lights = {};\r\n\r\n\treturn {\r\n\r\n\t\tget: function ( light ) {\r\n\r\n\t\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n\t\t\t\treturn lights[ light.id ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet uniforms;\r\n\r\n\t\t\tswitch ( light.type ) {\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\tcolor: new Color()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\t\tdecay: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\t\tdecay: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tdirection: new Vector3(),\r\n\t\t\t\t\t\tskyColor: new Color(),\r\n\t\t\t\t\t\tgroundColor: new Color()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'RectAreaLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tcolor: new Color(),\r\n\t\t\t\t\t\tposition: new Vector3(),\r\n\t\t\t\t\t\thalfWidth: new Vector3(),\r\n\t\t\t\t\t\thalfHeight: new Vector3()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlights[ light.id ] = uniforms;\r\n\r\n\t\t\treturn uniforms;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction ShadowUniformsCache() {\r\n\r\n\tconst lights = {};\r\n\r\n\treturn {\r\n\r\n\t\tget: function ( light ) {\r\n\r\n\t\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n\t\t\t\treturn lights[ light.id ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet uniforms;\r\n\r\n\t\t\tswitch ( light.type ) {\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tshadowIntensity: 1,\r\n\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tshadowIntensity: 1,\r\n\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\tshadowMapSize: new Vector2()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\t\t\t\t\tuniforms = {\r\n\t\t\t\t\t\tshadowIntensity: 1,\r\n\t\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\t\tshadowNormalBias: 0,\r\n\t\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\r\n\t\t\t\t\t\tshadowCameraNear: 1,\r\n\t\t\t\t\t\tshadowCameraFar: 1000\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlights[ light.id ] = uniforms;\r\n\r\n\t\t\treturn uniforms;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\n\r\nlet nextVersion = 0;\r\n\r\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\r\n\r\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\r\n\r\n}\r\n\r\nfunction WebGLLights( extensions ) {\r\n\r\n\tconst cache = new UniformsCache();\r\n\r\n\tconst shadowCache = ShadowUniformsCache();\r\n\r\n\tconst state = {\r\n\r\n\t\tversion: 0,\r\n\r\n\t\thash: {\r\n\t\t\tdirectionalLength: - 1,\r\n\t\t\tpointLength: - 1,\r\n\t\t\tspotLength: - 1,\r\n\t\t\trectAreaLength: - 1,\r\n\t\t\themiLength: - 1,\r\n\r\n\t\t\tnumDirectionalShadows: - 1,\r\n\t\t\tnumPointShadows: - 1,\r\n\t\t\tnumSpotShadows: - 1,\r\n\t\t\tnumSpotMaps: - 1,\r\n\r\n\t\t\tnumLightProbes: - 1\r\n\t\t},\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tprobe: [],\r\n\t\tdirectional: [],\r\n\t\tdirectionalShadow: [],\r\n\t\tdirectionalShadowMap: [],\r\n\t\tdirectionalShadowMatrix: [],\r\n\t\tspot: [],\r\n\t\tspotLightMap: [],\r\n\t\tspotShadow: [],\r\n\t\tspotShadowMap: [],\r\n\t\tspotLightMatrix: [],\r\n\t\trectArea: [],\r\n\t\trectAreaLTC1: null,\r\n\t\trectAreaLTC2: null,\r\n\t\tpoint: [],\r\n\t\tpointShadow: [],\r\n\t\tpointShadowMap: [],\r\n\t\tpointShadowMatrix: [],\r\n\t\themi: [],\r\n\t\tnumSpotLightShadowsWithMaps: 0,\r\n\t\tnumLightProbes: 0\r\n\r\n\t};\r\n\r\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\r\n\r\n\tconst vector3 = new Vector3();\r\n\tconst matrix4 = new Matrix4();\r\n\tconst matrix42 = new Matrix4();\r\n\r\n\tfunction setup( lights ) {\r\n\r\n\t\tlet r = 0, g = 0, b = 0;\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\r\n\r\n\t\tlet directionalLength = 0;\r\n\t\tlet pointLength = 0;\r\n\t\tlet spotLength = 0;\r\n\t\tlet rectAreaLength = 0;\r\n\t\tlet hemiLength = 0;\r\n\r\n\t\tlet numDirectionalShadows = 0;\r\n\t\tlet numPointShadows = 0;\r\n\t\tlet numSpotShadows = 0;\r\n\t\tlet numSpotMaps = 0;\r\n\t\tlet numSpotShadowsWithMaps = 0;\r\n\r\n\t\tlet numLightProbes = 0;\r\n\r\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\r\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\r\n\r\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst light = lights[ i ];\r\n\r\n\t\t\tconst color = light.color;\r\n\t\t\tconst intensity = light.intensity;\r\n\t\t\tconst distance = light.distance;\r\n\r\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\r\n\r\n\t\t\tif ( light.isAmbientLight ) {\r\n\r\n\t\t\t\tr += color.r * intensity;\r\n\t\t\t\tg += color.g * intensity;\r\n\t\t\t\tb += color.b * intensity;\r\n\r\n\t\t\t} else if ( light.isLightProbe ) {\r\n\r\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\r\n\r\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnumLightProbes ++;\r\n\r\n\t\t\t} else if ( light.isDirectionalLight ) {\r\n\r\n\t\t\t\tconst uniforms = cache.get( light );\r\n\r\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tconst shadow = light.shadow;\r\n\r\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\r\n\r\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\r\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\r\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\r\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n\r\n\t\t\t\t\tnumDirectionalShadows ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\r\n\r\n\t\t\t\tdirectionalLength ++;\r\n\r\n\t\t\t} else if ( light.isSpotLight ) {\r\n\r\n\t\t\t\tconst uniforms = cache.get( light );\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\t\t\t\tuniforms.distance = distance;\r\n\r\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\r\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\t\t\t\tuniforms.decay = light.decay;\r\n\r\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\r\n\r\n\t\t\t\tconst shadow = light.shadow;\r\n\r\n\t\t\t\tif ( light.map ) {\r\n\r\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\r\n\t\t\t\t\tnumSpotMaps ++;\r\n\r\n\t\t\t\t\t// make sure the lightMatrix is up to date\r\n\t\t\t\t\t// TODO : do it if required only\r\n\t\t\t\t\tshadow.updateMatrices( light );\r\n\r\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\r\n\r\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\r\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\r\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\r\n\r\n\t\t\t\t\tnumSpotShadows ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspotLength ++;\r\n\r\n\t\t\t} else if ( light.isRectAreaLight ) {\r\n\r\n\t\t\t\tconst uniforms = cache.get( light );\r\n\r\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\r\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\r\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\r\n\r\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\r\n\r\n\t\t\t\trectAreaLength ++;\r\n\r\n\t\t\t} else if ( light.isPointLight ) {\r\n\r\n\t\t\t\tconst uniforms = cache.get( light );\r\n\r\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\tuniforms.decay = light.decay;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tconst shadow = light.shadow;\r\n\r\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\r\n\r\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\r\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\r\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\r\n\r\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\r\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\r\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\r\n\r\n\t\t\t\t\tnumPointShadows ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.point[ pointLength ] = uniforms;\r\n\r\n\t\t\t\tpointLength ++;\r\n\r\n\t\t\t} else if ( light.isHemisphereLight ) {\r\n\r\n\t\t\t\tconst uniforms = cache.get( light );\r\n\r\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\r\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\r\n\r\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\r\n\r\n\t\t\t\themiLength ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( rectAreaLength > 0 ) {\r\n\r\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\r\n\r\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\r\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\r\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.ambient[ 0 ] = r;\r\n\t\tstate.ambient[ 1 ] = g;\r\n\t\tstate.ambient[ 2 ] = b;\r\n\r\n\t\tconst hash = state.hash;\r\n\r\n\t\tif ( hash.directionalLength !== directionalLength ||\r\n\t\t\thash.pointLength !== pointLength ||\r\n\t\t\thash.spotLength !== spotLength ||\r\n\t\t\thash.rectAreaLength !== rectAreaLength ||\r\n\t\t\thash.hemiLength !== hemiLength ||\r\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\r\n\t\t\thash.numPointShadows !== numPointShadows ||\r\n\t\t\thash.numSpotShadows !== numSpotShadows ||\r\n\t\t\thash.numSpotMaps !== numSpotMaps ||\r\n\t\t\thash.numLightProbes !== numLightProbes ) {\r\n\r\n\t\t\tstate.directional.length = directionalLength;\r\n\t\t\tstate.spot.length = spotLength;\r\n\t\t\tstate.rectArea.length = rectAreaLength;\r\n\t\t\tstate.point.length = pointLength;\r\n\t\t\tstate.hemi.length = hemiLength;\r\n\r\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\r\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\r\n\t\t\tstate.pointShadow.length = numPointShadows;\r\n\t\t\tstate.pointShadowMap.length = numPointShadows;\r\n\t\t\tstate.spotShadow.length = numSpotShadows;\r\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\r\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\r\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\r\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\r\n\t\t\tstate.spotLightMap.length = numSpotMaps;\r\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\r\n\t\t\tstate.numLightProbes = numLightProbes;\r\n\r\n\t\t\thash.directionalLength = directionalLength;\r\n\t\t\thash.pointLength = pointLength;\r\n\t\t\thash.spotLength = spotLength;\r\n\t\t\thash.rectAreaLength = rectAreaLength;\r\n\t\t\thash.hemiLength = hemiLength;\r\n\r\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\r\n\t\t\thash.numPointShadows = numPointShadows;\r\n\t\t\thash.numSpotShadows = numSpotShadows;\r\n\t\t\thash.numSpotMaps = numSpotMaps;\r\n\r\n\t\t\thash.numLightProbes = numLightProbes;\r\n\r\n\t\t\tstate.version = nextVersion ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setupView( lights, camera ) {\r\n\r\n\t\tlet directionalLength = 0;\r\n\t\tlet pointLength = 0;\r\n\t\tlet spotLength = 0;\r\n\t\tlet rectAreaLength = 0;\r\n\t\tlet hemiLength = 0;\r\n\r\n\t\tconst viewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst light = lights[ i ];\r\n\r\n\t\t\tif ( light.isDirectionalLight ) {\r\n\r\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tuniforms.direction.sub( vector3 );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirectionalLength ++;\r\n\r\n\t\t\t} else if ( light.isSpotLight ) {\r\n\r\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tuniforms.direction.sub( vector3 );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotLength ++;\r\n\r\n\t\t\t} else if ( light.isRectAreaLight ) {\r\n\r\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\r\n\t\t\t\tmatrix42.identity();\r\n\t\t\t\tmatrix4.copy( light.matrixWorld );\r\n\t\t\t\tmatrix4.premultiply( viewMatrix );\r\n\t\t\t\tmatrix42.extractRotation( matrix4 );\r\n\r\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\r\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\r\n\r\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\r\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\r\n\r\n\t\t\t\trectAreaLength ++;\r\n\r\n\t\t\t} else if ( light.isPointLight ) {\r\n\r\n\t\t\t\tconst uniforms = state.point[ pointLength ];\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointLength ++;\r\n\r\n\t\t\t} else if ( light.isHemisphereLight ) {\r\n\r\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiLength ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tsetup: setup,\r\n\t\tsetupView: setupView,\r\n\t\tstate: state\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLLights };\r\n","import { WebGLLights } from './WebGLLights.js';\r\n\r\nfunction WebGLRenderState( extensions ) {\r\n\r\n\tconst lights = new WebGLLights( extensions );\r\n\r\n\tconst lightsArray = [];\r\n\tconst shadowsArray = [];\r\n\r\n\tfunction init( camera ) {\r\n\r\n\t\tstate.camera = camera;\r\n\r\n\t\tlightsArray.length = 0;\r\n\t\tshadowsArray.length = 0;\r\n\r\n\t}\r\n\r\n\tfunction pushLight( light ) {\r\n\r\n\t\tlightsArray.push( light );\r\n\r\n\t}\r\n\r\n\tfunction pushShadow( shadowLight ) {\r\n\r\n\t\tshadowsArray.push( shadowLight );\r\n\r\n\t}\r\n\r\n\tfunction setupLights() {\r\n\r\n\t\tlights.setup( lightsArray );\r\n\r\n\t}\r\n\r\n\tfunction setupLightsView( camera ) {\r\n\r\n\t\tlights.setupView( lightsArray, camera );\r\n\r\n\t}\r\n\r\n\tconst state = {\r\n\t\tlightsArray: lightsArray,\r\n\t\tshadowsArray: shadowsArray,\r\n\r\n\t\tcamera: null,\r\n\r\n\t\tlights: lights,\r\n\r\n\t\ttransmissionRenderTarget: {}\r\n\t};\r\n\r\n\treturn {\r\n\t\tinit: init,\r\n\t\tstate: state,\r\n\t\tsetupLights: setupLights,\r\n\t\tsetupLightsView: setupLightsView,\r\n\r\n\t\tpushLight: pushLight,\r\n\t\tpushShadow: pushShadow\r\n\t};\r\n\r\n}\r\n\r\nfunction WebGLRenderStates( extensions ) {\r\n\r\n\tlet renderStates = new WeakMap();\r\n\r\n\tfunction get( scene, renderCallDepth = 0 ) {\r\n\r\n\t\tconst renderStateArray = renderStates.get( scene );\r\n\t\tlet renderState;\r\n\r\n\t\tif ( renderStateArray === undefined ) {\r\n\r\n\t\t\trenderState = new WebGLRenderState( extensions );\r\n\t\t\trenderStates.set( scene, [ renderState ] );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\r\n\r\n\t\t\t\trenderState = new WebGLRenderState( extensions );\r\n\t\t\t\trenderStateArray.push( renderState );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn renderState;\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\trenderStates = new WeakMap();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tget: get,\r\n\t\tdispose: dispose\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLRenderStates };\r\n","import { Material } from './Material.js';\r\nimport { BasicDepthPacking } from '../constants.js';\r\n\r\n/**\r\n * A material for drawing geometry by depth. Depth is based off of the camera\r\n * near and far plane. White is nearest, black is farthest.\r\n *\r\n * @augments Material\r\n */\r\nclass MeshDepthMaterial extends Material {\r\n\r\n\t/**\r\n\t * Constructs a new mesh depth material.\r\n\t *\r\n\t * @param {Object} [parameters] - An object with one or more properties\r\n\t * defining the material's appearance. Any property of the material\r\n\t * (including any property from inherited materials) can be passed\r\n\t * in here. Color values can be passed any type of value accepted\r\n\t * by {@link Color#set}.\r\n\t */\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isMeshDepthMaterial = true;\r\n\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\r\n\t\t/**\r\n\t\t * Type for depth packing.\r\n\t\t *\r\n\t\t * @type {(BasicDepthPacking|RGBADepthPacking|RGBDepthPacking|RGDepthPacking)}\r\n\t\t * @default BasicDepthPacking\r\n\t\t */\r\n\t\tthis.depthPacking = BasicDepthPacking;\r\n\r\n\t\t/**\r\n\t\t * The color map. May optionally include an alpha channel, typically combined\r\n\t\t * with {@link Material#transparent} or {@link Material#alphaTest}.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.map = null;\r\n\r\n\t\t/**\r\n\t\t * The alpha map is a grayscale texture that controls the opacity across the\r\n\t\t * surface (black: fully transparent; white: fully opaque).\r\n\t\t *\r\n\t\t * Only the color of the texture is used, ignoring the alpha channel if one\r\n\t\t * exists. For RGB and RGBA textures, the renderer will use the green channel\r\n\t\t * when sampling this texture due to the extra bit of precision provided for\r\n\t\t * green in DXT-compressed and uncompressed RGB 565 formats. Luminance-only and\r\n\t\t * luminance/alpha textures will also still work as expected.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\t/**\r\n\t\t * The displacement map affects the position of the mesh's vertices. Unlike\r\n\t\t * other maps which only affect the light and shade of the material the\r\n\t\t * displaced vertices can cast shadows, block other objects, and otherwise\r\n\t\t * act as real geometry. The displacement texture is an image where the value\r\n\t\t * of each pixel (white being the highest) is mapped against, and\r\n\t\t * repositions, the vertices of the mesh.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.displacementMap = null;\r\n\r\n\t\t/**\r\n\t\t * How much the displacement map affects the mesh (where black is no\r\n\t\t * displacement, and white is maximum displacement). Without a displacement\r\n\t\t * map set, this value is not applied.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.displacementScale = 1;\r\n\r\n\t\t/**\r\n\t\t * The offset of the displacement map's values on the mesh's vertices.\r\n\t\t * The bias is added to the scaled sample of the displacement map.\r\n\t\t * Without a displacement map set, this value is not applied.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\t/**\r\n\t\t * Renders the geometry as a wireframe.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.wireframe = false;\r\n\r\n\t\t/**\r\n\t\t * Controls the thickness of the wireframe.\r\n\t\t *\r\n\t\t * WebGL and WebGPU ignore this property and always render\r\n\t\t * 1 pixel wide lines.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.depthPacking = source.depthPacking;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { MeshDepthMaterial };\r\n","import { Material } from './Material.js';\r\n\r\n/**\r\n * A material used internally for implementing shadow mapping with\r\n * point lights.\r\n *\r\n * Can also be used to customize the shadow casting of an object by assigning\r\n * an instance of `MeshDistanceMaterial` to {@link Object3D#customDistanceMaterial}.\r\n * The following examples demonstrates this approach in order to ensure\r\n * transparent parts of objects do not cast shadows.\r\n *\r\n * @augments Material\r\n */\r\nclass MeshDistanceMaterial extends Material {\r\n\r\n\t/**\r\n\t * Constructs a new mesh distance material.\r\n\t *\r\n\t * @param {Object} [parameters] - An object with one or more properties\r\n\t * defining the material's appearance. Any property of the material\r\n\t * (including any property from inherited materials) can be passed\r\n\t * in here. Color values can be passed any type of value accepted\r\n\t * by {@link Color#set}.\r\n\t */\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isMeshDistanceMaterial = true;\r\n\r\n\t\tthis.type = 'MeshDistanceMaterial';\r\n\r\n\t\t/**\r\n\t\t * The color map. May optionally include an alpha channel, typically combined\r\n\t\t * with {@link Material#transparent} or {@link Material#alphaTest}.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.map = null;\r\n\r\n\t\t/**\r\n\t\t * The alpha map is a grayscale texture that controls the opacity across the\r\n\t\t * surface (black: fully transparent; white: fully opaque).\r\n\t\t *\r\n\t\t * Only the color of the texture is used, ignoring the alpha channel if one\r\n\t\t * exists. For RGB and RGBA textures, the renderer will use the green channel\r\n\t\t * when sampling this texture due to the extra bit of precision provided for\r\n\t\t * green in DXT-compressed and uncompressed RGB 565 formats. Luminance-only and\r\n\t\t * luminance/alpha textures will also still work as expected.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\t/**\r\n\t\t * The displacement map affects the position of the mesh's vertices. Unlike\r\n\t\t * other maps which only affect the light and shade of the material the\r\n\t\t * displaced vertices can cast shadows, block other objects, and otherwise\r\n\t\t * act as real geometry. The displacement texture is an image where the value\r\n\t\t * of each pixel (white being the highest) is mapped against, and\r\n\t\t * repositions, the vertices of the mesh.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.displacementMap = null;\r\n\r\n\t\t/**\r\n\t\t * How much the displacement map affects the mesh (where black is no\r\n\t\t * displacement, and white is maximum displacement). Without a displacement\r\n\t\t * map set, this value is not applied.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.displacementScale = 1;\r\n\r\n\t\t/**\r\n\t\t * The offset of the displacement map's values on the mesh's vertices.\r\n\t\t * The bias is added to the scaled sample of the displacement map.\r\n\t\t * Without a displacement map set, this value is not applied.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { MeshDistanceMaterial };\r\n","export const vertex = /* glsl */`\r\nvoid main() {\r\n\r\n\tgl_Position = vec4( position, 1.0 );\r\n\r\n}\r\n`;\r\n\r\nexport const fragment = /* glsl */`\r\nuniform sampler2D shadow_pass;\r\nuniform vec2 resolution;\r\nuniform float radius;\r\n\r\n#include <packing>\r\n\r\nvoid main() {\r\n\r\n\tconst float samples = float( VSM_SAMPLES );\r\n\r\n\tfloat mean = 0.0;\r\n\tfloat squared_mean = 0.0;\r\n\r\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\r\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\r\n\tfor ( float i = 0.0; i < samples; i ++ ) {\r\n\r\n\t\tfloat uvOffset = uvStart + i * uvStride;\r\n\r\n\t\t#ifdef HORIZONTAL_PASS\r\n\r\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\r\n\t\t\tmean += distribution.x;\r\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\r\n\r\n\t\t#else\r\n\r\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\r\n\t\t\tmean += depth;\r\n\t\t\tsquared_mean += depth * depth;\r\n\r\n\t\t#endif\r\n\r\n\t}\r\n\r\n\tmean = mean / samples;\r\n\tsquared_mean = squared_mean / samples;\r\n\r\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\r\n\r\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\r\n\r\n}\r\n`;\r\n","import { FrontSide, BackSide, DoubleSide, NearestFilter, PCFShadowMap, VSMShadowMap, RGBADepthPacking, NoBlending } from '../../constants.js';\r\nimport { WebGLRenderTarget } from '../WebGLRenderTarget.js';\r\nimport { MeshDepthMaterial } from '../../materials/MeshDepthMaterial.js';\r\nimport { MeshDistanceMaterial } from '../../materials/MeshDistanceMaterial.js';\r\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\r\nimport { BufferAttribute } from '../../core/BufferAttribute.js';\r\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\r\nimport { Mesh } from '../../objects/Mesh.js';\r\nimport { Vector4 } from '../../math/Vector4.js';\r\nimport { Vector2 } from '../../math/Vector2.js';\r\nimport { Frustum } from '../../math/Frustum.js';\r\n\r\nimport * as vsm from '../shaders/ShaderLib/vsm.glsl.js';\r\nimport { warn } from '../../utils.js';\r\n\r\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\r\n\r\n\tlet _frustum = new Frustum();\r\n\r\n\tconst _shadowMapSize = new Vector2(),\r\n\t\t_viewportSize = new Vector2(),\r\n\r\n\t\t_viewport = new Vector4(),\r\n\r\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\r\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\r\n\r\n\t\t_materialCache = {},\r\n\r\n\t\t_maxTextureSize = capabilities.maxTextureSize;\r\n\r\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\r\n\r\n\tconst shadowMaterialVertical = new ShaderMaterial( {\r\n\t\tdefines: {\r\n\t\t\tVSM_SAMPLES: 8\r\n\t\t},\r\n\t\tuniforms: {\r\n\t\t\tshadow_pass: { value: null },\r\n\t\t\tresolution: { value: new Vector2() },\r\n\t\t\tradius: { value: 4.0 }\r\n\t\t},\r\n\r\n\t\tvertexShader: vsm.vertex,\r\n\t\tfragmentShader: vsm.fragment\r\n\r\n\t} );\r\n\r\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\r\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\r\n\r\n\tconst fullScreenTri = new BufferGeometry();\r\n\tfullScreenTri.setAttribute(\r\n\t\t'position',\r\n\t\tnew BufferAttribute(\r\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\r\n\t\t\t3\r\n\t\t)\r\n\t);\r\n\r\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\r\n\r\n\tconst scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = PCFShadowMap;\r\n\tlet _previousType = this.type;\r\n\r\n\tthis.render = function ( lights, scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\tif ( lights.length === 0 ) return;\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\r\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\r\n\r\n\t\tconst _state = renderer.state;\r\n\r\n\t\t// Set GL state for depth map.\r\n\t\t_state.setBlending( NoBlending );\r\n\r\n\t\tif ( _state.buffers.depth.getReversed() === true ) {\r\n\r\n\t\t\t_state.buffers.color.setClear( 0, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\r\n\r\n\t\t}\r\n\r\n\t\t_state.buffers.depth.setTest( true );\r\n\t\t_state.setScissorTest( false );\r\n\r\n\t\t// check for shadow map type changes\r\n\r\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\r\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst light = lights[ i ];\r\n\t\t\tconst shadow = light.shadow;\r\n\r\n\t\t\tif ( shadow === undefined ) {\r\n\r\n\t\t\t\twarn( 'WebGLShadowMap:', light, 'has no shadow.' );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\r\n\r\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\r\n\r\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\r\n\r\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\r\n\r\n\t\t\t_viewportSize.copy( shadow.mapSize );\r\n\r\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\r\n\r\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\r\n\r\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\r\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\r\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\r\n\r\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\r\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\r\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\r\n\r\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\r\n\r\n\t\t\t\tif ( shadow.map !== null ) {\r\n\r\n\t\t\t\t\tshadow.map.dispose();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\r\n\r\n\t\t\t\tshadow.camera.updateProjectionMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.setRenderTarget( shadow.map );\r\n\t\t\trenderer.clear();\r\n\r\n\t\t\tconst viewportCount = shadow.getViewportCount();\r\n\r\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\r\n\r\n\t\t\t\tconst viewport = shadow.getViewport( vp );\r\n\r\n\t\t\t\t_viewport.set(\r\n\t\t\t\t\t_viewportSize.x * viewport.x,\r\n\t\t\t\t\t_viewportSize.y * viewport.y,\r\n\t\t\t\t\t_viewportSize.x * viewport.z,\r\n\t\t\t\t\t_viewportSize.y * viewport.w\r\n\t\t\t\t);\r\n\r\n\t\t\t\t_state.viewport( _viewport );\r\n\r\n\t\t\t\tshadow.updateMatrices( light, vp );\r\n\r\n\t\t\t\t_frustum = shadow.getFrustum();\r\n\r\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// do blur pass for VSM\r\n\r\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\r\n\r\n\t\t\t\tVSMPass( shadow, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tshadow.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\t_previousType = this.type;\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\r\n\r\n\t};\r\n\r\n\tfunction VSMPass( shadow, camera ) {\r\n\r\n\t\tconst geometry = objects.update( fullScreenMesh );\r\n\r\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\r\n\r\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\r\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\r\n\r\n\t\t\tshadowMaterialVertical.needsUpdate = true;\r\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( shadow.mapPass === null ) {\r\n\r\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\r\n\r\n\t\t}\r\n\r\n\t\t// vertical pass\r\n\r\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\r\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\r\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\r\n\t\trenderer.setRenderTarget( shadow.mapPass );\r\n\t\trenderer.clear();\r\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\r\n\r\n\t\t// horizontal pass\r\n\r\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\r\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\r\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\r\n\t\trenderer.setRenderTarget( shadow.map );\r\n\t\trenderer.clear();\r\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\r\n\r\n\t}\r\n\r\n\tfunction getDepthMaterial( object, material, light, type ) {\r\n\r\n\t\tlet result = null;\r\n\r\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\r\n\r\n\t\tif ( customMaterial !== undefined ) {\r\n\r\n\t\t\tresult = customMaterial;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\r\n\r\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\r\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\r\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\r\n\t\t\t\t( material.map && material.alphaTest > 0 ) ||\r\n\t\t\t\t( material.alphaToCoverage === true ) ) {\r\n\r\n\t\t\t\t// in this case we need a unique material instance reflecting the\r\n\t\t\t\t// appropriate state\r\n\r\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\r\n\r\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\r\n\r\n\t\t\t\tif ( materialsForVariant === undefined ) {\r\n\r\n\t\t\t\t\tmaterialsForVariant = {};\r\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\r\n\r\n\t\t\t\tif ( cachedMaterial === undefined ) {\r\n\r\n\t\t\t\t\tcachedMaterial = result.clone();\r\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\r\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult = cachedMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tresult.visible = material.visible;\r\n\t\tresult.wireframe = material.wireframe;\r\n\r\n\t\tif ( type === VSMShadowMap ) {\r\n\r\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\r\n\r\n\t\t}\r\n\r\n\t\tresult.alphaMap = material.alphaMap;\r\n\t\tresult.alphaTest = ( material.alphaToCoverage === true ) ? 0.5 : material.alphaTest; // approximate alphaToCoverage by using a fixed alphaTest value\r\n\t\tresult.map = material.map;\r\n\r\n\t\tresult.clipShadows = material.clipShadows;\r\n\t\tresult.clippingPlanes = material.clippingPlanes;\r\n\t\tresult.clipIntersection = material.clipIntersection;\r\n\r\n\t\tresult.displacementMap = material.displacementMap;\r\n\t\tresult.displacementScale = material.displacementScale;\r\n\t\tresult.displacementBias = material.displacementBias;\r\n\r\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\tresult.linewidth = material.linewidth;\r\n\r\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\r\n\r\n\t\t\tconst materialProperties = renderer.properties.get( result );\r\n\t\t\tmaterialProperties.light = light;\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tconst visible = object.layers.test( camera.layers );\r\n\r\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\r\n\r\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\r\n\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\tconst geometry = objects.update( object );\r\n\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\tconst groups = geometry.groups;\r\n\r\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tconst group = groups[ k ];\r\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\r\n\r\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\r\n\r\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\r\n\r\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n\r\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( material.visible ) {\r\n\r\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\r\n\r\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\r\n\r\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n\r\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst children = object.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tconst material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\r\n\r\n\t\tfor ( const id in _materialCache ) {\r\n\r\n\t\t\tconst cache = _materialCache[ id ];\r\n\r\n\t\t\tconst uuid = event.target.uuid;\r\n\r\n\t\t\tif ( uuid in cache ) {\r\n\r\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\r\n\t\t\t\tshadowMaterial.dispose();\r\n\t\t\t\tdelete cache[ uuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport { WebGLShadowMap };\r\n","import { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor, ConstantColorFactor, OneMinusConstantColorFactor, ConstantAlphaFactor, OneMinusConstantAlphaFactor } from '../../constants.js';\r\nimport { Color } from '../../math/Color.js';\r\nimport { Vector4 } from '../../math/Vector4.js';\r\nimport { error } from '../../utils.js';\r\n\r\nconst reversedFuncs = {\r\n\t[ NeverDepth ]: AlwaysDepth,\r\n\t[ LessDepth ]: GreaterDepth,\r\n\t[ EqualDepth ]: NotEqualDepth,\r\n\t[ LessEqualDepth ]: GreaterEqualDepth,\r\n\r\n\t[ AlwaysDepth ]: NeverDepth,\r\n\t[ GreaterDepth ]: LessDepth,\r\n\t[ NotEqualDepth ]: EqualDepth,\r\n\t[ GreaterEqualDepth ]: LessEqualDepth,\r\n};\r\n\r\nfunction WebGLState( gl, extensions ) {\r\n\r\n\tfunction ColorBuffer() {\r\n\r\n\t\tlet locked = false;\r\n\r\n\t\tconst color = new Vector4();\r\n\t\tlet currentColorMask = null;\r\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\r\n\r\n\t\treturn {\r\n\r\n\t\t\tsetMask: function ( colorMask ) {\r\n\r\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\r\n\r\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\r\n\t\t\t\t\tcurrentColorMask = colorMask;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\tlocked = lock;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha === true ) {\r\n\r\n\t\t\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolor.set( r, g, b, a );\r\n\r\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\r\n\r\n\t\t\t\t\tgl.clearColor( r, g, b, a );\r\n\t\t\t\t\tcurrentColorClear.copy( color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\treset: function () {\r\n\r\n\t\t\t\tlocked = false;\r\n\r\n\t\t\t\tcurrentColorMask = null;\r\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction DepthBuffer() {\r\n\r\n\t\tlet locked = false;\r\n\r\n\t\tlet currentReversed = false;\r\n\t\tlet currentDepthMask = null;\r\n\t\tlet currentDepthFunc = null;\r\n\t\tlet currentDepthClear = null;\r\n\r\n\t\treturn {\r\n\r\n\t\t\tsetReversed: function ( reversed ) {\r\n\r\n\t\t\t\tif ( currentReversed !== reversed ) {\r\n\r\n\t\t\t\t\tconst ext = extensions.get( 'EXT_clip_control' );\r\n\r\n\t\t\t\t\tif ( reversed ) {\r\n\r\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.ZERO_TO_ONE_EXT );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.NEGATIVE_ONE_TO_ONE_EXT );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentReversed = reversed;\r\n\r\n\t\t\t\t\tconst oldDepth = currentDepthClear;\r\n\t\t\t\t\tcurrentDepthClear = null;\r\n\t\t\t\t\tthis.setClear( oldDepth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tgetReversed: function () {\r\n\r\n\t\t\t\treturn currentReversed;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetTest: function ( depthTest ) {\r\n\r\n\t\t\t\tif ( depthTest ) {\r\n\r\n\t\t\t\t\tenable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetMask: function ( depthMask ) {\r\n\r\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\r\n\r\n\t\t\t\t\tgl.depthMask( depthMask );\r\n\t\t\t\t\tcurrentDepthMask = depthMask;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetFunc: function ( depthFunc ) {\r\n\r\n\t\t\t\tif ( currentReversed ) depthFunc = reversedFuncs[ depthFunc ];\r\n\r\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\t\tcase NeverDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase AlwaysDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase LessDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase LessEqualDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase EqualDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase GreaterDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase NotEqualDepth:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\tlocked = lock;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetClear: function ( depth ) {\r\n\r\n\t\t\t\tif ( currentDepthClear !== depth ) {\r\n\r\n\t\t\t\t\tif ( currentReversed ) {\r\n\r\n\t\t\t\t\t\tdepth = 1 - depth;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.clearDepth( depth );\r\n\t\t\t\t\tcurrentDepthClear = depth;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\treset: function () {\r\n\r\n\t\t\t\tlocked = false;\r\n\r\n\t\t\t\tcurrentDepthMask = null;\r\n\t\t\t\tcurrentDepthFunc = null;\r\n\t\t\t\tcurrentDepthClear = null;\r\n\t\t\t\tcurrentReversed = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction StencilBuffer() {\r\n\r\n\t\tlet locked = false;\r\n\r\n\t\tlet currentStencilMask = null;\r\n\t\tlet currentStencilFunc = null;\r\n\t\tlet currentStencilRef = null;\r\n\t\tlet currentStencilFuncMask = null;\r\n\t\tlet currentStencilFail = null;\r\n\t\tlet currentStencilZFail = null;\r\n\t\tlet currentStencilZPass = null;\r\n\t\tlet currentStencilClear = null;\r\n\r\n\t\treturn {\r\n\r\n\t\t\tsetTest: function ( stencilTest ) {\r\n\r\n\t\t\t\tif ( ! locked ) {\r\n\r\n\t\t\t\t\tif ( stencilTest ) {\r\n\r\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetMask: function ( stencilMask ) {\r\n\r\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\r\n\r\n\t\t\t\t\tgl.stencilMask( stencilMask );\r\n\t\t\t\t\tcurrentStencilMask = stencilMask;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\r\n\t\t\t\t     currentStencilRef !== stencilRef ||\r\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\r\n\r\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\r\n\r\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\t\t\tcurrentStencilRef = stencilRef;\r\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\r\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\r\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\r\n\r\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\r\n\r\n\t\t\t\t\tcurrentStencilFail = stencilFail;\r\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetLocked: function ( lock ) {\r\n\r\n\t\t\t\tlocked = lock;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tsetClear: function ( stencil ) {\r\n\r\n\t\t\t\tif ( currentStencilClear !== stencil ) {\r\n\r\n\t\t\t\t\tgl.clearStencil( stencil );\r\n\t\t\t\t\tcurrentStencilClear = stencil;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\treset: function () {\r\n\r\n\t\t\t\tlocked = false;\r\n\r\n\t\t\t\tcurrentStencilMask = null;\r\n\t\t\t\tcurrentStencilFunc = null;\r\n\t\t\t\tcurrentStencilRef = null;\r\n\t\t\t\tcurrentStencilFuncMask = null;\r\n\t\t\t\tcurrentStencilFail = null;\r\n\t\t\t\tcurrentStencilZFail = null;\r\n\t\t\t\tcurrentStencilZPass = null;\r\n\t\t\t\tcurrentStencilClear = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tconst colorBuffer = new ColorBuffer();\r\n\tconst depthBuffer = new DepthBuffer();\r\n\tconst stencilBuffer = new StencilBuffer();\r\n\r\n\tconst uboBindings = new WeakMap();\r\n\tconst uboProgramMap = new WeakMap();\r\n\r\n\tlet enabledCapabilities = {};\r\n\r\n\tlet currentBoundFramebuffers = {};\r\n\tlet currentDrawbuffers = new WeakMap();\r\n\tlet defaultDrawbuffers = [];\r\n\r\n\tlet currentProgram = null;\r\n\r\n\tlet currentBlendingEnabled = false;\r\n\tlet currentBlending = null;\r\n\tlet currentBlendEquation = null;\r\n\tlet currentBlendSrc = null;\r\n\tlet currentBlendDst = null;\r\n\tlet currentBlendEquationAlpha = null;\r\n\tlet currentBlendSrcAlpha = null;\r\n\tlet currentBlendDstAlpha = null;\r\n\tlet currentBlendColor = new Color( 0, 0, 0 );\r\n\tlet currentBlendAlpha = 0;\r\n\tlet currentPremultipledAlpha = false;\r\n\r\n\tlet currentFlipSided = null;\r\n\tlet currentCullFace = null;\r\n\r\n\tlet currentLineWidth = null;\r\n\r\n\tlet currentPolygonOffsetFactor = null;\r\n\tlet currentPolygonOffsetUnits = null;\r\n\r\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\r\n\r\n\tlet lineWidthAvailable = false;\r\n\tlet version = 0;\r\n\tconst glVersion = gl.getParameter( gl.VERSION );\r\n\r\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\r\n\r\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\r\n\t\tlineWidthAvailable = ( version >= 1.0 );\r\n\r\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\r\n\r\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\r\n\t\tlineWidthAvailable = ( version >= 2.0 );\r\n\r\n\t}\r\n\r\n\tlet currentTextureSlot = null;\r\n\tlet currentBoundTextures = {};\r\n\r\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\r\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\r\n\r\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\r\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\r\n\r\n\tfunction createTexture( type, target, count, dimensions ) {\r\n\r\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\r\n\t\tconst texture = gl.createTexture();\r\n\r\n\t\tgl.bindTexture( type, texture );\r\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\r\n\r\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tconst emptyTextures = {};\r\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\r\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\r\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\r\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\r\n\r\n\t// init\r\n\r\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\r\n\tdepthBuffer.setClear( 1 );\r\n\tstencilBuffer.setClear( 0 );\r\n\r\n\tenable( gl.DEPTH_TEST );\r\n\tdepthBuffer.setFunc( LessEqualDepth );\r\n\r\n\tsetFlipSided( false );\r\n\tsetCullFace( CullFaceBack );\r\n\tenable( gl.CULL_FACE );\r\n\r\n\tsetBlending( NoBlending );\r\n\r\n\t//\r\n\r\n\tfunction enable( id ) {\r\n\r\n\t\tif ( enabledCapabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tenabledCapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction disable( id ) {\r\n\r\n\t\tif ( enabledCapabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tenabledCapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction bindFramebuffer( target, framebuffer ) {\r\n\r\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\r\n\r\n\t\t\tgl.bindFramebuffer( target, framebuffer );\r\n\r\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\r\n\r\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\r\n\r\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\r\n\r\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\r\n\r\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction drawBuffers( renderTarget, framebuffer ) {\r\n\r\n\t\tlet drawBuffers = defaultDrawbuffers;\r\n\r\n\t\tlet needsUpdate = false;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\r\n\r\n\t\t\tif ( drawBuffers === undefined ) {\r\n\r\n\t\t\t\tdrawBuffers = [];\r\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst textures = renderTarget.textures;\r\n\r\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdrawBuffers.length = textures.length;\r\n\r\n\t\t\t\tneedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\r\n\r\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\r\n\r\n\t\t\t\tneedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( needsUpdate ) {\r\n\r\n\t\t\tgl.drawBuffers( drawBuffers );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction useProgram( program ) {\r\n\r\n\t\tif ( currentProgram !== program ) {\r\n\r\n\t\t\tgl.useProgram( program );\r\n\r\n\t\t\tcurrentProgram = program;\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tconst equationToGL = {\r\n\t\t[ AddEquation ]: gl.FUNC_ADD,\r\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\r\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\r\n\t};\r\n\r\n\tequationToGL[ MinEquation ] = gl.MIN;\r\n\tequationToGL[ MaxEquation ] = gl.MAX;\r\n\r\n\tconst factorToGL = {\r\n\t\t[ ZeroFactor ]: gl.ZERO,\r\n\t\t[ OneFactor ]: gl.ONE,\r\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\r\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\r\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\r\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\r\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\r\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\r\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\r\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\r\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\r\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\r\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\r\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\r\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\r\n\t};\r\n\r\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\r\n\r\n\t\tif ( blending === NoBlending ) {\r\n\r\n\t\t\tif ( currentBlendingEnabled === true ) {\r\n\r\n\t\t\t\tdisable( gl.BLEND );\r\n\t\t\t\tcurrentBlendingEnabled = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( currentBlendingEnabled === false ) {\r\n\r\n\t\t\tenable( gl.BLEND );\r\n\t\t\tcurrentBlendingEnabled = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending !== CustomBlending ) {\r\n\r\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n\r\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\r\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tswitch ( blending ) {\r\n\r\n\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, gl.ZERO, gl.ONE );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\terror( 'WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tswitch ( blending ) {\r\n\r\n\t\t\t\t\t\tcase NormalBlending:\r\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase AdditiveBlending:\r\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE, gl.ONE, gl.ONE );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase SubtractiveBlending:\r\n\t\t\t\t\t\t\terror( 'WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true' );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase MultiplyBlending:\r\n\t\t\t\t\t\t\terror( 'WebGLState: MultiplyBlending requires material.premultipliedAlpha = true' );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\terror( 'WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\r\n\t\t\t\tcurrentBlendAlpha = 0;\r\n\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// custom blending\r\n\r\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\r\n\r\n\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\r\n\r\n\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\r\n\r\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\r\n\r\n\t\t\tcurrentBlendColor.copy( blendColor );\r\n\t\t\tcurrentBlendAlpha = blendAlpha;\r\n\r\n\t\t}\r\n\r\n\t\tcurrentBlending = blending;\r\n\t\tcurrentPremultipledAlpha = false;\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material, frontFaceCW ) {\r\n\r\n\t\tmaterial.side === DoubleSide\r\n\t\t\t? disable( gl.CULL_FACE )\r\n\t\t\t: enable( gl.CULL_FACE );\r\n\r\n\t\tlet flipSided = ( material.side === BackSide );\r\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\r\n\r\n\t\tsetFlipSided( flipSided );\r\n\r\n\t\t( material.blending === NormalBlending && material.transparent === false )\r\n\t\t\t? setBlending( NoBlending )\r\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\r\n\r\n\t\tdepthBuffer.setFunc( material.depthFunc );\r\n\t\tdepthBuffer.setTest( material.depthTest );\r\n\t\tdepthBuffer.setMask( material.depthWrite );\r\n\t\tcolorBuffer.setMask( material.colorWrite );\r\n\r\n\t\tconst stencilWrite = material.stencilWrite;\r\n\t\tstencilBuffer.setTest( stencilWrite );\r\n\t\tif ( stencilWrite ) {\r\n\r\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\r\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\r\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\r\n\r\n\t\t}\r\n\r\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t\tmaterial.alphaToCoverage === true\r\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\r\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction setFlipSided( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCullFace( cullFace ) {\r\n\r\n\t\tif ( cullFace !== CullFaceNone ) {\r\n\r\n\t\t\tenable( gl.CULL_FACE );\r\n\r\n\t\t\tif ( cullFace !== currentCullFace ) {\r\n\r\n\t\t\t\tif ( cullFace === CullFaceBack ) {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.BACK );\r\n\r\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.FRONT );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdisable( gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t\tcurrentCullFace = cullFace;\r\n\r\n\t}\r\n\r\n\tfunction setLineWidth( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\r\n\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setScissorTest( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tenable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdisable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// texture\r\n\r\n\tfunction activeTexture( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) {\r\n\r\n\t\t\tif ( currentTextureSlot === null ) {\r\n\r\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\twebglSlot = currentTextureSlot;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction unbindTexture() {\r\n\r\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\r\n\r\n\t\t\tgl.bindTexture( boundTexture.type, null );\r\n\r\n\t\t\tboundTexture.type = undefined;\r\n\t\t\tboundTexture.texture = undefined;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction compressedTexImage2D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D( ...arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction compressedTexImage3D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage3D( ...arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texSubImage2D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texSubImage2D( ...arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texSubImage3D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texSubImage3D( ...arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction compressedTexSubImage2D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexSubImage2D( ...arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction compressedTexSubImage3D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexSubImage3D( ...arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texStorage2D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texStorage2D( ...arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texStorage3D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texStorage3D( ...arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texImage2D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D( ...arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction texImage3D() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage3D( ...arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLState:', error );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction scissor( scissor ) {\r\n\r\n\t\tif ( currentScissor.equals( scissor ) === false ) {\r\n\r\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n\t\t\tcurrentScissor.copy( scissor );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction viewport( viewport ) {\r\n\r\n\t\tif ( currentViewport.equals( viewport ) === false ) {\r\n\r\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n\t\t\tcurrentViewport.copy( viewport );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction updateUBOMapping( uniformsGroup, program ) {\r\n\r\n\t\tlet mapping = uboProgramMap.get( program );\r\n\r\n\t\tif ( mapping === undefined ) {\r\n\r\n\t\t\tmapping = new WeakMap();\r\n\r\n\t\t\tuboProgramMap.set( program, mapping );\r\n\r\n\t\t}\r\n\r\n\t\tlet blockIndex = mapping.get( uniformsGroup );\r\n\r\n\t\tif ( blockIndex === undefined ) {\r\n\r\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\r\n\r\n\t\t\tmapping.set( uniformsGroup, blockIndex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\r\n\r\n\t\tconst mapping = uboProgramMap.get( program );\r\n\t\tconst blockIndex = mapping.get( uniformsGroup );\r\n\r\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\r\n\r\n\t\t\t// bind shader specific block index to global block point\r\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\r\n\r\n\t\t\tuboBindings.set( program, blockIndex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction reset() {\r\n\r\n\t\t// reset state\r\n\r\n\t\tgl.disable( gl.BLEND );\r\n\t\tgl.disable( gl.CULL_FACE );\r\n\t\tgl.disable( gl.DEPTH_TEST );\r\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\tgl.disable( gl.SCISSOR_TEST );\r\n\t\tgl.disable( gl.STENCIL_TEST );\r\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\r\n\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\r\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\r\n\t\tgl.blendColor( 0, 0, 0, 0 );\r\n\r\n\t\tgl.colorMask( true, true, true, true );\r\n\t\tgl.clearColor( 0, 0, 0, 0 );\r\n\r\n\t\tgl.depthMask( true );\r\n\t\tgl.depthFunc( gl.LESS );\r\n\r\n\t\tdepthBuffer.setReversed( false );\r\n\r\n\t\tgl.clearDepth( 1 );\r\n\r\n\t\tgl.stencilMask( 0xffffffff );\r\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\r\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\tgl.polygonOffset( 0, 0 );\r\n\r\n\t\tgl.activeTexture( gl.TEXTURE0 );\r\n\r\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\r\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\r\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\r\n\r\n\t\tgl.useProgram( null );\r\n\r\n\t\tgl.lineWidth( 1 );\r\n\r\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\r\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\r\n\r\n\t\t// reset internals\r\n\r\n\t\tenabledCapabilities = {};\r\n\r\n\t\tcurrentTextureSlot = null;\r\n\t\tcurrentBoundTextures = {};\r\n\r\n\t\tcurrentBoundFramebuffers = {};\r\n\t\tcurrentDrawbuffers = new WeakMap();\r\n\t\tdefaultDrawbuffers = [];\r\n\r\n\t\tcurrentProgram = null;\r\n\r\n\t\tcurrentBlendingEnabled = false;\r\n\t\tcurrentBlending = null;\r\n\t\tcurrentBlendEquation = null;\r\n\t\tcurrentBlendSrc = null;\r\n\t\tcurrentBlendDst = null;\r\n\t\tcurrentBlendEquationAlpha = null;\r\n\t\tcurrentBlendSrcAlpha = null;\r\n\t\tcurrentBlendDstAlpha = null;\r\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\r\n\t\tcurrentBlendAlpha = 0;\r\n\t\tcurrentPremultipledAlpha = false;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\t\tcurrentCullFace = null;\r\n\r\n\t\tcurrentLineWidth = null;\r\n\r\n\t\tcurrentPolygonOffsetFactor = null;\r\n\t\tcurrentPolygonOffsetUnits = null;\r\n\r\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\r\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\r\n\r\n\t\tcolorBuffer.reset();\r\n\t\tdepthBuffer.reset();\r\n\t\tstencilBuffer.reset();\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tbuffers: {\r\n\t\t\tcolor: colorBuffer,\r\n\t\t\tdepth: depthBuffer,\r\n\t\t\tstencil: stencilBuffer\r\n\t\t},\r\n\r\n\t\tenable: enable,\r\n\t\tdisable: disable,\r\n\r\n\t\tbindFramebuffer: bindFramebuffer,\r\n\t\tdrawBuffers: drawBuffers,\r\n\r\n\t\tuseProgram: useProgram,\r\n\r\n\t\tsetBlending: setBlending,\r\n\t\tsetMaterial: setMaterial,\r\n\r\n\t\tsetFlipSided: setFlipSided,\r\n\t\tsetCullFace: setCullFace,\r\n\r\n\t\tsetLineWidth: setLineWidth,\r\n\t\tsetPolygonOffset: setPolygonOffset,\r\n\r\n\t\tsetScissorTest: setScissorTest,\r\n\r\n\t\tactiveTexture: activeTexture,\r\n\t\tbindTexture: bindTexture,\r\n\t\tunbindTexture: unbindTexture,\r\n\t\tcompressedTexImage2D: compressedTexImage2D,\r\n\t\tcompressedTexImage3D: compressedTexImage3D,\r\n\t\ttexImage2D: texImage2D,\r\n\t\ttexImage3D: texImage3D,\r\n\r\n\t\tupdateUBOMapping: updateUBOMapping,\r\n\t\tuniformBlockBinding: uniformBlockBinding,\r\n\r\n\t\ttexStorage2D: texStorage2D,\r\n\t\ttexStorage3D: texStorage3D,\r\n\t\ttexSubImage2D: texSubImage2D,\r\n\t\ttexSubImage3D: texSubImage3D,\r\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\r\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\r\n\r\n\t\tscissor: scissor,\r\n\t\tviewport: viewport,\r\n\r\n\t\treset: reset\r\n\r\n\t};\r\n\r\n}\r\n\r\nexport { WebGLState };\r\n","import { AlphaFormat, RedFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBFormat, RGBAFormat, RGBAIntegerFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_BPTC_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, UnsignedByteType, ByteType, UnsignedShortType, ShortType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedIntType, IntType, FloatType, UnsignedInt5999Type, UnsignedInt101111Type } from '../constants.js';\r\n\r\n/**\r\n * Scales the texture as large as possible within its surface without cropping\r\n * or stretching the texture. The method preserves the original aspect ratio of\r\n * the texture. Akin to CSS `object-fit: contain`\r\n *\r\n * @param {Texture} texture - The texture.\r\n * @param {number} aspect - The texture's aspect ratio.\r\n * @return {Texture} The updated texture.\r\n */\r\nfunction contain( texture, aspect ) {\r\n\r\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\r\n\r\n\tif ( imageAspect > aspect ) {\r\n\r\n\t\ttexture.repeat.x = 1;\r\n\t\ttexture.repeat.y = imageAspect / aspect;\r\n\r\n\t\ttexture.offset.x = 0;\r\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\r\n\r\n\t} else {\r\n\r\n\t\ttexture.repeat.x = aspect / imageAspect;\r\n\t\ttexture.repeat.y = 1;\r\n\r\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\r\n\t\ttexture.offset.y = 0;\r\n\r\n\t}\r\n\r\n\treturn texture;\r\n\r\n}\r\n\r\n/**\r\n * Scales the texture to the smallest possible size to fill the surface, leaving\r\n * no empty space. The method preserves the original aspect ratio of the texture.\r\n * Akin to CSS `object-fit: cover`.\r\n *\r\n * @param {Texture} texture - The texture.\r\n * @param {number} aspect - The texture's aspect ratio.\r\n * @return {Texture} The updated texture.\r\n */\r\nfunction cover( texture, aspect ) {\r\n\r\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\r\n\r\n\tif ( imageAspect > aspect ) {\r\n\r\n\t\ttexture.repeat.x = aspect / imageAspect;\r\n\t\ttexture.repeat.y = 1;\r\n\r\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\r\n\t\ttexture.offset.y = 0;\r\n\r\n\t} else {\r\n\r\n\t\ttexture.repeat.x = 1;\r\n\t\ttexture.repeat.y = imageAspect / aspect;\r\n\r\n\t\ttexture.offset.x = 0;\r\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\r\n\r\n\t}\r\n\r\n\treturn texture;\r\n\r\n}\r\n\r\n/**\r\n * Configures the texture to the default transformation. Akin to CSS `object-fit: fill`.\r\n *\r\n * @param {Texture} texture - The texture.\r\n * @return {Texture} The updated texture.\r\n */\r\nfunction fill( texture ) {\r\n\r\n\ttexture.repeat.x = 1;\r\n\ttexture.repeat.y = 1;\r\n\r\n\ttexture.offset.x = 0;\r\n\ttexture.offset.y = 0;\r\n\r\n\treturn texture;\r\n\r\n}\r\n\r\n/**\r\n * Determines how many bytes must be used to represent the texture.\r\n *\r\n * @param {number} width - The width of the texture.\r\n * @param {number} height - The height of the texture.\r\n * @param {number} format - The texture's format.\r\n * @param {number} type - The texture's type.\r\n * @return {number} The byte length.\r\n */\r\nfunction getByteLength( width, height, format, type ) {\r\n\r\n\tconst typeByteLength = getTextureTypeByteLength( type );\r\n\r\n\tswitch ( format ) {\r\n\r\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\r\n\t\tcase AlphaFormat:\r\n\t\t\treturn width * height;\r\n\t\tcase RedFormat:\r\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RedIntegerFormat:\r\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGFormat:\r\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGIntegerFormat:\r\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGBFormat:\r\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGBAFormat:\r\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGBAIntegerFormat:\r\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\r\n\t\tcase RGB_S3TC_DXT1_Format:\r\n\t\tcase RGBA_S3TC_DXT1_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\r\n\t\tcase RGBA_S3TC_DXT3_Format:\r\n\t\tcase RGBA_S3TC_DXT5_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\r\n\t\tcase RGB_PVRTC_2BPPV1_Format:\r\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\r\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\r\n\t\tcase RGB_PVRTC_4BPPV1_Format:\r\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\r\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\r\n\t\tcase RGB_ETC1_Format:\r\n\t\tcase RGB_ETC2_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\r\n\t\tcase RGBA_ETC2_EAC_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\r\n\t\tcase RGBA_ASTC_4x4_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\t\tcase RGBA_ASTC_5x4_Format:\r\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\t\tcase RGBA_ASTC_5x5_Format:\r\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_6x5_Format:\r\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_6x6_Format:\r\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\r\n\t\tcase RGBA_ASTC_8x5_Format:\r\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_8x6_Format:\r\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\r\n\t\tcase RGBA_ASTC_8x8_Format:\r\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\r\n\t\tcase RGBA_ASTC_10x5_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_10x6_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\r\n\t\tcase RGBA_ASTC_10x8_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\r\n\t\tcase RGBA_ASTC_10x10_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\r\n\t\tcase RGBA_ASTC_12x10_Format:\r\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\r\n\t\tcase RGBA_ASTC_12x12_Format:\r\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\r\n\t\tcase RGBA_BPTC_Format:\r\n\t\tcase RGB_BPTC_SIGNED_Format:\r\n\t\tcase RGB_BPTC_UNSIGNED_Format:\r\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\r\n\t\tcase RED_RGTC1_Format:\r\n\t\tcase SIGNED_RED_RGTC1_Format:\r\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\r\n\t\tcase RED_GREEN_RGTC2_Format:\r\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\r\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\r\n\r\n\t}\r\n\r\n\tthrow new Error(\r\n\t\t`Unable to determine texture byte length for ${format} format.`,\r\n\t);\r\n\r\n}\r\n\r\nfunction getTextureTypeByteLength( type ) {\r\n\r\n\tswitch ( type ) {\r\n\r\n\t\tcase UnsignedByteType:\r\n\t\tcase ByteType:\r\n\t\t\treturn { byteLength: 1, components: 1 };\r\n\t\tcase UnsignedShortType:\r\n\t\tcase ShortType:\r\n\t\tcase HalfFloatType:\r\n\t\t\treturn { byteLength: 2, components: 1 };\r\n\t\tcase UnsignedShort4444Type:\r\n\t\tcase UnsignedShort5551Type:\r\n\t\t\treturn { byteLength: 2, components: 4 };\r\n\t\tcase UnsignedIntType:\r\n\t\tcase IntType:\r\n\t\tcase FloatType:\r\n\t\t\treturn { byteLength: 4, components: 1 };\r\n\t\tcase UnsignedInt5999Type:\r\n\t\tcase UnsignedInt101111Type:\r\n\t\t\treturn { byteLength: 4, components: 3 };\r\n\r\n\t}\r\n\r\n\tthrow new Error( `Unknown texture type ${type}.` );\r\n\r\n}\r\n\r\n/**\r\n * A class containing utility functions for textures.\r\n *\r\n * @hideconstructor\r\n */\r\nclass TextureUtils {\r\n\r\n\t/**\r\n\t * Scales the texture as large as possible within its surface without cropping\r\n\t * or stretching the texture. The method preserves the original aspect ratio of\r\n\t * the texture. Akin to CSS `object-fit: contain`\r\n\t *\r\n\t * @param {Texture} texture - The texture.\r\n\t * @param {number} aspect - The texture's aspect ratio.\r\n\t * @return {Texture} The updated texture.\r\n\t */\r\n\tstatic contain( texture, aspect ) {\r\n\r\n\t\treturn contain( texture, aspect );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scales the texture to the smallest possible size to fill the surface, leaving\r\n\t * no empty space. The method preserves the original aspect ratio of the texture.\r\n\t * Akin to CSS `object-fit: cover`.\r\n\t *\r\n\t * @param {Texture} texture - The texture.\r\n\t * @param {number} aspect - The texture's aspect ratio.\r\n\t * @return {Texture} The updated texture.\r\n\t */\r\n\tstatic cover( texture, aspect ) {\r\n\r\n\t\treturn cover( texture, aspect );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the texture to the default transformation. Akin to CSS `object-fit: fill`.\r\n\t *\r\n\t * @param {Texture} texture - The texture.\r\n\t * @return {Texture} The updated texture.\r\n\t */\r\n\tstatic fill( texture ) {\r\n\r\n\t\treturn fill( texture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determines how many bytes must be used to represent the texture.\r\n\t *\r\n\t * @param {number} width - The width of the texture.\r\n\t * @param {number} height - The height of the texture.\r\n\t * @param {number} format - The texture's format.\r\n\t * @param {number} type - The texture's type.\r\n\t * @return {number} The byte length.\r\n\t */\r\n\tstatic getByteLength( width, height, format, type ) {\r\n\r\n\t\treturn getByteLength( width, height, format, type );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { contain, cover, fill, getByteLength, TextureUtils };\r\n","import { LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, RGBAFormat, DepthFormat, DepthStencilFormat, UnsignedIntType, FloatType, MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping, UnsignedByteType, NoColorSpace, LinearSRGBColorSpace, NeverCompare, AlwaysCompare, LessCompare, LessEqualCompare, EqualCompare, GreaterEqualCompare, GreaterCompare, NotEqualCompare, SRGBTransfer, LinearTransfer, UnsignedShortType, UnsignedInt248Type } from '../../constants.js';\r\nimport { createElementNS, warn, error } from '../../utils.js';\r\nimport { ColorManagement } from '../../math/ColorManagement.js';\r\nimport { Vector2 } from '../../math/Vector2.js';\r\nimport { getByteLength } from '../../extras/TextureUtils.js';\r\n\r\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\r\n\r\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\r\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\r\n\r\n\tconst _imageDimensions = new Vector2();\r\n\tconst _videoTextures = new WeakMap();\r\n\tlet _canvas;\r\n\r\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\r\n\r\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\r\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\r\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\r\n\r\n\tlet useOffscreenCanvas = false;\r\n\r\n\ttry {\r\n\r\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\r\n\t\t\t// eslint-disable-next-line compat/compat\r\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\r\n\r\n\t} catch ( err ) {\r\n\r\n\t\t// Ignore any errors\r\n\r\n\t}\r\n\r\n\tfunction createCanvas( width, height ) {\r\n\r\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\r\n\r\n\t\treturn useOffscreenCanvas ?\r\n\t\t\t// eslint-disable-next-line compat/compat\r\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\r\n\r\n\t}\r\n\r\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\r\n\r\n\t\tlet scale = 1;\r\n\r\n\t\tconst dimensions = getDimensions( image );\r\n\r\n\t\t// handle case if texture exceeds max size\r\n\r\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\r\n\r\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\r\n\r\n\t\t}\r\n\r\n\t\t// only perform resize if necessary\r\n\r\n\t\tif ( scale < 1 ) {\r\n\r\n\t\t\t// only perform resize for certain image types\r\n\r\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\r\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\r\n\r\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\r\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\r\n\r\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\r\n\r\n\t\t\t\t// cube textures can't reuse the same canvas\r\n\r\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\r\n\r\n\t\t\t\tcanvas.width = width;\r\n\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\tconst context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\twarn( 'WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\r\n\r\n\t\t\t\treturn canvas;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( 'data' in image ) {\r\n\r\n\t\t\t\t\twarn( 'WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn image;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction textureNeedsGenerateMipmaps( texture ) {\r\n\r\n\t\treturn texture.generateMipmaps;\r\n\r\n\t}\r\n\r\n\tfunction generateMipmap( target ) {\r\n\r\n\t\t_gl.generateMipmap( target );\r\n\r\n\t}\r\n\r\n\tfunction getTargetType( texture ) {\r\n\r\n\t\tif ( texture.isWebGLCubeRenderTarget ) return _gl.TEXTURE_CUBE_MAP;\r\n\t\tif ( texture.isWebGL3DRenderTarget ) return _gl.TEXTURE_3D;\r\n\t\tif ( texture.isWebGLArrayRenderTarget || texture.isCompressedArrayTexture ) return _gl.TEXTURE_2D_ARRAY;\r\n\t\treturn _gl.TEXTURE_2D;\r\n\r\n\t}\r\n\r\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\r\n\r\n\t\tif ( internalFormatName !== null ) {\r\n\r\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\r\n\r\n\t\t\twarn( 'WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\r\n\r\n\t\t}\r\n\r\n\t\tlet internalFormat = glFormat;\r\n\r\n\t\tif ( glFormat === _gl.RED ) {\r\n\r\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\r\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\r\n\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\r\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\r\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\r\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RG ) {\r\n\r\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\r\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\r\n\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\r\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\r\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\r\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RGB_INTEGER ) {\r\n\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGB16UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGB32UI;\r\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGB8I;\r\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGB16I;\r\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGB32I;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RGBA_INTEGER ) {\r\n\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGBA16UI;\r\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGBA32UI;\r\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGBA8I;\r\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGBA16I;\r\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGBA32I;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RGB ) {\r\n\r\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\r\n\t\t\tif ( glType === _gl.UNSIGNED_INT_10F_11F_11F_REV ) internalFormat = _gl.R11F_G11F_B10F;\r\n\r\n\t\t}\r\n\r\n\t\tif ( glFormat === _gl.RGBA ) {\r\n\r\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\r\n\r\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\r\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\r\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\r\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\r\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\r\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\r\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\r\n\r\n\t\t\textensions.get( 'EXT_color_buffer_float' );\r\n\r\n\t\t}\r\n\r\n\t\treturn internalFormat;\r\n\r\n\t}\r\n\r\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\r\n\r\n\t\tlet glInternalFormat;\r\n\t\tif ( useStencil ) {\r\n\r\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\r\n\r\n\t\t\t} else if ( depthType === FloatType ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\r\n\r\n\t\t\t} else if ( depthType === UnsignedShortType ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\r\n\t\t\t\twarn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\r\n\r\n\t\t\t} else if ( depthType === FloatType ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\r\n\t\t\t} else if ( depthType === UnsignedShortType ) {\r\n\r\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn glInternalFormat;\r\n\r\n\t}\r\n\r\n\tfunction getMipLevels( texture, image ) {\r\n\r\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\r\n\r\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\r\n\r\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\r\n\r\n\t\t\t// user-defined mipmaps\r\n\r\n\t\t\treturn texture.mipmaps.length;\r\n\r\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\r\n\r\n\t\t\treturn image.mipmaps.length;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// texture without mipmaps (only base level)\r\n\r\n\t\t\treturn 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tconst texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\tif ( texture.isVideoTexture ) {\r\n\r\n\t\t\t_videoTextures.delete( texture );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tconst renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t// check if it's necessary to remove the WebGLTexture object\r\n\r\n\t\tconst source = texture.source;\r\n\t\tconst webglTextures = _sources.get( source );\r\n\r\n\t\tif ( webglTextures ) {\r\n\r\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\r\n\t\t\twebglTexture.usedTimes --;\r\n\r\n\t\t\t// the WebGLTexture object is not used anymore, remove it\r\n\r\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\r\n\r\n\t\t\t\tdeleteTexture( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\r\n\r\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\r\n\r\n\t\t\t\t_sources.delete( source );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tproperties.remove( texture );\r\n\r\n\t}\r\n\r\n\tfunction deleteTexture( texture ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\tconst source = texture.source;\r\n\t\tconst webglTextures = _sources.get( source );\r\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\r\n\r\n\t\tinfo.memory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\trenderTarget.depthTexture.dispose();\r\n\r\n\t\t\tproperties.remove( renderTarget.depthTexture );\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\r\n\r\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\r\n\r\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\r\n\r\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\r\n\r\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tconst textures = renderTarget.textures;\r\n\r\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\r\n\r\n\t\t\tif ( attachmentProperties.__webglTexture ) {\r\n\r\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\r\n\r\n\t\t\t\tinfo.memory.textures --;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tproperties.remove( textures[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.remove( renderTarget );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tlet textureUnits = 0;\r\n\r\n\tfunction resetTextureUnits() {\r\n\r\n\t\ttextureUnits = 0;\r\n\r\n\t}\r\n\r\n\tfunction allocateTextureUnit() {\r\n\r\n\t\tconst textureUnit = textureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\twarn( 'WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\ttextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction getTextureCacheKey( texture ) {\r\n\r\n\t\tconst array = [];\r\n\r\n\t\tarray.push( texture.wrapS );\r\n\t\tarray.push( texture.wrapT );\r\n\t\tarray.push( texture.wrapR || 0 );\r\n\t\tarray.push( texture.magFilter );\r\n\t\tarray.push( texture.minFilter );\r\n\t\tarray.push( texture.anisotropy );\r\n\t\tarray.push( texture.internalFormat );\r\n\t\tarray.push( texture.format );\r\n\t\tarray.push( texture.type );\r\n\t\tarray.push( texture.generateMipmaps );\r\n\t\tarray.push( texture.premultiplyAlpha );\r\n\t\tarray.push( texture.flipY );\r\n\t\tarray.push( texture.unpackAlignment );\r\n\t\tarray.push( texture.colorSpace );\r\n\r\n\t\treturn array.join();\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tfunction setTexture2D( texture, slot ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\r\n\r\n\t\tif ( texture.isRenderTargetTexture === false && texture.isExternalTexture !== true && texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tconst image = texture.image;\r\n\r\n\t\t\tif ( image === null ) {\r\n\r\n\t\t\t\twarn( 'WebGLRenderer: Texture marked for update but no image data found.' );\r\n\r\n\t\t\t} else if ( image.complete === false ) {\r\n\r\n\t\t\t\twarn( 'WebGLRenderer: Texture marked for update but image is incomplete' );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture.isExternalTexture ) {\r\n\r\n\t\t\ttextureProperties.__webglTexture = texture.sourceTexture ? texture.sourceTexture : null;\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t}\r\n\r\n\tfunction setTexture2DArray( texture, slot ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t} else if ( texture.isExternalTexture ) {\r\n\r\n\t\t\ttextureProperties.__webglTexture = texture.sourceTexture ? texture.sourceTexture : null;\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t}\r\n\r\n\tfunction setTexture3D( texture, slot ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t}\r\n\r\n\tfunction setTextureCube( texture, slot ) {\r\n\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t}\r\n\r\n\tconst wrappingToGL = {\r\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\r\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\r\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\r\n\t};\r\n\r\n\tconst filterToGL = {\r\n\t\t[ NearestFilter ]: _gl.NEAREST,\r\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\r\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\r\n\r\n\t\t[ LinearFilter ]: _gl.LINEAR,\r\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\r\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\r\n\t};\r\n\r\n\tconst compareToGL = {\r\n\t\t[ NeverCompare ]: _gl.NEVER,\r\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\r\n\t\t[ LessCompare ]: _gl.LESS,\r\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\r\n\t\t[ EqualCompare ]: _gl.EQUAL,\r\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\r\n\t\t[ GreaterCompare ]: _gl.GREATER,\r\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\r\n\t};\r\n\r\n\tfunction setTextureParameters( textureType, texture ) {\r\n\r\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\r\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\r\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\r\n\r\n\t\t\twarn( 'WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\r\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\r\n\r\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\r\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\r\n\r\n\t\tif ( texture.compareFunction ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\r\n\r\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\r\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\r\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initTexture( textureProperties, texture ) {\r\n\r\n\t\tlet forceUpload = false;\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t}\r\n\r\n\t\t// create Source <-> WebGLTextures mapping if necessary\r\n\r\n\t\tconst source = texture.source;\r\n\t\tlet webglTextures = _sources.get( source );\r\n\r\n\t\tif ( webglTextures === undefined ) {\r\n\r\n\t\t\twebglTextures = {};\r\n\t\t\t_sources.set( source, webglTextures );\r\n\r\n\t\t}\r\n\r\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\r\n\r\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\r\n\r\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\r\n\r\n\t\t\t// if not, create a new instance of WebGLTexture\r\n\r\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\r\n\r\n\t\t\t\t// create new entry\r\n\r\n\t\t\t\twebglTextures[ textureCacheKey ] = {\r\n\t\t\t\t\ttexture: _gl.createTexture(),\r\n\t\t\t\t\tusedTimes: 0\r\n\t\t\t\t};\r\n\r\n\t\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\r\n\t\t\t\t// even if the image contents are identical\r\n\r\n\t\t\t\tforceUpload = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\r\n\r\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\r\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\r\n\r\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\r\n\r\n\t\t\tif ( webglTexture !== undefined ) {\r\n\r\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\r\n\r\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\r\n\r\n\t\t\t\t\tdeleteTexture( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// store references to cache key and WebGLTexture object\r\n\r\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\r\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\r\n\r\n\t\t}\r\n\r\n\t\treturn forceUpload;\r\n\r\n\t}\r\n\r\n\tfunction getRow( index, rowLength, componentStride ) {\r\n\r\n\t\treturn Math.floor( Math.floor( index / componentStride ) / rowLength );\r\n\r\n\t}\r\n\r\n\tfunction updateTexture( texture, image, glFormat, glType ) {\r\n\r\n\t\tconst componentStride = 4; // only RGBA supported\r\n\r\n\t\tconst updateRanges = texture.updateRanges;\r\n\r\n\t\tif ( updateRanges.length === 0 ) {\r\n\r\n\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Before applying update ranges, we merge any adjacent / overlapping\r\n\t\t\t// ranges to reduce load on `gl.texSubImage2D`. Empirically, this has led\r\n\t\t\t// to performance improvements for applications which make heavy use of\r\n\t\t\t// update ranges. Likely due to GPU command overhead.\r\n\t\t\t//\r\n\t\t\t// Note that to reduce garbage collection between frames, we merge the\r\n\t\t\t// update ranges in-place. This is safe because this method will clear the\r\n\t\t\t// update ranges once updated.\r\n\r\n\t\t\tupdateRanges.sort( ( a, b ) => a.start - b.start );\r\n\r\n\t\t\t// To merge the update ranges in-place, we work from left to right in the\r\n\t\t\t// existing updateRanges array, merging ranges. This may result in a final\r\n\t\t\t// array which is smaller than the original. This index tracks the last\r\n\t\t\t// index representing a merged range, any data after this index can be\r\n\t\t\t// trimmed once the merge algorithm is completed.\r\n\t\t\tlet mergeIndex = 0;\r\n\r\n\t\t\tfor ( let i = 1; i < updateRanges.length; i ++ ) {\r\n\r\n\t\t\t\tconst previousRange = updateRanges[ mergeIndex ];\r\n\t\t\t\tconst range = updateRanges[ i ];\r\n\r\n\t\t\t\t// Only merge if in the same row and overlapping/adjacent\r\n\t\t\t\tconst previousEnd = previousRange.start + previousRange.count;\r\n\t\t\t\tconst currentRow = getRow( range.start, image.width, componentStride );\r\n\t\t\t\tconst previousRow = getRow( previousRange.start, image.width, componentStride );\r\n\r\n\t\t\t\t// We add one here to merge adjacent ranges. This is safe because ranges\r\n\t\t\t\t// operate over positive integers.\r\n\t\t\t\tif (\r\n\t\t\t\t\trange.start <= previousEnd + 1 &&\r\n\t\t\t\t\tcurrentRow === previousRow &&\r\n\t\t\t\t\tgetRow( range.start + range.count - 1, image.width, componentStride ) === currentRow // ensure range doesn't spill\r\n\t\t\t\t) {\r\n\r\n\t\t\t\t\tpreviousRange.count = Math.max(\r\n\t\t\t\t\t\tpreviousRange.count,\r\n\t\t\t\t\t\trange.start + range.count - previousRange.start\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t++ mergeIndex;\r\n\t\t\t\t\tupdateRanges[ mergeIndex ] = range;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Trim the array to only contain the merged ranges.\r\n\t\t\tupdateRanges.length = mergeIndex + 1;\r\n\r\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\r\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\r\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\r\n\r\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst range = updateRanges[ i ];\r\n\r\n\t\t\t\tconst pixelStart = Math.floor( range.start / componentStride );\r\n\t\t\t\tconst pixelCount = Math.ceil( range.count / componentStride );\r\n\r\n\t\t\t\tconst x = pixelStart % image.width;\r\n\t\t\t\tconst y = Math.floor( pixelStart / image.width );\r\n\r\n\t\t\t\t// Assumes update ranges refer to contiguous memory\r\n\t\t\t\tconst width = pixelCount;\r\n\t\t\t\tconst height = 1;\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, x );\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, y );\r\n\r\n\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, x, y, width, height, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.clearUpdateRanges();\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tlet textureType = _gl.TEXTURE_2D;\r\n\r\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\r\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\r\n\r\n\t\tconst forceUpload = initTexture( textureProperties, texture );\r\n\t\tconst source = texture.source;\r\n\r\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t\tconst sourceProperties = properties.get( source );\r\n\r\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\r\n\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\r\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\r\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\r\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\r\n\r\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\r\n\t\t\timage = verifyColorSpace( texture, image );\r\n\r\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\r\n\r\n\t\t\tconst glType = utils.convert( texture.type );\r\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\r\n\r\n\t\t\tsetTextureParameters( textureType, texture );\r\n\r\n\t\t\tlet mipmap;\r\n\t\t\tconst mipmaps = texture.mipmaps;\r\n\r\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\r\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\r\n\t\t\tconst dataReady = source.dataReady;\r\n\t\t\tconst levels = getMipLevels( texture, image );\r\n\r\n\t\t\tif ( texture.isDepthTexture ) {\r\n\r\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isDataTexture ) {\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 ) {\r\n\r\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\tupdateTexture( texture, image, glFormat, glType );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isCompressedTexture ) {\r\n\r\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\r\n\r\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\r\n\r\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tconst layerByteLength = getByteLength( mipmap.width, mipmap.height, texture.format, texture.type );\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerData = mipmap.data.subarray(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / mipmap.data.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / mipmap.data.BYTES_PER_ELEMENT\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, layerData );\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\r\n\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\twarn( 'WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\r\n\r\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\twarn( 'WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isDataArrayTexture ) {\r\n\r\n\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\r\n\r\n\t\t\t\t\t\t\tconst layerByteLength = getByteLength( image.width, image.height, texture.format, texture.type );\r\n\r\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\r\n\r\n\t\t\t\t\t\t\t\tconst layerData = image.data.subarray(\r\n\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / image.data.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / image.data.BYTES_PER_ELEMENT\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, layerData );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isData3DTexture ) {\r\n\r\n\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( texture.isFramebufferTexture ) {\r\n\r\n\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tlet width = image.width, height = image.height;\r\n\r\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\t\t\twidth >>= 1;\r\n\t\t\t\t\t\t\theight >>= 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\t\tif ( mipmaps.length > 0 ) {\r\n\r\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\r\n\r\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\tif ( allocateMemory ) {\r\n\r\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\r\n\r\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\r\n\r\n\t\t\t\tgenerateMipmap( textureType );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsourceProperties.__version = source.version;\r\n\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t}\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t}\r\n\r\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( texture.image.length !== 6 ) return;\r\n\r\n\t\tconst forceUpload = initTexture( textureProperties, texture );\r\n\t\tconst source = texture.source;\r\n\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\r\n\r\n\t\tconst sourceProperties = properties.get( source );\r\n\r\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\r\n\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\r\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\r\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\r\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\r\n\r\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\r\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\r\n\r\n\t\t\tconst cubeImage = [];\r\n\r\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst image = cubeImage[ 0 ],\r\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\r\n\t\t\t\tglType = utils.convert( texture.type ),\r\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\r\n\r\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\r\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\r\n\t\t\tconst dataReady = source.dataReady;\r\n\t\t\tlet levels = getMipLevels( texture, image );\r\n\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\r\n\r\n\t\t\tlet mipmaps;\r\n\r\n\t\t\tif ( isCompressed ) {\r\n\r\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\r\n\r\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\r\n\r\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\twarn( 'WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmipmaps = texture.mipmaps;\r\n\r\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\r\n\r\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\r\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\r\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\r\n\r\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\r\n\r\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\r\n\r\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\r\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\r\n\r\n\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( useTexStorage ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( dataReady ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\r\n\r\n\t\t\t\t// We assume images for cube map have the same size.\r\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsourceProperties.__version = source.version;\r\n\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t}\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\t// Setup storage for target texture and bind it to correct framebuffer\r\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\r\n\r\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\r\n\t\tconst glType = utils.convert( texture.type );\r\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\ttextureProperties.__renderTarget = renderTarget;\r\n\r\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\r\n\r\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\r\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\r\n\r\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\r\n\r\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\r\n\r\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\r\n\r\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\r\n\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, level );\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\t// retrieve the depth attachment types\r\n\t\t\tconst depthTexture = renderTarget.depthTexture;\r\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\r\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\r\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\r\n\r\n\t\t\t// set up the attachment\r\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\r\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\r\n\t\t\tif ( isUseMultisampledRTT ) {\r\n\r\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t} else if ( isMultisample ) {\r\n\r\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst textures = renderTarget.textures;\r\n\r\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\r\n\r\n\t\t\t\tconst texture = textures[ i ];\r\n\r\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\r\n\t\t\t\tconst glType = utils.convert( texture.type );\r\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\r\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\r\n\r\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\r\n\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\r\n\r\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\r\n\r\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\r\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\r\n\r\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\r\n\r\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\r\n\r\n\t\t}\r\n\r\n\t\tconst textureProperties = properties.get( renderTarget.depthTexture );\r\n\t\ttextureProperties.__renderTarget = renderTarget;\r\n\r\n\t\t// upload an empty depth texture with framebuffer size\r\n\t\tif ( ! textureProperties.__webglTexture ||\r\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\r\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\r\n\r\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\r\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\r\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\r\n\r\n\t\tconst webglDepthTexture = textureProperties.__webglTexture;\r\n\t\tconst samples = getRenderTargetSamples( renderTarget );\r\n\r\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\r\n\r\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\r\n\r\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\r\n\r\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\r\n\r\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Setup GL resources for a non-texture depth buffer\r\n\tfunction setupDepthRenderbuffer( renderTarget ) {\r\n\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\r\n\r\n\t\t// if the bound depth texture has changed\r\n\t\tif ( renderTargetProperties.__boundDepthTexture !== renderTarget.depthTexture ) {\r\n\r\n\t\t\t// fire the dispose event to get rid of stored state associated with the previously bound depth buffer\r\n\t\t\tconst depthTexture = renderTarget.depthTexture;\r\n\t\t\tif ( renderTargetProperties.__depthDisposeCallback ) {\r\n\r\n\t\t\t\trenderTargetProperties.__depthDisposeCallback();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// set up dispose listeners to track when the currently attached buffer is implicitly unbound\r\n\t\t\tif ( depthTexture ) {\r\n\r\n\t\t\t\tconst disposeEvent = () => {\r\n\r\n\t\t\t\t\tdelete renderTargetProperties.__boundDepthTexture;\r\n\t\t\t\t\tdelete renderTargetProperties.__depthDisposeCallback;\r\n\t\t\t\t\tdepthTexture.removeEventListener( 'dispose', disposeEvent );\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdepthTexture.addEventListener( 'dispose', disposeEvent );\r\n\t\t\t\trenderTargetProperties.__depthDisposeCallback = disposeEvent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderTargetProperties.__boundDepthTexture = depthTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\r\n\r\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\r\n\r\n\t\t\tconst mipmaps = renderTarget.texture.mipmaps;\r\n\r\n\t\t\tif ( mipmaps && mipmaps.length > 0 ) {\r\n\r\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer[ 0 ], renderTarget );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\r\n\r\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer[ i ] === undefined ) {\r\n\r\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// attach buffer if it's been created already\r\n\t\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\r\n\t\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer[ i ];\r\n\t\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst mipmaps = renderTarget.texture.mipmaps;\r\n\r\n\t\t\t\tif ( mipmaps && mipmaps.length > 0 ) {\r\n\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ 0 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer === undefined ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// attach buffer if it's been created already\r\n\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\r\n\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer;\r\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// rebind framebuffer with external textures\r\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\r\n\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( colorTexture !== undefined ) {\r\n\r\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( depthTexture !== undefined ) {\r\n\r\n\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Set up GL resources for the render target\r\n\tfunction setupRenderTarget( renderTarget ) {\r\n\r\n\t\tconst texture = renderTarget.texture;\r\n\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\t\tconst textureProperties = properties.get( texture );\r\n\r\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tconst textures = renderTarget.textures;\r\n\r\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\r\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\r\n\r\n\t\tif ( ! isMultipleRenderTargets ) {\r\n\r\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\r\n\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\t// Setup framebuffer\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\r\n\r\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\r\n\r\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isMultipleRenderTargets ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\r\n\r\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\r\n\r\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t\t\t\tinfo.memory.textures ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\r\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\r\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\r\n\r\n\t\t\t\t\tconst texture = textures[ i ];\r\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\r\n\r\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\r\n\t\t\t\t\tconst glType = utils.convert( texture.type );\r\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\r\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\r\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n\r\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\r\n\t\t\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Setup color buffer\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\r\n\r\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\r\n\r\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\r\n\r\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\r\n\r\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t} else if ( isMultipleRenderTargets ) {\r\n\r\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst attachment = textures[ i ];\r\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\r\n\r\n\t\t\t\tlet glTextureType = _gl.TEXTURE_2D;\r\n\r\n\t\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\r\n\r\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( glTextureType, attachmentProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( glTextureType, attachment );\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, glTextureType, 0 );\r\n\r\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\r\n\r\n\t\t\t\t\tgenerateMipmap( glTextureType );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\r\n\r\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\r\n\r\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\r\n\t\t\tsetTextureParameters( glTextureType, texture );\r\n\r\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\r\n\r\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\r\n\r\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\r\n\r\n\t\t\t\tgenerateMipmap( glTextureType );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t}\r\n\r\n\t\t// Setup depth and stencil buffers\r\n\r\n\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\r\n\t\tconst textures = renderTarget.textures;\r\n\r\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst texture = textures[ i ];\r\n\r\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\r\n\r\n\t\t\t\tconst targetType = getTargetType( renderTarget );\r\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\r\n\r\n\t\t\t\tstate.bindTexture( targetType, webglTexture );\r\n\t\t\t\tgenerateMipmap( targetType );\r\n\t\t\t\tstate.unbindTexture();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst invalidationArrayRead = [];\r\n\tconst invalidationArrayDraw = [];\r\n\r\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\r\n\r\n\t\tif ( renderTarget.samples > 0 ) {\r\n\r\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\r\n\r\n\t\t\t\tconst textures = renderTarget.textures;\r\n\t\t\t\tconst width = renderTarget.width;\r\n\t\t\t\tconst height = renderTarget.height;\r\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\r\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\r\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\r\n\r\n\t\t\t\t// If MRT we need to remove FBO attachments\r\n\t\t\t\tif ( isMultipleRenderTargets ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\r\n\t\t\t\tconst mipmaps = renderTarget.texture.mipmaps;\r\n\r\n\t\t\t\tif ( mipmaps && mipmaps.length > 0 ) {\r\n\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ 0 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\r\n\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\r\n\r\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\r\n\r\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\r\n\r\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\r\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\r\n\r\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\r\n\r\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\r\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\r\n\r\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\r\n\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\r\n\r\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\r\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\r\n\r\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\r\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\r\n\r\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\r\n\t\t\t\tif ( isMultipleRenderTargets ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\r\n\r\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\r\n\r\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\r\n\r\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\r\n\r\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getRenderTargetSamples( renderTarget ) {\r\n\r\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\r\n\r\n\t}\r\n\r\n\tfunction useMultisampledRTT( renderTarget ) {\r\n\r\n\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\r\n\r\n\t}\r\n\r\n\tfunction updateVideoTexture( texture ) {\r\n\r\n\t\tconst frame = info.render.frame;\r\n\r\n\t\t// Check the last frame we updated the VideoTexture\r\n\r\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\r\n\r\n\t\t\t_videoTextures.set( texture, frame );\r\n\t\t\ttexture.update();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction verifyColorSpace( texture, image ) {\r\n\r\n\t\tconst colorSpace = texture.colorSpace;\r\n\t\tconst format = texture.format;\r\n\t\tconst type = texture.type;\r\n\r\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\r\n\r\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\r\n\r\n\t\t\t// sRGB\r\n\r\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\r\n\r\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\r\n\r\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\r\n\r\n\t\t\t\t\twarn( 'WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\terror( 'WebGLTextures: Unsupported texture color space:', colorSpace );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction getDimensions( image ) {\r\n\r\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\r\n\r\n\t\t\t// if intrinsic data are not available, fallback to width/height\r\n\r\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\r\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\r\n\r\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\r\n\r\n\t\t\t_imageDimensions.width = image.displayWidth;\r\n\t\t\t_imageDimensions.height = image.displayHeight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_imageDimensions.width = image.width;\r\n\t\t\t_imageDimensions.height = image.height;\r\n\r\n\t\t}\r\n\r\n\t\treturn _imageDimensions;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tthis.allocateTextureUnit = allocateTextureUnit;\r\n\tthis.resetTextureUnits = resetTextureUnits;\r\n\r\n\tthis.setTexture2D = setTexture2D;\r\n\tthis.setTexture2DArray = setTexture2DArray;\r\n\tthis.setTexture3D = setTexture3D;\r\n\tthis.setTextureCube = setTextureCube;\r\n\tthis.rebindTextures = rebindTextures;\r\n\tthis.setupRenderTarget = setupRenderTarget;\r\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\r\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\r\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\r\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\r\n\tthis.useMultisampledRTT = useMultisampledRTT;\r\n\r\n}\r\n\r\nexport { WebGLTextures };\r\n","import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, RedFormat, RGBAFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, RGBA_BPTC_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, NoColorSpace, SRGBTransfer, UnsignedInt5999Type, RGBFormat, UnsignedInt101111Type } from '../../constants.js';\r\nimport { ColorManagement } from '../../math/ColorManagement.js';\r\n\r\nfunction WebGLUtils( gl, extensions ) {\r\n\r\n\tfunction convert( p, colorSpace = NoColorSpace ) {\r\n\r\n\t\tlet extension;\r\n\r\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\r\n\r\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\r\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\r\n\t\tif ( p === UnsignedInt101111Type ) return gl.UNSIGNED_INT_10F_11F_11F_REV;\r\n\r\n\t\tif ( p === ByteType ) return gl.BYTE;\r\n\t\tif ( p === ShortType ) return gl.SHORT;\r\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\r\n\t\tif ( p === IntType ) return gl.INT;\r\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\r\n\t\tif ( p === FloatType ) return gl.FLOAT;\r\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\r\n\r\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\r\n\t\tif ( p === RGBFormat ) return gl.RGB;\r\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\r\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\r\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\r\n\r\n\t\t// WebGL2 formats.\r\n\r\n\t\tif ( p === RedFormat ) return gl.RED;\r\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\r\n\t\tif ( p === RGFormat ) return gl.RG;\r\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\r\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\r\n\r\n\t\t// S3TC\r\n\r\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\r\n\r\n\t\t\tif ( transfer === SRGBTransfer ) {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// PVRTC\r\n\r\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// ETC\r\n\r\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\r\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// ASTC\r\n\r\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\r\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\r\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\r\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\r\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\r\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// BPTC\r\n\r\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\r\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\r\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// RGTC\r\n\r\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\r\n\r\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tif ( p === RED_RGTC1_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\r\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\r\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\r\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\r\n\r\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\r\n\r\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\r\n\r\n\t}\r\n\r\n\treturn { convert: convert };\r\n\r\n}\r\n\r\n\r\nexport { WebGLUtils };\r\n","import { PerspectiveCamera } from './PerspectiveCamera.js';\r\n\r\n/**\r\n * This type of camera can be used in order to efficiently render a scene with a\r\n * predefined set of cameras. This is an important performance aspect for\r\n * rendering VR scenes.\r\n *\r\n * An instance of `ArrayCamera` always has an array of sub cameras. It's mandatory\r\n * to define for each sub camera the `viewport` property which determines the\r\n * part of the viewport that is rendered with this camera.\r\n *\r\n * @augments PerspectiveCamera\r\n */\r\nclass ArrayCamera extends PerspectiveCamera {\r\n\r\n\t/**\r\n\t * Constructs a new array camera.\r\n\t *\r\n\t * @param {Array<PerspectiveCamera>} [array=[]] - An array of perspective sub cameras.\r\n\t */\r\n\tconstructor( array = [] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isArrayCamera = true;\r\n\r\n\t\t/**\r\n\t\t * Whether this camera is used with multiview rendering or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.isMultiViewCamera = false;\r\n\r\n\t\t/**\r\n\t\t * An array of perspective sub cameras.\r\n\t\t *\r\n\t\t * @type {Array<PerspectiveCamera>}\r\n\t\t */\r\n\t\tthis.cameras = array;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ArrayCamera };\r\n","import { Object3D } from '../core/Object3D.js';\r\n\r\n/**\r\n * This is almost identical to an {@link Object3D}. Its purpose is to\r\n * make working with groups of objects syntactically clearer.\r\n *\r\n * ```js\r\n * // Create a group and add the two cubes.\r\n * // These cubes can now be rotated / scaled etc as a group.\r\n * const group = new THREE.Group();\r\n *\r\n * group.add( meshA );\r\n * group.add( meshB );\r\n *\r\n * scene.add( group );\r\n * ```\r\n *\r\n * @augments Object3D\r\n */\r\nclass Group extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isGroup = true;\r\n\r\n\t\tthis.type = 'Group';\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { Group };\r\n","import { Vector3 } from '../../math/Vector3.js';\r\nimport { Group } from '../../objects/Group.js';\r\n\r\nconst _moveEvent = { type: 'move' };\r\n\r\n/**\r\n * Class for representing a XR controller with its\r\n * different coordinate systems.\r\n *\r\n * @private\r\n */\r\nclass WebXRController {\r\n\r\n\t/**\r\n\t * Constructs a new XR controller.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t/**\r\n\t\t * A group representing the target ray space\r\n\t\t * of the XR controller.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {?Group}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis._targetRay = null;\r\n\r\n\t\t/**\r\n\t\t * A group representing the grip space\r\n\t\t * of the XR controller.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {?Group}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis._grip = null;\r\n\r\n\t\t/**\r\n\t\t * A group representing the hand space\r\n\t\t * of the XR controller.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @type {?Group}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis._hand = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a group representing the hand space of the XR controller.\r\n\t *\r\n\t * @return {Group} A group representing the hand space of the XR controller.\r\n\t */\r\n\tgetHandSpace() {\r\n\r\n\t\tif ( this._hand === null ) {\r\n\r\n\t\t\tthis._hand = new Group();\r\n\t\t\tthis._hand.matrixAutoUpdate = false;\r\n\t\t\tthis._hand.visible = false;\r\n\r\n\t\t\tthis._hand.joints = {};\r\n\t\t\tthis._hand.inputState = { pinching: false };\r\n\r\n\t\t}\r\n\r\n\t\treturn this._hand;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a group representing the target ray space of the XR controller.\r\n\t *\r\n\t * @return {Group} A group representing the target ray space of the XR controller.\r\n\t */\r\n\tgetTargetRaySpace() {\r\n\r\n\t\tif ( this._targetRay === null ) {\r\n\r\n\t\t\tthis._targetRay = new Group();\r\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\r\n\t\t\tthis._targetRay.visible = false;\r\n\t\t\tthis._targetRay.hasLinearVelocity = false;\r\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\r\n\t\t\tthis._targetRay.hasAngularVelocity = false;\r\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\r\n\r\n\t\t}\r\n\r\n\t\treturn this._targetRay;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a group representing the grip space of the XR controller.\r\n\t *\r\n\t * @return {Group} A group representing the grip space of the XR controller.\r\n\t */\r\n\tgetGripSpace() {\r\n\r\n\t\tif ( this._grip === null ) {\r\n\r\n\t\t\tthis._grip = new Group();\r\n\t\t\tthis._grip.matrixAutoUpdate = false;\r\n\t\t\tthis._grip.visible = false;\r\n\t\t\tthis._grip.hasLinearVelocity = false;\r\n\t\t\tthis._grip.linearVelocity = new Vector3();\r\n\t\t\tthis._grip.hasAngularVelocity = false;\r\n\t\t\tthis._grip.angularVelocity = new Vector3();\r\n\r\n\t\t}\r\n\r\n\t\treturn this._grip;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches the given event to the groups representing\r\n\t * the different coordinate spaces of the XR controller.\r\n\t *\r\n\t * @param {Object} event - The event to dispatch.\r\n\t * @return {WebXRController} A reference to this instance.\r\n\t */\r\n\tdispatchEvent( event ) {\r\n\r\n\t\tif ( this._targetRay !== null ) {\r\n\r\n\t\t\tthis._targetRay.dispatchEvent( event );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._grip !== null ) {\r\n\r\n\t\t\tthis._grip.dispatchEvent( event );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._hand !== null ) {\r\n\r\n\t\t\tthis._hand.dispatchEvent( event );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Connects the controller with the given XR input source.\r\n\t *\r\n\t * @param {XRInputSource} inputSource - The input source.\r\n\t * @return {WebXRController} A reference to this instance.\r\n\t */\r\n\tconnect( inputSource ) {\r\n\r\n\t\tif ( inputSource && inputSource.hand ) {\r\n\r\n\t\t\tconst hand = this._hand;\r\n\r\n\t\t\tif ( hand ) {\r\n\r\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\r\n\r\n\t\t\t\t\t// Initialize hand with joints when connected\r\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Disconnects the controller from the given XR input source.\r\n\t *\r\n\t * @param {XRInputSource} inputSource - The input source.\r\n\t * @return {WebXRController} A reference to this instance.\r\n\t */\r\n\tdisconnect( inputSource ) {\r\n\r\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\r\n\r\n\t\tif ( this._targetRay !== null ) {\r\n\r\n\t\t\tthis._targetRay.visible = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._grip !== null ) {\r\n\r\n\t\t\tthis._grip.visible = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._hand !== null ) {\r\n\r\n\t\t\tthis._hand.visible = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the controller with the given input source, XR frame and reference space.\r\n\t * This updates the transformations of the groups that represent the different\r\n\t * coordinate systems of the controller.\r\n\t *\r\n\t * @param {XRInputSource} inputSource - The input source.\r\n\t * @param {XRFrame} frame - The XR frame.\r\n\t * @param {XRReferenceSpace} referenceSpace - The reference space.\r\n\t * @return {WebXRController} A reference to this instance.\r\n\t */\r\n\tupdate( inputSource, frame, referenceSpace ) {\r\n\r\n\t\tlet inputPose = null;\r\n\t\tlet gripPose = null;\r\n\t\tlet handPose = null;\r\n\r\n\t\tconst targetRay = this._targetRay;\r\n\t\tconst grip = this._grip;\r\n\t\tconst hand = this._hand;\r\n\r\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\r\n\r\n\t\t\tif ( hand && inputSource.hand ) {\r\n\r\n\t\t\t\thandPose = true;\r\n\r\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\r\n\r\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\r\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\r\n\r\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\r\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\r\n\r\n\t\t\t\t\tif ( jointPose !== null ) {\r\n\r\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\r\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\r\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\r\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tjoint.visible = jointPose !== null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Custom events\r\n\r\n\t\t\t\t// Check pinchz\r\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\r\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\r\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\r\n\r\n\t\t\t\tconst distanceToPinch = 0.02;\r\n\t\t\t\tconst threshold = 0.005;\r\n\r\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\r\n\r\n\t\t\t\t\thand.inputState.pinching = false;\r\n\t\t\t\t\tthis.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'pinchend',\r\n\t\t\t\t\t\thandedness: inputSource.handedness,\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\r\n\r\n\t\t\t\t\thand.inputState.pinching = true;\r\n\t\t\t\t\tthis.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'pinchstart',\r\n\t\t\t\t\t\thandedness: inputSource.handedness,\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\r\n\r\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\r\n\r\n\t\t\t\t\tif ( gripPose !== null ) {\r\n\r\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\r\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\r\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\r\n\r\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\r\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\r\n\r\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\r\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( targetRay !== null ) {\r\n\r\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\r\n\r\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\r\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\r\n\r\n\t\t\t\t\tinputPose = gripPose;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( inputPose !== null ) {\r\n\r\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\r\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\r\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\r\n\r\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\r\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\r\n\r\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\r\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\tif ( targetRay !== null ) {\r\n\r\n\t\t\ttargetRay.visible = ( inputPose !== null );\r\n\r\n\t\t}\r\n\r\n\t\tif ( grip !== null ) {\r\n\r\n\t\t\tgrip.visible = ( gripPose !== null );\r\n\r\n\t\t}\r\n\r\n\t\tif ( hand !== null ) {\r\n\r\n\t\t\thand.visible = ( handPose !== null );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a group representing the hand joint for the given input joint.\r\n\t *\r\n\t * @private\r\n\t * @param {Group} hand - The group representing the hand space.\r\n\t * @param {XRJointSpace} inputjoint - The hand joint data.\r\n\t * @return {Group} A group representing the hand joint for the given input joint.\r\n\t */\r\n\t_getHandJoint( hand, inputjoint ) {\r\n\r\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\r\n\r\n\t\t\tconst joint = new Group();\r\n\t\t\tjoint.matrixAutoUpdate = false;\r\n\t\t\tjoint.visible = false;\r\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\r\n\r\n\t\t\thand.add( joint );\r\n\r\n\t\t}\r\n\r\n\t\treturn hand.joints[ inputjoint.jointName ];\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport { WebXRController };\r\n","import { Texture } from './Texture.js';\r\n\r\n/**\r\n * Represents a texture created externally with the same renderer context.\r\n *\r\n * This may be a texture from a protected media stream, device camera feed,\r\n * or other data feeds like a depth sensor.\r\n *\r\n * Note that this class is only supported in {@link WebGLRenderer}, and in\r\n * the {@link WebGPURenderer} WebGPU backend.\r\n *\r\n * @augments Texture\r\n */\r\nclass ExternalTexture extends Texture {\r\n\r\n\t/**\r\n\t * Creates a new raw texture.\r\n\t *\r\n\t * @param {?(WebGLTexture|GPUTexture)} [sourceTexture=null] - The external texture.\r\n\t */\r\n\tconstructor( sourceTexture = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * The external source texture.\r\n\t\t *\r\n\t\t * @type {?(WebGLTexture|GPUTexture)}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.sourceTexture = sourceTexture;\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isExternalTexture = true;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.sourceTexture = source.sourceTexture;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ExternalTexture };\r\n","import { PlaneGeometry } from '../../geometries/PlaneGeometry.js';\r\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\r\nimport { Mesh } from '../../objects/Mesh.js';\r\nimport { ExternalTexture } from '../../textures/ExternalTexture.js';\r\n\r\nconst _occlusion_vertex = `\r\nvoid main() {\r\n\r\n\tgl_Position = vec4( position, 1.0 );\r\n\r\n}`;\r\n\r\nconst _occlusion_fragment = `\r\nuniform sampler2DArray depthColor;\r\nuniform float depthWidth;\r\nuniform float depthHeight;\r\n\r\nvoid main() {\r\n\r\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\r\n\r\n\tif ( coord.x >= 1.0 ) {\r\n\r\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\r\n\r\n\t} else {\r\n\r\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\r\n\r\n\t}\r\n\r\n}`;\r\n\r\n/**\r\n * A XR module that manages the access to the Depth Sensing API.\r\n */\r\nclass WebXRDepthSensing {\r\n\r\n\t/**\r\n\t * Constructs a new depth sensing module.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t/**\r\n\t\t * An opaque texture representing the depth of the user's environment.\r\n\t\t *\r\n\t\t * @type {?ExternalTexture}\r\n\t\t */\r\n\t\tthis.texture = null;\r\n\r\n\t\t/**\r\n\t\t * A plane mesh for visualizing the depth texture.\r\n\t\t *\r\n\t\t * @type {?Mesh}\r\n\t\t */\r\n\t\tthis.mesh = null;\r\n\r\n\t\t/**\r\n\t\t * The depth near value.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.depthNear = 0;\r\n\r\n\t\t/**\r\n\t\t * The depth near far.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t */\r\n\t\tthis.depthFar = 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Inits the depth sensing module\r\n\t *\r\n\t * @param {XRWebGLDepthInformation} depthData - The XR depth data.\r\n\t * @param {XRRenderState} renderState - The XR render state.\r\n\t */\r\n\tinit( depthData, renderState ) {\r\n\r\n\t\tif ( this.texture === null ) {\r\n\r\n\t\t\tconst texture = new ExternalTexture( depthData.texture );\r\n\r\n\t\t\tif ( ( depthData.depthNear !== renderState.depthNear ) || ( depthData.depthFar !== renderState.depthFar ) ) {\r\n\r\n\t\t\t\tthis.depthNear = depthData.depthNear;\r\n\t\t\t\tthis.depthFar = depthData.depthFar;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.texture = texture;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a plane mesh that visualizes the depth texture.\r\n\t *\r\n\t * @param {ArrayCamera} cameraXR - The XR camera.\r\n\t * @return {?Mesh} The plane mesh.\r\n\t */\r\n\tgetMesh( cameraXR ) {\r\n\r\n\t\tif ( this.texture !== null ) {\r\n\r\n\t\t\tif ( this.mesh === null ) {\r\n\r\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\r\n\t\t\t\tconst material = new ShaderMaterial( {\r\n\t\t\t\t\tvertexShader: _occlusion_vertex,\r\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\r\n\t\t\t\t\tuniforms: {\r\n\t\t\t\t\t\tdepthColor: { value: this.texture },\r\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\r\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.mesh;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the module\r\n\t */\r\n\treset() {\r\n\r\n\t\tthis.texture = null;\r\n\t\tthis.mesh = null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a texture representing the depth of the user's environment.\r\n\t *\r\n\t * @return {?ExternalTexture} The depth texture.\r\n\t */\r\n\tgetDepthTexture() {\r\n\r\n\t\treturn this.texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { WebXRDepthSensing };\r\n","import { ArrayCamera } from '../../cameras/ArrayCamera.js';\r\nimport { EventDispatcher } from '../../core/EventDispatcher.js';\r\nimport { PerspectiveCamera } from '../../cameras/PerspectiveCamera.js';\r\nimport { Vector2 } from '../../math/Vector2.js';\r\nimport { Vector3 } from '../../math/Vector3.js';\r\nimport { Vector4 } from '../../math/Vector4.js';\r\nimport { RAD2DEG } from '../../math/MathUtils.js';\r\nimport { WebGLAnimation } from '../webgl/WebGLAnimation.js';\r\nimport { WebGLRenderTarget } from '../WebGLRenderTarget.js';\r\nimport { WebXRController } from './WebXRController.js';\r\nimport { DepthTexture } from '../../textures/DepthTexture.js';\r\nimport { ExternalTexture } from '../../textures/ExternalTexture.js';\r\nimport { DepthFormat, DepthStencilFormat, RGBAFormat, UnsignedByteType, UnsignedIntType, UnsignedInt248Type } from '../../constants.js';\r\nimport { WebXRDepthSensing } from './WebXRDepthSensing.js';\r\nimport { warn } from '../../utils.js';\r\n\r\n/**\r\n * This class represents an abstraction of the WebXR Device API and is\r\n * internally used by {@link WebGLRenderer}. `WebXRManager` also provides a public\r\n * interface that allows users to enable/disable XR and perform XR related\r\n * tasks like for instance retrieving controllers.\r\n *\r\n * @augments EventDispatcher\r\n * @hideconstructor\r\n */\r\nclass WebXRManager extends EventDispatcher {\r\n\r\n\t/**\r\n\t * Constructs a new WebGL renderer.\r\n\t *\r\n\t * @param {WebGLRenderer} renderer - The renderer.\r\n\t * @param {WebGL2RenderingContext} gl - The rendering context.\r\n\t */\r\n\tconstructor( renderer, gl ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tlet session = null;\r\n\r\n\t\tlet framebufferScaleFactor = 1.0;\r\n\r\n\t\tlet referenceSpace = null;\r\n\t\tlet referenceSpaceType = 'local-floor';\r\n\t\t// Set default foveation to maximum.\r\n\t\tlet foveation = 1.0;\r\n\t\tlet customReferenceSpace = null;\r\n\r\n\t\tlet pose = null;\r\n\t\tlet glBinding = null;\r\n\t\tlet glProjLayer = null;\r\n\t\tlet glBaseLayer = null;\r\n\t\tlet xrFrame = null;\r\n\r\n\t\tconst supportsGlBinding = typeof XRWebGLBinding !== 'undefined';\r\n\r\n\t\tconst depthSensing = new WebXRDepthSensing();\r\n\t\tconst cameraAccessTextures = {};\r\n\t\tconst attributes = gl.getContextAttributes();\r\n\r\n\t\tlet initialRenderTarget = null;\r\n\t\tlet newRenderTarget = null;\r\n\r\n\t\tconst controllers = [];\r\n\t\tconst controllerInputSources = [];\r\n\r\n\t\tconst currentSize = new Vector2();\r\n\t\tlet currentPixelRatio = null;\r\n\r\n\t\t//\r\n\r\n\t\tconst cameraL = new PerspectiveCamera();\r\n\t\tcameraL.viewport = new Vector4();\r\n\r\n\t\tconst cameraR = new PerspectiveCamera();\r\n\t\tcameraR.viewport = new Vector4();\r\n\r\n\t\tconst cameras = [ cameraL, cameraR ];\r\n\r\n\t\tconst cameraXR = new ArrayCamera();\r\n\r\n\t\tlet _currentDepthNear = null;\r\n\t\tlet _currentDepthFar = null;\r\n\r\n\t\t//\r\n\r\n\t\t/**\r\n\t\t * Whether the manager's XR camera should be automatically updated or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.cameraAutoUpdate = true;\r\n\r\n\t\t/**\r\n\t\t * This flag notifies the renderer to be ready for XR rendering. Set it to `true`\r\n\t\t * if you are going to use XR in your app.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.enabled = false;\r\n\r\n\t\t/**\r\n\t\t * Whether XR presentation is active or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.isPresenting = false;\r\n\r\n\t\t/**\r\n\t\t * Returns a group representing the `target ray` space of the XR controller.\r\n\t\t * Use this space for visualizing 3D objects that support the user in pointing\r\n\t\t * tasks like UI interaction.\r\n\t\t *\r\n\t\t * @param {number} index - The index of the controller.\r\n\t\t * @return {Group} A group representing the `target ray` space.\r\n\t\t */\r\n\t\tthis.getController = function ( index ) {\r\n\r\n\t\t\tlet controller = controllers[ index ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\tcontrollers[ index ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller.getTargetRaySpace();\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns a group representing the `grip` space of the XR controller.\r\n\t\t * Use this space for visualizing 3D objects that support the user in pointing\r\n\t\t * tasks like UI interaction.\r\n\t\t *\r\n\t\t * Note: If you want to show something in the user's hand AND offer a\r\n\t\t * pointing ray at the same time, you'll want to attached the handheld object\r\n\t\t * to the group returned by `getControllerGrip()` and the ray to the\r\n\t\t * group returned by `getController()`. The idea is to have two\r\n\t\t * different groups in two different coordinate spaces for the same WebXR\r\n\t\t * controller.\r\n\t\t *\r\n\t\t * @param {number} index - The index of the controller.\r\n\t\t * @return {Group} A group representing the `grip` space.\r\n\t\t */\r\n\t\tthis.getControllerGrip = function ( index ) {\r\n\r\n\t\t\tlet controller = controllers[ index ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\tcontrollers[ index ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller.getGripSpace();\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns a group representing the `hand` space of the XR controller.\r\n\t\t * Use this space for visualizing 3D objects that support the user in pointing\r\n\t\t * tasks like UI interaction.\r\n\t\t *\r\n\t\t * @param {number} index - The index of the controller.\r\n\t\t * @return {Group} A group representing the `hand` space.\r\n\t\t */\r\n\t\tthis.getHand = function ( index ) {\r\n\r\n\t\t\tlet controller = controllers[ index ];\r\n\r\n\t\t\tif ( controller === undefined ) {\r\n\r\n\t\t\t\tcontroller = new WebXRController();\r\n\t\t\t\tcontrollers[ index ] = controller;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn controller.getHandSpace();\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tfunction onSessionEvent( event ) {\r\n\r\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\r\n\r\n\t\t\tif ( controllerIndex === - 1 ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst controller = controllers[ controllerIndex ];\r\n\r\n\t\t\tif ( controller !== undefined ) {\r\n\r\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\r\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction onSessionEnd() {\r\n\r\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\r\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\r\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\r\n\r\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\r\n\r\n\t\t\t\tif ( inputSource === null ) continue;\r\n\r\n\t\t\t\tcontrollerInputSources[ i ] = null;\r\n\r\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_currentDepthNear = null;\r\n\t\t\t_currentDepthFar = null;\r\n\r\n\t\t\tdepthSensing.reset();\r\n\t\t\tfor ( const key in cameraAccessTextures ) {\r\n\r\n\t\t\t\tdelete cameraAccessTextures[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// restore framebuffer/rendering state\r\n\r\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\r\n\r\n\t\t\tglBaseLayer = null;\r\n\t\t\tglProjLayer = null;\r\n\t\t\tglBinding = null;\r\n\t\t\tsession = null;\r\n\t\t\tnewRenderTarget = null;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tanimation.stop();\r\n\r\n\t\t\tscope.isPresenting = false;\r\n\r\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\r\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\r\n\r\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the framebuffer scale factor.\r\n\t\t *\r\n\t\t * This method can not be used during a XR session.\r\n\t\t *\r\n\t\t * @param {number} value - The framebuffer scale factor.\r\n\t\t */\r\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\r\n\r\n\t\t\tframebufferScaleFactor = value;\r\n\r\n\t\t\tif ( scope.isPresenting === true ) {\r\n\r\n\t\t\t\twarn( 'WebXRManager: Cannot change framebuffer scale while presenting.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sets the reference space type. Can be used to configure a spatial relationship with the user's physical\r\n\t\t * environment. Depending on how the user moves in 3D space, setting an appropriate reference space can\r\n\t\t * improve tracking. Default is `local-floor`. Valid values can be found here\r\n\t\t * https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace#reference_space_types.\r\n\t\t *\r\n\t\t * This method can not be used during a XR session.\r\n\t\t *\r\n\t\t * @param {string} value - The reference space type.\r\n\t\t */\r\n\t\tthis.setReferenceSpaceType = function ( value ) {\r\n\r\n\t\t\treferenceSpaceType = value;\r\n\r\n\t\t\tif ( scope.isPresenting === true ) {\r\n\r\n\t\t\t\twarn( 'WebXRManager: Cannot change reference space type while presenting.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the XR reference space.\r\n\t\t *\r\n\t\t * @return {XRReferenceSpace} The XR reference space.\r\n\t\t */\r\n\t\tthis.getReferenceSpace = function () {\r\n\r\n\t\t\treturn customReferenceSpace || referenceSpace;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sets a custom XR reference space.\r\n\t\t *\r\n\t\t * @param {XRReferenceSpace} space - The XR reference space.\r\n\t\t */\r\n\t\tthis.setReferenceSpace = function ( space ) {\r\n\r\n\t\t\tcustomReferenceSpace = space;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the current base layer.\r\n\t\t *\r\n\t\t * This is an `XRProjectionLayer` when the targeted XR device supports the\r\n\t\t * WebXR Layers API, or an `XRWebGLLayer` otherwise.\r\n\t\t *\r\n\t\t * @return {?(XRWebGLLayer|XRProjectionLayer)} The XR base layer.\r\n\t\t */\r\n\t\tthis.getBaseLayer = function () {\r\n\r\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the current XR binding.\r\n\t\t *\r\n\t\t * Creates a new binding if needed and the browser is\r\n\t\t * capable of doing so.\r\n\t\t *\r\n\t\t * @return {?XRWebGLBinding} The XR binding. Returns `null` if one cannot be created.\r\n\t\t */\r\n\t\tthis.getBinding = function () {\r\n\r\n\t\t\tif ( glBinding === null && supportsGlBinding ) {\r\n\r\n\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn glBinding;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the current XR frame.\r\n\t\t *\r\n\t\t * @return {?XRFrame} The XR frame. Returns `null` when used outside a XR session.\r\n\t\t */\r\n\t\tthis.getFrame = function () {\r\n\r\n\t\t\treturn xrFrame;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the current XR session.\r\n\t\t *\r\n\t\t * @return {?XRSession} The XR session. Returns `null` when used outside a XR session.\r\n\t\t */\r\n\t\tthis.getSession = function () {\r\n\r\n\t\t\treturn session;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * After a XR session has been requested usually with one of the `*Button` modules, it\r\n\t\t * is injected into the renderer with this method. This method triggers the start of\r\n\t\t * the actual XR rendering.\r\n\t\t *\r\n\t\t * @async\r\n\t\t * @param {XRSession} value - The XR session to set.\r\n\t\t * @return {Promise} A Promise that resolves when the session has been set.\r\n\t\t */\r\n\t\tthis.setSession = async function ( value ) {\r\n\r\n\t\t\tsession = value;\r\n\r\n\t\t\tif ( session !== null ) {\r\n\r\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\r\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\r\n\r\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\r\n\r\n\t\t\t\t\tawait gl.makeXRCompatible();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\r\n\t\t\t\trenderer.getSize( currentSize );\r\n\r\n\r\n\t\t\t\t// Check that the browser implements the necessary APIs to use an\r\n\t\t\t\t// XRProjectionLayer rather than an XRWebGLLayer\r\n\t\t\t\tconst supportsLayers = supportsGlBinding && 'createProjectionLayer' in XRWebGLBinding.prototype;\r\n\r\n\t\t\t\tif ( ! supportsLayers ) {\r\n\r\n\t\t\t\t\tconst layerInit = {\r\n\t\t\t\t\t\tantialias: attributes.antialias,\r\n\t\t\t\t\t\talpha: true,\r\n\t\t\t\t\t\tdepth: attributes.depth,\r\n\t\t\t\t\t\tstencil: attributes.stencil,\r\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\r\n\r\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\r\n\r\n\t\t\t\t\trenderer.setPixelRatio( 1 );\r\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\r\n\r\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\r\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\r\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tformat: RGBAFormat,\r\n\t\t\t\t\t\t\ttype: UnsignedByteType,\r\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\r\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\r\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glBaseLayer.ignoreDepthValues === false ),\r\n\t\t\t\t\t\t\tresolveStencilBuffer: ( glBaseLayer.ignoreDepthValues === false )\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlet depthFormat = null;\r\n\t\t\t\t\tlet depthType = null;\r\n\t\t\t\t\tlet glDepthFormat = null;\r\n\r\n\t\t\t\t\tif ( attributes.depth ) {\r\n\r\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\r\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\r\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst projectionlayerInit = {\r\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\r\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\r\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tglBinding = this.getBinding();\r\n\r\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\r\n\r\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\r\n\r\n\t\t\t\t\trenderer.setPixelRatio( 1 );\r\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\r\n\r\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\r\n\t\t\t\t\t\tglProjLayer.textureWidth,\r\n\t\t\t\t\t\tglProjLayer.textureHeight,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tformat: RGBAFormat,\r\n\t\t\t\t\t\t\ttype: UnsignedByteType,\r\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\r\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\r\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\r\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\r\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false ),\r\n\t\t\t\t\t\t\tresolveStencilBuffer: ( glProjLayer.ignoreDepthValues === false )\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\r\n\r\n\t\t\t\tthis.setFoveation( foveation );\r\n\r\n\t\t\t\tcustomReferenceSpace = null;\r\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\r\n\r\n\t\t\t\tanimation.setContext( session );\r\n\t\t\t\tanimation.start();\r\n\r\n\t\t\t\tscope.isPresenting = true;\r\n\r\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the environment blend mode from the current XR session.\r\n\t\t *\r\n\t\t * @return {'opaque'|'additive'|'alpha-blend'|undefined} The environment blend mode. Returns `undefined` when used outside of a XR session.\r\n\t\t */\r\n\t\tthis.getEnvironmentBlendMode = function () {\r\n\r\n\t\t\tif ( session !== null ) {\r\n\r\n\t\t\t\treturn session.environmentBlendMode;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the current depth texture computed via depth sensing.\r\n\t\t *\r\n\t\t * See {@link WebXRDepthSensing#getDepthTexture}.\r\n\t\t *\r\n\t\t * @return {?Texture} The depth texture.\r\n\t\t */\r\n\t\tthis.getDepthTexture = function () {\r\n\r\n\t\t\treturn depthSensing.getDepthTexture();\r\n\r\n\t\t};\r\n\r\n\t\tfunction onInputSourcesChange( event ) {\r\n\r\n\t\t\t// Notify disconnected\r\n\r\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\r\n\r\n\t\t\t\tconst inputSource = event.removed[ i ];\r\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\r\n\r\n\t\t\t\tif ( index >= 0 ) {\r\n\r\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\r\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Notify connected\r\n\r\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\r\n\r\n\t\t\t\tconst inputSource = event.added[ i ];\r\n\r\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\r\n\r\n\t\t\t\tif ( controllerIndex === - 1 ) {\r\n\r\n\t\t\t\t\t// Assign input source a controller that currently has no input source\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\r\n\r\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\r\n\t\t\t\t\t\t\tcontrollerIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\r\n\r\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\r\n\t\t\t\t\t\t\tcontrollerIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\r\n\r\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst controller = controllers[ controllerIndex ];\r\n\r\n\t\t\t\tif ( controller ) {\r\n\r\n\t\t\t\t\tcontroller.connect( inputSource );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst cameraLPos = new Vector3();\r\n\t\tconst cameraRPos = new Vector3();\r\n\r\n\t\t/**\r\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\r\n\t\t * the cameras' projection and world matrices have already been set.\r\n\t\t * And that near and far planes are identical for both cameras.\r\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\r\n\t\t *\r\n\t\t * @param {ArrayCamera} camera - The camera to update.\r\n\t\t * @param {PerspectiveCamera} cameraL - The left camera.\r\n\t\t * @param {PerspectiveCamera} cameraR - The right camera.\r\n\t\t */\r\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\r\n\r\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\r\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\r\n\r\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\r\n\r\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\r\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\r\n\r\n\t\t\t// VR systems will have identical far and near planes, and\r\n\t\t\t// most likely identical top and bottom frustum extents.\r\n\t\t\t// Use the left camera for these values.\r\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\r\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\r\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\r\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\r\n\r\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\r\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\r\n\t\t\tconst left = near * leftFov;\r\n\t\t\tconst right = near * rightFov;\r\n\r\n\t\t\t// Calculate the new camera's position offset from the\r\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\r\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\r\n\t\t\tconst xOffset = zOffset * - leftFov;\r\n\r\n\t\t\t// TODO: Better way to apply this offset?\r\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\r\n\t\t\tcamera.translateX( xOffset );\r\n\t\t\tcamera.translateZ( zOffset );\r\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\r\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\r\n\r\n\t\t\t// Check if the projection uses an infinite far plane.\r\n\t\t\tif ( projL[ 10 ] === - 1.0 ) {\r\n\r\n\t\t\t\t// Use the projection matrix from the left eye.\r\n\t\t\t\t// The camera offset is sufficient to include the view volumes\r\n\t\t\t\t// of both eyes (assuming symmetric projections).\r\n\t\t\t\tcamera.projectionMatrix.copy( cameraL.projectionMatrix );\r\n\t\t\t\tcamera.projectionMatrixInverse.copy( cameraL.projectionMatrixInverse );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Find the union of the frustum values of the cameras and scale\r\n\t\t\t\t// the values so that the near plane's position does not change in world space,\r\n\t\t\t\t// although must now be relative to the new union camera.\r\n\t\t\t\tconst near2 = near + zOffset;\r\n\t\t\t\tconst far2 = far + zOffset;\r\n\t\t\t\tconst left2 = left - xOffset;\r\n\t\t\t\tconst right2 = right + ( ipd - xOffset );\r\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\r\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\r\n\r\n\t\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\r\n\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateCamera( camera, parent ) {\r\n\r\n\t\t\tif ( parent === null ) {\r\n\r\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Updates the state of the XR camera. Use this method on app level if you\r\n\t\t * set `cameraAutoUpdate` to `false`. The method requires the non-XR\r\n\t\t * camera of the scene as a parameter. The passed in camera's transformation\r\n\t\t * is automatically adjusted to the position of the XR camera when calling\r\n\t\t * this method.\r\n\t\t *\r\n\t\t * @param {Camera} camera - The camera.\r\n\t\t */\r\n\t\tthis.updateCamera = function ( camera ) {\r\n\r\n\t\t\tif ( session === null ) return;\r\n\r\n\t\t\tlet depthNear = camera.near;\r\n\t\t\tlet depthFar = camera.far;\r\n\r\n\t\t\tif ( depthSensing.texture !== null ) {\r\n\r\n\t\t\t\tif ( depthSensing.depthNear > 0 ) depthNear = depthSensing.depthNear;\r\n\t\t\t\tif ( depthSensing.depthFar > 0 ) depthFar = depthSensing.depthFar;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = depthNear;\r\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = depthFar;\r\n\r\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\r\n\r\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\r\n\r\n\t\t\t\tsession.updateRenderState( {\r\n\t\t\t\t\tdepthNear: cameraXR.near,\r\n\t\t\t\t\tdepthFar: cameraXR.far\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t_currentDepthNear = cameraXR.near;\r\n\t\t\t\t_currentDepthFar = cameraXR.far;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// inherit camera layers and enable eye layers (1 = left, 2 = right)\r\n\t\t\tcameraXR.layers.mask = camera.layers.mask | 0b110;\r\n\t\t\tcameraL.layers.mask = cameraXR.layers.mask & 0b011;\r\n\t\t\tcameraR.layers.mask = cameraXR.layers.mask & 0b101;\r\n\r\n\t\t\tconst parent = camera.parent;\r\n\t\t\tconst cameras = cameraXR.cameras;\r\n\r\n\t\t\tupdateCamera( cameraXR, parent );\r\n\r\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\r\n\r\n\t\t\t\tupdateCamera( cameras[ i ], parent );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update projection matrix for proper view frustum culling\r\n\r\n\t\t\tif ( cameras.length === 2 ) {\r\n\r\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// assume single camera setup (AR)\r\n\r\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update user camera and its children\r\n\r\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\r\n\r\n\t\t};\r\n\r\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\r\n\r\n\t\t\tif ( parent === null ) {\r\n\r\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\r\n\t\t\t\tcamera.matrix.invert();\r\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\r\n\t\t\tcamera.updateMatrixWorld( true );\r\n\r\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\r\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\r\n\r\n\t\t\tif ( camera.isPerspectiveCamera ) {\r\n\r\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\r\n\t\t\t\tcamera.zoom = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns an instance of {@link ArrayCamera} which represents the XR camera\r\n\t\t * of the active XR session. For each view it holds a separate camera object.\r\n\t\t *\r\n\t\t * The camera's `fov` is currently not used and does not reflect the fov of\r\n\t\t * the XR camera. If you need the fov on app level, you have to compute in\r\n\t\t * manually from the XR camera's projection matrices.\r\n\t\t *\r\n\t\t * @return {ArrayCamera} The XR camera.\r\n\t\t */\r\n\t\tthis.getCamera = function () {\r\n\r\n\t\t\treturn cameraXR;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the amount of foveation used by the XR compositor for the projection layer.\r\n\t\t *\r\n\t\t * @return {number|undefined} The amount of foveation.\r\n\t\t */\r\n\t\tthis.getFoveation = function () {\r\n\r\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn foveation;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sets the foveation value.\r\n\t\t *\r\n\t\t * @param {number} value - A number in the range `[0,1]` where `0` means no foveation (full resolution)\r\n\t\t * and `1` means maximum foveation (the edges render at lower resolution).\r\n\t\t */\r\n\t\tthis.setFoveation = function ( value ) {\r\n\r\n\t\t\t// 0 = no foveation = full resolution\r\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\r\n\r\n\t\t\tfoveation = value;\r\n\r\n\t\t\tif ( glProjLayer !== null ) {\r\n\r\n\t\t\t\tglProjLayer.fixedFoveation = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\r\n\r\n\t\t\t\tglBaseLayer.fixedFoveation = value;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns `true` if depth sensing is supported.\r\n\t\t *\r\n\t\t * @return {boolean} Whether depth sensing is supported or not.\r\n\t\t */\r\n\t\tthis.hasDepthSensing = function () {\r\n\r\n\t\t\treturn depthSensing.texture !== null;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the depth sensing mesh.\r\n\t\t *\r\n\t\t * See {@link WebXRDepthSensing#getMesh}.\r\n\t\t *\r\n\t\t * @return {Mesh} The depth sensing mesh.\r\n\t\t */\r\n\t\tthis.getDepthSensingMesh = function () {\r\n\r\n\t\t\treturn depthSensing.getMesh( cameraXR );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Retrieves an opaque texture from the view-aligned {@link XRCamera}.\r\n\t\t * Only available during the current animation loop.\r\n\t\t *\r\n\t\t * @param {XRCamera} xrCamera - The camera to query.\r\n\t\t * @return {?Texture} An opaque texture representing the current raw camera frame.\r\n\t\t */\r\n\t\tthis.getCameraTexture = function ( xrCamera ) {\r\n\r\n\t\t\treturn cameraAccessTextures[ xrCamera ];\r\n\r\n\t\t};\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tlet onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame( time, frame ) {\r\n\r\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\r\n\t\t\txrFrame = frame;\r\n\r\n\t\t\tif ( pose !== null ) {\r\n\r\n\t\t\t\tconst views = pose.views;\r\n\r\n\t\t\t\tif ( glBaseLayer !== null ) {\r\n\r\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\r\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet cameraXRNeedsUpdate = false;\r\n\r\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\r\n\r\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\r\n\r\n\t\t\t\t\tcameraXR.cameras.length = 0;\r\n\t\t\t\t\tcameraXRNeedsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\r\n\r\n\t\t\t\t\tconst view = views[ i ];\r\n\r\n\t\t\t\t\tlet viewport = null;\r\n\r\n\t\t\t\t\tif ( glBaseLayer !== null ) {\r\n\r\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\r\n\t\t\t\t\t\tviewport = glSubImage.viewport;\r\n\r\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\r\n\t\t\t\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\r\n\t\t\t\t\t\t\t\tnewRenderTarget,\r\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\r\n\t\t\t\t\t\t\t\tglSubImage.depthStencilTexture );\r\n\r\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet camera = cameras[ i ];\r\n\r\n\t\t\t\t\tif ( camera === undefined ) {\r\n\r\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\r\n\t\t\t\t\t\tcamera.layers.enable( i );\r\n\t\t\t\t\t\tcamera.viewport = new Vector4();\r\n\t\t\t\t\t\tcameras[ i ] = camera;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\r\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\r\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\r\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\r\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\r\n\r\n\t\t\t\t\tif ( i === 0 ) {\r\n\r\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\r\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\r\n\r\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\r\n\t\t\t\tconst gpuDepthSensingEnabled = enabledFeatures &&\r\n\t\t\t\t\tenabledFeatures.includes( 'depth-sensing' ) &&\r\n\t\t\t\t\tsession.depthUsage == 'gpu-optimized';\r\n\r\n\t\t\t\tif ( gpuDepthSensingEnabled && supportsGlBinding ) {\r\n\r\n\t\t\t\t\tglBinding = scope.getBinding();\r\n\r\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\r\n\r\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\r\n\r\n\t\t\t\t\t\tdepthSensing.init( depthData, session.renderState );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst cameraAccessEnabled = enabledFeatures &&\r\n\t\t\t\t    enabledFeatures.includes( 'camera-access' );\r\n\r\n\t\t\t\tif ( cameraAccessEnabled && supportsGlBinding ) {\r\n\r\n\t\t\t\t\trenderer.state.unbindTexture();\r\n\r\n\t\t\t\t\tglBinding = scope.getBinding();\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst camera = views[ i ].camera;\r\n\r\n\t\t\t\t\t\tif ( camera ) {\r\n\r\n\t\t\t\t\t\t\tlet cameraTex = cameraAccessTextures[ camera ];\r\n\r\n\t\t\t\t\t\t\tif ( ! cameraTex ) {\r\n\r\n\t\t\t\t\t\t\t\tcameraTex = new ExternalTexture();\r\n\t\t\t\t\t\t\t\tcameraAccessTextures[ camera ] = cameraTex;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst glTexture = glBinding.getCameraImage( camera );\r\n\t\t\t\t\t\t\tcameraTex.sourceTexture = glTexture;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\r\n\r\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\r\n\t\t\t\tconst controller = controllers[ i ];\r\n\r\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\r\n\r\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\r\n\r\n\t\t\tif ( frame.detectedPlanes ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\r\n\r\n\t\t\t}\r\n\r\n\t\t\txrFrame = null;\r\n\r\n\t\t}\r\n\r\n\t\tconst animation = new WebGLAnimation();\r\n\r\n\t\tanimation.setAnimationLoop( onAnimationFrame );\r\n\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {};\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { WebXRManager };\r\n","import { BackSide } from '../../constants.js';\r\nimport { getUnlitUniformColorSpace } from '../shaders/UniformsUtils.js';\r\nimport { Euler } from '../../math/Euler.js';\r\nimport { Matrix4 } from '../../math/Matrix4.js';\r\n\r\nconst _e1 = /*@__PURE__*/ new Euler();\r\nconst _m1 = /*@__PURE__*/ new Matrix4();\r\n\r\nfunction WebGLMaterials( renderer, properties ) {\r\n\r\n\tfunction refreshTransformUniform( map, uniform ) {\r\n\r\n\t\tif ( map.matrixAutoUpdate === true ) {\r\n\r\n\t\t\tmap.updateMatrix();\r\n\r\n\t\t}\r\n\r\n\t\tuniform.value.copy( map.matrix );\r\n\r\n\t}\r\n\r\n\tfunction refreshFogUniforms( uniforms, fog ) {\r\n\r\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\r\n\r\n\t\tif ( fog.isFog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog.isFogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\r\n\r\n\t\tif ( material.isMeshBasicMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshLambertMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshToonMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\t\t\trefreshUniformsToon( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshPhongMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\t\t\trefreshUniformsPhong( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshStandardMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\t\t\trefreshUniformsStandard( uniforms, material );\r\n\r\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material.isMeshMatcapMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\t\t\trefreshUniformsMatcap( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshDepthMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshDistanceMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\t\t\trefreshUniformsDistance( uniforms, material );\r\n\r\n\t\t} else if ( material.isMeshNormalMaterial ) {\r\n\r\n\t\t\trefreshUniformsCommon( uniforms, material );\r\n\r\n\t\t} else if ( material.isLineBasicMaterial ) {\r\n\r\n\t\t\trefreshUniformsLine( uniforms, material );\r\n\r\n\t\t\tif ( material.isLineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsDash( uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material.isPointsMaterial ) {\r\n\r\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\r\n\r\n\t\t} else if ( material.isSpriteMaterial ) {\r\n\r\n\t\t\trefreshUniformsSprites( uniforms, material );\r\n\r\n\t\t} else if ( material.isShadowMaterial ) {\r\n\r\n\t\t\tuniforms.color.value.copy( material.color );\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\t} else if ( material.isShaderMaterial ) {\r\n\r\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsCommon( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tif ( material.color ) {\r\n\r\n\t\t\tuniforms.diffuse.value.copy( material.color );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaMap ) {\r\n\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\r\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\r\n\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t\tif ( material.side === BackSide ) {\r\n\r\n\t\t\t\tuniforms.bumpScale.value *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\r\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\r\n\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t\tif ( material.side === BackSide ) {\r\n\r\n\t\t\t\tuniforms.normalScale.value.negate();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\r\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\r\n\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.specularMap ) {\r\n\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\r\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaTest > 0 ) {\r\n\r\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\r\n\r\n\t\t}\r\n\r\n\t\tconst materialProperties = properties.get( material );\r\n\r\n\t\tconst envMap = materialProperties.envMap;\r\n\t\tconst envMapRotation = materialProperties.envMapRotation;\r\n\r\n\t\tif ( envMap ) {\r\n\r\n\t\t\tuniforms.envMap.value = envMap;\r\n\r\n\t\t\t_e1.copy( envMapRotation );\r\n\r\n\t\t\t// accommodate left-handed frame\r\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\r\n\r\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\r\n\r\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\r\n\t\t\t\t_e1.y *= - 1;\r\n\t\t\t\t_e1.z *= - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\r\n\r\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\r\n\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.ior.value = material.ior;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value.copy( material.color );\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\r\n\r\n\t\tuniforms.diffuse.value.copy( material.color );\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size * pixelRatio;\r\n\t\tuniforms.scale.value = height * 0.5;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaMap ) {\r\n\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaTest > 0 ) {\r\n\r\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsSprites( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value.copy( material.color );\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.rotation.value = material.rotation;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuniforms.map.value = material.map;\r\n\r\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaMap ) {\r\n\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.alphaTest > 0 ) {\r\n\r\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value.copy( material.specular );\r\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsToon( uniforms, material ) {\r\n\r\n\t\tif ( material.gradientMap ) {\r\n\r\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsStandard( uniforms, material ) {\r\n\r\n\t\tuniforms.metalness.value = material.metalness;\r\n\r\n\t\tif ( material.metalnessMap ) {\r\n\r\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\r\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.roughness.value = material.roughness;\r\n\r\n\t\tif ( material.roughnessMap ) {\r\n\r\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\r\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.envMap ) {\r\n\r\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\r\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\r\n\r\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\r\n\r\n\t\tif ( material.sheen > 0 ) {\r\n\r\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\r\n\r\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\r\n\r\n\t\t\tif ( material.sheenColorMap ) {\r\n\r\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.sheenRoughnessMap ) {\r\n\r\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.clearcoat > 0 ) {\r\n\r\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\r\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\r\n\r\n\t\t\tif ( material.clearcoatMap ) {\r\n\r\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.clearcoatRoughnessMap ) {\r\n\r\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.clearcoatNormalMap ) {\r\n\r\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\r\n\r\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\r\n\r\n\t\t\t\tif ( material.side === BackSide ) {\r\n\r\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.dispersion > 0 ) {\r\n\r\n\t\t\tuniforms.dispersion.value = material.dispersion;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.iridescence > 0 ) {\r\n\r\n\t\t\tuniforms.iridescence.value = material.iridescence;\r\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\r\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\r\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\r\n\r\n\t\t\tif ( material.iridescenceMap ) {\r\n\r\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.iridescenceThicknessMap ) {\r\n\r\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.transmission > 0 ) {\r\n\r\n\t\t\tuniforms.transmission.value = material.transmission;\r\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\r\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\r\n\r\n\t\t\tif ( material.transmissionMap ) {\r\n\r\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.thickness.value = material.thickness;\r\n\r\n\t\t\tif ( material.thicknessMap ) {\r\n\r\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\r\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.anisotropy > 0 ) {\r\n\r\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\r\n\r\n\t\t\tif ( material.anisotropyMap ) {\r\n\r\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\r\n\r\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\r\n\t\tuniforms.specularColor.value.copy( material.specularColor );\r\n\r\n\t\tif ( material.specularColorMap ) {\r\n\r\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\r\n\r\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.specularIntensityMap ) {\r\n\r\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\r\n\r\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsMatcap( uniforms, material ) {\r\n\r\n\t\tif ( material.matcap ) {\r\n\r\n\t\t\tuniforms.matcap.value = material.matcap;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDistance( uniforms, material ) {\r\n\r\n\t\tconst light = properties.get( material ).light;\r\n\r\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\r\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\r\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\trefreshFogUniforms: refreshFogUniforms,\r\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\r\n\t};\r\n\r\n}\r\n\r\nexport { WebGLMaterials };\r\n","import { error, warn } from '../../utils.js';\r\n\r\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\r\n\r\n\tlet buffers = {};\r\n\tlet updateList = {};\r\n\tlet allocatedBindingPoints = [];\r\n\r\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\r\n\r\n\tfunction bind( uniformsGroup, program ) {\r\n\r\n\t\tconst webglProgram = program.program;\r\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\r\n\r\n\t}\r\n\r\n\tfunction update( uniformsGroup, program ) {\r\n\r\n\t\tlet buffer = buffers[ uniformsGroup.id ];\r\n\r\n\t\tif ( buffer === undefined ) {\r\n\r\n\t\t\tprepareUniformsGroup( uniformsGroup );\r\n\r\n\t\t\tbuffer = createBuffer( uniformsGroup );\r\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\r\n\r\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\r\n\r\n\t\t}\r\n\r\n\t\t// ensure to update the binding points/block indices mapping for this program\r\n\r\n\t\tconst webglProgram = program.program;\r\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\r\n\r\n\t\t// update UBO once per frame\r\n\r\n\t\tconst frame = info.render.frame;\r\n\r\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\r\n\r\n\t\t\tupdateBufferData( uniformsGroup );\r\n\r\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( uniformsGroup ) {\r\n\r\n\t\t// the setup of an UBO is independent of a particular shader program but global\r\n\r\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\r\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\r\n\r\n\t\tconst buffer = gl.createBuffer();\r\n\t\tconst size = uniformsGroup.__size;\r\n\t\tconst usage = uniformsGroup.usage;\r\n\r\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\r\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\r\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\r\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\r\n\r\n\t\treturn buffer;\r\n\r\n\t}\r\n\r\n\tfunction allocateBindingPointIndex() {\r\n\r\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\r\n\r\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\r\n\r\n\t\t\t\tallocatedBindingPoints.push( i );\r\n\t\t\t\treturn i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\terror( 'WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\tfunction updateBufferData( uniformsGroup ) {\r\n\r\n\t\tconst buffer = buffers[ uniformsGroup.id ];\r\n\t\tconst uniforms = uniformsGroup.uniforms;\r\n\t\tconst cache = uniformsGroup.__cache;\r\n\r\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\r\n\r\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\r\n\r\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tconst uniform = uniformArray[ j ];\r\n\r\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\r\n\r\n\t\t\t\t\tconst offset = uniform.__offset;\r\n\r\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\r\n\r\n\t\t\t\t\tlet arrayOffset = 0;\r\n\r\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\r\n\r\n\t\t\t\t\t\tconst value = values[ k ];\r\n\r\n\t\t\t\t\t\tconst info = getUniformSize( value );\r\n\r\n\t\t\t\t\t\t// TODO add integer and struct support\r\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\r\n\r\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\r\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\r\n\r\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\r\n\r\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\r\n\r\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\r\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\r\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\r\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\r\n\r\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\r\n\r\n\t}\r\n\r\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\r\n\r\n\t\tconst value = uniform.value;\r\n\t\tconst indexString = index + '_' + indexArray;\r\n\r\n\t\tif ( cache[ indexString ] === undefined ) {\r\n\r\n\t\t\t// cache entry does not exist so far\r\n\r\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\r\n\r\n\t\t\t\tcache[ indexString ] = value;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcache[ indexString ] = value.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst cachedObject = cache[ indexString ];\r\n\r\n\t\t\t// compare current value with cached entry\r\n\r\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\r\n\r\n\t\t\t\tif ( cachedObject !== value ) {\r\n\r\n\t\t\t\t\tcache[ indexString ] = value;\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\r\n\r\n\t\t\t\t\tcachedObject.copy( value );\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction prepareUniformsGroup( uniformsGroup ) {\r\n\r\n\t\t// determine total buffer size according to the STD140 layout\r\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\r\n\r\n\t\tconst uniforms = uniformsGroup.uniforms;\r\n\r\n\t\tlet offset = 0; // global buffer offset in bytes\r\n\t\tconst chunkSize = 16; // size of a chunk in bytes\r\n\r\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\r\n\r\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tconst uniform = uniformArray[ j ];\r\n\r\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\r\n\r\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tconst value = values[ k ];\r\n\r\n\t\t\t\t\tconst info = getUniformSize( value );\r\n\r\n\t\t\t\t\tconst chunkOffset = offset % chunkSize; // offset in the current chunk\r\n\t\t\t\t\tconst chunkPadding = chunkOffset % info.boundary; // required padding to match boundary\r\n\t\t\t\t\tconst chunkStart = chunkOffset + chunkPadding; // the start position in the current chunk for the data\r\n\r\n\t\t\t\t\toffset += chunkPadding;\r\n\r\n\t\t\t\t\t// Check for chunk overflow\r\n\t\t\t\t\tif ( chunkStart !== 0 && ( chunkSize - chunkStart ) < info.storage ) {\r\n\r\n\t\t\t\t\t\t// Add padding and adjust offset\r\n\t\t\t\t\t\toffset += ( chunkSize - chunkStart );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\r\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\r\n\t\t\t\t\tuniform.__offset = offset;\r\n\r\n\t\t\t\t\t// Update the global offset\r\n\t\t\t\t\toffset += info.storage;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// ensure correct final padding\r\n\r\n\t\tconst chunkOffset = offset % chunkSize;\r\n\r\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\r\n\r\n\t\t//\r\n\r\n\t\tuniformsGroup.__size = offset;\r\n\t\tuniformsGroup.__cache = {};\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tfunction getUniformSize( value ) {\r\n\r\n\t\tconst info = {\r\n\t\t\tboundary: 0, // bytes\r\n\t\t\tstorage: 0 // bytes\r\n\t\t};\r\n\r\n\t\t// determine sizes according to STD140\r\n\r\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\r\n\r\n\t\t\t// float/int/bool\r\n\r\n\t\t\tinfo.boundary = 4;\r\n\t\t\tinfo.storage = 4;\r\n\r\n\t\t} else if ( value.isVector2 ) {\r\n\r\n\t\t\t// vec2\r\n\r\n\t\t\tinfo.boundary = 8;\r\n\t\t\tinfo.storage = 8;\r\n\r\n\t\t} else if ( value.isVector3 || value.isColor ) {\r\n\r\n\t\t\t// vec3\r\n\r\n\t\t\tinfo.boundary = 16;\r\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\r\n\r\n\t\t} else if ( value.isVector4 ) {\r\n\r\n\t\t\t// vec4\r\n\r\n\t\t\tinfo.boundary = 16;\r\n\t\t\tinfo.storage = 16;\r\n\r\n\t\t} else if ( value.isMatrix3 ) {\r\n\r\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\r\n\r\n\t\t\tinfo.boundary = 48;\r\n\t\t\tinfo.storage = 48;\r\n\r\n\t\t} else if ( value.isMatrix4 ) {\r\n\r\n\t\t\t// mat4\r\n\r\n\t\t\tinfo.boundary = 64;\r\n\t\t\tinfo.storage = 64;\r\n\r\n\t\t} else if ( value.isTexture ) {\r\n\r\n\t\t\twarn( 'WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\twarn( 'WebGLRenderer: Unsupported uniform value type.', value );\r\n\r\n\t\t}\r\n\r\n\t\treturn info;\r\n\r\n\t}\r\n\r\n\tfunction onUniformsGroupsDispose( event ) {\r\n\r\n\t\tconst uniformsGroup = event.target;\r\n\r\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\r\n\r\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\r\n\t\tallocatedBindingPoints.splice( index, 1 );\r\n\r\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\r\n\r\n\t\tdelete buffers[ uniformsGroup.id ];\r\n\t\tdelete updateList[ uniformsGroup.id ];\r\n\r\n\t}\r\n\r\n\tfunction dispose() {\r\n\r\n\t\tfor ( const id in buffers ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffers[ id ] );\r\n\r\n\t\t}\r\n\r\n\t\tallocatedBindingPoints = [];\r\n\t\tbuffers = {};\r\n\t\tupdateList = {};\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tbind: bind,\r\n\t\tupdate: update,\r\n\r\n\t\tdispose: dispose\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\nexport { WebGLUniformsGroups };\r\n","import {\r\n\tREVISION,\r\n\tBackSide,\r\n\tFrontSide,\r\n\tDoubleSide,\r\n\tHalfFloatType,\r\n\tUnsignedByteType,\r\n\tNoToneMapping,\r\n\tLinearMipmapLinearFilter,\r\n\tSRGBColorSpace,\r\n\tLinearSRGBColorSpace,\r\n\tRGBAIntegerFormat,\r\n\tRGIntegerFormat,\r\n\tRedIntegerFormat,\r\n\tUnsignedIntType,\r\n\tUnsignedShortType,\r\n\tUnsignedInt248Type,\r\n\tUnsignedShort4444Type,\r\n\tUnsignedShort5551Type,\r\n\tWebGLCoordinateSystem\r\n} from '../constants.js';\r\nimport { Color } from '../math/Color.js';\r\nimport { Frustum } from '../math/Frustum.js';\r\nimport { Matrix4 } from '../math/Matrix4.js';\r\nimport { Vector3 } from '../math/Vector3.js';\r\nimport { Vector4 } from '../math/Vector4.js';\r\nimport { WebGLAnimation } from './webgl/WebGLAnimation.js';\r\nimport { WebGLAttributes } from './webgl/WebGLAttributes.js';\r\nimport { WebGLBackground } from './webgl/WebGLBackground.js';\r\nimport { WebGLBindingStates } from './webgl/WebGLBindingStates.js';\r\nimport { WebGLBufferRenderer } from './webgl/WebGLBufferRenderer.js';\r\nimport { WebGLCapabilities } from './webgl/WebGLCapabilities.js';\r\nimport { WebGLClipping } from './webgl/WebGLClipping.js';\r\nimport { WebGLCubeMaps } from './webgl/WebGLCubeMaps.js';\r\nimport { WebGLCubeUVMaps } from './webgl/WebGLCubeUVMaps.js';\r\nimport { WebGLExtensions } from './webgl/WebGLExtensions.js';\r\nimport { WebGLGeometries } from './webgl/WebGLGeometries.js';\r\nimport { WebGLIndexedBufferRenderer } from './webgl/WebGLIndexedBufferRenderer.js';\r\nimport { WebGLInfo } from './webgl/WebGLInfo.js';\r\nimport { WebGLMorphtargets } from './webgl/WebGLMorphtargets.js';\r\nimport { WebGLObjects } from './webgl/WebGLObjects.js';\r\nimport { WebGLPrograms } from './webgl/WebGLPrograms.js';\r\nimport { WebGLProperties } from './webgl/WebGLProperties.js';\r\nimport { WebGLRenderLists } from './webgl/WebGLRenderLists.js';\r\nimport { WebGLRenderStates } from './webgl/WebGLRenderStates.js';\r\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\r\nimport { WebGLShadowMap } from './webgl/WebGLShadowMap.js';\r\nimport { WebGLState } from './webgl/WebGLState.js';\r\nimport { WebGLTextures } from './webgl/WebGLTextures.js';\r\nimport { WebGLUniforms } from './webgl/WebGLUniforms.js';\r\nimport { WebGLUtils } from './webgl/WebGLUtils.js';\r\nimport { WebXRManager } from './webxr/WebXRManager.js';\r\nimport { WebGLMaterials } from './webgl/WebGLMaterials.js';\r\nimport { WebGLUniformsGroups } from './webgl/WebGLUniformsGroups.js';\r\nimport { createCanvasElement, probeAsync, warnOnce, error, warn, log } from '../utils.js';\r\nimport { ColorManagement } from '../math/ColorManagement.js';\r\n\r\n/**\r\n * This renderer uses WebGL 2 to display scenes.\r\n *\r\n * WebGL 1 is not supported since `r163`.\r\n */\r\nclass WebGLRenderer {\r\n\r\n\t/**\r\n\t * Constructs a new WebGL renderer.\r\n\t *\r\n\t * @param {WebGLRenderer~Options} [parameters] - The configuration parameter.\r\n\t */\r\n\tconstructor( parameters = {} ) {\r\n\r\n\t\tconst {\r\n\t\t\tcanvas = createCanvasElement(),\r\n\t\t\tcontext = null,\r\n\t\t\tdepth = true,\r\n\t\t\tstencil = false,\r\n\t\t\talpha = false,\r\n\t\t\tantialias = false,\r\n\t\t\tpremultipliedAlpha = true,\r\n\t\t\tpreserveDrawingBuffer = false,\r\n\t\t\tpowerPreference = 'default',\r\n\t\t\tfailIfMajorPerformanceCaveat = false,\r\n\t\t\treversedDepthBuffer = false,\r\n\t\t} = parameters;\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isWebGLRenderer = true;\r\n\r\n\t\tlet _alpha;\r\n\r\n\t\tif ( context !== null ) {\r\n\r\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_alpha = context.getContextAttributes().alpha;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_alpha = alpha;\r\n\r\n\t\t}\r\n\r\n\t\tconst uintClearColor = new Uint32Array( 4 );\r\n\t\tconst intClearColor = new Int32Array( 4 );\r\n\r\n\t\tlet currentRenderList = null;\r\n\t\tlet currentRenderState = null;\r\n\r\n\t\t// render() can be called from within a callback triggered by another render.\r\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\r\n\r\n\t\tconst renderListStack = [];\r\n\t\tconst renderStateStack = [];\r\n\r\n\t\t// public properties\r\n\r\n\t\t/**\r\n\t\t * A canvas where the renderer draws its output.This is automatically created by the renderer\r\n\t\t * in the constructor (if not provided already); you just need to add it to your page like so:\r\n\t\t * ```js\r\n\t\t * document.body.appendChild( renderer.domElement );\r\n\t\t * ```\r\n\t\t *\r\n\t\t * @type {HTMLCanvasElement|OffscreenCanvas}\r\n\t\t */\r\n\t\tthis.domElement = canvas;\r\n\r\n\t\t/**\r\n\t\t * A object with debug configuration settings.\r\n\t\t *\r\n\t\t * - `checkShaderErrors`: If it is `true`, defines whether material shader programs are\r\n\t\t * checked for errors during compilation and linkage process. It may be useful to disable\r\n\t\t * this check in production for performance gain. It is strongly recommended to keep these\r\n\t\t * checks enabled during development. If the shader does not compile and link - it will not\r\n\t\t * work and associated material will not render.\r\n\t\t * - `onShaderError(gl, program, glVertexShader,glFragmentShader)`: A callback function that\r\n\t\t * can be used for custom error reporting. The callback receives the WebGL context, an instance\r\n\t\t * of WebGLProgram as well two instances of WebGLShader representing the vertex and fragment shader.\r\n\t\t * Assigning a custom function disables the default error reporting.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.debug = {\r\n\r\n\t\t\t/**\r\n\t\t\t * Enables error checking and reporting when shader programs are being compiled.\r\n\t\t\t * @type {boolean}\r\n\t\t\t */\r\n\t\t\tcheckShaderErrors: true,\r\n\t\t\t/**\r\n\t\t\t * Callback for custom error reporting.\r\n\t\t\t * @type {?Function}\r\n\t\t\t */\r\n\t\t\tonShaderError: null\r\n\t\t};\r\n\r\n\t\t// clearing\r\n\r\n\t\t/**\r\n\t\t * Whether the renderer should automatically clear its output before rendering a frame or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.autoClear = true;\r\n\r\n\t\t/**\r\n\t\t * If {@link WebGLRenderer#autoClear} set to `true`, whether the renderer should clear\r\n\t\t * the color buffer or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.autoClearColor = true;\r\n\r\n\t\t/**\r\n\t\t * If {@link WebGLRenderer#autoClear} set to `true`, whether the renderer should clear\r\n\t\t * the depth buffer or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.autoClearDepth = true;\r\n\r\n\t\t/**\r\n\t\t * If {@link WebGLRenderer#autoClear} set to `true`, whether the renderer should clear\r\n\t\t * the stencil buffer or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.autoClearStencil = true;\r\n\r\n\t\t// scene graph\r\n\r\n\t\t/**\r\n\t\t * Whether the renderer should sort objects or not.\r\n\t\t *\r\n\t\t * Note: Sorting is used to attempt to properly render objects that have some\r\n\t\t * degree of transparency. By definition, sorting objects may not work in all\r\n\t\t * cases. Depending on the needs of application, it may be necessary to turn\r\n\t\t * off sorting and use other methods to deal with transparency rendering e.g.\r\n\t\t * manually determining each object's rendering order.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.sortObjects = true;\r\n\r\n\t\t// user-defined clipping\r\n\r\n\t\t/**\r\n\t\t * User-defined clipping planes specified in world space. These planes apply globally.\r\n\t\t * Points in space whose dot product with the plane is negative are cut away.\r\n\t\t *\r\n\t\t * @type {Array<Plane>}\r\n\t\t */\r\n\t\tthis.clippingPlanes = [];\r\n\r\n\t\t/**\r\n\t\t * Whether the renderer respects object-level clipping planes or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.localClippingEnabled = false;\r\n\r\n\t\t// tone mapping\r\n\r\n\t\t/**\r\n\t\t * The tone mapping technique of the renderer.\r\n\t\t *\r\n\t\t * @type {(NoToneMapping|LinearToneMapping|ReinhardToneMapping|CineonToneMapping|ACESFilmicToneMapping|CustomToneMapping|AgXToneMapping|NeutralToneMapping)}\r\n\t\t * @default NoToneMapping\r\n\t\t */\r\n\t\tthis.toneMapping = NoToneMapping;\r\n\r\n\t\t/**\r\n\t\t * Exposure level of tone mapping.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.toneMappingExposure = 1.0;\r\n\r\n\t\t// transmission\r\n\r\n\t\t/**\r\n\t\t * The normalized resolution scale for the transmission render target, measured in percentage\r\n\t\t * of viewport dimensions. Lowering this value can result in significant performance improvements\r\n\t\t * when using {@link MeshPhysicalMaterial#transmission}.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.transmissionResolutionScale = 1.0;\r\n\r\n\t\t// internal properties\r\n\r\n\t\tconst _this = this;\r\n\r\n\t\tlet _isContextLost = false;\r\n\r\n\t\t// internal state cache\r\n\r\n\t\tthis._outputColorSpace = SRGBColorSpace;\r\n\r\n\t\tlet _currentActiveCubeFace = 0;\r\n\t\tlet _currentActiveMipmapLevel = 0;\r\n\t\tlet _currentRenderTarget = null;\r\n\t\tlet _currentMaterialId = - 1;\r\n\r\n\t\tlet _currentCamera = null;\r\n\r\n\t\tconst _currentViewport = new Vector4();\r\n\t\tconst _currentScissor = new Vector4();\r\n\t\tlet _currentScissorTest = null;\r\n\r\n\t\tconst _currentClearColor = new Color( 0x000000 );\r\n\t\tlet _currentClearAlpha = 0;\r\n\r\n\t\t//\r\n\r\n\t\tlet _width = canvas.width;\r\n\t\tlet _height = canvas.height;\r\n\r\n\t\tlet _pixelRatio = 1;\r\n\t\tlet _opaqueSort = null;\r\n\t\tlet _transparentSort = null;\r\n\r\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\r\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\r\n\t\tlet _scissorTest = false;\r\n\r\n\t\t// frustum\r\n\r\n\t\tconst _frustum = new Frustum();\r\n\r\n\t\t// clipping\r\n\r\n\t\tlet _clippingEnabled = false;\r\n\t\tlet _localClippingEnabled = false;\r\n\r\n\t\t// camera matrices cache\r\n\r\n\t\tconst _projScreenMatrix = new Matrix4();\r\n\r\n\t\tconst _vector3 = new Vector3();\r\n\r\n\t\tconst _vector4 = new Vector4();\r\n\r\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\r\n\r\n\t\tlet _renderBackground = false;\r\n\r\n\t\tfunction getTargetPixelRatio() {\r\n\r\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\r\n\t\t}\r\n\r\n\t\t// initialize\r\n\r\n\t\tlet _gl = context;\r\n\r\n\t\tfunction getContext( contextName, contextAttributes ) {\r\n\r\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\r\n\r\n\t\t}\r\n\r\n\t\ttry {\r\n\r\n\t\t\tconst contextAttributes = {\r\n\t\t\t\talpha: true,\r\n\t\t\t\tdepth,\r\n\t\t\t\tstencil,\r\n\t\t\t\tantialias,\r\n\t\t\t\tpremultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer,\r\n\t\t\t\tpowerPreference,\r\n\t\t\t\tfailIfMajorPerformanceCaveat,\r\n\t\t\t};\r\n\r\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\r\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\r\n\r\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\r\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\r\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\r\n\r\n\t\t\tif ( _gl === null ) {\r\n\r\n\t\t\t\tconst contextName = 'webgl2';\r\n\r\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\r\n\r\n\t\t\t\tif ( _gl === null ) {\r\n\r\n\t\t\t\t\tif ( getContext( contextName ) ) {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\terror( 'WebGLRenderer: ' + error.message );\r\n\t\t\tthrow error;\r\n\r\n\t\t}\r\n\r\n\t\tlet extensions, capabilities, state, info;\r\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\r\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\r\n\r\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\r\n\r\n\t\tlet utils, bindingStates, uniformsGroups;\r\n\r\n\t\tfunction initGLContext() {\r\n\r\n\t\t\textensions = new WebGLExtensions( _gl );\r\n\t\t\textensions.init();\r\n\r\n\t\t\tutils = new WebGLUtils( _gl, extensions );\r\n\r\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\r\n\r\n\t\t\tstate = new WebGLState( _gl, extensions );\r\n\r\n\t\t\tif ( capabilities.reversedDepthBuffer && reversedDepthBuffer ) {\r\n\r\n\t\t\t\tstate.buffers.depth.setReversed( true );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfo = new WebGLInfo( _gl );\r\n\t\t\tproperties = new WebGLProperties();\r\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\r\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\r\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\r\n\t\t\tattributes = new WebGLAttributes( _gl );\r\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\r\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\r\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\r\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\r\n\t\t\tclipping = new WebGLClipping( properties );\r\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\r\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\r\n\t\t\trenderLists = new WebGLRenderLists();\r\n\t\t\trenderStates = new WebGLRenderStates( extensions );\r\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\r\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\r\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\r\n\r\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\r\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\r\n\r\n\t\t\tinfo.programs = programCache.programs;\r\n\r\n\t\t\t/**\r\n\t\t\t * Holds details about the capabilities of the current rendering context.\r\n\t\t\t *\r\n\t\t\t * @name WebGLRenderer#capabilities\r\n\t\t\t * @type {WebGLRenderer~Capabilities}\r\n\t\t\t */\r\n\t\t\t_this.capabilities = capabilities;\r\n\r\n\t\t\t/**\r\n\t\t\t * Provides methods for retrieving and testing WebGL extensions.\r\n\t\t\t *\r\n\t\t\t * - `get(extensionName:string)`: Used to check whether a WebGL extension is supported\r\n\t\t\t * and return the extension object if available.\r\n\t\t\t * - `has(extensionName:string)`: returns `true` if the extension is supported.\r\n\t\t\t *\r\n\t\t\t * @name WebGLRenderer#extensions\r\n\t\t\t * @type {Object}\r\n\t\t\t */\r\n\t\t\t_this.extensions = extensions;\r\n\r\n\t\t\t/**\r\n\t\t\t * Used to track properties of other objects like native WebGL objects.\r\n\t\t\t *\r\n\t\t\t * @name WebGLRenderer#properties\r\n\t\t\t * @type {Object}\r\n\t\t\t */\r\n\t\t\t_this.properties = properties;\r\n\r\n\t\t\t/**\r\n\t\t\t * Manages the render lists of the renderer.\r\n\t\t\t *\r\n\t\t\t * @name WebGLRenderer#renderLists\r\n\t\t\t * @type {Object}\r\n\t\t\t */\r\n\t\t\t_this.renderLists = renderLists;\r\n\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Interface for managing shadows.\r\n\t\t\t *\r\n\t\t\t * @name WebGLRenderer#shadowMap\r\n\t\t\t * @type {WebGLRenderer~ShadowMap}\r\n\t\t\t */\r\n\t\t\t_this.shadowMap = shadowMap;\r\n\r\n\t\t\t/**\r\n\t\t\t * Interface for managing the WebGL state.\r\n\t\t\t *\r\n\t\t\t * @name WebGLRenderer#state\r\n\t\t\t * @type {Object}\r\n\t\t\t */\r\n\t\t\t_this.state = state;\r\n\r\n\t\t\t/**\r\n\t\t\t * Holds a series of statistical information about the GPU memory\r\n\t\t\t * and the rendering process. Useful for debugging and monitoring.\r\n\t\t\t *\r\n\t\t\t * By default these data are reset at each render call but when having\r\n\t\t\t * multiple render passes per frame (e.g. when using post processing) it can\r\n\t\t\t * be preferred to reset with a custom pattern. First, set `autoReset` to\r\n\t\t\t * `false`.\r\n\t\t\t * ```js\r\n\t\t\t * renderer.info.autoReset = false;\r\n\t\t\t * ```\r\n\t\t\t * Call `reset()` whenever you have finished to render a single frame.\r\n\t\t\t * ```js\r\n\t\t\t * renderer.info.reset();\r\n\t\t\t * ```\r\n\t\t\t *\r\n\t\t\t * @name WebGLRenderer#info\r\n\t\t\t * @type {WebGLRenderer~Info}\r\n\t\t\t */\r\n\t\t\t_this.info = info;\r\n\r\n\t\t}\r\n\r\n\t\tinitGLContext();\r\n\r\n\t\t// xr\r\n\r\n\t\tconst xr = new WebXRManager( _this, _gl );\r\n\r\n\t\t/**\r\n\t\t * A reference to the XR manager.\r\n\t\t *\r\n\t\t * @type {WebXRManager}\r\n\t\t */\r\n\t\tthis.xr = xr;\r\n\r\n\t\t/**\r\n\t\t * Returns the rendering context.\r\n\t\t *\r\n\t\t * @return {WebGL2RenderingContext} The rendering context.\r\n\t\t */\r\n\t\tthis.getContext = function () {\r\n\r\n\t\t\treturn _gl;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the rendering context attributes.\r\n\t\t *\r\n\t\t * @return {WebGLContextAttributes} The rendering context attributes.\r\n\t\t */\r\n\t\tthis.getContextAttributes = function () {\r\n\r\n\t\t\treturn _gl.getContextAttributes();\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Simulates a loss of the WebGL context. This requires support for the `WEBGL_lose_context` extension.\r\n\t\t */\r\n\t\tthis.forceContextLoss = function () {\r\n\r\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t\tif ( extension ) extension.loseContext();\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Simulates a restore of the WebGL context. This requires support for the `WEBGL_lose_context` extension.\r\n\t\t */\r\n\t\tthis.forceContextRestore = function () {\r\n\r\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t\tif ( extension ) extension.restoreContext();\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the pixel ratio.\r\n\t\t *\r\n\t\t * @return {number} The pixel ratio.\r\n\t\t */\r\n\t\tthis.getPixelRatio = function () {\r\n\r\n\t\t\treturn _pixelRatio;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sets the given pixel ratio and resizes the canvas if necessary.\r\n\t\t *\r\n\t\t * @param {number} value - The pixel ratio.\r\n\t\t */\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\t\tif ( value === undefined ) return;\r\n\r\n\t\t\t_pixelRatio = value;\r\n\r\n\t\t\tthis.setSize( _width, _height, false );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the renderer's size in logical pixels. This method does not honor the pixel ratio.\r\n\t\t *\r\n\t\t * @param {Vector2} target - The method writes the result in this target object.\r\n\t\t * @return {Vector2} The renderer's size in logical pixels.\r\n\t\t */\r\n\t\tthis.getSize = function ( target ) {\r\n\r\n\t\t\treturn target.set( _width, _height );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Resizes the output canvas to (width, height) with device pixel ratio taken\r\n\t\t * into account, and also sets the viewport to fit that size, starting in (0,\r\n\t\t * 0). Setting `updateStyle` to false prevents any style changes to the output canvas.\r\n\t\t *\r\n\t\t * @param {number} width - The width in logical pixels.\r\n\t\t * @param {number} height - The height in logical pixels.\r\n\t\t * @param {boolean} [updateStyle=true] - Whether to update the `style` attribute of the canvas or not.\r\n\t\t */\r\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\r\n\r\n\t\t\tif ( xr.isPresenting ) {\r\n\r\n\t\t\t\twarn( 'WebGLRenderer: Can\\'t change size while VR device is presenting.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\r\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\r\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\r\n\r\n\t\t\tif ( updateStyle === true ) {\r\n\r\n\t\t\t\tcanvas.style.width = width + 'px';\r\n\t\t\t\tcanvas.style.height = height + 'px';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the drawing buffer size in physical pixels. This method honors the pixel ratio.\r\n\t\t *\r\n\t\t * @param {Vector2} target - The method writes the result in this target object.\r\n\t\t * @return {Vector2} The drawing buffer size.\r\n\t\t */\r\n\t\tthis.getDrawingBufferSize = function ( target ) {\r\n\r\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * This method allows to define the drawing buffer size by specifying\r\n\t\t * width, height and pixel ratio all at once. The size of the drawing\r\n\t\t * buffer is computed with this formula:\r\n\t\t * ```js\r\n\t\t * size.x = width * pixelRatio;\r\n\t\t * size.y = height * pixelRatio;\r\n\t\t * ```\r\n\t\t *\r\n\t\t * @param {number} width - The width in logical pixels.\r\n\t\t * @param {number} height - The height in logical pixels.\r\n\t\t * @param {number} pixelRatio - The pixel ratio.\r\n\t\t */\r\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\r\n\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\r\n\t\t\t_pixelRatio = pixelRatio;\r\n\r\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\r\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\r\n\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the current viewport definition.\r\n\t\t *\r\n\t\t * @param {Vector2} target - The method writes the result in this target object.\r\n\t\t * @return {Vector2} The current viewport definition.\r\n\t\t */\r\n\t\tthis.getCurrentViewport = function ( target ) {\r\n\r\n\t\t\treturn target.copy( _currentViewport );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the viewport definition.\r\n\t\t *\r\n\t\t * @param {Vector4} target - The method writes the result in this target object.\r\n\t\t * @return {Vector4} The viewport definition.\r\n\t\t */\r\n\t\tthis.getViewport = function ( target ) {\r\n\r\n\t\t\treturn target.copy( _viewport );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sets the viewport to render from `(x, y)` to `(x + width, y + height)`.\r\n\t\t *\r\n\t\t * @param {number | Vector4} x - The horizontal coordinate for the lower left corner of the viewport origin in logical pixel unit.\r\n\t\t * Or alternatively a four-component vector specifying all the parameters of the viewport.\r\n\t\t * @param {number} y - The vertical coordinate for the lower left corner of the viewport origin  in logical pixel unit.\r\n\t\t * @param {number} width - The width of the viewport in logical pixel unit.\r\n\t\t * @param {number} height - The height of the viewport in logical pixel unit.\r\n\t\t */\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t\tif ( x.isVector4 ) {\r\n\r\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_viewport.set( x, y, width, height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the scissor region.\r\n\t\t *\r\n\t\t * @param {Vector4} target - The method writes the result in this target object.\r\n\t\t * @return {Vector4} The scissor region.\r\n\t\t */\r\n\t\tthis.getScissor = function ( target ) {\r\n\r\n\t\t\treturn target.copy( _scissor );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sets the scissor region to render from `(x, y)` to `(x + width, y + height)`.\r\n\t\t *\r\n\t\t * @param {number | Vector4} x - The horizontal coordinate for the lower left corner of the scissor region origin in logical pixel unit.\r\n\t\t * Or alternatively a four-component vector specifying all the parameters of the scissor region.\r\n\t\t * @param {number} y - The vertical coordinate for the lower left corner of the scissor region origin  in logical pixel unit.\r\n\t\t * @param {number} width - The width of the scissor region in logical pixel unit.\r\n\t\t * @param {number} height - The height of the scissor region in logical pixel unit.\r\n\t\t */\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t\tif ( x.isVector4 ) {\r\n\r\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_scissor.set( x, y, width, height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns `true` if the scissor test is enabled.\r\n\t\t *\r\n\t\t * @return {boolean} Whether the scissor test is enabled or not.\r\n\t\t */\r\n\t\tthis.getScissorTest = function () {\r\n\r\n\t\t\treturn _scissorTest;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Enable or disable the scissor test. When this is enabled, only the pixels\r\n\t\t * within the defined scissor area will be affected by further renderer\r\n\t\t * actions.\r\n\t\t *\r\n\t\t * @param {boolean} boolean - Whether the scissor test is enabled or not.\r\n\t\t */\r\n\t\tthis.setScissorTest = function ( boolean ) {\r\n\r\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sets a custom opaque sort function for the render lists. Pass `null`\r\n\t\t * to use the default `painterSortStable` function.\r\n\t\t *\r\n\t\t * @param {?Function} method - The opaque sort function.\r\n\t\t */\r\n\t\tthis.setOpaqueSort = function ( method ) {\r\n\r\n\t\t\t_opaqueSort = method;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sets a custom transparent sort function for the render lists. Pass `null`\r\n\t\t * to use the default `reversePainterSortStable` function.\r\n\t\t *\r\n\t\t * @param {?Function} method - The opaque sort function.\r\n\t\t */\r\n\t\tthis.setTransparentSort = function ( method ) {\r\n\r\n\t\t\t_transparentSort = method;\r\n\r\n\t\t};\r\n\r\n\t\t// Clearing\r\n\r\n\t\t/**\r\n\t\t * Returns the clear color.\r\n\t\t *\r\n\t\t * @param {Color} target - The method writes the result in this target object.\r\n\t\t * @return {Color} The clear color.\r\n\t\t */\r\n\t\tthis.getClearColor = function ( target ) {\r\n\r\n\t\t\treturn target.copy( background.getClearColor() );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sets the clear color and alpha.\r\n\t\t *\r\n\t\t * @param {Color} color - The clear color.\r\n\t\t * @param {number} [alpha=1] - The clear alpha.\r\n\t\t */\r\n\t\tthis.setClearColor = function () {\r\n\r\n\t\t\tbackground.setClearColor( ...arguments );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the clear alpha. Ranges within `[0,1]`.\r\n\t\t *\r\n\t\t * @return {number} The clear alpha.\r\n\t\t */\r\n\t\tthis.getClearAlpha = function () {\r\n\r\n\t\t\treturn background.getClearAlpha();\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Sets the clear alpha.\r\n\t\t *\r\n\t\t * @param {number} alpha - The clear alpha.\r\n\t\t */\r\n\t\tthis.setClearAlpha = function () {\r\n\r\n\t\t\tbackground.setClearAlpha( ...arguments );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Tells the renderer to clear its color, depth or stencil drawing buffer(s).\r\n\t\t * This method initializes the buffers to the current clear color values.\r\n\t\t *\r\n\t\t * @param {boolean} [color=true] - Whether the color buffer should be cleared or not.\r\n\t\t * @param {boolean} [depth=true] - Whether the depth buffer should be cleared or not.\r\n\t\t * @param {boolean} [stencil=true] - Whether the stencil buffer should be cleared or not.\r\n\t\t */\r\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\r\n\r\n\t\t\tlet bits = 0;\r\n\r\n\t\t\tif ( color ) {\r\n\r\n\t\t\t\t// check if we're trying to clear an integer target\r\n\t\t\t\tlet isIntegerFormat = false;\r\n\t\t\t\tif ( _currentRenderTarget !== null ) {\r\n\r\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\r\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\r\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\r\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\r\n\t\t\t\t// or unsigned integer target\r\n\t\t\t\tif ( isIntegerFormat ) {\r\n\r\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\r\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\r\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\r\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\r\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\r\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\r\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\r\n\r\n\t\t\t\t\tconst clearColor = background.getClearColor();\r\n\t\t\t\t\tconst a = background.getClearAlpha();\r\n\t\t\t\t\tconst r = clearColor.r;\r\n\t\t\t\t\tconst g = clearColor.g;\r\n\t\t\t\t\tconst b = clearColor.b;\r\n\r\n\t\t\t\t\tif ( isUnsignedType ) {\r\n\r\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\r\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\r\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\r\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\r\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\r\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\r\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\r\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\r\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( depth ) {\r\n\r\n\t\t\t\tbits |= _gl.DEPTH_BUFFER_BIT;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( stencil ) {\r\n\r\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.clear( bits );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clears the color buffer. Equivalent to calling `renderer.clear( true, false, false )`.\r\n\t\t */\r\n\t\tthis.clearColor = function () {\r\n\r\n\t\t\tthis.clear( true, false, false );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clears the depth buffer. Equivalent to calling `renderer.clear( false, true, false )`.\r\n\t\t */\r\n\t\tthis.clearDepth = function () {\r\n\r\n\t\t\tthis.clear( false, true, false );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clears the stencil buffer. Equivalent to calling `renderer.clear( false, false, true )`.\r\n\t\t */\r\n\t\tthis.clearStencil = function () {\r\n\r\n\t\t\tthis.clear( false, false, true );\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Frees the GPU-related resources allocated by this instance. Call this\r\n\t\t * method whenever this instance is no longer used in your app.\r\n\t\t */\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\r\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\r\n\r\n\t\t\tbackground.dispose();\r\n\t\t\trenderLists.dispose();\r\n\t\t\trenderStates.dispose();\r\n\t\t\tproperties.dispose();\r\n\t\t\tcubemaps.dispose();\r\n\t\t\tcubeuvmaps.dispose();\r\n\t\t\tobjects.dispose();\r\n\t\t\tbindingStates.dispose();\r\n\t\t\tuniformsGroups.dispose();\r\n\t\t\tprogramCache.dispose();\r\n\r\n\t\t\txr.dispose();\r\n\r\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\r\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\r\n\r\n\t\t\tanimation.stop();\r\n\r\n\t\t};\r\n\r\n\t\t// Events\r\n\r\n\t\tfunction onContextLost( event ) {\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tlog( 'WebGLRenderer: Context Lost.' );\r\n\r\n\t\t\t_isContextLost = true;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextRestore( /* event */ ) {\r\n\r\n\t\t\tlog( 'WebGLRenderer: Context Restored.' );\r\n\r\n\t\t\t_isContextLost = false;\r\n\r\n\t\t\tconst infoAutoReset = info.autoReset;\r\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\r\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\r\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\r\n\t\t\tconst shadowMapType = shadowMap.type;\r\n\r\n\t\t\tinitGLContext();\r\n\r\n\t\t\tinfo.autoReset = infoAutoReset;\r\n\t\t\tshadowMap.enabled = shadowMapEnabled;\r\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\r\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\r\n\t\t\tshadowMap.type = shadowMapType;\r\n\r\n\t\t}\r\n\r\n\t\tfunction onContextCreationError( event ) {\r\n\r\n\t\t\terror( 'WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onMaterialDispose( event ) {\r\n\r\n\t\t\tconst material = event.target;\r\n\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\tdeallocateMaterial( material );\r\n\r\n\t\t}\r\n\r\n\t\t// Buffer deallocation\r\n\r\n\t\tfunction deallocateMaterial( material ) {\r\n\r\n\t\t\treleaseMaterialProgramReferences( material );\r\n\r\n\t\t\tproperties.remove( material );\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction releaseMaterialProgramReferences( material ) {\r\n\r\n\t\t\tconst programs = properties.get( material ).programs;\r\n\r\n\t\t\tif ( programs !== undefined ) {\r\n\r\n\t\t\t\tprograms.forEach( function ( program ) {\r\n\r\n\t\t\t\t\tprogramCache.releaseProgram( program );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tif ( material.isShaderMaterial ) {\r\n\r\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Buffer rendering\r\n\r\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\r\n\r\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\r\n\r\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\r\n\r\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\r\n\r\n\t\t\tstate.setMaterial( material, frontFaceCW );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet index = geometry.index;\r\n\t\t\tlet rangeFactor = 1;\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\r\n\r\n\t\t\t\tif ( index === undefined ) return;\r\n\r\n\t\t\t\trangeFactor = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tconst drawRange = geometry.drawRange;\r\n\t\t\tconst position = geometry.attributes.position;\r\n\r\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\r\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\r\n\r\n\t\t\tif ( group !== null ) {\r\n\r\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\r\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\r\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\r\n\r\n\t\t\t} else if ( position !== undefined && position !== null ) {\r\n\r\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\r\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst drawCount = drawEnd - drawStart;\r\n\r\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\r\n\r\n\t\t\tlet attribute;\r\n\t\t\tlet renderer = bufferRenderer;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tattribute = attributes.get( index );\r\n\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( object.isMesh ) {\r\n\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isLine ) {\r\n\r\n\t\t\t\tlet lineWidth = material.linewidth;\r\n\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n\r\n\t\t\t\tif ( object.isLineSegments ) {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t\t} else if ( object.isLineLoop ) {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isPoints ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\r\n\t\t\t} else if ( object.isSprite ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.isBatchedMesh ) {\r\n\r\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\r\n\r\n\t\t\t\t\t// @deprecated, r174\r\n\t\t\t\t\twarnOnce( 'WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.' );\r\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ! extensions.get( 'WEBGL_multi_draw' ) ) {\r\n\r\n\t\t\t\t\t\tconst starts = object._multiDrawStarts;\r\n\t\t\t\t\t\tconst counts = object._multiDrawCounts;\r\n\t\t\t\t\t\tconst drawCount = object._multiDrawCount;\r\n\t\t\t\t\t\tconst bytesPerElement = index ? attributes.get( index ).bytesPerElement : 1;\r\n\t\t\t\t\t\tconst uniforms = properties.get( material ).currentProgram.getUniforms();\r\n\t\t\t\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuniforms.setValue( _gl, '_gl_DrawID', i );\r\n\t\t\t\t\t\t\trenderer.render( starts[ i ] / bytesPerElement, counts[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.isInstancedMesh ) {\r\n\r\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\r\n\r\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\r\n\r\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\r\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\r\n\r\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t// Compile\r\n\r\n\t\tfunction prepareMaterial( material, scene, object ) {\r\n\r\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\r\n\r\n\t\t\t\tmaterial.side = BackSide;\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\t\t\t\tgetProgram( material, scene, object );\r\n\r\n\t\t\t\tmaterial.side = FrontSide;\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\t\t\t\tgetProgram( material, scene, object );\r\n\r\n\t\t\t\tmaterial.side = DoubleSide;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgetProgram( material, scene, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Compiles all materials in the scene with the camera. This is useful to precompile shaders\r\n\t\t * before the first rendering. If you want to add a 3D object to an existing scene, use the third\r\n\t\t * optional parameter for applying the target scene.\r\n\t\t *\r\n\t\t * Note that the (target) scene's lighting and environment must be configured before calling this method.\r\n\t\t *\r\n\t\t * @param {Object3D} scene - The scene or another type of 3D object to precompile.\r\n\t\t * @param {Camera} camera - The camera.\r\n\t\t * @param {?Scene} [targetScene=null] - The target scene.\r\n\t\t * @return {Set<Material>} The precompiled materials.\r\n\t\t */\r\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\r\n\r\n\t\t\tif ( targetScene === null ) targetScene = scene;\r\n\r\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\r\n\t\t\tcurrentRenderState.init( camera );\r\n\r\n\t\t\trenderStateStack.push( currentRenderState );\r\n\r\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\r\n\r\n\t\t\ttargetScene.traverseVisible( function ( object ) {\r\n\r\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tif ( scene !== targetScene ) {\r\n\r\n\t\t\t\tscene.traverseVisible( function ( object ) {\r\n\r\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentRenderState.setupLights();\r\n\r\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\r\n\r\n\t\t\tconst materials = new Set();\r\n\r\n\t\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\t\tif ( ! ( object.isMesh || object.isPoints || object.isLine || object.isSprite ) ) {\r\n\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\tif ( material ) {\r\n\r\n\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst material2 = material[ i ];\r\n\r\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\r\n\t\t\t\t\t\t\tmaterials.add( material2 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\r\n\t\t\t\t\t\tmaterials.add( material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tcurrentRenderState = renderStateStack.pop();\r\n\r\n\t\t\treturn materials;\r\n\r\n\t\t};\r\n\r\n\t\t// compileAsync\r\n\r\n\t\t/**\r\n\t\t * Asynchronous version of {@link WebGLRenderer#compile}.\r\n\t\t *\r\n\t\t * This method makes use of the `KHR_parallel_shader_compile` WebGL extension. Hence,\r\n\t\t * it is recommended to use this version of `compile()` whenever possible.\r\n\t\t *\r\n\t\t * @async\r\n\t\t * @param {Object3D} scene - The scene or another type of 3D object to precompile.\r\n\t\t * @param {Camera} camera - The camera.\r\n\t\t * @param {?Scene} [targetScene=null] - The target scene.\r\n\t\t * @return {Promise} A Promise that resolves when the given scene can be rendered without unnecessary stalling due to shader compilation.\r\n\t\t */\r\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\r\n\r\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\r\n\r\n\t\t\t// Wait for all the materials in the new object to indicate that they're\r\n\t\t\t// ready to be used before resolving the promise.\r\n\r\n\t\t\treturn new Promise( ( resolve ) => {\r\n\r\n\t\t\t\tfunction checkMaterialsReady() {\r\n\r\n\t\t\t\t\tmaterials.forEach( function ( material ) {\r\n\r\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\r\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\r\n\r\n\t\t\t\t\t\tif ( program.isReady() ) {\r\n\r\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\r\n\t\t\t\t\t\t\tmaterials.delete( material );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\r\n\r\n\t\t\t\t\tif ( materials.size === 0 ) {\r\n\r\n\t\t\t\t\t\tresolve( scene );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\r\n\r\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\r\n\r\n\t\t\t\t\t// If we can check the compilation status of the materials without\r\n\t\t\t\t\t// blocking then do so right away.\r\n\r\n\t\t\t\t\tcheckMaterialsReady();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\r\n\t\t\t\t\t// initialized a chance to finish.\r\n\r\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t\t// Animation Loop\r\n\r\n\t\tlet onAnimationFrameCallback = null;\r\n\r\n\t\tfunction onAnimationFrame( time ) {\r\n\r\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onXRSessionStart() {\r\n\r\n\t\t\tanimation.stop();\r\n\r\n\t\t}\r\n\r\n\t\tfunction onXRSessionEnd() {\r\n\r\n\t\t\tanimation.start();\r\n\r\n\t\t}\r\n\r\n\t\tconst animation = new WebGLAnimation();\r\n\t\tanimation.setAnimationLoop( onAnimationFrame );\r\n\r\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\r\n\r\n\t\t/**\r\n\t\t * Applications are advised to always define the animation loop\r\n\t\t * with this method and not manually with `requestAnimationFrame()`\r\n\t\t * for best compatibility.\r\n\t\t *\r\n\t\t * @param {?onAnimationCallback} callback - The application's animation loop.\r\n\t\t */\r\n\t\tthis.setAnimationLoop = function ( callback ) {\r\n\r\n\t\t\tonAnimationFrameCallback = callback;\r\n\t\t\txr.setAnimationLoop( callback );\r\n\r\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\r\n\r\n\t\t};\r\n\r\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\r\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\r\n\r\n\t\t// Rendering\r\n\r\n\t\t/**\r\n\t\t * Renders the given scene (or other type of 3D object) using the given camera.\r\n\t\t *\r\n\t\t * The render is done to a previously specified render target set by calling {@link WebGLRenderer#setRenderTarget}\r\n\t\t * or to the canvas as usual.\r\n\t\t *\r\n\t\t * By default render buffers are cleared before rendering but you can prevent\r\n\t\t * this by setting the property `autoClear` to `false`. If you want to prevent\r\n\t\t * only certain buffers being cleared you can `autoClearColor`, `autoClearDepth`\r\n\t\t * or `autoClearStencil` to `false`. To force a clear, use {@link WebGLRenderer#clear}.\r\n\t\t *\r\n\t\t * @param {Object3D} scene - The scene to render.\r\n\t\t * @param {Camera} camera - The camera.\r\n\t\t */\r\n\t\tthis.render = function ( scene, camera ) {\r\n\r\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\r\n\r\n\t\t\t\terror( 'WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _isContextLost === true ) return;\r\n\r\n\t\t\t// update scene graph\r\n\r\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\r\n\r\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\r\n\r\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\r\n\r\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\r\n\r\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\r\n\t\t\tcurrentRenderState.init( camera );\r\n\r\n\t\t\trenderStateStack.push( currentRenderState );\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix, WebGLCoordinateSystem, camera.reversedDepth );\r\n\r\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\r\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\r\n\r\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\r\n\t\t\tcurrentRenderList.init();\r\n\r\n\t\t\trenderListStack.push( currentRenderList );\r\n\r\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\r\n\r\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\r\n\r\n\t\t\t\tif ( depthSensingMesh !== null ) {\r\n\r\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\r\n\r\n\t\t\tcurrentRenderList.finish();\r\n\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\r\n\t\t\tif ( _renderBackground ) {\r\n\r\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tthis.info.render.frame ++;\r\n\r\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\r\n\r\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\r\n\r\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\r\n\r\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\r\n\r\n\t\t\t// render scene\r\n\r\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\r\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\r\n\r\n\t\t\tcurrentRenderState.setupLights();\r\n\r\n\t\t\tif ( camera.isArrayCamera ) {\r\n\r\n\t\t\t\tconst cameras = camera.cameras;\r\n\r\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\r\n\r\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _renderBackground ) background.render( scene );\r\n\r\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst camera2 = cameras[ i ];\r\n\r\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\r\n\r\n\t\t\t\tif ( _renderBackground ) background.render( scene );\r\n\r\n\t\t\t\trenderScene( currentRenderList, scene, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( _currentRenderTarget !== null && _currentActiveMipmapLevel === 0 ) {\r\n\r\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\r\n\r\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\r\n\r\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\r\n\r\n\t\t\t// _gl.finish();\r\n\r\n\t\t\tbindingStates.resetDefaultState();\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\r\n\t\t\trenderStateStack.pop();\r\n\r\n\t\t\tif ( renderStateStack.length > 0 ) {\r\n\r\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\r\n\r\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcurrentRenderState = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderListStack.pop();\r\n\r\n\t\t\tif ( renderListStack.length > 0 ) {\r\n\r\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcurrentRenderList = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\r\n\r\n\t\t\tif ( object.visible === false ) return;\r\n\r\n\t\t\tconst visible = object.layers.test( camera.layers );\r\n\r\n\t\t\tif ( visible ) {\r\n\r\n\t\t\t\tif ( object.isGroup ) {\r\n\r\n\t\t\t\t\tgroupOrder = object.renderOrder;\r\n\r\n\t\t\t\t} else if ( object.isLOD ) {\r\n\r\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\r\n\r\n\t\t\t\t} else if ( object.isLight ) {\r\n\r\n\t\t\t\t\tcurrentRenderState.pushLight( object );\r\n\r\n\t\t\t\t\tif ( object.castShadow ) {\r\n\r\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( object.isSprite ) {\r\n\r\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\r\n\r\n\t\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t\t_vector4.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst geometry = objects.update( object );\r\n\t\t\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\t\t\tif ( material.visible ) {\r\n\r\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\r\n\r\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\r\n\r\n\t\t\t\t\t\tconst geometry = objects.update( object );\r\n\t\t\t\t\t\tconst material = object.material;\r\n\r\n\t\t\t\t\t\tif ( sortObjects ) {\r\n\r\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\r\n\t\t\t\t\t\t\t\t_vector4.copy( object.boundingSphere.center );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\t\t\t\t\t\t\t_vector4.copy( geometry.boundingSphere.center );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t_vector4\r\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\r\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\t\t\t\tconst groups = geometry.groups;\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\r\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector4.z, group );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else if ( material.visible ) {\r\n\r\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst children = object.children;\r\n\r\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\r\n\r\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\r\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\r\n\t\t\tconst transparentObjects = currentRenderList.transparent;\r\n\r\n\t\t\tcurrentRenderState.setupLightsView( camera );\r\n\r\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\r\n\r\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\r\n\r\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\r\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\r\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\r\n\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\t\tstate.buffers.depth.setTest( true );\r\n\t\t\tstate.buffers.depth.setMask( true );\r\n\t\t\tstate.buffers.color.setMask( true );\r\n\r\n\t\t\tstate.setPolygonOffset( false );\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\r\n\r\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\r\n\r\n\t\t\tif ( overrideMaterial !== null ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\r\n\r\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\r\n\t\t\t\t\tgenerateMipmaps: true,\r\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\r\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\r\n\t\t\t\t\tsamples: 4,\r\n\t\t\t\t\tstencilBuffer: stencil,\r\n\t\t\t\t\tresolveDepthBuffer: false,\r\n\t\t\t\t\tresolveStencilBuffer: false,\r\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// debug\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tconst geometry = new PlaneGeometry();\r\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\r\n\r\n\t\t\t\tconst mesh = new Mesh( geometry, material );\r\n\t\t\t\tscene.add( mesh );\r\n\t\t\t\t*/\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\r\n\r\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\r\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z * _this.transmissionResolutionScale, activeViewport.w * _this.transmissionResolutionScale );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\r\n\t\t\tconst currentActiveCubeFace = _this.getActiveCubeFace();\r\n\t\t\tconst currentActiveMipmapLevel = _this.getActiveMipmapLevel();\r\n\r\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\r\n\r\n\t\t\t_this.getClearColor( _currentClearColor );\r\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\r\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\r\n\r\n\t\t\t_this.clear();\r\n\r\n\t\t\tif ( _renderBackground ) background.render( scene );\r\n\r\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\r\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\r\n\t\t\tconst currentToneMapping = _this.toneMapping;\r\n\t\t\t_this.toneMapping = NoToneMapping;\r\n\r\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\r\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\r\n\t\t\tconst currentCameraViewport = camera.viewport;\r\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\r\n\r\n\t\t\tcurrentRenderState.setupLightsView( camera );\r\n\r\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\r\n\r\n\t\t\trenderObjects( opaqueObjects, scene, camera );\r\n\r\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\r\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\r\n\r\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\r\n\r\n\t\t\t\tlet renderTargetNeedsUpdate = false;\r\n\r\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\r\n\r\n\t\t\t\t\tconst object = renderItem.object;\r\n\t\t\t\t\tconst geometry = renderItem.geometry;\r\n\t\t\t\t\tconst material = renderItem.material;\r\n\t\t\t\t\tconst group = renderItem.group;\r\n\r\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\t\t\t\tconst currentSide = material.side;\r\n\r\n\t\t\t\t\t\tmaterial.side = BackSide;\r\n\t\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\r\n\r\n\t\t\t\t\t\tmaterial.side = currentSide;\r\n\t\t\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\r\n\r\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\r\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\r\n\r\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\r\n\r\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\r\n\r\n\t\t\t_this.toneMapping = currentToneMapping;\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObjects( renderList, scene, camera ) {\r\n\r\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\r\n\r\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst renderItem = renderList[ i ];\r\n\r\n\t\t\t\tconst object = renderItem.object;\r\n\t\t\t\tconst geometry = renderItem.geometry;\r\n\t\t\t\tconst group = renderItem.group;\r\n\t\t\t\tlet material = renderItem.material;\r\n\r\n\t\t\t\tif ( material.allowOverride === true && overrideMaterial !== null ) {\r\n\r\n\t\t\t\t\tmaterial = overrideMaterial;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\r\n\r\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\r\n\r\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\r\n\r\n\t\t\t\tmaterial.side = BackSide;\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\r\n\r\n\t\t\t\tmaterial.side = FrontSide;\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\r\n\r\n\t\t\t\tmaterial.side = DoubleSide;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getProgram( material, scene, object ) {\r\n\r\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n\r\n\t\t\tconst materialProperties = properties.get( material );\r\n\r\n\t\t\tconst lights = currentRenderState.state.lights;\r\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\r\n\r\n\t\t\tconst lightsStateVersion = lights.state.version;\r\n\r\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\r\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\r\n\r\n\t\t\tlet programs = materialProperties.programs;\r\n\r\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\r\n\r\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t\tmaterialProperties.fog = scene.fog;\r\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\r\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\r\n\r\n\t\t\tif ( programs === undefined ) {\r\n\r\n\t\t\t\t// new material\r\n\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t\t\tprograms = new Map();\r\n\t\t\t\tmaterialProperties.programs = programs;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet program = programs.get( programCacheKey );\r\n\r\n\t\t\tif ( program !== undefined ) {\r\n\r\n\t\t\t\t// early out if program and light state is identical\r\n\r\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\r\n\r\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\r\n\r\n\t\t\t\t\treturn program;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\r\n\r\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\r\n\r\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\r\n\t\t\t\tprograms.set( programCacheKey, program );\r\n\r\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst uniforms = materialProperties.uniforms;\r\n\r\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\r\n\r\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateCommonMaterialProperties( material, parameters );\r\n\r\n\t\t\t// store the light setup it was created for\r\n\r\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\r\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\r\n\r\n\t\t\tif ( materialProperties.needsLights ) {\r\n\r\n\t\t\t\t// wire up the material to this renderer's lighting state\r\n\r\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\r\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\r\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\r\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\r\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\r\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\r\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\r\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\r\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\r\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\r\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\r\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\r\n\r\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\r\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\r\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\r\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\r\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\r\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\r\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\r\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterialProperties.currentProgram = program;\r\n\t\t\tmaterialProperties.uniformsList = null;\r\n\r\n\t\t\treturn program;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUniformList( materialProperties ) {\r\n\r\n\t\t\tif ( materialProperties.uniformsList === null ) {\r\n\r\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\r\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn materialProperties.uniformsList;\r\n\r\n\t\t}\r\n\r\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\r\n\r\n\t\t\tconst materialProperties = properties.get( material );\r\n\r\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\r\n\t\t\tmaterialProperties.batching = parameters.batching;\r\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\r\n\t\t\tmaterialProperties.instancing = parameters.instancing;\r\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\r\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\r\n\t\t\tmaterialProperties.skinning = parameters.skinning;\r\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\r\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\r\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\r\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\r\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\r\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\r\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\r\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\r\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\r\n\r\n\t\t}\r\n\r\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\r\n\r\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n\r\n\t\t\ttextures.resetTextureUnits();\r\n\r\n\t\t\tconst fog = scene.fog;\r\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\r\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\r\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\r\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\r\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\r\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\r\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\r\n\r\n\t\t\tlet toneMapping = NoToneMapping;\r\n\r\n\t\t\tif ( material.toneMapped ) {\r\n\r\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\r\n\r\n\t\t\t\t\ttoneMapping = _this.toneMapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n\r\n\t\t\tconst materialProperties = properties.get( material );\r\n\t\t\tconst lights = currentRenderState.state.lights;\r\n\r\n\t\t\tif ( _clippingEnabled === true ) {\r\n\r\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\r\n\r\n\t\t\t\t\tconst useCache =\r\n\t\t\t\t\t\tcamera === _currentCamera &&\r\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\r\n\r\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\r\n\t\t\t\t\t// object instead of the material, once it becomes feasible\r\n\t\t\t\t\t// (#8465, #8379)\r\n\t\t\t\t\tclipping.setState( material, camera, useCache );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet needsProgramChange = false;\r\n\r\n\t\t\tif ( material.version === materialProperties.__version ) {\r\n\r\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\r\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\r\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\r\n\r\n\t\t\t\t\tneedsProgramChange = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tneedsProgramChange = true;\r\n\t\t\t\tmaterialProperties.__version = material.version;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet program = materialProperties.currentProgram;\r\n\r\n\t\t\tif ( needsProgramChange === true ) {\r\n\r\n\t\t\t\tprogram = getProgram( material, scene, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet refreshProgram = false;\r\n\t\t\tlet refreshMaterial = false;\r\n\t\t\tlet refreshLights = false;\r\n\r\n\t\t\tconst p_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.uniforms;\r\n\r\n\t\t\tif ( state.useProgram( program.program ) ) {\r\n\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\t\trefreshMaterial = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\r\n\r\n\t\t\t\t// common camera uniforms\r\n\r\n\t\t\t\tconst reversedDepthBuffer = state.buffers.depth.getReversed();\r\n\r\n\t\t\t\tif ( reversedDepthBuffer && camera.reversedDepth !== true ) {\r\n\r\n\t\t\t\t\tcamera._reversedDepth = true;\r\n\t\t\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\r\n\r\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n\t\t\t\tif ( uCamPos !== undefined ) {\r\n\r\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\r\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\r\n\r\n\t\t\t\tif ( material.isMeshPhongMaterial ||\r\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\r\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\r\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\r\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\r\n\t\t\t\t\tmaterial.isShaderMaterial ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _currentCamera !== camera ) {\r\n\r\n\t\t\t\t\t_currentCamera = camera;\r\n\r\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t\t// the next material that does gets activated:\r\n\r\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\r\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\r\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\r\n\r\n\t\t\tif ( object.isSkinnedMesh ) {\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\r\n\r\n\t\t\t\tconst skeleton = object.skeleton;\r\n\r\n\t\t\t\tif ( skeleton ) {\r\n\r\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.isBatchedMesh ) {\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\r\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingIdTexture' );\r\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingIdTexture', object._indirectTexture, textures );\r\n\r\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\r\n\t\t\t\tif ( object._colorsTexture !== null ) {\r\n\r\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\r\n\r\n\t\t\t\tmorphtargets.update( object, geometry, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\r\n\r\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\r\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\r\n\r\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\r\n\r\n\t\t\t\tm_uniforms.envMap.value = envMap;\r\n\r\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\r\n\r\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\r\n\r\n\t\t\t\tif ( materialProperties.needsLights ) {\r\n\r\n\t\t\t\t\t// the current material requires lighting info\r\n\r\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t\t// values\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t\t// the GL state when required\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\t\tif ( fog && material.fog === true ) {\r\n\r\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\r\n\r\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\r\n\r\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\r\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.isSpriteMaterial ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// common matrices\r\n\r\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\r\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\r\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\r\n\r\n\t\t\t// UBOs\r\n\r\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\r\n\r\n\t\t\t\tconst groups = material.uniformsGroups;\r\n\r\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst group = groups[ i ];\r\n\r\n\t\t\t\t\tuniformsGroups.update( group, program );\r\n\t\t\t\t\tuniformsGroups.bind( group, program );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn program;\r\n\r\n\t\t}\r\n\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\r\n\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\t\tuniforms.lightProbe.needsUpdate = value;\r\n\r\n\t\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\r\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\r\n\t\t}\r\n\r\n\t\tfunction materialNeedsLights( material ) {\r\n\r\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\r\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\r\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the active cube face.\r\n\t\t *\r\n\t\t * @return {number} The active cube face.\r\n\t\t */\r\n\t\tthis.getActiveCubeFace = function () {\r\n\r\n\t\t\treturn _currentActiveCubeFace;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the active mipmap level.\r\n\t\t *\r\n\t\t * @return {number} The active mipmap level.\r\n\t\t */\r\n\t\tthis.getActiveMipmapLevel = function () {\r\n\r\n\t\t\treturn _currentActiveMipmapLevel;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns the active render target.\r\n\t\t *\r\n\t\t * @return {?WebGLRenderTarget} The active render target. Returns `null` if no render target\r\n\t\t * is currently set.\r\n\t\t */\r\n\t\tthis.getRenderTarget = function () {\r\n\r\n\t\t\treturn _currentRenderTarget;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\r\n\r\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = renderTarget.resolveDepthBuffer === false;\r\n\t\t\tif ( renderTargetProperties.__autoAllocateDepthBuffer === false ) {\r\n\r\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\r\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\r\n\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\r\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = renderTargetProperties.__autoAllocateDepthBuffer ? undefined : depthTexture;\r\n\r\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\r\n\r\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\r\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\r\n\r\n\t\t};\r\n\r\n\t\tconst _scratchFrameBuffer = _gl.createFramebuffer();\r\n\r\n\t\t/**\r\n\t\t * Sets the active rendertarget.\r\n\t\t *\r\n\t\t * @param {?WebGLRenderTarget} renderTarget - The render target to set. When `null` is given,\r\n\t\t * the canvas is set as the active render target instead.\r\n\t\t * @param {number} [activeCubeFace=0] - The active cube face when using a cube render target.\r\n\t\t * Indicates the z layer to render in to when using 3D or array render targets.\r\n\t\t * @param {number} [activeMipmapLevel=0] - The active mipmap level.\r\n\t\t */\r\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\r\n\r\n\t\t\t_currentRenderTarget = renderTarget;\r\n\t\t\t_currentActiveCubeFace = activeCubeFace;\r\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\r\n\r\n\t\t\tlet useDefaultFramebuffer = true;\r\n\t\t\tlet framebuffer = null;\r\n\t\t\tlet isCube = false;\r\n\t\t\tlet isRenderTarget3D = false;\r\n\r\n\t\t\tif ( renderTarget ) {\r\n\r\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\r\n\r\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\t\t\t\tuseDefaultFramebuffer = false;\r\n\r\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\r\n\r\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\r\n\r\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\r\n\r\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\r\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\r\n\r\n\t\t\t\t} else if ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\t\t\t// check if the depth texture is already bound to the frame buffer and that it's been initialized\r\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\r\n\t\t\t\t\tif ( renderTargetProperties.__boundDepthTexture !== depthTexture ) {\r\n\r\n\t\t\t\t\t\t// check if the depth texture is compatible\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tdepthTexture !== null &&\r\n\t\t\t\t\t\t\tproperties.has( depthTexture ) &&\r\n\t\t\t\t\t\t\t( renderTarget.width !== depthTexture.image.width || renderTarget.height !== depthTexture.image.height )\r\n\t\t\t\t\t\t) {\r\n\r\n\t\t\t\t\t\t\tthrow new Error( 'WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.' );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Swap the depth buffer to the currently attached one\r\n\t\t\t\t\t\ttextures.setupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst texture = renderTarget.texture;\r\n\r\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\r\n\r\n\t\t\t\t\tisRenderTarget3D = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\r\n\r\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\r\n\r\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tisCube = true;\r\n\r\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\r\n\r\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\r\n\r\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\r\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\r\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\r\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\r\n\t\t\t\t_currentScissorTest = _scissorTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Use a scratch frame buffer if rendering to a mip level to avoid depth buffers\r\n\t\t\t// being bound that are different sizes.\r\n\t\t\tif ( activeMipmapLevel !== 0 ) {\r\n\r\n\t\t\t\tframebuffer = _scratchFrameBuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\r\n\r\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.viewport( _currentViewport );\r\n\t\t\tstate.scissor( _currentScissor );\r\n\t\t\tstate.setScissorTest( _currentScissorTest );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\r\n\r\n\t\t\t} else if ( isRenderTarget3D ) {\r\n\r\n\t\t\t\tconst layer = activeCubeFace;\r\n\r\n\t\t\t\tfor ( let i = 0; i < renderTarget.textures.length; i ++ ) {\r\n\r\n\t\t\t\t\tconst textureProperties = properties.get( renderTarget.textures[ i ] );\r\n\r\n\t\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, textureProperties.__webglTexture, activeMipmapLevel, layer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( renderTarget !== null && activeMipmapLevel !== 0 ) {\r\n\r\n\t\t\t\t// Only bind the frame buffer if we are using a scratch frame buffer to render to a mipmap.\r\n\t\t\t\t// If we rebind the texture when using a multi sample buffer then an error about inconsistent samples will be thrown.\r\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, textureProperties.__webglTexture, activeMipmapLevel );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Reads the pixel data from the given render target into the given buffer.\r\n\t\t *\r\n\t\t * @param {WebGLRenderTarget} renderTarget - The render target to read from.\r\n\t\t * @param {number} x - The `x` coordinate of the copy region's origin.\r\n\t\t * @param {number} y - The `y` coordinate of the copy region's origin.\r\n\t\t * @param {number} width - The width of the copy region.\r\n\t\t * @param {number} height - The height of the copy region.\r\n\t\t * @param {TypedArray} buffer - The result buffer.\r\n\t\t * @param {number} [activeCubeFaceIndex] - The active cube face index.\r\n\t\t * @param {number} [textureIndex=0] - The texture index of an MRT render target.\r\n\t\t */\r\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex, textureIndex = 0 ) {\r\n\r\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\r\n\r\n\t\t\t\terror( 'WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\r\n\r\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( framebuffer ) {\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tconst texture = renderTarget.textures[ textureIndex ];\r\n\t\t\t\t\tconst textureFormat = texture.format;\r\n\t\t\t\t\tconst textureType = texture.type;\r\n\r\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\r\n\r\n\t\t\t\t\t\terror( 'WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\r\n\r\n\t\t\t\t\t\terror( 'WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\r\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n\r\n\t\t\t\t\t\t// when using MRT, select the correct color buffer for the subsequent read command\r\n\r\n\t\t\t\t\t\tif ( renderTarget.textures.length > 1 ) _gl.readBuffer( _gl.COLOR_ATTACHMENT0 + textureIndex );\r\n\r\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} finally {\r\n\r\n\t\t\t\t\t// restore framebuffer of current render target if necessary\r\n\r\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Asynchronous, non-blocking version of {@link WebGLRenderer#readRenderTargetPixels}.\r\n\t\t *\r\n\t\t * It is recommended to use this version of `readRenderTargetPixels()` whenever possible.\r\n\t\t *\r\n\t\t * @async\r\n\t\t * @param {WebGLRenderTarget} renderTarget - The render target to read from.\r\n\t\t * @param {number} x - The `x` coordinate of the copy region's origin.\r\n\t\t * @param {number} y - The `y` coordinate of the copy region's origin.\r\n\t\t * @param {number} width - The width of the copy region.\r\n\t\t * @param {number} height - The height of the copy region.\r\n\t\t * @param {TypedArray} buffer - The result buffer.\r\n\t\t * @param {number} [activeCubeFaceIndex] - The active cube face index.\r\n\t\t * @param {number} [textureIndex=0] - The texture index of an MRT render target.\r\n\t\t * @return {Promise<TypedArray>} A Promise that resolves when the read has been finished. The resolve provides the read data as a typed array.\r\n\t\t */\r\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex, textureIndex = 0 ) {\r\n\r\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\r\n\r\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( framebuffer ) {\r\n\r\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n\r\n\t\t\t\t\t// set the active frame buffer to the one we want to read\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\t\tconst texture = renderTarget.textures[ textureIndex ];\r\n\t\t\t\t\tconst textureFormat = texture.format;\r\n\t\t\t\t\tconst textureType = texture.type;\r\n\r\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\r\n\r\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst glBuffer = _gl.createBuffer();\r\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\r\n\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\r\n\r\n\t\t\t\t\t// when using MRT, select the correct color buffer for the subsequent read command\r\n\r\n\t\t\t\t\tif ( renderTarget.textures.length > 1 ) _gl.readBuffer( _gl.COLOR_ATTACHMENT0 + textureIndex );\r\n\r\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\r\n\r\n\t\t\t\t\t// reset the frame buffer to the currently set buffer before waiting\r\n\t\t\t\t\tconst currFramebuffer = _currentRenderTarget !== null ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\r\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, currFramebuffer );\r\n\r\n\t\t\t\t\t// check if the commands have finished every 8 ms\r\n\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\r\n\r\n\t\t\t\t\t_gl.flush();\r\n\r\n\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\r\n\r\n\t\t\t\t\t// read the data and delete the buffer\r\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\r\n\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\r\n\t\t\t\t\t_gl.deleteBuffer( glBuffer );\r\n\t\t\t\t\t_gl.deleteSync( sync );\r\n\r\n\t\t\t\t\treturn buffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Copies pixels from the current bound framebuffer into the given texture.\r\n\t\t *\r\n\t\t * @param {FramebufferTexture} texture - The texture.\r\n\t\t * @param {?Vector2} [position=null] - The start position of the copy operation.\r\n\t\t * @param {number} [level=0] - The mip level. The default represents the base mip.\r\n\t\t */\r\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\r\n\r\n\t\t\tconst levelScale = Math.pow( 2, - level );\r\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\r\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\r\n\r\n\t\t\tconst x = position !== null ? position.x : 0;\r\n\t\t\tconst y = position !== null ? position.y : 0;\r\n\r\n\t\t\ttextures.setTexture2D( texture, 0 );\r\n\r\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t};\r\n\r\n\t\tconst _srcFramebuffer = _gl.createFramebuffer();\r\n\t\tconst _dstFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t/**\r\n\t\t * Copies data of the given source texture into a destination texture.\r\n\t\t *\r\n\t\t * When using render target textures as `srcTexture` and `dstTexture`, you must make sure both render targets are initialized\r\n\t\t * {@link WebGLRenderer#initRenderTarget}.\r\n\t\t *\r\n\t\t * @param {Texture} srcTexture - The source texture.\r\n\t\t * @param {Texture} dstTexture - The destination texture.\r\n\t\t * @param {?(Box2|Box3)} [srcRegion=null] - A bounding box which describes the source region. Can be two or three-dimensional.\r\n\t\t * @param {?(Vector2|Vector3)} [dstPosition=null] - A vector that represents the origin of the destination region. Can be two or three-dimensional.\r\n\t\t * @param {number} [srcLevel=0] - The source mipmap level to copy.\r\n\t\t * @param {?number} [dstLevel=null] - The destination mipmap level.\r\n\t\t */\r\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, srcLevel = 0, dstLevel = null ) {\r\n\r\n\t\t\t// support the previous signature with just a single dst mipmap level\r\n\t\t\tif ( dstLevel === null ) {\r\n\r\n\t\t\t\tif ( srcLevel !== 0 ) {\r\n\r\n\t\t\t\t\t// @deprecated, r171\r\n\t\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels.' );\r\n\t\t\t\t\tdstLevel = srcLevel;\r\n\t\t\t\t\tsrcLevel = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tdstLevel = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// gather the necessary dimensions to copy\r\n\t\t\tlet width, height, depth, minX, minY, minZ;\r\n\t\t\tlet dstX, dstY, dstZ;\r\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ dstLevel ] : srcTexture.image;\r\n\t\t\tif ( srcRegion !== null ) {\r\n\r\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\r\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\r\n\t\t\t\tdepth = srcRegion.isBox3 ? srcRegion.max.z - srcRegion.min.z : 1;\r\n\t\t\t\tminX = srcRegion.min.x;\r\n\t\t\t\tminY = srcRegion.min.y;\r\n\t\t\t\tminZ = srcRegion.isBox3 ? srcRegion.min.z : 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst levelScale = Math.pow( 2, - srcLevel );\r\n\t\t\t\twidth = Math.floor( image.width * levelScale );\r\n\t\t\t\theight = Math.floor( image.height * levelScale );\r\n\t\t\t\tif ( srcTexture.isDataArrayTexture ) {\r\n\r\n\t\t\t\t\tdepth = image.depth;\r\n\r\n\t\t\t\t} else if ( srcTexture.isData3DTexture ) {\r\n\r\n\t\t\t\t\tdepth = Math.floor( image.depth * levelScale );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tdepth = 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tminX = 0;\r\n\t\t\t\tminY = 0;\r\n\t\t\t\tminZ = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( dstPosition !== null ) {\r\n\r\n\t\t\t\tdstX = dstPosition.x;\r\n\t\t\t\tdstY = dstPosition.y;\r\n\t\t\t\tdstZ = dstPosition.z;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdstX = 0;\r\n\t\t\t\tdstY = 0;\r\n\t\t\t\tdstZ = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Set up the destination target\r\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\r\n\t\t\tconst glType = utils.convert( dstTexture.type );\r\n\t\t\tlet glTarget;\r\n\r\n\t\t\tif ( dstTexture.isData3DTexture ) {\r\n\r\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\r\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\r\n\r\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\r\n\r\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\r\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttextures.setTexture2D( dstTexture, 0 );\r\n\t\t\t\tglTarget = _gl.TEXTURE_2D;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\r\n\r\n\t\t\t// used for copying data from cpu\r\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\r\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\r\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\r\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\r\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\r\n\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\r\n\r\n\t\t\t// set up the src texture\r\n\t\t\tconst isSrc3D = srcTexture.isDataArrayTexture || srcTexture.isData3DTexture;\r\n\t\t\tconst isDst3D = dstTexture.isDataArrayTexture || dstTexture.isData3DTexture;\r\n\t\t\tif ( srcTexture.isDepthTexture ) {\r\n\r\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\r\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\r\n\t\t\t\tconst srcRenderTargetProperties = properties.get( srcTextureProperties.__renderTarget );\r\n\t\t\t\tconst dstRenderTargetProperties = properties.get( dstTextureProperties.__renderTarget );\r\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, srcRenderTargetProperties.__webglFramebuffer );\r\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, dstRenderTargetProperties.__webglFramebuffer );\r\n\r\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\r\n\r\n\t\t\t\t\t// if the source or destination are a 3d target then a layer needs to be bound\r\n\t\t\t\t\tif ( isSrc3D ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( srcTexture ).__webglTexture, srcLevel, minZ + i );\r\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( dstTexture ).__webglTexture, dstLevel, dstZ + i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.DEPTH_BUFFER_BIT, _gl.NEAREST );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\r\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\r\n\r\n\t\t\t} else if ( srcLevel !== 0 || srcTexture.isRenderTargetTexture || properties.has( srcTexture ) ) {\r\n\r\n\t\t\t\t// get the appropriate frame buffers\r\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\r\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\r\n\r\n\t\t\t\t// bind the frame buffer targets\r\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, _srcFramebuffer );\r\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, _dstFramebuffer );\r\n\r\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\r\n\r\n\t\t\t\t\t// assign the correct layers and mip maps to the frame buffers\r\n\t\t\t\t\tif ( isSrc3D ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, srcTextureProperties.__webglTexture, srcLevel, minZ + i );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, srcTextureProperties.__webglTexture, srcLevel );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( isDst3D ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, dstTextureProperties.__webglTexture, dstLevel, dstZ + i );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, dstTextureProperties.__webglTexture, dstLevel );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// copy the data using the fastest function that can achieve the copy\r\n\t\t\t\t\tif ( srcLevel !== 0 ) {\r\n\r\n\t\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.COLOR_BUFFER_BIT, _gl.NEAREST );\r\n\r\n\t\t\t\t\t} else if ( isDst3D ) {\r\n\r\n\t\t\t\t\t\t_gl.copyTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ + i, minX, minY, width, height );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.copyTexSubImage2D( glTarget, dstLevel, dstX, dstY, minX, minY, width, height );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// unbind read, draw buffers\r\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\r\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( isDst3D ) {\r\n\r\n\t\t\t\t\t// copy data into the 3d texture\r\n\t\t\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\r\n\r\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\r\n\r\n\t\t\t\t\t} else if ( dstTexture.isCompressedArrayTexture ) {\r\n\r\n\t\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// copy data into the 2d texture\r\n\t\t\t\t\tif ( srcTexture.isDataTexture ) {\r\n\r\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image.data );\r\n\r\n\t\t\t\t\t} else if ( srcTexture.isCompressedTexture ) {\r\n\r\n\t\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, image.width, image.height, glFormat, image.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// reset values\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\r\n\r\n\t\t\t// Generate mipmaps only when copying level 0\r\n\t\t\tif ( dstLevel === 0 && dstTexture.generateMipmaps ) {\r\n\r\n\t\t\t\t_gl.generateMipmap( glTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Initializes the given WebGLRenderTarget memory. Useful for initializing a render target so data\r\n\t\t * can be copied into it using {@link WebGLRenderer#copyTextureToTexture} before it has been\r\n\t\t * rendered to.\r\n\t\t *\r\n\t\t * @param {WebGLRenderTarget} target - The render target.\r\n\t\t */\r\n\t\tthis.initRenderTarget = function ( target ) {\r\n\r\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\t\ttextures.setupRenderTarget( target );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Initializes the given texture. Useful for preloading a texture rather than waiting until first\r\n\t\t * render (which can cause noticeable lags due to decode and GPU upload overhead).\r\n\t\t *\r\n\t\t * @param {Texture} texture - The texture.\r\n\t\t */\r\n\t\tthis.initTexture = function ( texture ) {\r\n\r\n\t\t\tif ( texture.isCubeTexture ) {\r\n\r\n\t\t\t\ttextures.setTextureCube( texture, 0 );\r\n\r\n\t\t\t} else if ( texture.isData3DTexture ) {\r\n\r\n\t\t\t\ttextures.setTexture3D( texture, 0 );\r\n\r\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\r\n\r\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttextures.setTexture2D( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.unbindTexture();\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Can be used to reset the internal WebGL state. This method is mostly\r\n\t\t * relevant for applications which share a single WebGL context across\r\n\t\t * multiple WebGL libraries.\r\n\t\t */\r\n\t\tthis.resetState = function () {\r\n\r\n\t\t\t_currentActiveCubeFace = 0;\r\n\t\t\t_currentActiveMipmapLevel = 0;\r\n\t\t\t_currentRenderTarget = null;\r\n\r\n\t\t\tstate.reset();\r\n\t\t\tbindingStates.reset();\r\n\r\n\t\t};\r\n\r\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\r\n\r\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the coordinate system of the renderer.\r\n\t *\r\n\t * In `WebGLRenderer`, the value is always `WebGLCoordinateSystem`.\r\n\t *\r\n\t * @type {WebGLCoordinateSystem|WebGPUCoordinateSystem}\r\n\t * @default WebGLCoordinateSystem\r\n\t * @readonly\r\n\t */\r\n\tget coordinateSystem() {\r\n\r\n\t\treturn WebGLCoordinateSystem;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Defines the output color space of the renderer.\r\n\t *\r\n\t * @type {SRGBColorSpace|LinearSRGBColorSpace}\r\n\t * @default SRGBColorSpace\r\n\t */\r\n\tget outputColorSpace() {\r\n\r\n\t\treturn this._outputColorSpace;\r\n\r\n\t}\r\n\r\n\tset outputColorSpace( colorSpace ) {\r\n\r\n\t\tthis._outputColorSpace = colorSpace;\r\n\r\n\t\tconst gl = this.getContext();\r\n\t\tgl.drawingBufferColorSpace = ColorManagement._getDrawingBufferColorSpace( colorSpace );\r\n\t\tgl.unpackColorSpace = ColorManagement._getUnpackColorSpace();\r\n\r\n\t}\r\n\r\n}\r\n\r\n// JSDoc\r\n\r\n/**\r\n * WebGLRenderer options.\r\n *\r\n * @typedef {Object} WebGLRenderer~Options\r\n * @property {HTMLCanvasElement|OffscreenCanvas} [canvas=null] - A canvas element where the renderer draws its output. If not passed in here, a new canvas element will be created by the renderer.\r\n * @property {WebGL2RenderingContext} [context=null] - Can be used to attach an existing rendering context to this renderer.\r\n * @property {('highp'|'mediump'|'lowp')} [precision='highp'] - The default shader precision. Uses `highp` if supported by the device.\r\n * @property {boolean} [alpha=false] - Controls the default clear alpha value. When set to`true`, the value is `0`. Otherwise it's `1`.\r\n * @property {boolean} [premultipliedAlpha=true] Whether the renderer will assume colors have premultiplied alpha or not.\r\n * @property {boolean} [antialias=false] Whether to use the default MSAA or not.\r\n * @property {boolean} [stencil=false] Whether the drawing buffer has a stencil buffer of at least 8 bits or not.\r\n * @property {boolean} [preserveDrawingBuffer=false] Whether to preserve the buffer until manually cleared or overwritten.\r\n * @property {('default'|'low-power'|'high-performance')} [powerPreference='default'] Provides a hint to the user agent indicating what configuration of GPU is suitable for this WebGL context.\r\n * @property {boolean} [failIfMajorPerformanceCaveat=false] Whether the renderer creation will fail upon low performance is detected.\r\n * @property {boolean} [depth=true] Whether the drawing buffer has a depth buffer of at least 16 bits.\r\n * @property {boolean} [logarithmicDepthBuffer=false] Whether to use a logarithmic depth buffer. It may be necessary to use this if dealing with huge differences in scale in a single scene.\r\n * Note that this setting uses `gl_FragDepth` if available which disables the Early Fragment Test optimization and can cause a decrease in performance.\r\n * @property {boolean} [reversedDepthBuffer=false] Whether to use a reverse depth buffer. Requires the `EXT_clip_control` extension.\r\n * This is a more faster and accurate version than logarithmic depth buffer.\r\n **/\r\n\r\n/**\r\n * WebGLRenderer Capabilities.\r\n *\r\n * @typedef {Object} WebGLRenderer~Capabilities\r\n * @property {Function} getMaxAnisotropy - Returns the maximum available anisotropy.\r\n * @property {Function} getMaxPrecision - Returns the maximum available precision for vertex and fragment shaders.\r\n * @property {boolean} logarithmicDepthBuffer - `true` if `logarithmicDepthBuffer` was set to `true` in the constructor.\r\n * @property {number} maxAttributes - The number of shader attributes that can be used by the vertex shader.\r\n * @property {number} maxCubemapSize - Maximum height * width of cube map textures that a shader can use.\r\n * @property {number} maxFragmentUniforms - The number of uniforms that can be used by a fragment shader.\r\n * @property {number} maxSamples - Maximum number of samples in context of Multisample anti-aliasing (MSAA).\r\n * @property {number} maxTextures - The maximum number of textures that can be used by a shader.\r\n * @property {number} maxTextureSize - Maximum height * width of a texture that a shader use.\r\n * @property {number} maxVaryings - The number of varying vectors that can used by shaders.\r\n * @property {number} maxVertexTextures - The number of textures that can be used in a vertex shader.\r\n * @property {number} maxVertexUniforms - The maximum number of uniforms that can be used in a vertex shader.\r\n * @property {string} precision - The shader precision currently being used by the renderer.\r\n * @property {boolean} reversedDepthBuffer - `true` if `reversedDepthBuffer` was set to `true` in the constructor\r\n * and the rendering context supports `EXT_clip_control`.\r\n * @property {boolean} vertexTextures - `true` if vertex textures can be used.\r\n **/\r\n\r\n/**\r\n * WebGLRenderer Info Memory\r\n *\r\n * @typedef {Object} WebGLRenderer~InfoMemory\r\n * @property {number} geometries - The number of active geometries.\r\n * @property {number} textures - The number of active textures.\r\n **/\r\n\r\n/**\r\n * WebGLRenderer Info Render\r\n *\r\n * @typedef {Object} WebGLRenderer~InfoRender\r\n * @property {number} frame - The frame ID.\r\n * @property {number} calls - The number of draw calls per frame.\r\n * @property {number} triangles - The number of rendered triangles primitives per frame.\r\n * @property {number} points - The number of rendered points primitives per frame.\r\n * @property {number} lines - The number of rendered lines primitives per frame.\r\n **/\r\n\r\n/**\r\n * WebGLRenderer Info\r\n *\r\n * @typedef {Object} WebGLRenderer~Info\r\n * @property {boolean} [autoReset=true] - Whether to automatically reset the info by the renderer or not.\r\n * @property {WebGLRenderer~InfoMemory} memory - Information about allocated objects.\r\n * @property {WebGLRenderer~InfoRender} render - Information about rendered objects.\r\n * @property {?Array<WebGLProgram>} programs - An array `WebGLProgram`s used for rendering.\r\n * @property {Function} reset - Resets the info object for the next frame.\r\n **/\r\n\r\n/**\r\n * WebGLRenderer Shadow Map.\r\n *\r\n * @typedef {Object} WebGLRenderer~ShadowMap\r\n * @property {boolean} [enabled=false] - If set to `true`, use shadow maps in the scene.\r\n * @property {boolean} [autoUpdate=true] - Enables automatic updates to the shadows in the scene.\r\n * If you do not require dynamic lighting / shadows, you may set this to `false`.\r\n * @property {boolean} [needsUpdate=false] - When set to `true`, shadow maps in the scene\r\n * will be updated in the next `render` call.\r\n * @property {(BasicShadowMap|PCFShadowMap|PCFSoftShadowMap|VSMShadowMap)} [type=PCFShadowMap] - Defines the shadow map type.\r\n **/\r\n\r\nexport { WebGLRenderer };\r\n","import { TangentSpaceNormalMap } from '../constants.js';\r\nimport { Material } from './Material.js';\r\nimport { Vector2 } from '../math/Vector2.js';\r\n\r\n/**\r\n * A material that maps the normal vectors to RGB colors.\r\n *\r\n * @augments Material\r\n */\r\nclass MeshNormalMaterial extends Material {\r\n\r\n\t/**\r\n\t * Constructs a new mesh normal material.\r\n\t *\r\n\t * @param {Object} [parameters] - An object with one or more properties\r\n\t * defining the material's appearance. Any property of the material\r\n\t * (including any property from inherited materials) can be passed\r\n\t * in here. Color values can be passed any type of value accepted\r\n\t * by {@link Color#set}.\r\n\t */\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * This flag can be used for type testing.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @readonly\r\n\t\t * @default true\r\n\t\t */\r\n\t\tthis.isMeshNormalMaterial = true;\r\n\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\r\n\t\t/**\r\n\t\t * The texture to create a bump map. The black and white values map to the\r\n\t\t * perceived depth in relation to the lights. Bump doesn't actually affect\r\n\t\t * the geometry of the object, only the lighting. If a normal map is defined\r\n\t\t * this will be ignored.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.bumpMap = null;\r\n\r\n\t\t/**\r\n\t\t * How much the bump map affects the material. Typical range is `[0,1]`.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\t/**\r\n\t\t * The texture to create a normal map. The RGB values affect the surface\r\n\t\t * normal for each pixel fragment and change the way the color is lit. Normal\r\n\t\t * maps do not change the actual shape of the surface, only the lighting. In\r\n\t\t * case the material has a normal map authored using the left handed\r\n\t\t * convention, the `y` component of `normalScale` should be negated to compensate\r\n\t\t * for the different handedness.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.normalMap = null;\r\n\r\n\t\t/**\r\n\t\t * The type of normal map.\r\n\t\t *\r\n\t\t * @type {(TangentSpaceNormalMap|ObjectSpaceNormalMap)}\r\n\t\t * @default TangentSpaceNormalMap\r\n\t\t */\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\r\n\t\t/**\r\n\t\t * How much the normal map affects the material. Typical value range is `[0,1]`.\r\n\t\t *\r\n\t\t * @type {Vector2}\r\n\t\t * @default (1,1)\r\n\t\t */\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\t/**\r\n\t\t * The displacement map affects the position of the mesh's vertices. Unlike\r\n\t\t * other maps which only affect the light and shade of the material the\r\n\t\t * displaced vertices can cast shadows, block other objects, and otherwise\r\n\t\t * act as real geometry. The displacement texture is an image where the value\r\n\t\t * of each pixel (white being the highest) is mapped against, and\r\n\t\t * repositions, the vertices of the mesh.\r\n\t\t *\r\n\t\t * @type {?Texture}\r\n\t\t * @default null\r\n\t\t */\r\n\t\tthis.displacementMap = null;\r\n\r\n\t\t/**\r\n\t\t * How much the displacement map affects the mesh (where black is no\r\n\t\t * displacement, and white is maximum displacement). Without a displacement\r\n\t\t * map set, this value is not applied.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.displacementScale = 1;\r\n\r\n\t\t/**\r\n\t\t * The offset of the displacement map's values on the mesh's vertices.\r\n\t\t * The bias is added to the scaled sample of the displacement map.\r\n\t\t * Without a displacement map set, this value is not applied.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\t/**\r\n\t\t * Renders the geometry as a wireframe.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.wireframe = false;\r\n\r\n\t\t/**\r\n\t\t * Controls the thickness of the wireframe.\r\n\t\t *\r\n\t\t * WebGL and WebGPU ignore this property and always render\r\n\t\t * 1 pixel wide lines.\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @default 1\r\n\t\t */\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\t/**\r\n\t\t * Whether the material is rendered with flat shading or not.\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { MeshNormalMaterial };\r\n","/**\r\n * Records what objects are colliding with each other\r\n */\r\nclass ObjectCollisionMatrix {\r\n  /**\r\n   * The matrix storage.\r\n   */\r\n\r\n  /**\r\n   * @todo Remove useless constructor\r\n   */\r\n  constructor() {\r\n    this.matrix = {};\r\n  }\r\n  /**\r\n   * get\r\n   */\r\n\r\n\r\n  get(bi, bj) {\r\n    let {\r\n      id: i\r\n    } = bi;\r\n    let {\r\n      id: j\r\n    } = bj;\r\n\r\n    if (j > i) {\r\n      const temp = j;\r\n      j = i;\r\n      i = temp;\r\n    }\r\n\r\n    return `${i}-${j}` in this.matrix;\r\n  }\r\n  /**\r\n   * set\r\n   */\r\n\r\n\r\n  set(bi, bj, value) {\r\n    let {\r\n      id: i\r\n    } = bi;\r\n    let {\r\n      id: j\r\n    } = bj;\r\n\r\n    if (j > i) {\r\n      const temp = j;\r\n      j = i;\r\n      i = temp;\r\n    }\r\n\r\n    if (value) {\r\n      this.matrix[`${i}-${j}`] = true;\r\n    } else {\r\n      delete this.matrix[`${i}-${j}`];\r\n    }\r\n  }\r\n  /**\r\n   * Empty the matrix\r\n   */\r\n\r\n\r\n  reset() {\r\n    this.matrix = {};\r\n  }\r\n  /**\r\n   * Set max number of objects\r\n   */\r\n\r\n\r\n  setNumObjects(n) {}\r\n\r\n}\r\n\r\n/**\r\n * A 3x3 matrix.\r\n * Authored by {@link http://github.com/schteppe/ schteppe}\r\n */\r\nclass Mat3 {\r\n  /**\r\n   * A vector of length 9, containing all matrix elements.\r\n   */\r\n\r\n  /**\r\n   * @param elements A vector of length 9, containing all matrix elements.\r\n   */\r\n  constructor(elements) {\r\n    if (elements === void 0) {\r\n      elements = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    }\r\n\r\n    this.elements = elements;\r\n  }\r\n  /**\r\n   * Sets the matrix to identity\r\n   * @todo Should perhaps be renamed to `setIdentity()` to be more clear.\r\n   * @todo Create another function that immediately creates an identity matrix eg. `eye()`\r\n   */\r\n\r\n\r\n  identity() {\r\n    const e = this.elements;\r\n    e[0] = 1;\r\n    e[1] = 0;\r\n    e[2] = 0;\r\n    e[3] = 0;\r\n    e[4] = 1;\r\n    e[5] = 0;\r\n    e[6] = 0;\r\n    e[7] = 0;\r\n    e[8] = 1;\r\n  }\r\n  /**\r\n   * Set all elements to zero\r\n   */\r\n\r\n\r\n  setZero() {\r\n    const e = this.elements;\r\n    e[0] = 0;\r\n    e[1] = 0;\r\n    e[2] = 0;\r\n    e[3] = 0;\r\n    e[4] = 0;\r\n    e[5] = 0;\r\n    e[6] = 0;\r\n    e[7] = 0;\r\n    e[8] = 0;\r\n  }\r\n  /**\r\n   * Sets the matrix diagonal elements from a Vec3\r\n   */\r\n\r\n\r\n  setTrace(vector) {\r\n    const e = this.elements;\r\n    e[0] = vector.x;\r\n    e[4] = vector.y;\r\n    e[8] = vector.z;\r\n  }\r\n  /**\r\n   * Gets the matrix diagonal elements\r\n   */\r\n\r\n\r\n  getTrace(target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    const e = this.elements;\r\n    target.x = e[0];\r\n    target.y = e[4];\r\n    target.z = e[8];\r\n    return target;\r\n  }\r\n  /**\r\n   * Matrix-Vector multiplication\r\n   * @param v The vector to multiply with\r\n   * @param target Optional, target to save the result in.\r\n   */\r\n\r\n\r\n  vmult(v, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    const e = this.elements;\r\n    const x = v.x;\r\n    const y = v.y;\r\n    const z = v.z;\r\n    target.x = e[0] * x + e[1] * y + e[2] * z;\r\n    target.y = e[3] * x + e[4] * y + e[5] * z;\r\n    target.z = e[6] * x + e[7] * y + e[8] * z;\r\n    return target;\r\n  }\r\n  /**\r\n   * Matrix-scalar multiplication\r\n   */\r\n\r\n\r\n  smult(s) {\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      this.elements[i] *= s;\r\n    }\r\n  }\r\n  /**\r\n   * Matrix multiplication\r\n   * @param matrix Matrix to multiply with from left side.\r\n   */\r\n\r\n\r\n  mmult(matrix, target) {\r\n    if (target === void 0) {\r\n      target = new Mat3();\r\n    }\r\n\r\n    const A = this.elements;\r\n    const B = matrix.elements;\r\n    const T = target.elements;\r\n    const a11 = A[0],\r\n          a12 = A[1],\r\n          a13 = A[2],\r\n          a21 = A[3],\r\n          a22 = A[4],\r\n          a23 = A[5],\r\n          a31 = A[6],\r\n          a32 = A[7],\r\n          a33 = A[8];\r\n    const b11 = B[0],\r\n          b12 = B[1],\r\n          b13 = B[2],\r\n          b21 = B[3],\r\n          b22 = B[4],\r\n          b23 = B[5],\r\n          b31 = B[6],\r\n          b32 = B[7],\r\n          b33 = B[8];\r\n    T[0] = a11 * b11 + a12 * b21 + a13 * b31;\r\n    T[1] = a11 * b12 + a12 * b22 + a13 * b32;\r\n    T[2] = a11 * b13 + a12 * b23 + a13 * b33;\r\n    T[3] = a21 * b11 + a22 * b21 + a23 * b31;\r\n    T[4] = a21 * b12 + a22 * b22 + a23 * b32;\r\n    T[5] = a21 * b13 + a22 * b23 + a23 * b33;\r\n    T[6] = a31 * b11 + a32 * b21 + a33 * b31;\r\n    T[7] = a31 * b12 + a32 * b22 + a33 * b32;\r\n    T[8] = a31 * b13 + a32 * b23 + a33 * b33;\r\n    return target;\r\n  }\r\n  /**\r\n   * Scale each column of the matrix\r\n   */\r\n\r\n\r\n  scale(vector, target) {\r\n    if (target === void 0) {\r\n      target = new Mat3();\r\n    }\r\n\r\n    const e = this.elements;\r\n    const t = target.elements;\r\n\r\n    for (let i = 0; i !== 3; i++) {\r\n      t[3 * i + 0] = vector.x * e[3 * i + 0];\r\n      t[3 * i + 1] = vector.y * e[3 * i + 1];\r\n      t[3 * i + 2] = vector.z * e[3 * i + 2];\r\n    }\r\n\r\n    return target;\r\n  }\r\n  /**\r\n   * Solve Ax=b\r\n   * @param b The right hand side\r\n   * @param target Optional. Target vector to save in.\r\n   * @return The solution x\r\n   * @todo should reuse arrays\r\n   */\r\n\r\n\r\n  solve(b, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    // Construct equations\r\n    const nr = 3; // num rows\r\n\r\n    const nc = 4; // num cols\r\n\r\n    const eqns = [];\r\n    let i;\r\n    let j;\r\n\r\n    for (i = 0; i < nr * nc; i++) {\r\n      eqns.push(0);\r\n    }\r\n\r\n    for (i = 0; i < 3; i++) {\r\n      for (j = 0; j < 3; j++) {\r\n        eqns[i + nc * j] = this.elements[i + 3 * j];\r\n      }\r\n    }\r\n\r\n    eqns[3 + 4 * 0] = b.x;\r\n    eqns[3 + 4 * 1] = b.y;\r\n    eqns[3 + 4 * 2] = b.z; // Compute right upper triangular version of the matrix - Gauss elimination\r\n\r\n    let n = 3;\r\n    const k = n;\r\n    let np;\r\n    const kp = 4; // num rows\r\n\r\n    let p;\r\n\r\n    do {\r\n      i = k - n;\r\n\r\n      if (eqns[i + nc * i] === 0) {\r\n        // the pivot is null, swap lines\r\n        for (j = i + 1; j < k; j++) {\r\n          if (eqns[i + nc * j] !== 0) {\r\n            np = kp;\r\n\r\n            do {\r\n              // do ligne( i ) = ligne( i ) + ligne( k )\r\n              p = kp - np;\r\n              eqns[p + nc * i] += eqns[p + nc * j];\r\n            } while (--np);\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (eqns[i + nc * i] !== 0) {\r\n        for (j = i + 1; j < k; j++) {\r\n          const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\r\n          np = kp;\r\n\r\n          do {\r\n            // do ligne( k ) = ligne( k ) - multiplier * ligne( i )\r\n            p = kp - np;\r\n            eqns[p + nc * j] = p <= i ? 0 : eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\r\n          } while (--np);\r\n        }\r\n      }\r\n    } while (--n); // Get the solution\r\n\r\n\r\n    target.z = eqns[2 * nc + 3] / eqns[2 * nc + 2];\r\n    target.y = (eqns[1 * nc + 3] - eqns[1 * nc + 2] * target.z) / eqns[1 * nc + 1];\r\n    target.x = (eqns[0 * nc + 3] - eqns[0 * nc + 2] * target.z - eqns[0 * nc + 1] * target.y) / eqns[0 * nc + 0];\r\n\r\n    if (isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x === Infinity || target.y === Infinity || target.z === Infinity) {\r\n      throw `Could not solve equation! Got x=[${target.toString()}], b=[${b.toString()}], A=[${this.toString()}]`;\r\n    }\r\n\r\n    return target;\r\n  }\r\n  /**\r\n   * Get an element in the matrix by index. Index starts at 0, not 1!!!\r\n   * @param value If provided, the matrix element will be set to this value.\r\n   */\r\n\r\n\r\n  e(row, column, value) {\r\n    if (value === undefined) {\r\n      return this.elements[column + 3 * row];\r\n    } else {\r\n      // Set value\r\n      this.elements[column + 3 * row] = value;\r\n    }\r\n  }\r\n  /**\r\n   * Copy another matrix into this matrix object.\r\n   */\r\n\r\n\r\n  copy(matrix) {\r\n    for (let i = 0; i < matrix.elements.length; i++) {\r\n      this.elements[i] = matrix.elements[i];\r\n    }\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Returns a string representation of the matrix.\r\n   */\r\n\r\n\r\n  toString() {\r\n    let r = '';\r\n    const sep = ',';\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      r += this.elements[i] + sep;\r\n    }\r\n\r\n    return r;\r\n  }\r\n  /**\r\n   * reverse the matrix\r\n   * @param target Target matrix to save in.\r\n   * @return The solution x\r\n   */\r\n\r\n\r\n  reverse(target) {\r\n    if (target === void 0) {\r\n      target = new Mat3();\r\n    }\r\n\r\n    // Construct equations\r\n    const nr = 3; // num rows\r\n\r\n    const nc = 6; // num cols\r\n\r\n    const eqns = reverse_eqns;\r\n    let i;\r\n    let j;\r\n\r\n    for (i = 0; i < 3; i++) {\r\n      for (j = 0; j < 3; j++) {\r\n        eqns[i + nc * j] = this.elements[i + 3 * j];\r\n      }\r\n    }\r\n\r\n    eqns[3 + 6 * 0] = 1;\r\n    eqns[3 + 6 * 1] = 0;\r\n    eqns[3 + 6 * 2] = 0;\r\n    eqns[4 + 6 * 0] = 0;\r\n    eqns[4 + 6 * 1] = 1;\r\n    eqns[4 + 6 * 2] = 0;\r\n    eqns[5 + 6 * 0] = 0;\r\n    eqns[5 + 6 * 1] = 0;\r\n    eqns[5 + 6 * 2] = 1; // Compute right upper triangular version of the matrix - Gauss elimination\r\n\r\n    let n = 3;\r\n    const k = n;\r\n    let np;\r\n    const kp = nc; // num rows\r\n\r\n    let p;\r\n\r\n    do {\r\n      i = k - n;\r\n\r\n      if (eqns[i + nc * i] === 0) {\r\n        // the pivot is null, swap lines\r\n        for (j = i + 1; j < k; j++) {\r\n          if (eqns[i + nc * j] !== 0) {\r\n            np = kp;\r\n\r\n            do {\r\n              // do line( i ) = line( i ) + line( k )\r\n              p = kp - np;\r\n              eqns[p + nc * i] += eqns[p + nc * j];\r\n            } while (--np);\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (eqns[i + nc * i] !== 0) {\r\n        for (j = i + 1; j < k; j++) {\r\n          const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\r\n          np = kp;\r\n\r\n          do {\r\n            // do line( k ) = line( k ) - multiplier * line( i )\r\n            p = kp - np;\r\n            eqns[p + nc * j] = p <= i ? 0 : eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\r\n          } while (--np);\r\n        }\r\n      }\r\n    } while (--n); // eliminate the upper left triangle of the matrix\r\n\r\n\r\n    i = 2;\r\n\r\n    do {\r\n      j = i - 1;\r\n\r\n      do {\r\n        const multiplier = eqns[i + nc * j] / eqns[i + nc * i];\r\n        np = nc;\r\n\r\n        do {\r\n          p = nc - np;\r\n          eqns[p + nc * j] = eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\r\n        } while (--np);\r\n      } while (j--);\r\n    } while (--i); // operations on the diagonal\r\n\r\n\r\n    i = 2;\r\n\r\n    do {\r\n      const multiplier = 1 / eqns[i + nc * i];\r\n      np = nc;\r\n\r\n      do {\r\n        p = nc - np;\r\n        eqns[p + nc * i] = eqns[p + nc * i] * multiplier;\r\n      } while (--np);\r\n    } while (i--);\r\n\r\n    i = 2;\r\n\r\n    do {\r\n      j = 2;\r\n\r\n      do {\r\n        p = eqns[nr + j + nc * i];\r\n\r\n        if (isNaN(p) || p === Infinity) {\r\n          throw `Could not reverse! A=[${this.toString()}]`;\r\n        }\r\n\r\n        target.e(i, j, p);\r\n      } while (j--);\r\n    } while (i--);\r\n\r\n    return target;\r\n  }\r\n  /**\r\n   * Set the matrix from a quaterion\r\n   */\r\n\r\n\r\n  setRotationFromQuaternion(q) {\r\n    const x = q.x;\r\n    const y = q.y;\r\n    const z = q.z;\r\n    const w = q.w;\r\n    const x2 = x + x;\r\n    const y2 = y + y;\r\n    const z2 = z + z;\r\n    const xx = x * x2;\r\n    const xy = x * y2;\r\n    const xz = x * z2;\r\n    const yy = y * y2;\r\n    const yz = y * z2;\r\n    const zz = z * z2;\r\n    const wx = w * x2;\r\n    const wy = w * y2;\r\n    const wz = w * z2;\r\n    const e = this.elements;\r\n    e[3 * 0 + 0] = 1 - (yy + zz);\r\n    e[3 * 0 + 1] = xy - wz;\r\n    e[3 * 0 + 2] = xz + wy;\r\n    e[3 * 1 + 0] = xy + wz;\r\n    e[3 * 1 + 1] = 1 - (xx + zz);\r\n    e[3 * 1 + 2] = yz - wx;\r\n    e[3 * 2 + 0] = xz - wy;\r\n    e[3 * 2 + 1] = yz + wx;\r\n    e[3 * 2 + 2] = 1 - (xx + yy);\r\n    return this;\r\n  }\r\n  /**\r\n   * Transpose the matrix\r\n   * @param target Optional. Where to store the result.\r\n   * @return The target Mat3, or a new Mat3 if target was omitted.\r\n   */\r\n\r\n\r\n  transpose(target) {\r\n    if (target === void 0) {\r\n      target = new Mat3();\r\n    }\r\n\r\n    const M = this.elements;\r\n    const T = target.elements;\r\n    let tmp; //Set diagonals\r\n\r\n    T[0] = M[0];\r\n    T[4] = M[4];\r\n    T[8] = M[8];\r\n    tmp = M[1];\r\n    T[1] = M[3];\r\n    T[3] = tmp;\r\n    tmp = M[2];\r\n    T[2] = M[6];\r\n    T[6] = tmp;\r\n    tmp = M[5];\r\n    T[5] = M[7];\r\n    T[7] = tmp;\r\n    return target;\r\n  }\r\n\r\n}\r\nconst reverse_eqns = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n/**\r\n * 3-dimensional vector\r\n * @example\r\n *     const v = new Vec3(1, 2, 3)\r\n *     console.log('x=' + v.x) // x=1\r\n */\r\n\r\nclass Vec3 {\r\n  constructor(x, y, z) {\r\n    if (x === void 0) {\r\n      x = 0.0;\r\n    }\r\n\r\n    if (y === void 0) {\r\n      y = 0.0;\r\n    }\r\n\r\n    if (z === void 0) {\r\n      z = 0.0;\r\n    }\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n  }\r\n  /**\r\n   * Vector cross product\r\n   * @param target Optional target to save in.\r\n   */\r\n\r\n\r\n  cross(vector, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    const vx = vector.x;\r\n    const vy = vector.y;\r\n    const vz = vector.z;\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n    target.x = y * vz - z * vy;\r\n    target.y = z * vx - x * vz;\r\n    target.z = x * vy - y * vx;\r\n    return target;\r\n  }\r\n  /**\r\n   * Set the vectors' 3 elements\r\n   */\r\n\r\n\r\n  set(x, y, z) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    return this;\r\n  }\r\n  /**\r\n   * Set all components of the vector to zero.\r\n   */\r\n\r\n\r\n  setZero() {\r\n    this.x = this.y = this.z = 0;\r\n  }\r\n  /**\r\n   * Vector addition\r\n   */\r\n\r\n\r\n  vadd(vector, target) {\r\n    if (target) {\r\n      target.x = vector.x + this.x;\r\n      target.y = vector.y + this.y;\r\n      target.z = vector.z + this.z;\r\n    } else {\r\n      return new Vec3(this.x + vector.x, this.y + vector.y, this.z + vector.z);\r\n    }\r\n  }\r\n  /**\r\n   * Vector subtraction\r\n   * @param target Optional target to save in.\r\n   */\r\n\r\n\r\n  vsub(vector, target) {\r\n    if (target) {\r\n      target.x = this.x - vector.x;\r\n      target.y = this.y - vector.y;\r\n      target.z = this.z - vector.z;\r\n    } else {\r\n      return new Vec3(this.x - vector.x, this.y - vector.y, this.z - vector.z);\r\n    }\r\n  }\r\n  /**\r\n   * Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\r\n   *\r\n   * See {@link https://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf Umeå University Lecture}\r\n   */\r\n\r\n\r\n  crossmat() {\r\n    return new Mat3([0, -this.z, this.y, this.z, 0, -this.x, -this.y, this.x, 0]);\r\n  }\r\n  /**\r\n   * Normalize the vector. Note that this changes the values in the vector.\r\n    * @return Returns the norm of the vector\r\n   */\r\n\r\n\r\n  normalize() {\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n    const n = Math.sqrt(x * x + y * y + z * z);\r\n\r\n    if (n > 0.0) {\r\n      const invN = 1 / n;\r\n      this.x *= invN;\r\n      this.y *= invN;\r\n      this.z *= invN;\r\n    } else {\r\n      // Make something up\r\n      this.x = 0;\r\n      this.y = 0;\r\n      this.z = 0;\r\n    }\r\n\r\n    return n;\r\n  }\r\n  /**\r\n   * Get the version of this vector that is of length 1.\r\n   * @param target Optional target to save in\r\n   * @return Returns the unit vector\r\n   */\r\n\r\n\r\n  unit(target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n    let ninv = Math.sqrt(x * x + y * y + z * z);\r\n\r\n    if (ninv > 0.0) {\r\n      ninv = 1.0 / ninv;\r\n      target.x = x * ninv;\r\n      target.y = y * ninv;\r\n      target.z = z * ninv;\r\n    } else {\r\n      target.x = 1;\r\n      target.y = 0;\r\n      target.z = 0;\r\n    }\r\n\r\n    return target;\r\n  }\r\n  /**\r\n   * Get the length of the vector\r\n   */\r\n\r\n\r\n  length() {\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n    return Math.sqrt(x * x + y * y + z * z);\r\n  }\r\n  /**\r\n   * Get the squared length of the vector.\r\n   */\r\n\r\n\r\n  lengthSquared() {\r\n    return this.dot(this);\r\n  }\r\n  /**\r\n   * Get distance from this point to another point\r\n   */\r\n\r\n\r\n  distanceTo(p) {\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n    const px = p.x;\r\n    const py = p.y;\r\n    const pz = p.z;\r\n    return Math.sqrt((px - x) * (px - x) + (py - y) * (py - y) + (pz - z) * (pz - z));\r\n  }\r\n  /**\r\n   * Get squared distance from this point to another point\r\n   */\r\n\r\n\r\n  distanceSquared(p) {\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n    const px = p.x;\r\n    const py = p.y;\r\n    const pz = p.z;\r\n    return (px - x) * (px - x) + (py - y) * (py - y) + (pz - z) * (pz - z);\r\n  }\r\n  /**\r\n   * Multiply all the components of the vector with a scalar.\r\n   * @param target The vector to save the result in.\r\n   */\r\n\r\n\r\n  scale(scalar, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n    target.x = scalar * x;\r\n    target.y = scalar * y;\r\n    target.z = scalar * z;\r\n    return target;\r\n  }\r\n  /**\r\n   * Multiply the vector with an other vector, component-wise.\r\n   * @param target The vector to save the result in.\r\n   */\r\n\r\n\r\n  vmul(vector, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    target.x = vector.x * this.x;\r\n    target.y = vector.y * this.y;\r\n    target.z = vector.z * this.z;\r\n    return target;\r\n  }\r\n  /**\r\n   * Scale a vector and add it to this vector. Save the result in \"target\". (target = this + vector * scalar)\r\n   * @param target The vector to save the result in.\r\n   */\r\n\r\n\r\n  addScaledVector(scalar, vector, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    target.x = this.x + scalar * vector.x;\r\n    target.y = this.y + scalar * vector.y;\r\n    target.z = this.z + scalar * vector.z;\r\n    return target;\r\n  }\r\n  /**\r\n   * Calculate dot product\r\n   * @param vector\r\n   */\r\n\r\n\r\n  dot(vector) {\r\n    return this.x * vector.x + this.y * vector.y + this.z * vector.z;\r\n  }\r\n\r\n  isZero() {\r\n    return this.x === 0 && this.y === 0 && this.z === 0;\r\n  }\r\n  /**\r\n   * Make the vector point in the opposite direction.\r\n   * @param target Optional target to save in\r\n   */\r\n\r\n\r\n  negate(target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    target.x = -this.x;\r\n    target.y = -this.y;\r\n    target.z = -this.z;\r\n    return target;\r\n  }\r\n  /**\r\n   * Compute two artificial tangents to the vector\r\n   * @param t1 Vector object to save the first tangent in\r\n   * @param t2 Vector object to save the second tangent in\r\n   */\r\n\r\n\r\n  tangents(t1, t2) {\r\n    const norm = this.length();\r\n\r\n    if (norm > 0.0) {\r\n      const n = Vec3_tangents_n;\r\n      const inorm = 1 / norm;\r\n      n.set(this.x * inorm, this.y * inorm, this.z * inorm);\r\n      const randVec = Vec3_tangents_randVec;\r\n\r\n      if (Math.abs(n.x) < 0.9) {\r\n        randVec.set(1, 0, 0);\r\n        n.cross(randVec, t1);\r\n      } else {\r\n        randVec.set(0, 1, 0);\r\n        n.cross(randVec, t1);\r\n      }\r\n\r\n      n.cross(t1, t2);\r\n    } else {\r\n      // The normal length is zero, make something up\r\n      t1.set(1, 0, 0);\r\n      t2.set(0, 1, 0);\r\n    }\r\n  }\r\n  /**\r\n   * Converts to a more readable format\r\n   */\r\n\r\n\r\n  toString() {\r\n    return `${this.x},${this.y},${this.z}`;\r\n  }\r\n  /**\r\n   * Converts to an array\r\n   */\r\n\r\n\r\n  toArray() {\r\n    return [this.x, this.y, this.z];\r\n  }\r\n  /**\r\n   * Copies value of source to this vector.\r\n   */\r\n\r\n\r\n  copy(vector) {\r\n    this.x = vector.x;\r\n    this.y = vector.y;\r\n    this.z = vector.z;\r\n    return this;\r\n  }\r\n  /**\r\n   * Do a linear interpolation between two vectors\r\n   * @param t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\r\n   */\r\n\r\n\r\n  lerp(vector, t, target) {\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n    target.x = x + (vector.x - x) * t;\r\n    target.y = y + (vector.y - y) * t;\r\n    target.z = z + (vector.z - z) * t;\r\n  }\r\n  /**\r\n   * Check if a vector equals is almost equal to another one.\r\n   */\r\n\r\n\r\n  almostEquals(vector, precision) {\r\n    if (precision === void 0) {\r\n      precision = 1e-6;\r\n    }\r\n\r\n    if (Math.abs(this.x - vector.x) > precision || Math.abs(this.y - vector.y) > precision || Math.abs(this.z - vector.z) > precision) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  /**\r\n   * Check if a vector is almost zero\r\n   */\r\n\r\n\r\n  almostZero(precision) {\r\n    if (precision === void 0) {\r\n      precision = 1e-6;\r\n    }\r\n\r\n    if (Math.abs(this.x) > precision || Math.abs(this.y) > precision || Math.abs(this.z) > precision) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  /**\r\n   * Check if the vector is anti-parallel to another vector.\r\n   * @param precision Set to zero for exact comparisons\r\n   */\r\n\r\n\r\n  isAntiparallelTo(vector, precision) {\r\n    this.negate(antip_neg);\r\n    return antip_neg.almostEquals(vector, precision);\r\n  }\r\n  /**\r\n   * Clone the vector\r\n   */\r\n\r\n\r\n  clone() {\r\n    return new Vec3(this.x, this.y, this.z);\r\n  }\r\n\r\n}\r\nVec3.ZERO = new Vec3(0, 0, 0);\r\nVec3.UNIT_X = new Vec3(1, 0, 0);\r\nVec3.UNIT_Y = new Vec3(0, 1, 0);\r\nVec3.UNIT_Z = new Vec3(0, 0, 1);\r\nconst Vec3_tangents_n = new Vec3();\r\nconst Vec3_tangents_randVec = new Vec3();\r\nconst antip_neg = new Vec3();\r\n\r\n/**\r\n * Axis aligned bounding box class.\r\n */\r\nclass AABB {\r\n  /**\r\n   * The lower bound of the bounding box\r\n   */\r\n\r\n  /**\r\n   * The upper bound of the bounding box\r\n   */\r\n  constructor(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    this.lowerBound = new Vec3();\r\n    this.upperBound = new Vec3();\r\n\r\n    if (options.lowerBound) {\r\n      this.lowerBound.copy(options.lowerBound);\r\n    }\r\n\r\n    if (options.upperBound) {\r\n      this.upperBound.copy(options.upperBound);\r\n    }\r\n  }\r\n  /**\r\n   * Set the AABB bounds from a set of points.\r\n   * @param points An array of Vec3's.\r\n   * @return The self object\r\n   */\r\n\r\n\r\n  setFromPoints(points, position, quaternion, skinSize) {\r\n    const l = this.lowerBound;\r\n    const u = this.upperBound;\r\n    const q = quaternion; // Set to the first point\r\n\r\n    l.copy(points[0]);\r\n\r\n    if (q) {\r\n      q.vmult(l, l);\r\n    }\r\n\r\n    u.copy(l);\r\n\r\n    for (let i = 1; i < points.length; i++) {\r\n      let p = points[i];\r\n\r\n      if (q) {\r\n        q.vmult(p, tmp$1);\r\n        p = tmp$1;\r\n      }\r\n\r\n      if (p.x > u.x) {\r\n        u.x = p.x;\r\n      }\r\n\r\n      if (p.x < l.x) {\r\n        l.x = p.x;\r\n      }\r\n\r\n      if (p.y > u.y) {\r\n        u.y = p.y;\r\n      }\r\n\r\n      if (p.y < l.y) {\r\n        l.y = p.y;\r\n      }\r\n\r\n      if (p.z > u.z) {\r\n        u.z = p.z;\r\n      }\r\n\r\n      if (p.z < l.z) {\r\n        l.z = p.z;\r\n      }\r\n    } // Add offset\r\n\r\n\r\n    if (position) {\r\n      position.vadd(l, l);\r\n      position.vadd(u, u);\r\n    }\r\n\r\n    if (skinSize) {\r\n      l.x -= skinSize;\r\n      l.y -= skinSize;\r\n      l.z -= skinSize;\r\n      u.x += skinSize;\r\n      u.y += skinSize;\r\n      u.z += skinSize;\r\n    }\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Copy bounds from an AABB to this AABB\r\n   * @param aabb Source to copy from\r\n   * @return The this object, for chainability\r\n   */\r\n\r\n\r\n  copy(aabb) {\r\n    this.lowerBound.copy(aabb.lowerBound);\r\n    this.upperBound.copy(aabb.upperBound);\r\n    return this;\r\n  }\r\n  /**\r\n   * Clone an AABB\r\n   */\r\n\r\n\r\n  clone() {\r\n    return new AABB().copy(this);\r\n  }\r\n  /**\r\n   * Extend this AABB so that it covers the given AABB too.\r\n   */\r\n\r\n\r\n  extend(aabb) {\r\n    this.lowerBound.x = Math.min(this.lowerBound.x, aabb.lowerBound.x);\r\n    this.upperBound.x = Math.max(this.upperBound.x, aabb.upperBound.x);\r\n    this.lowerBound.y = Math.min(this.lowerBound.y, aabb.lowerBound.y);\r\n    this.upperBound.y = Math.max(this.upperBound.y, aabb.upperBound.y);\r\n    this.lowerBound.z = Math.min(this.lowerBound.z, aabb.lowerBound.z);\r\n    this.upperBound.z = Math.max(this.upperBound.z, aabb.upperBound.z);\r\n  }\r\n  /**\r\n   * Returns true if the given AABB overlaps this AABB.\r\n   */\r\n\r\n\r\n  overlaps(aabb) {\r\n    const l1 = this.lowerBound;\r\n    const u1 = this.upperBound;\r\n    const l2 = aabb.lowerBound;\r\n    const u2 = aabb.upperBound; //      l2        u2\r\n    //      |---------|\r\n    // |--------|\r\n    // l1       u1\r\n\r\n    const overlapsX = l2.x <= u1.x && u1.x <= u2.x || l1.x <= u2.x && u2.x <= u1.x;\r\n    const overlapsY = l2.y <= u1.y && u1.y <= u2.y || l1.y <= u2.y && u2.y <= u1.y;\r\n    const overlapsZ = l2.z <= u1.z && u1.z <= u2.z || l1.z <= u2.z && u2.z <= u1.z;\r\n    return overlapsX && overlapsY && overlapsZ;\r\n  } // Mostly for debugging\r\n\r\n\r\n  volume() {\r\n    const l = this.lowerBound;\r\n    const u = this.upperBound;\r\n    return (u.x - l.x) * (u.y - l.y) * (u.z - l.z);\r\n  }\r\n  /**\r\n   * Returns true if the given AABB is fully contained in this AABB.\r\n   */\r\n\r\n\r\n  contains(aabb) {\r\n    const l1 = this.lowerBound;\r\n    const u1 = this.upperBound;\r\n    const l2 = aabb.lowerBound;\r\n    const u2 = aabb.upperBound; //      l2        u2\r\n    //      |---------|\r\n    // |---------------|\r\n    // l1              u1\r\n\r\n    return l1.x <= l2.x && u1.x >= u2.x && l1.y <= l2.y && u1.y >= u2.y && l1.z <= l2.z && u1.z >= u2.z;\r\n  }\r\n\r\n  getCorners(a, b, c, d, e, f, g, h) {\r\n    const l = this.lowerBound;\r\n    const u = this.upperBound;\r\n    a.copy(l);\r\n    b.set(u.x, l.y, l.z);\r\n    c.set(u.x, u.y, l.z);\r\n    d.set(l.x, u.y, u.z);\r\n    e.set(u.x, l.y, u.z);\r\n    f.set(l.x, u.y, l.z);\r\n    g.set(l.x, l.y, u.z);\r\n    h.copy(u);\r\n  }\r\n  /**\r\n   * Get the representation of an AABB in another frame.\r\n   * @return The \"target\" AABB object.\r\n   */\r\n\r\n\r\n  toLocalFrame(frame, target) {\r\n    const corners = transformIntoFrame_corners;\r\n    const a = corners[0];\r\n    const b = corners[1];\r\n    const c = corners[2];\r\n    const d = corners[3];\r\n    const e = corners[4];\r\n    const f = corners[5];\r\n    const g = corners[6];\r\n    const h = corners[7]; // Get corners in current frame\r\n\r\n    this.getCorners(a, b, c, d, e, f, g, h); // Transform them to new local frame\r\n\r\n    for (let i = 0; i !== 8; i++) {\r\n      const corner = corners[i];\r\n      frame.pointToLocal(corner, corner);\r\n    }\r\n\r\n    return target.setFromPoints(corners);\r\n  }\r\n  /**\r\n   * Get the representation of an AABB in the global frame.\r\n   * @return The \"target\" AABB object.\r\n   */\r\n\r\n\r\n  toWorldFrame(frame, target) {\r\n    const corners = transformIntoFrame_corners;\r\n    const a = corners[0];\r\n    const b = corners[1];\r\n    const c = corners[2];\r\n    const d = corners[3];\r\n    const e = corners[4];\r\n    const f = corners[5];\r\n    const g = corners[6];\r\n    const h = corners[7]; // Get corners in current frame\r\n\r\n    this.getCorners(a, b, c, d, e, f, g, h); // Transform them to new local frame\r\n\r\n    for (let i = 0; i !== 8; i++) {\r\n      const corner = corners[i];\r\n      frame.pointToWorld(corner, corner);\r\n    }\r\n\r\n    return target.setFromPoints(corners);\r\n  }\r\n  /**\r\n   * Check if the AABB is hit by a ray.\r\n   */\r\n\r\n\r\n  overlapsRay(ray) {\r\n    const {\r\n      direction,\r\n      from\r\n    } = ray; // const t = 0\r\n    // ray.direction is unit direction vector of ray\r\n\r\n    const dirFracX = 1 / direction.x;\r\n    const dirFracY = 1 / direction.y;\r\n    const dirFracZ = 1 / direction.z; // this.lowerBound is the corner of AABB with minimal coordinates - left bottom, rt is maximal corner\r\n\r\n    const t1 = (this.lowerBound.x - from.x) * dirFracX;\r\n    const t2 = (this.upperBound.x - from.x) * dirFracX;\r\n    const t3 = (this.lowerBound.y - from.y) * dirFracY;\r\n    const t4 = (this.upperBound.y - from.y) * dirFracY;\r\n    const t5 = (this.lowerBound.z - from.z) * dirFracZ;\r\n    const t6 = (this.upperBound.z - from.z) * dirFracZ; // const tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)));\r\n    // const tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)));\r\n\r\n    const tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)), Math.min(t5, t6));\r\n    const tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)), Math.max(t5, t6)); // if tmax < 0, ray (line) is intersecting AABB, but whole AABB is behing us\r\n\r\n    if (tmax < 0) {\r\n      //t = tmax;\r\n      return false;\r\n    } // if tmin > tmax, ray doesn't intersect AABB\r\n\r\n\r\n    if (tmin > tmax) {\r\n      //t = tmax;\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\nconst tmp$1 = new Vec3();\r\nconst transformIntoFrame_corners = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\r\n\r\n/**\r\n * Collision \"matrix\".\r\n * It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\r\n */\r\nclass ArrayCollisionMatrix {\r\n  /**\r\n   * The matrix storage.\r\n   */\r\n  constructor() {\r\n    this.matrix = [];\r\n  }\r\n  /**\r\n   * Get an element\r\n   */\r\n\r\n\r\n  get(bi, bj) {\r\n    let {\r\n      index: i\r\n    } = bi;\r\n    let {\r\n      index: j\r\n    } = bj;\r\n\r\n    if (j > i) {\r\n      const temp = j;\r\n      j = i;\r\n      i = temp;\r\n    }\r\n\r\n    return this.matrix[(i * (i + 1) >> 1) + j - 1];\r\n  }\r\n  /**\r\n   * Set an element\r\n   */\r\n\r\n\r\n  set(bi, bj, value) {\r\n    let {\r\n      index: i\r\n    } = bi;\r\n    let {\r\n      index: j\r\n    } = bj;\r\n\r\n    if (j > i) {\r\n      const temp = j;\r\n      j = i;\r\n      i = temp;\r\n    }\r\n\r\n    this.matrix[(i * (i + 1) >> 1) + j - 1] = value ? 1 : 0;\r\n  }\r\n  /**\r\n   * Sets all elements to zero\r\n   */\r\n\r\n\r\n  reset() {\r\n    for (let i = 0, l = this.matrix.length; i !== l; i++) {\r\n      this.matrix[i] = 0;\r\n    }\r\n  }\r\n  /**\r\n   * Sets the max number of objects\r\n   */\r\n\r\n\r\n  setNumObjects(n) {\r\n    this.matrix.length = n * (n - 1) >> 1;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Base class for objects that dispatches events.\r\n */\r\nclass EventTarget {\r\n  /**\r\n   * Add an event listener\r\n   * @return The self object, for chainability.\r\n   */\r\n  addEventListener(type, listener) {\r\n    if (this._listeners === undefined) {\r\n      this._listeners = {};\r\n    }\r\n\r\n    const listeners = this._listeners;\r\n\r\n    if (listeners[type] === undefined) {\r\n      listeners[type] = [];\r\n    }\r\n\r\n    if (!listeners[type].includes(listener)) {\r\n      listeners[type].push(listener);\r\n    }\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Check if an event listener is added\r\n   */\r\n\r\n\r\n  hasEventListener(type, listener) {\r\n    if (this._listeners === undefined) {\r\n      return false;\r\n    }\r\n\r\n    const listeners = this._listeners;\r\n\r\n    if (listeners[type] !== undefined && listeners[type].includes(listener)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * Check if any event listener of the given type is added\r\n   */\r\n\r\n\r\n  hasAnyEventListener(type) {\r\n    if (this._listeners === undefined) {\r\n      return false;\r\n    }\r\n\r\n    const listeners = this._listeners;\r\n    return listeners[type] !== undefined;\r\n  }\r\n  /**\r\n   * Remove an event listener\r\n   * @return The self object, for chainability.\r\n   */\r\n\r\n\r\n  removeEventListener(type, listener) {\r\n    if (this._listeners === undefined) {\r\n      return this;\r\n    }\r\n\r\n    const listeners = this._listeners;\r\n\r\n    if (listeners[type] === undefined) {\r\n      return this;\r\n    }\r\n\r\n    const index = listeners[type].indexOf(listener);\r\n\r\n    if (index !== -1) {\r\n      listeners[type].splice(index, 1);\r\n    }\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Emit an event.\r\n   * @return The self object, for chainability.\r\n   */\r\n\r\n\r\n  dispatchEvent(event) {\r\n    if (this._listeners === undefined) {\r\n      return this;\r\n    }\r\n\r\n    const listeners = this._listeners;\r\n    const listenerArray = listeners[event.type];\r\n\r\n    if (listenerArray !== undefined) {\r\n      event.target = this;\r\n\r\n      for (let i = 0, l = listenerArray.length; i < l; i++) {\r\n        listenerArray[i].call(this, event);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * A Quaternion describes a rotation in 3D space. The Quaternion is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\r\n * @param x Multiplier of the imaginary basis vector i.\r\n * @param y Multiplier of the imaginary basis vector j.\r\n * @param z Multiplier of the imaginary basis vector k.\r\n * @param w Multiplier of the real part.\r\n * @see http://en.wikipedia.org/wiki/Quaternion\r\n */\r\n\r\nclass Quaternion {\r\n  constructor(x, y, z, w) {\r\n    if (x === void 0) {\r\n      x = 0;\r\n    }\r\n\r\n    if (y === void 0) {\r\n      y = 0;\r\n    }\r\n\r\n    if (z === void 0) {\r\n      z = 0;\r\n    }\r\n\r\n    if (w === void 0) {\r\n      w = 1;\r\n    }\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.w = w;\r\n  }\r\n  /**\r\n   * Set the value of the quaternion.\r\n   */\r\n\r\n\r\n  set(x, y, z, w) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n    this.w = w;\r\n    return this;\r\n  }\r\n  /**\r\n   * Convert to a readable format\r\n   * @return \"x,y,z,w\"\r\n   */\r\n\r\n\r\n  toString() {\r\n    return `${this.x},${this.y},${this.z},${this.w}`;\r\n  }\r\n  /**\r\n   * Convert to an Array\r\n   * @return [x, y, z, w]\r\n   */\r\n\r\n\r\n  toArray() {\r\n    return [this.x, this.y, this.z, this.w];\r\n  }\r\n  /**\r\n   * Set the quaternion components given an axis and an angle in radians.\r\n   */\r\n\r\n\r\n  setFromAxisAngle(vector, angle) {\r\n    const s = Math.sin(angle * 0.5);\r\n    this.x = vector.x * s;\r\n    this.y = vector.y * s;\r\n    this.z = vector.z * s;\r\n    this.w = Math.cos(angle * 0.5);\r\n    return this;\r\n  }\r\n  /**\r\n   * Converts the quaternion to [ axis, angle ] representation.\r\n   * @param targetAxis A vector object to reuse for storing the axis.\r\n   * @return An array, first element is the axis and the second is the angle in radians.\r\n   */\r\n\r\n\r\n  toAxisAngle(targetAxis) {\r\n    if (targetAxis === void 0) {\r\n      targetAxis = new Vec3();\r\n    }\r\n\r\n    this.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\r\n\r\n    const angle = 2 * Math.acos(this.w);\r\n    const s = Math.sqrt(1 - this.w * this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\r\n\r\n    if (s < 0.001) {\r\n      // test to avoid divide by zero, s is always positive due to sqrt\r\n      // if s close to zero then direction of axis not important\r\n      targetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\r\n\r\n      targetAxis.y = this.y;\r\n      targetAxis.z = this.z;\r\n    } else {\r\n      targetAxis.x = this.x / s; // normalise axis\r\n\r\n      targetAxis.y = this.y / s;\r\n      targetAxis.z = this.z / s;\r\n    }\r\n\r\n    return [targetAxis, angle];\r\n  }\r\n  /**\r\n   * Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\r\n   */\r\n\r\n\r\n  setFromVectors(u, v) {\r\n    if (u.isAntiparallelTo(v)) {\r\n      const t1 = sfv_t1;\r\n      const t2 = sfv_t2;\r\n      u.tangents(t1, t2);\r\n      this.setFromAxisAngle(t1, Math.PI);\r\n    } else {\r\n      const a = u.cross(v);\r\n      this.x = a.x;\r\n      this.y = a.y;\r\n      this.z = a.z;\r\n      this.w = Math.sqrt(u.length() ** 2 * v.length() ** 2) + u.dot(v);\r\n      this.normalize();\r\n    }\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Multiply the quaternion with an other quaternion.\r\n   */\r\n\r\n\r\n  mult(quat, target) {\r\n    if (target === void 0) {\r\n      target = new Quaternion();\r\n    }\r\n\r\n    const ax = this.x;\r\n    const ay = this.y;\r\n    const az = this.z;\r\n    const aw = this.w;\r\n    const bx = quat.x;\r\n    const by = quat.y;\r\n    const bz = quat.z;\r\n    const bw = quat.w;\r\n    target.x = ax * bw + aw * bx + ay * bz - az * by;\r\n    target.y = ay * bw + aw * by + az * bx - ax * bz;\r\n    target.z = az * bw + aw * bz + ax * by - ay * bx;\r\n    target.w = aw * bw - ax * bx - ay * by - az * bz;\r\n    return target;\r\n  }\r\n  /**\r\n   * Get the inverse quaternion rotation.\r\n   */\r\n\r\n\r\n  inverse(target) {\r\n    if (target === void 0) {\r\n      target = new Quaternion();\r\n    }\r\n\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n    const w = this.w;\r\n    this.conjugate(target);\r\n    const inorm2 = 1 / (x * x + y * y + z * z + w * w);\r\n    target.x *= inorm2;\r\n    target.y *= inorm2;\r\n    target.z *= inorm2;\r\n    target.w *= inorm2;\r\n    return target;\r\n  }\r\n  /**\r\n   * Get the quaternion conjugate\r\n   */\r\n\r\n\r\n  conjugate(target) {\r\n    if (target === void 0) {\r\n      target = new Quaternion();\r\n    }\r\n\r\n    target.x = -this.x;\r\n    target.y = -this.y;\r\n    target.z = -this.z;\r\n    target.w = this.w;\r\n    return target;\r\n  }\r\n  /**\r\n   * Normalize the quaternion. Note that this changes the values of the quaternion.\r\n   */\r\n\r\n\r\n  normalize() {\r\n    let l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n\r\n    if (l === 0) {\r\n      this.x = 0;\r\n      this.y = 0;\r\n      this.z = 0;\r\n      this.w = 0;\r\n    } else {\r\n      l = 1 / l;\r\n      this.x *= l;\r\n      this.y *= l;\r\n      this.z *= l;\r\n      this.w *= l;\r\n    }\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Approximation of quaternion normalization. Works best when quat is already almost-normalized.\r\n   * @author unphased, https://github.com/unphased\r\n   */\r\n\r\n\r\n  normalizeFast() {\r\n    const f = (3.0 - (this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)) / 2.0;\r\n\r\n    if (f === 0) {\r\n      this.x = 0;\r\n      this.y = 0;\r\n      this.z = 0;\r\n      this.w = 0;\r\n    } else {\r\n      this.x *= f;\r\n      this.y *= f;\r\n      this.z *= f;\r\n      this.w *= f;\r\n    }\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Multiply the quaternion by a vector\r\n   */\r\n\r\n\r\n  vmult(v, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    const x = v.x;\r\n    const y = v.y;\r\n    const z = v.z;\r\n    const qx = this.x;\r\n    const qy = this.y;\r\n    const qz = this.z;\r\n    const qw = this.w; // q*v\r\n\r\n    const ix = qw * x + qy * z - qz * y;\r\n    const iy = qw * y + qz * x - qx * z;\r\n    const iz = qw * z + qx * y - qy * x;\r\n    const iw = -qx * x - qy * y - qz * z;\r\n    target.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n    target.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n    target.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n    return target;\r\n  }\r\n  /**\r\n   * Copies value of source to this quaternion.\r\n   * @return this\r\n   */\r\n\r\n\r\n  copy(quat) {\r\n    this.x = quat.x;\r\n    this.y = quat.y;\r\n    this.z = quat.z;\r\n    this.w = quat.w;\r\n    return this;\r\n  }\r\n  /**\r\n   * Convert the quaternion to euler angle representation. Order: YZX, as this page describes: https://www.euclideanspace.com/maths/standards/index.htm\r\n   * @param order Three-character string, defaults to \"YZX\"\r\n   */\r\n\r\n\r\n  toEuler(target, order) {\r\n    if (order === void 0) {\r\n      order = 'YZX';\r\n    }\r\n\r\n    let heading;\r\n    let attitude;\r\n    let bank;\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n    const w = this.w;\r\n\r\n    switch (order) {\r\n      case 'YZX':\r\n        const test = x * y + z * w;\r\n\r\n        if (test > 0.499) {\r\n          // singularity at north pole\r\n          heading = 2 * Math.atan2(x, w);\r\n          attitude = Math.PI / 2;\r\n          bank = 0;\r\n        }\r\n\r\n        if (test < -0.499) {\r\n          // singularity at south pole\r\n          heading = -2 * Math.atan2(x, w);\r\n          attitude = -Math.PI / 2;\r\n          bank = 0;\r\n        }\r\n\r\n        if (heading === undefined) {\r\n          const sqx = x * x;\r\n          const sqy = y * y;\r\n          const sqz = z * z;\r\n          heading = Math.atan2(2 * y * w - 2 * x * z, 1 - 2 * sqy - 2 * sqz); // Heading\r\n\r\n          attitude = Math.asin(2 * test); // attitude\r\n\r\n          bank = Math.atan2(2 * x * w - 2 * y * z, 1 - 2 * sqx - 2 * sqz); // bank\r\n        }\r\n\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`Euler order ${order} not supported yet.`);\r\n    }\r\n\r\n    target.y = heading;\r\n    target.z = attitude;\r\n    target.x = bank;\r\n  }\r\n  /**\r\n   * Set the quaternion components given Euler angle representation.\r\n   *\r\n   * @param order The order to apply angles: 'XYZ' or 'YXZ' or any other combination.\r\n   *\r\n   * See {@link https://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors MathWorks} reference\r\n   */\r\n\r\n\r\n  setFromEuler(x, y, z, order) {\r\n    if (order === void 0) {\r\n      order = 'XYZ';\r\n    }\r\n\r\n    const c1 = Math.cos(x / 2);\r\n    const c2 = Math.cos(y / 2);\r\n    const c3 = Math.cos(z / 2);\r\n    const s1 = Math.sin(x / 2);\r\n    const s2 = Math.sin(y / 2);\r\n    const s3 = Math.sin(z / 2);\r\n\r\n    if (order === 'XYZ') {\r\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n    } else if (order === 'YXZ') {\r\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n    } else if (order === 'ZXY') {\r\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n    } else if (order === 'ZYX') {\r\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n    } else if (order === 'YZX') {\r\n      this.x = s1 * c2 * c3 + c1 * s2 * s3;\r\n      this.y = c1 * s2 * c3 + s1 * c2 * s3;\r\n      this.z = c1 * c2 * s3 - s1 * s2 * c3;\r\n      this.w = c1 * c2 * c3 - s1 * s2 * s3;\r\n    } else if (order === 'XZY') {\r\n      this.x = s1 * c2 * c3 - c1 * s2 * s3;\r\n      this.y = c1 * s2 * c3 - s1 * c2 * s3;\r\n      this.z = c1 * c2 * s3 + s1 * s2 * c3;\r\n      this.w = c1 * c2 * c3 + s1 * s2 * s3;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  clone() {\r\n    return new Quaternion(this.x, this.y, this.z, this.w);\r\n  }\r\n  /**\r\n   * Performs a spherical linear interpolation between two quat\r\n   *\r\n   * @param toQuat second operand\r\n   * @param t interpolation amount between the self quaternion and toQuat\r\n   * @param target A quaternion to store the result in. If not provided, a new one will be created.\r\n   * @returns {Quaternion} The \"target\" object\r\n   */\r\n\r\n\r\n  slerp(toQuat, t, target) {\r\n    if (target === void 0) {\r\n      target = new Quaternion();\r\n    }\r\n\r\n    const ax = this.x;\r\n    const ay = this.y;\r\n    const az = this.z;\r\n    const aw = this.w;\r\n    let bx = toQuat.x;\r\n    let by = toQuat.y;\r\n    let bz = toQuat.z;\r\n    let bw = toQuat.w;\r\n    let omega;\r\n    let cosom;\r\n    let sinom;\r\n    let scale0;\r\n    let scale1; // calc cosine\r\n\r\n    cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\r\n\r\n    if (cosom < 0.0) {\r\n      cosom = -cosom;\r\n      bx = -bx;\r\n      by = -by;\r\n      bz = -bz;\r\n      bw = -bw;\r\n    } // calculate coefficients\r\n\r\n\r\n    if (1.0 - cosom > 0.000001) {\r\n      // standard case (slerp)\r\n      omega = Math.acos(cosom);\r\n      sinom = Math.sin(omega);\r\n      scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n      scale1 = Math.sin(t * omega) / sinom;\r\n    } else {\r\n      // \"from\" and \"to\" quaternions are very close\r\n      //  ... so we can do a linear interpolation\r\n      scale0 = 1.0 - t;\r\n      scale1 = t;\r\n    } // calculate final values\r\n\r\n\r\n    target.x = scale0 * ax + scale1 * bx;\r\n    target.y = scale0 * ay + scale1 * by;\r\n    target.z = scale0 * az + scale1 * bz;\r\n    target.w = scale0 * aw + scale1 * bw;\r\n    return target;\r\n  }\r\n  /**\r\n   * Rotate an absolute orientation quaternion given an angular velocity and a time step.\r\n   */\r\n\r\n\r\n  integrate(angularVelocity, dt, angularFactor, target) {\r\n    if (target === void 0) {\r\n      target = new Quaternion();\r\n    }\r\n\r\n    const ax = angularVelocity.x * angularFactor.x,\r\n          ay = angularVelocity.y * angularFactor.y,\r\n          az = angularVelocity.z * angularFactor.z,\r\n          bx = this.x,\r\n          by = this.y,\r\n          bz = this.z,\r\n          bw = this.w;\r\n    const half_dt = dt * 0.5;\r\n    target.x += half_dt * (ax * bw + ay * bz - az * by);\r\n    target.y += half_dt * (ay * bw + az * bx - ax * bz);\r\n    target.z += half_dt * (az * bw + ax * by - ay * bx);\r\n    target.w += half_dt * (-ax * bx - ay * by - az * bz);\r\n    return target;\r\n  }\r\n\r\n}\r\nconst sfv_t1 = new Vec3();\r\nconst sfv_t2 = new Vec3();\r\n\r\n/**\r\n * The available shape types.\r\n */\r\nconst SHAPE_TYPES = {\r\n  /** SPHERE */\r\n  SPHERE: 1,\r\n\r\n  /** PLANE */\r\n  PLANE: 2,\r\n\r\n  /** BOX */\r\n  BOX: 4,\r\n\r\n  /** COMPOUND */\r\n  COMPOUND: 8,\r\n\r\n  /** CONVEXPOLYHEDRON */\r\n  CONVEXPOLYHEDRON: 16,\r\n\r\n  /** HEIGHTFIELD */\r\n  HEIGHTFIELD: 32,\r\n\r\n  /** PARTICLE */\r\n  PARTICLE: 64,\r\n\r\n  /** CYLINDER */\r\n  CYLINDER: 128,\r\n\r\n  /** TRIMESH */\r\n  TRIMESH: 256\r\n};\r\n/**\r\n * ShapeType\r\n */\r\n\r\n/**\r\n * Base class for shapes\r\n */\r\nclass Shape {\r\n  /**\r\n   * Identifier of the Shape.\r\n   */\r\n\r\n  /**\r\n   * The type of this shape. Must be set to an int > 0 by subclasses.\r\n   */\r\n\r\n  /**\r\n   * The local bounding sphere radius of this shape.\r\n   */\r\n\r\n  /**\r\n   * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\r\n   * @default true\r\n   */\r\n\r\n  /**\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * @default -1\r\n   */\r\n\r\n  /**\r\n   * Optional material of the shape that regulates contact properties.\r\n   */\r\n\r\n  /**\r\n   * The body to which the shape is added to.\r\n   */\r\n\r\n  /**\r\n   * All the Shape types.\r\n   */\r\n  constructor(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    this.id = Shape.idCounter++;\r\n    this.type = options.type || 0;\r\n    this.boundingSphereRadius = 0;\r\n    this.collisionResponse = options.collisionResponse ? options.collisionResponse : true;\r\n    this.collisionFilterGroup = options.collisionFilterGroup !== undefined ? options.collisionFilterGroup : 1;\r\n    this.collisionFilterMask = options.collisionFilterMask !== undefined ? options.collisionFilterMask : -1;\r\n    this.material = options.material ? options.material : null;\r\n    this.body = null;\r\n  }\r\n  /**\r\n   * Computes the bounding sphere radius.\r\n   * The result is stored in the property `.boundingSphereRadius`\r\n   */\r\n\r\n\r\n  updateBoundingSphereRadius() {\r\n    throw `computeBoundingSphereRadius() not implemented for shape type ${this.type}`;\r\n  }\r\n  /**\r\n   * Get the volume of this shape\r\n   */\r\n\r\n\r\n  volume() {\r\n    throw `volume() not implemented for shape type ${this.type}`;\r\n  }\r\n  /**\r\n   * Calculates the inertia in the local frame for this shape.\r\n   * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\r\n   */\r\n\r\n\r\n  calculateLocalInertia(mass, target) {\r\n    throw `calculateLocalInertia() not implemented for shape type ${this.type}`;\r\n  }\r\n  /**\r\n   * @todo use abstract for these kind of methods\r\n   */\r\n\r\n\r\n  calculateWorldAABB(pos, quat, min, max) {\r\n    throw `calculateWorldAABB() not implemented for shape type ${this.type}`;\r\n  }\r\n\r\n}\r\nShape.idCounter = 0;\r\nShape.types = SHAPE_TYPES;\r\n\r\n/**\r\n * Transformation utilities.\r\n */\r\nclass Transform {\r\n  /**\r\n   * position\r\n   */\r\n\r\n  /**\r\n   * quaternion\r\n   */\r\n  constructor(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    this.position = new Vec3();\r\n    this.quaternion = new Quaternion();\r\n\r\n    if (options.position) {\r\n      this.position.copy(options.position);\r\n    }\r\n\r\n    if (options.quaternion) {\r\n      this.quaternion.copy(options.quaternion);\r\n    }\r\n  }\r\n  /**\r\n   * Get a global point in local transform coordinates.\r\n   */\r\n\r\n\r\n  pointToLocal(worldPoint, result) {\r\n    return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\r\n  }\r\n  /**\r\n   * Get a local point in global transform coordinates.\r\n   */\r\n\r\n\r\n  pointToWorld(localPoint, result) {\r\n    return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\r\n  }\r\n  /**\r\n   * vectorToWorldFrame\r\n   */\r\n\r\n\r\n  vectorToWorldFrame(localVector, result) {\r\n    if (result === void 0) {\r\n      result = new Vec3();\r\n    }\r\n\r\n    this.quaternion.vmult(localVector, result);\r\n    return result;\r\n  }\r\n  /**\r\n   * pointToLocalFrame\r\n   */\r\n\r\n\r\n  static pointToLocalFrame(position, quaternion, worldPoint, result) {\r\n    if (result === void 0) {\r\n      result = new Vec3();\r\n    }\r\n\r\n    worldPoint.vsub(position, result);\r\n    quaternion.conjugate(tmpQuat$1);\r\n    tmpQuat$1.vmult(result, result);\r\n    return result;\r\n  }\r\n  /**\r\n   * pointToWorldFrame\r\n   */\r\n\r\n\r\n  static pointToWorldFrame(position, quaternion, localPoint, result) {\r\n    if (result === void 0) {\r\n      result = new Vec3();\r\n    }\r\n\r\n    quaternion.vmult(localPoint, result);\r\n    result.vadd(position, result);\r\n    return result;\r\n  }\r\n  /**\r\n   * vectorToWorldFrame\r\n   */\r\n\r\n\r\n  static vectorToWorldFrame(quaternion, localVector, result) {\r\n    if (result === void 0) {\r\n      result = new Vec3();\r\n    }\r\n\r\n    quaternion.vmult(localVector, result);\r\n    return result;\r\n  }\r\n  /**\r\n   * vectorToLocalFrame\r\n   */\r\n\r\n\r\n  static vectorToLocalFrame(position, quaternion, worldVector, result) {\r\n    if (result === void 0) {\r\n      result = new Vec3();\r\n    }\r\n\r\n    quaternion.w *= -1;\r\n    quaternion.vmult(worldVector, result);\r\n    quaternion.w *= -1;\r\n    return result;\r\n  }\r\n\r\n}\r\nconst tmpQuat$1 = new Quaternion();\r\n\r\n/**\r\n * A set of polygons describing a convex shape.\r\n *\r\n * The shape MUST be convex for the code to work properly. No polygons may be coplanar (contained\r\n * in the same 3D plane), instead these should be merged into one polygon.\r\n *\r\n * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\r\n * @author schteppe / https://github.com/schteppe\r\n * @see https://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\r\n *\r\n * @todo Move the clipping functions to ContactGenerator?\r\n * @todo Automatically merge coplanar polygons in constructor.\r\n * @example\r\n *     const convexShape = new CANNON.ConvexPolyhedron({ vertices, faces })\r\n *     const convexBody = new CANNON.Body({ mass: 1, shape: convexShape })\r\n *     world.addBody(convexBody)\r\n */\r\nclass ConvexPolyhedron extends Shape {\r\n  /** vertices */\r\n\r\n  /**\r\n   * Array of integer arrays, indicating which vertices each face consists of\r\n   */\r\n\r\n  /** faceNormals */\r\n\r\n  /** worldVertices */\r\n\r\n  /** worldVerticesNeedsUpdate */\r\n\r\n  /** worldFaceNormals */\r\n\r\n  /** worldFaceNormalsNeedsUpdate */\r\n\r\n  /**\r\n   * If given, these locally defined, normalized axes are the only ones being checked when doing separating axis check.\r\n   */\r\n\r\n  /** uniqueEdges */\r\n\r\n  /**\r\n   * @param vertices An array of Vec3's\r\n   * @param faces Array of integer arrays, describing which vertices that is included in each face.\r\n   */\r\n  constructor(props) {\r\n    if (props === void 0) {\r\n      props = {};\r\n    }\r\n\r\n    const {\r\n      vertices = [],\r\n      faces = [],\r\n      normals = [],\r\n      axes,\r\n      boundingSphereRadius\r\n    } = props;\r\n    super({\r\n      type: Shape.types.CONVEXPOLYHEDRON\r\n    });\r\n    this.vertices = vertices;\r\n    this.faces = faces;\r\n    this.faceNormals = normals;\r\n\r\n    if (this.faceNormals.length === 0) {\r\n      this.computeNormals();\r\n    }\r\n\r\n    if (!boundingSphereRadius) {\r\n      this.updateBoundingSphereRadius();\r\n    } else {\r\n      this.boundingSphereRadius = boundingSphereRadius;\r\n    }\r\n\r\n    this.worldVertices = []; // World transformed version of .vertices\r\n\r\n    this.worldVerticesNeedsUpdate = true;\r\n    this.worldFaceNormals = []; // World transformed version of .faceNormals\r\n\r\n    this.worldFaceNormalsNeedsUpdate = true;\r\n    this.uniqueAxes = axes ? axes.slice() : null;\r\n    this.uniqueEdges = [];\r\n    this.computeEdges();\r\n  }\r\n  /**\r\n   * Computes uniqueEdges\r\n   */\r\n\r\n\r\n  computeEdges() {\r\n    const faces = this.faces;\r\n    const vertices = this.vertices;\r\n    const edges = this.uniqueEdges;\r\n    edges.length = 0;\r\n    const edge = new Vec3();\r\n\r\n    for (let i = 0; i !== faces.length; i++) {\r\n      const face = faces[i];\r\n      const numVertices = face.length;\r\n\r\n      for (let j = 0; j !== numVertices; j++) {\r\n        const k = (j + 1) % numVertices;\r\n        vertices[face[j]].vsub(vertices[face[k]], edge);\r\n        edge.normalize();\r\n        let found = false;\r\n\r\n        for (let p = 0; p !== edges.length; p++) {\r\n          if (edges[p].almostEquals(edge) || edges[p].almostEquals(edge)) {\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!found) {\r\n          edges.push(edge.clone());\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Compute the normals of the faces.\r\n   * Will reuse existing Vec3 objects in the `faceNormals` array if they exist.\r\n   */\r\n\r\n\r\n  computeNormals() {\r\n    this.faceNormals.length = this.faces.length; // Generate normals\r\n\r\n    for (let i = 0; i < this.faces.length; i++) {\r\n      // Check so all vertices exists for this face\r\n      for (let j = 0; j < this.faces[i].length; j++) {\r\n        if (!this.vertices[this.faces[i][j]]) {\r\n          throw new Error(`Vertex ${this.faces[i][j]} not found!`);\r\n        }\r\n      }\r\n\r\n      const n = this.faceNormals[i] || new Vec3();\r\n      this.getFaceNormal(i, n);\r\n      n.negate(n);\r\n      this.faceNormals[i] = n;\r\n      const vertex = this.vertices[this.faces[i][0]];\r\n\r\n      if (n.dot(vertex) < 0) {\r\n        console.error(`.faceNormals[${i}] = Vec3(${n.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);\r\n\r\n        for (let j = 0; j < this.faces[i].length; j++) {\r\n          console.warn(`.vertices[${this.faces[i][j]}] = Vec3(${this.vertices[this.faces[i][j]].toString()})`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Compute the normal of a face from its vertices\r\n   */\r\n\r\n\r\n  getFaceNormal(i, target) {\r\n    const f = this.faces[i];\r\n    const va = this.vertices[f[0]];\r\n    const vb = this.vertices[f[1]];\r\n    const vc = this.vertices[f[2]];\r\n    ConvexPolyhedron.computeNormal(va, vb, vc, target);\r\n  }\r\n  /**\r\n   * Get face normal given 3 vertices\r\n   */\r\n\r\n\r\n  static computeNormal(va, vb, vc, target) {\r\n    const cb = new Vec3();\r\n    const ab = new Vec3();\r\n    vb.vsub(va, ab);\r\n    vc.vsub(vb, cb);\r\n    cb.cross(ab, target);\r\n\r\n    if (!target.isZero()) {\r\n      target.normalize();\r\n    }\r\n  }\r\n  /**\r\n   * @param minDist Clamp distance\r\n   * @param result The an array of contact point objects, see clipFaceAgainstHull\r\n   */\r\n\r\n\r\n  clipAgainstHull(posA, quatA, hullB, posB, quatB, separatingNormal, minDist, maxDist, result) {\r\n    const WorldNormal = new Vec3();\r\n    let closestFaceB = -1;\r\n    let dmax = -Number.MAX_VALUE;\r\n\r\n    for (let face = 0; face < hullB.faces.length; face++) {\r\n      WorldNormal.copy(hullB.faceNormals[face]);\r\n      quatB.vmult(WorldNormal, WorldNormal);\r\n      const d = WorldNormal.dot(separatingNormal);\r\n\r\n      if (d > dmax) {\r\n        dmax = d;\r\n        closestFaceB = face;\r\n      }\r\n    }\r\n\r\n    const worldVertsB1 = [];\r\n\r\n    for (let i = 0; i < hullB.faces[closestFaceB].length; i++) {\r\n      const b = hullB.vertices[hullB.faces[closestFaceB][i]];\r\n      const worldb = new Vec3();\r\n      worldb.copy(b);\r\n      quatB.vmult(worldb, worldb);\r\n      posB.vadd(worldb, worldb);\r\n      worldVertsB1.push(worldb);\r\n    }\r\n\r\n    if (closestFaceB >= 0) {\r\n      this.clipFaceAgainstHull(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist, result);\r\n    }\r\n  }\r\n  /**\r\n   * Find the separating axis between this hull and another\r\n   * @param target The target vector to save the axis in\r\n   * @return Returns false if a separation is found, else true\r\n   */\r\n\r\n\r\n  findSeparatingAxis(hullB, posA, quatA, posB, quatB, target, faceListA, faceListB) {\r\n    const faceANormalWS3 = new Vec3();\r\n    const Worldnormal1 = new Vec3();\r\n    const deltaC = new Vec3();\r\n    const worldEdge0 = new Vec3();\r\n    const worldEdge1 = new Vec3();\r\n    const Cross = new Vec3();\r\n    let dmin = Number.MAX_VALUE;\r\n    const hullA = this;\r\n\r\n    if (!hullA.uniqueAxes) {\r\n      const numFacesA = faceListA ? faceListA.length : hullA.faces.length; // Test face normals from hullA\r\n\r\n      for (let i = 0; i < numFacesA; i++) {\r\n        const fi = faceListA ? faceListA[i] : i; // Get world face normal\r\n\r\n        faceANormalWS3.copy(hullA.faceNormals[fi]);\r\n        quatA.vmult(faceANormalWS3, faceANormalWS3);\r\n        const d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\r\n\r\n        if (d === false) {\r\n          return false;\r\n        }\r\n\r\n        if (d < dmin) {\r\n          dmin = d;\r\n          target.copy(faceANormalWS3);\r\n        }\r\n      }\r\n    } else {\r\n      // Test unique axes\r\n      for (let i = 0; i !== hullA.uniqueAxes.length; i++) {\r\n        // Get world axis\r\n        quatA.vmult(hullA.uniqueAxes[i], faceANormalWS3);\r\n        const d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\r\n\r\n        if (d === false) {\r\n          return false;\r\n        }\r\n\r\n        if (d < dmin) {\r\n          dmin = d;\r\n          target.copy(faceANormalWS3);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!hullB.uniqueAxes) {\r\n      // Test face normals from hullB\r\n      const numFacesB = faceListB ? faceListB.length : hullB.faces.length;\r\n\r\n      for (let i = 0; i < numFacesB; i++) {\r\n        const fi = faceListB ? faceListB[i] : i;\r\n        Worldnormal1.copy(hullB.faceNormals[fi]);\r\n        quatB.vmult(Worldnormal1, Worldnormal1);\r\n        const d = hullA.testSepAxis(Worldnormal1, hullB, posA, quatA, posB, quatB);\r\n\r\n        if (d === false) {\r\n          return false;\r\n        }\r\n\r\n        if (d < dmin) {\r\n          dmin = d;\r\n          target.copy(Worldnormal1);\r\n        }\r\n      }\r\n    } else {\r\n      // Test unique axes in B\r\n      for (let i = 0; i !== hullB.uniqueAxes.length; i++) {\r\n        quatB.vmult(hullB.uniqueAxes[i], Worldnormal1);\r\n        const d = hullA.testSepAxis(Worldnormal1, hullB, posA, quatA, posB, quatB);\r\n\r\n        if (d === false) {\r\n          return false;\r\n        }\r\n\r\n        if (d < dmin) {\r\n          dmin = d;\r\n          target.copy(Worldnormal1);\r\n        }\r\n      }\r\n    } // Test edges\r\n\r\n\r\n    for (let e0 = 0; e0 !== hullA.uniqueEdges.length; e0++) {\r\n      // Get world edge\r\n      quatA.vmult(hullA.uniqueEdges[e0], worldEdge0);\r\n\r\n      for (let e1 = 0; e1 !== hullB.uniqueEdges.length; e1++) {\r\n        // Get world edge 2\r\n        quatB.vmult(hullB.uniqueEdges[e1], worldEdge1);\r\n        worldEdge0.cross(worldEdge1, Cross);\r\n\r\n        if (!Cross.almostZero()) {\r\n          Cross.normalize();\r\n          const dist = hullA.testSepAxis(Cross, hullB, posA, quatA, posB, quatB);\r\n\r\n          if (dist === false) {\r\n            return false;\r\n          }\r\n\r\n          if (dist < dmin) {\r\n            dmin = dist;\r\n            target.copy(Cross);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    posB.vsub(posA, deltaC);\r\n\r\n    if (deltaC.dot(target) > 0.0) {\r\n      target.negate(target);\r\n    }\r\n\r\n    return true;\r\n  }\r\n  /**\r\n   * Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\r\n   * @return The overlap depth, or FALSE if no penetration.\r\n   */\r\n\r\n\r\n  testSepAxis(axis, hullB, posA, quatA, posB, quatB) {\r\n    const hullA = this;\r\n    ConvexPolyhedron.project(hullA, axis, posA, quatA, maxminA);\r\n    ConvexPolyhedron.project(hullB, axis, posB, quatB, maxminB);\r\n    const maxA = maxminA[0];\r\n    const minA = maxminA[1];\r\n    const maxB = maxminB[0];\r\n    const minB = maxminB[1];\r\n\r\n    if (maxA < minB || maxB < minA) {\r\n      return false; // Separated\r\n    }\r\n\r\n    const d0 = maxA - minB;\r\n    const d1 = maxB - minA;\r\n    const depth = d0 < d1 ? d0 : d1;\r\n    return depth;\r\n  }\r\n  /**\r\n   * calculateLocalInertia\r\n   */\r\n\r\n\r\n  calculateLocalInertia(mass, target) {\r\n    // Approximate with box inertia\r\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\r\n    const aabbmax = new Vec3();\r\n    const aabbmin = new Vec3();\r\n    this.computeLocalAABB(aabbmin, aabbmax);\r\n    const x = aabbmax.x - aabbmin.x;\r\n    const y = aabbmax.y - aabbmin.y;\r\n    const z = aabbmax.z - aabbmin.z;\r\n    target.x = 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * z * 2 * z);\r\n    target.y = 1.0 / 12.0 * mass * (2 * x * 2 * x + 2 * z * 2 * z);\r\n    target.z = 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * x * 2 * x);\r\n  }\r\n  /**\r\n   * @param face_i Index of the face\r\n   */\r\n\r\n\r\n  getPlaneConstantOfFace(face_i) {\r\n    const f = this.faces[face_i];\r\n    const n = this.faceNormals[face_i];\r\n    const v = this.vertices[f[0]];\r\n    const c = -n.dot(v);\r\n    return c;\r\n  }\r\n  /**\r\n   * Clip a face against a hull.\r\n   * @param worldVertsB1 An array of Vec3 with vertices in the world frame.\r\n   * @param minDist Distance clamping\r\n   * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\r\n   */\r\n\r\n\r\n  clipFaceAgainstHull(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist, result) {\r\n    const faceANormalWS = new Vec3();\r\n    const edge0 = new Vec3();\r\n    const WorldEdge0 = new Vec3();\r\n    const worldPlaneAnormal1 = new Vec3();\r\n    const planeNormalWS1 = new Vec3();\r\n    const worldA1 = new Vec3();\r\n    const localPlaneNormal = new Vec3();\r\n    const planeNormalWS = new Vec3();\r\n    const hullA = this;\r\n    const worldVertsB2 = [];\r\n    const pVtxIn = worldVertsB1;\r\n    const pVtxOut = worldVertsB2;\r\n    let closestFaceA = -1;\r\n    let dmin = Number.MAX_VALUE; // Find the face with normal closest to the separating axis\r\n\r\n    for (let face = 0; face < hullA.faces.length; face++) {\r\n      faceANormalWS.copy(hullA.faceNormals[face]);\r\n      quatA.vmult(faceANormalWS, faceANormalWS);\r\n      const d = faceANormalWS.dot(separatingNormal);\r\n\r\n      if (d < dmin) {\r\n        dmin = d;\r\n        closestFaceA = face;\r\n      }\r\n    }\r\n\r\n    if (closestFaceA < 0) {\r\n      return;\r\n    } // Get the face and construct connected faces\r\n\r\n\r\n    const polyA = hullA.faces[closestFaceA];\r\n    polyA.connectedFaces = [];\r\n\r\n    for (let i = 0; i < hullA.faces.length; i++) {\r\n      for (let j = 0; j < hullA.faces[i].length; j++) {\r\n        if (\r\n        /* Sharing a vertex*/\r\n        polyA.indexOf(hullA.faces[i][j]) !== -1 &&\r\n        /* Not the one we are looking for connections from */\r\n        i !== closestFaceA &&\r\n        /* Not already added */\r\n        polyA.connectedFaces.indexOf(i) === -1) {\r\n          polyA.connectedFaces.push(i);\r\n        }\r\n      }\r\n    } // Clip the polygon to the back of the planes of all faces of hull A,\r\n    // that are adjacent to the witness face\r\n\r\n\r\n    const numVerticesA = polyA.length;\r\n\r\n    for (let i = 0; i < numVerticesA; i++) {\r\n      const a = hullA.vertices[polyA[i]];\r\n      const b = hullA.vertices[polyA[(i + 1) % numVerticesA]];\r\n      a.vsub(b, edge0);\r\n      WorldEdge0.copy(edge0);\r\n      quatA.vmult(WorldEdge0, WorldEdge0);\r\n      posA.vadd(WorldEdge0, WorldEdge0);\r\n      worldPlaneAnormal1.copy(this.faceNormals[closestFaceA]);\r\n      quatA.vmult(worldPlaneAnormal1, worldPlaneAnormal1);\r\n      posA.vadd(worldPlaneAnormal1, worldPlaneAnormal1);\r\n      WorldEdge0.cross(worldPlaneAnormal1, planeNormalWS1);\r\n      planeNormalWS1.negate(planeNormalWS1);\r\n      worldA1.copy(a);\r\n      quatA.vmult(worldA1, worldA1);\r\n      posA.vadd(worldA1, worldA1);\r\n      const otherFace = polyA.connectedFaces[i];\r\n      localPlaneNormal.copy(this.faceNormals[otherFace]);\r\n      const localPlaneEq = this.getPlaneConstantOfFace(otherFace);\r\n      planeNormalWS.copy(localPlaneNormal);\r\n      quatA.vmult(planeNormalWS, planeNormalWS);\r\n      const planeEqWS = localPlaneEq - planeNormalWS.dot(posA); // Clip face against our constructed plane\r\n\r\n      this.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS); // Throw away all clipped points, but save the remaining until next clip\r\n\r\n      while (pVtxIn.length) {\r\n        pVtxIn.shift();\r\n      }\r\n\r\n      while (pVtxOut.length) {\r\n        pVtxIn.push(pVtxOut.shift());\r\n      }\r\n    } // only keep contact points that are behind the witness face\r\n\r\n\r\n    localPlaneNormal.copy(this.faceNormals[closestFaceA]);\r\n    const localPlaneEq = this.getPlaneConstantOfFace(closestFaceA);\r\n    planeNormalWS.copy(localPlaneNormal);\r\n    quatA.vmult(planeNormalWS, planeNormalWS);\r\n    const planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\r\n\r\n    for (let i = 0; i < pVtxIn.length; i++) {\r\n      let depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; // ???\r\n\r\n      if (depth <= minDist) {\r\n        console.log(`clamped: depth=${depth} to minDist=${minDist}`);\r\n        depth = minDist;\r\n      }\r\n\r\n      if (depth <= maxDist) {\r\n        const point = pVtxIn[i];\r\n\r\n        if (depth <= 1e-6) {\r\n          const p = {\r\n            point,\r\n            normal: planeNormalWS,\r\n            depth\r\n          };\r\n          result.push(p);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Clip a face in a hull against the back of a plane.\r\n   * @param planeConstant The constant in the mathematical plane equation\r\n   */\r\n\r\n\r\n  clipFaceAgainstPlane(inVertices, outVertices, planeNormal, planeConstant) {\r\n    let n_dot_first;\r\n    let n_dot_last;\r\n    const numVerts = inVertices.length;\r\n\r\n    if (numVerts < 2) {\r\n      return outVertices;\r\n    }\r\n\r\n    let firstVertex = inVertices[inVertices.length - 1];\r\n    let lastVertex = inVertices[0];\r\n    n_dot_first = planeNormal.dot(firstVertex) + planeConstant;\r\n\r\n    for (let vi = 0; vi < numVerts; vi++) {\r\n      lastVertex = inVertices[vi];\r\n      n_dot_last = planeNormal.dot(lastVertex) + planeConstant;\r\n\r\n      if (n_dot_first < 0) {\r\n        if (n_dot_last < 0) {\r\n          // Start < 0, end < 0, so output lastVertex\r\n          const newv = new Vec3();\r\n          newv.copy(lastVertex);\r\n          outVertices.push(newv);\r\n        } else {\r\n          // Start < 0, end >= 0, so output intersection\r\n          const newv = new Vec3();\r\n          firstVertex.lerp(lastVertex, n_dot_first / (n_dot_first - n_dot_last), newv);\r\n          outVertices.push(newv);\r\n        }\r\n      } else {\r\n        if (n_dot_last < 0) {\r\n          // Start >= 0, end < 0 so output intersection and end\r\n          const newv = new Vec3();\r\n          firstVertex.lerp(lastVertex, n_dot_first / (n_dot_first - n_dot_last), newv);\r\n          outVertices.push(newv);\r\n          outVertices.push(lastVertex);\r\n        }\r\n      }\r\n\r\n      firstVertex = lastVertex;\r\n      n_dot_first = n_dot_last;\r\n    }\r\n\r\n    return outVertices;\r\n  }\r\n  /**\r\n   * Updates `.worldVertices` and sets `.worldVerticesNeedsUpdate` to false.\r\n   */\r\n\r\n\r\n  computeWorldVertices(position, quat) {\r\n    while (this.worldVertices.length < this.vertices.length) {\r\n      this.worldVertices.push(new Vec3());\r\n    }\r\n\r\n    const verts = this.vertices;\r\n    const worldVerts = this.worldVertices;\r\n\r\n    for (let i = 0; i !== this.vertices.length; i++) {\r\n      quat.vmult(verts[i], worldVerts[i]);\r\n      position.vadd(worldVerts[i], worldVerts[i]);\r\n    }\r\n\r\n    this.worldVerticesNeedsUpdate = false;\r\n  }\r\n\r\n  computeLocalAABB(aabbmin, aabbmax) {\r\n    const vertices = this.vertices;\r\n    aabbmin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\r\n    aabbmax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\r\n\r\n    for (let i = 0; i < this.vertices.length; i++) {\r\n      const v = vertices[i];\r\n\r\n      if (v.x < aabbmin.x) {\r\n        aabbmin.x = v.x;\r\n      } else if (v.x > aabbmax.x) {\r\n        aabbmax.x = v.x;\r\n      }\r\n\r\n      if (v.y < aabbmin.y) {\r\n        aabbmin.y = v.y;\r\n      } else if (v.y > aabbmax.y) {\r\n        aabbmax.y = v.y;\r\n      }\r\n\r\n      if (v.z < aabbmin.z) {\r\n        aabbmin.z = v.z;\r\n      } else if (v.z > aabbmax.z) {\r\n        aabbmax.z = v.z;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Updates `worldVertices` and sets `worldVerticesNeedsUpdate` to false.\r\n   */\r\n\r\n\r\n  computeWorldFaceNormals(quat) {\r\n    const N = this.faceNormals.length;\r\n\r\n    while (this.worldFaceNormals.length < N) {\r\n      this.worldFaceNormals.push(new Vec3());\r\n    }\r\n\r\n    const normals = this.faceNormals;\r\n    const worldNormals = this.worldFaceNormals;\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      quat.vmult(normals[i], worldNormals[i]);\r\n    }\r\n\r\n    this.worldFaceNormalsNeedsUpdate = false;\r\n  }\r\n  /**\r\n   * updateBoundingSphereRadius\r\n   */\r\n\r\n\r\n  updateBoundingSphereRadius() {\r\n    // Assume points are distributed with local (0,0,0) as center\r\n    let max2 = 0;\r\n    const verts = this.vertices;\r\n\r\n    for (let i = 0; i !== verts.length; i++) {\r\n      const norm2 = verts[i].lengthSquared();\r\n\r\n      if (norm2 > max2) {\r\n        max2 = norm2;\r\n      }\r\n    }\r\n\r\n    this.boundingSphereRadius = Math.sqrt(max2);\r\n  }\r\n  /**\r\n   * calculateWorldAABB\r\n   */\r\n\r\n\r\n  calculateWorldAABB(pos, quat, min, max) {\r\n    const verts = this.vertices;\r\n    let minx;\r\n    let miny;\r\n    let minz;\r\n    let maxx;\r\n    let maxy;\r\n    let maxz;\r\n    let tempWorldVertex = new Vec3();\r\n\r\n    for (let i = 0; i < verts.length; i++) {\r\n      tempWorldVertex.copy(verts[i]);\r\n      quat.vmult(tempWorldVertex, tempWorldVertex);\r\n      pos.vadd(tempWorldVertex, tempWorldVertex);\r\n      const v = tempWorldVertex;\r\n\r\n      if (minx === undefined || v.x < minx) {\r\n        minx = v.x;\r\n      }\r\n\r\n      if (maxx === undefined || v.x > maxx) {\r\n        maxx = v.x;\r\n      }\r\n\r\n      if (miny === undefined || v.y < miny) {\r\n        miny = v.y;\r\n      }\r\n\r\n      if (maxy === undefined || v.y > maxy) {\r\n        maxy = v.y;\r\n      }\r\n\r\n      if (minz === undefined || v.z < minz) {\r\n        minz = v.z;\r\n      }\r\n\r\n      if (maxz === undefined || v.z > maxz) {\r\n        maxz = v.z;\r\n      }\r\n    }\r\n\r\n    min.set(minx, miny, minz);\r\n    max.set(maxx, maxy, maxz);\r\n  }\r\n  /**\r\n   * Get approximate convex volume\r\n   */\r\n\r\n\r\n  volume() {\r\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\r\n  }\r\n  /**\r\n   * Get an average of all the vertices positions\r\n   */\r\n\r\n\r\n  getAveragePointLocal(target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    const verts = this.vertices;\r\n\r\n    for (let i = 0; i < verts.length; i++) {\r\n      target.vadd(verts[i], target);\r\n    }\r\n\r\n    target.scale(1 / verts.length, target);\r\n    return target;\r\n  }\r\n  /**\r\n   * Transform all local points. Will change the .vertices\r\n   */\r\n\r\n\r\n  transformAllPoints(offset, quat) {\r\n    const n = this.vertices.length;\r\n    const verts = this.vertices; // Apply rotation\r\n\r\n    if (quat) {\r\n      // Rotate vertices\r\n      for (let i = 0; i < n; i++) {\r\n        const v = verts[i];\r\n        quat.vmult(v, v);\r\n      } // Rotate face normals\r\n\r\n\r\n      for (let i = 0; i < this.faceNormals.length; i++) {\r\n        const v = this.faceNormals[i];\r\n        quat.vmult(v, v);\r\n      }\r\n      /*\r\n            // Rotate edges\r\n            for(let i=0; i<this.uniqueEdges.length; i++){\r\n                const v = this.uniqueEdges[i];\r\n                quat.vmult(v,v);\r\n            }*/\r\n\r\n    } // Apply offset\r\n\r\n\r\n    if (offset) {\r\n      for (let i = 0; i < n; i++) {\r\n        const v = verts[i];\r\n        v.vadd(offset, v);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Checks whether p is inside the polyhedra. Must be in local coords.\r\n   * The point lies outside of the convex hull of the other points if and only if the direction\r\n   * of all the vectors from it to those other points are on less than one half of a sphere around it.\r\n   * @param p A point given in local coordinates\r\n   */\r\n\r\n\r\n  pointIsInside(p) {\r\n    const verts = this.vertices;\r\n    const faces = this.faces;\r\n    const normals = this.faceNormals;\r\n    const positiveResult = null;\r\n    const pointInside = new Vec3();\r\n    this.getAveragePointLocal(pointInside);\r\n\r\n    for (let i = 0; i < this.faces.length; i++) {\r\n      let n = normals[i];\r\n      const v = verts[faces[i][0]]; // We only need one point in the face\r\n      // This dot product determines which side of the edge the point is\r\n\r\n      const vToP = new Vec3();\r\n      p.vsub(v, vToP);\r\n      const r1 = n.dot(vToP);\r\n      const vToPointInside = new Vec3();\r\n      pointInside.vsub(v, vToPointInside);\r\n      const r2 = n.dot(vToPointInside);\r\n\r\n      if (r1 < 0 && r2 > 0 || r1 > 0 && r2 < 0) {\r\n        return false; // Encountered some other sign. Exit.\r\n      }\r\n    } // If we got here, all dot products were of the same sign.\r\n\r\n\r\n    return positiveResult ? 1 : -1;\r\n  }\r\n  /**\r\n   * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis.\r\n   * Results are saved in the array maxmin.\r\n   * @param result result[0] and result[1] will be set to maximum and minimum, respectively.\r\n   */\r\n\r\n\r\n  static project(shape, axis, pos, quat, result) {\r\n    const n = shape.vertices.length;\r\n    project_worldVertex;\r\n    const localAxis = project_localAxis;\r\n    let max = 0;\r\n    let min = 0;\r\n    const localOrigin = project_localOrigin;\r\n    const vs = shape.vertices;\r\n    localOrigin.setZero(); // Transform the axis to local\r\n\r\n    Transform.vectorToLocalFrame(pos, quat, axis, localAxis);\r\n    Transform.pointToLocalFrame(pos, quat, localOrigin, localOrigin);\r\n    const add = localOrigin.dot(localAxis);\r\n    min = max = vs[0].dot(localAxis);\r\n\r\n    for (let i = 1; i < n; i++) {\r\n      const val = vs[i].dot(localAxis);\r\n\r\n      if (val > max) {\r\n        max = val;\r\n      }\r\n\r\n      if (val < min) {\r\n        min = val;\r\n      }\r\n    }\r\n\r\n    min -= add;\r\n    max -= add;\r\n\r\n    if (min > max) {\r\n      // Inconsistent - swap\r\n      const temp = min;\r\n      min = max;\r\n      max = temp;\r\n    } // Output\r\n\r\n\r\n    result[0] = max;\r\n    result[1] = min;\r\n  }\r\n\r\n}\r\nconst maxminA = [];\r\nconst maxminB = [];\r\nconst project_worldVertex = new Vec3();\r\nconst project_localAxis = new Vec3();\r\nconst project_localOrigin = new Vec3();\r\n\r\n/**\r\n * A 3d box shape.\r\n * @example\r\n *     const size = 1\r\n *     const halfExtents = new CANNON.Vec3(size, size, size)\r\n *     const boxShape = new CANNON.Box(halfExtents)\r\n *     const boxBody = new CANNON.Body({ mass: 1, shape: boxShape })\r\n *     world.addBody(boxBody)\r\n */\r\nclass PhysBox extends Shape {\r\n  /**\r\n   * The half extents of the box.\r\n   */\r\n\r\n  /**\r\n   * Used by the contact generator to make contacts with other convex polyhedra for example.\r\n   */\r\n  constructor(halfExtents) {\r\n    super({\r\n      type: Shape.types.BOX\r\n    });\r\n    this.halfExtents = halfExtents;\r\n    this.convexPolyhedronRepresentation = null;\r\n    this.updateConvexPolyhedronRepresentation();\r\n    this.updateBoundingSphereRadius();\r\n  }\r\n  /**\r\n   * Updates the local convex polyhedron representation used for some collisions.\r\n   */\r\n\r\n\r\n  updateConvexPolyhedronRepresentation() {\r\n    const sx = this.halfExtents.x;\r\n    const sy = this.halfExtents.y;\r\n    const sz = this.halfExtents.z;\r\n    const V = Vec3;\r\n    const vertices = [new V(-sx, -sy, -sz), new V(sx, -sy, -sz), new V(sx, sy, -sz), new V(-sx, sy, -sz), new V(-sx, -sy, sz), new V(sx, -sy, sz), new V(sx, sy, sz), new V(-sx, sy, sz)];\r\n    const faces = [[3, 2, 1, 0], // -z\r\n    [4, 5, 6, 7], // +z\r\n    [5, 4, 0, 1], // -y\r\n    [2, 3, 7, 6], // +y\r\n    [0, 4, 7, 3], // -x\r\n    [1, 2, 6, 5] // +x\r\n    ];\r\n    const axes = [new V(0, 0, 1), new V(0, 1, 0), new V(1, 0, 0)];\r\n    const h = new ConvexPolyhedron({\r\n      vertices,\r\n      faces,\r\n      axes\r\n    });\r\n    this.convexPolyhedronRepresentation = h;\r\n    h.material = this.material;\r\n  }\r\n  /**\r\n   * Calculate the inertia of the box.\r\n   */\r\n\r\n\r\n  calculateLocalInertia(mass, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    Box.calculateInertia(this.halfExtents, mass, target);\r\n    return target;\r\n  }\r\n\r\n  static calculateInertia(halfExtents, mass, target) {\r\n    const e = halfExtents;\r\n    target.x = 1.0 / 12.0 * mass * (2 * e.y * 2 * e.y + 2 * e.z * 2 * e.z);\r\n    target.y = 1.0 / 12.0 * mass * (2 * e.x * 2 * e.x + 2 * e.z * 2 * e.z);\r\n    target.z = 1.0 / 12.0 * mass * (2 * e.y * 2 * e.y + 2 * e.x * 2 * e.x);\r\n  }\r\n  /**\r\n   * Get the box 6 side normals\r\n   * @param sixTargetVectors An array of 6 vectors, to store the resulting side normals in.\r\n   * @param quat Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\r\n   */\r\n\r\n\r\n  getSideNormals(sixTargetVectors, quat) {\r\n    const sides = sixTargetVectors;\r\n    const ex = this.halfExtents;\r\n    sides[0].set(ex.x, 0, 0);\r\n    sides[1].set(0, ex.y, 0);\r\n    sides[2].set(0, 0, ex.z);\r\n    sides[3].set(-ex.x, 0, 0);\r\n    sides[4].set(0, -ex.y, 0);\r\n    sides[5].set(0, 0, -ex.z);\r\n\r\n    if (quat !== undefined) {\r\n      for (let i = 0; i !== sides.length; i++) {\r\n        quat.vmult(sides[i], sides[i]);\r\n      }\r\n    }\r\n\r\n    return sides;\r\n  }\r\n  /**\r\n   * Returns the volume of the box.\r\n   */\r\n\r\n\r\n  volume() {\r\n    return 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\r\n  }\r\n  /**\r\n   * updateBoundingSphereRadius\r\n   */\r\n\r\n\r\n  updateBoundingSphereRadius() {\r\n    this.boundingSphereRadius = this.halfExtents.length();\r\n  }\r\n  /**\r\n   * forEachWorldCorner\r\n   */\r\n\r\n\r\n  forEachWorldCorner(pos, quat, callback) {\r\n    const e = this.halfExtents;\r\n    const corners = [[e.x, e.y, e.z], [-e.x, e.y, e.z], [-e.x, -e.y, e.z], [-e.x, -e.y, -e.z], [e.x, -e.y, -e.z], [e.x, e.y, -e.z], [-e.x, e.y, -e.z], [e.x, -e.y, e.z]];\r\n\r\n    for (let i = 0; i < corners.length; i++) {\r\n      worldCornerTempPos.set(corners[i][0], corners[i][1], corners[i][2]);\r\n      quat.vmult(worldCornerTempPos, worldCornerTempPos);\r\n      pos.vadd(worldCornerTempPos, worldCornerTempPos);\r\n      callback(worldCornerTempPos.x, worldCornerTempPos.y, worldCornerTempPos.z);\r\n    }\r\n  }\r\n  /**\r\n   * calculateWorldAABB\r\n   */\r\n\r\n\r\n  calculateWorldAABB(pos, quat, min, max) {\r\n    const e = this.halfExtents;\r\n    worldCornersTemp[0].set(e.x, e.y, e.z);\r\n    worldCornersTemp[1].set(-e.x, e.y, e.z);\r\n    worldCornersTemp[2].set(-e.x, -e.y, e.z);\r\n    worldCornersTemp[3].set(-e.x, -e.y, -e.z);\r\n    worldCornersTemp[4].set(e.x, -e.y, -e.z);\r\n    worldCornersTemp[5].set(e.x, e.y, -e.z);\r\n    worldCornersTemp[6].set(-e.x, e.y, -e.z);\r\n    worldCornersTemp[7].set(e.x, -e.y, e.z);\r\n    const wc = worldCornersTemp[0];\r\n    quat.vmult(wc, wc);\r\n    pos.vadd(wc, wc);\r\n    max.copy(wc);\r\n    min.copy(wc);\r\n\r\n    for (let i = 1; i < 8; i++) {\r\n      const wc = worldCornersTemp[i];\r\n      quat.vmult(wc, wc);\r\n      pos.vadd(wc, wc);\r\n      const x = wc.x;\r\n      const y = wc.y;\r\n      const z = wc.z;\r\n\r\n      if (x > max.x) {\r\n        max.x = x;\r\n      }\r\n\r\n      if (y > max.y) {\r\n        max.y = y;\r\n      }\r\n\r\n      if (z > max.z) {\r\n        max.z = z;\r\n      }\r\n\r\n      if (x < min.x) {\r\n        min.x = x;\r\n      }\r\n\r\n      if (y < min.y) {\r\n        min.y = y;\r\n      }\r\n\r\n      if (z < min.z) {\r\n        min.z = z;\r\n      }\r\n    } // Get each axis max\r\n    // min.set(Infinity,Infinity,Infinity);\r\n    // max.set(-Infinity,-Infinity,-Infinity);\r\n    // this.forEachWorldCorner(pos,quat,function(x,y,z){\r\n    //     if(x > max.x){\r\n    //         max.x = x;\r\n    //     }\r\n    //     if(y > max.y){\r\n    //         max.y = y;\r\n    //     }\r\n    //     if(z > max.z){\r\n    //         max.z = z;\r\n    //     }\r\n    //     if(x < min.x){\r\n    //         min.x = x;\r\n    //     }\r\n    //     if(y < min.y){\r\n    //         min.y = y;\r\n    //     }\r\n    //     if(z < min.z){\r\n    //         min.z = z;\r\n    //     }\r\n    // });\r\n\r\n  }\r\n\r\n}\r\nconst worldCornerTempPos = new Vec3();\r\nconst worldCornersTemp = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\r\n\r\n/**\r\n * BODY_TYPES\r\n */\r\nconst BODY_TYPES = {\r\n  /** DYNAMIC */\r\n  DYNAMIC: 1,\r\n\r\n  /** STATIC */\r\n  STATIC: 2,\r\n\r\n  /** KINEMATIC */\r\n  KINEMATIC: 4\r\n};\r\n/**\r\n * BodyType\r\n */\r\n\r\n/**\r\n * BODY_SLEEP_STATES\r\n */\r\nconst BODY_SLEEP_STATES = {\r\n  /** AWAKE */\r\n  AWAKE: 0,\r\n\r\n  /** SLEEPY */\r\n  SLEEPY: 1,\r\n\r\n  /** SLEEPING */\r\n  SLEEPING: 2\r\n};\r\n/**\r\n * BodySleepState\r\n */\r\n\r\n/**\r\n * Base class for all body types.\r\n * @example\r\n *     const shape = new CANNON.Sphere(1)\r\n *     const body = new CANNON.Body({\r\n *       mass: 1,\r\n *       shape,\r\n *     })\r\n *     world.addBody(body)\r\n */\r\nclass Body extends EventTarget {\r\n  /**\r\n   * Dispatched after two bodies collide. This event is dispatched on each\r\n   * of the two bodies involved in the collision.\r\n   * @event collide\r\n   * @param body The body that was involved in the collision.\r\n   * @param contact The details of the collision.\r\n   */\r\n\r\n  /**\r\n   * A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\r\n   */\r\n\r\n  /**\r\n   * A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\r\n   */\r\n\r\n  /**\r\n   * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\r\n   */\r\n\r\n  /**\r\n   * AWAKE\r\n   */\r\n\r\n  /**\r\n   * SLEEPY\r\n   */\r\n\r\n  /**\r\n   * SLEEPING\r\n   */\r\n\r\n  /**\r\n   * Dispatched after a sleeping body has woken up.\r\n   * @event wakeup\r\n   */\r\n\r\n  /**\r\n   * Dispatched after a body has gone in to the sleepy state.\r\n   * @event sleepy\r\n   */\r\n\r\n  /**\r\n   * Dispatched after a body has fallen asleep.\r\n   * @event sleep\r\n   */\r\n  constructor(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    super();\r\n    this.id = Body.idCounter++;\r\n    this.index = -1;\r\n    this.world = null;\r\n    this.vlambda = new Vec3();\r\n    this.collisionFilterGroup = typeof options.collisionFilterGroup === 'number' ? options.collisionFilterGroup : 1;\r\n    this.collisionFilterMask = typeof options.collisionFilterMask === 'number' ? options.collisionFilterMask : -1;\r\n    this.collisionResponse = typeof options.collisionResponse === 'boolean' ? options.collisionResponse : true;\r\n    this.position = new Vec3();\r\n    this.previousPosition = new Vec3();\r\n    this.interpolatedPosition = new Vec3();\r\n    this.initPosition = new Vec3();\r\n\r\n    if (options.position) {\r\n      this.position.copy(options.position);\r\n      this.previousPosition.copy(options.position);\r\n      this.interpolatedPosition.copy(options.position);\r\n      this.initPosition.copy(options.position);\r\n    }\r\n\r\n    this.velocity = new Vec3();\r\n\r\n    if (options.velocity) {\r\n      this.velocity.copy(options.velocity);\r\n    }\r\n\r\n    this.initVelocity = new Vec3();\r\n    this.force = new Vec3();\r\n    const mass = typeof options.mass === 'number' ? options.mass : 0;\r\n    this.mass = mass;\r\n    this.invMass = mass > 0 ? 1.0 / mass : 0;\r\n    this.material = options.material || null;\r\n    this.linearDamping = typeof options.linearDamping === 'number' ? options.linearDamping : 0.01;\r\n    this.type = mass <= 0.0 ? Body.STATIC : Body.DYNAMIC;\r\n\r\n    if (typeof options.type === typeof Body.STATIC) {\r\n      this.type = options.type;\r\n    }\r\n\r\n    this.allowSleep = typeof options.allowSleep !== 'undefined' ? options.allowSleep : true;\r\n    this.sleepState = Body.AWAKE;\r\n    this.sleepSpeedLimit = typeof options.sleepSpeedLimit !== 'undefined' ? options.sleepSpeedLimit : 0.1;\r\n    this.sleepTimeLimit = typeof options.sleepTimeLimit !== 'undefined' ? options.sleepTimeLimit : 1;\r\n    this.timeLastSleepy = 0;\r\n    this.wakeUpAfterNarrowphase = false;\r\n    this.torque = new Vec3();\r\n    this.quaternion = new Quaternion();\r\n    this.initQuaternion = new Quaternion();\r\n    this.previousQuaternion = new Quaternion();\r\n    this.interpolatedQuaternion = new Quaternion();\r\n\r\n    if (options.quaternion) {\r\n      this.quaternion.copy(options.quaternion);\r\n      this.initQuaternion.copy(options.quaternion);\r\n      this.previousQuaternion.copy(options.quaternion);\r\n      this.interpolatedQuaternion.copy(options.quaternion);\r\n    }\r\n\r\n    this.angularVelocity = new Vec3();\r\n\r\n    if (options.angularVelocity) {\r\n      this.angularVelocity.copy(options.angularVelocity);\r\n    }\r\n\r\n    this.initAngularVelocity = new Vec3();\r\n    this.shapes = [];\r\n    this.shapeOffsets = [];\r\n    this.shapeOrientations = [];\r\n    this.inertia = new Vec3();\r\n    this.invInertia = new Vec3();\r\n    this.invInertiaWorld = new Mat3();\r\n    this.invMassSolve = 0;\r\n    this.invInertiaSolve = new Vec3();\r\n    this.invInertiaWorldSolve = new Mat3();\r\n    this.fixedRotation = typeof options.fixedRotation !== 'undefined' ? options.fixedRotation : false;\r\n    this.angularDamping = typeof options.angularDamping !== 'undefined' ? options.angularDamping : 0.01;\r\n    this.linearFactor = new Vec3(1, 1, 1);\r\n\r\n    if (options.linearFactor) {\r\n      this.linearFactor.copy(options.linearFactor);\r\n    }\r\n\r\n    this.angularFactor = new Vec3(1, 1, 1);\r\n\r\n    if (options.angularFactor) {\r\n      this.angularFactor.copy(options.angularFactor);\r\n    }\r\n\r\n    this.aabb = new AABB();\r\n    this.aabbNeedsUpdate = true;\r\n    this.boundingRadius = 0;\r\n    this.wlambda = new Vec3();\r\n    this.isTrigger = Boolean(options.isTrigger);\r\n\r\n    if (options.shape) {\r\n      this.addShape(options.shape);\r\n    }\r\n\r\n    this.updateMassProperties();\r\n  }\r\n  /**\r\n   * Wake the body up.\r\n   */\r\n\r\n\r\n  wakeUp() {\r\n    const prevState = this.sleepState;\r\n    this.sleepState = Body.AWAKE;\r\n    this.wakeUpAfterNarrowphase = false;\r\n\r\n    if (prevState === Body.SLEEPING) {\r\n      this.dispatchEvent(Body.wakeupEvent);\r\n    }\r\n  }\r\n  /**\r\n   * Force body sleep\r\n   */\r\n\r\n\r\n  sleep() {\r\n    this.sleepState = Body.SLEEPING;\r\n    this.velocity.set(0, 0, 0);\r\n    this.angularVelocity.set(0, 0, 0);\r\n    this.wakeUpAfterNarrowphase = false;\r\n  }\r\n  /**\r\n   * Called every timestep to update internal sleep timer and change sleep state if needed.\r\n   * @param time The world time in seconds\r\n   */\r\n\r\n\r\n  sleepTick(time) {\r\n    if (this.allowSleep) {\r\n      const sleepState = this.sleepState;\r\n      const speedSquared = this.velocity.lengthSquared() + this.angularVelocity.lengthSquared();\r\n      const speedLimitSquared = this.sleepSpeedLimit ** 2;\r\n\r\n      if (sleepState === Body.AWAKE && speedSquared < speedLimitSquared) {\r\n        this.sleepState = Body.SLEEPY; // Sleepy\r\n\r\n        this.timeLastSleepy = time;\r\n        this.dispatchEvent(Body.sleepyEvent);\r\n      } else if (sleepState === Body.SLEEPY && speedSquared > speedLimitSquared) {\r\n        this.wakeUp(); // Wake up\r\n      } else if (sleepState === Body.SLEEPY && time - this.timeLastSleepy > this.sleepTimeLimit) {\r\n        this.sleep(); // Sleeping\r\n\r\n        this.dispatchEvent(Body.sleepEvent);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * If the body is sleeping, it should be immovable / have infinite mass during solve. We solve it by having a separate \"solve mass\".\r\n   */\r\n\r\n\r\n  updateSolveMassProperties() {\r\n    if (this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC) {\r\n      this.invMassSolve = 0;\r\n      this.invInertiaSolve.setZero();\r\n      this.invInertiaWorldSolve.setZero();\r\n    } else {\r\n      this.invMassSolve = this.invMass;\r\n      this.invInertiaSolve.copy(this.invInertia);\r\n      this.invInertiaWorldSolve.copy(this.invInertiaWorld);\r\n    }\r\n  }\r\n  /**\r\n   * Convert a world point to local body frame.\r\n   */\r\n\r\n\r\n  pointToLocalFrame(worldPoint, result) {\r\n    if (result === void 0) {\r\n      result = new Vec3();\r\n    }\r\n\r\n    worldPoint.vsub(this.position, result);\r\n    this.quaternion.conjugate().vmult(result, result);\r\n    return result;\r\n  }\r\n  /**\r\n   * Convert a world vector to local body frame.\r\n   */\r\n\r\n\r\n  vectorToLocalFrame(worldVector, result) {\r\n    if (result === void 0) {\r\n      result = new Vec3();\r\n    }\r\n\r\n    this.quaternion.conjugate().vmult(worldVector, result);\r\n    return result;\r\n  }\r\n  /**\r\n   * Convert a local body point to world frame.\r\n   */\r\n\r\n\r\n  pointToWorldFrame(localPoint, result) {\r\n    if (result === void 0) {\r\n      result = new Vec3();\r\n    }\r\n\r\n    this.quaternion.vmult(localPoint, result);\r\n    result.vadd(this.position, result);\r\n    return result;\r\n  }\r\n  /**\r\n   * Convert a local body point to world frame.\r\n   */\r\n\r\n\r\n  vectorToWorldFrame(localVector, result) {\r\n    if (result === void 0) {\r\n      result = new Vec3();\r\n    }\r\n\r\n    this.quaternion.vmult(localVector, result);\r\n    return result;\r\n  }\r\n  /**\r\n   * Add a shape to the body with a local offset and orientation.\r\n   * @return The body object, for chainability.\r\n   */\r\n\r\n\r\n  addShape(shape, _offset, _orientation) {\r\n    const offset = new Vec3();\r\n    const orientation = new Quaternion();\r\n\r\n    if (_offset) {\r\n      offset.copy(_offset);\r\n    }\r\n\r\n    if (_orientation) {\r\n      orientation.copy(_orientation);\r\n    }\r\n\r\n    this.shapes.push(shape);\r\n    this.shapeOffsets.push(offset);\r\n    this.shapeOrientations.push(orientation);\r\n    this.updateMassProperties();\r\n    this.updateBoundingRadius();\r\n    this.aabbNeedsUpdate = true;\r\n    shape.body = this;\r\n    return this;\r\n  }\r\n  /**\r\n   * Remove a shape from the body.\r\n   * @return The body object, for chainability.\r\n   */\r\n\r\n\r\n  removeShape(shape) {\r\n    const index = this.shapes.indexOf(shape);\r\n\r\n    if (index === -1) {\r\n      console.warn('Shape does not belong to the body');\r\n      return this;\r\n    }\r\n\r\n    this.shapes.splice(index, 1);\r\n    this.shapeOffsets.splice(index, 1);\r\n    this.shapeOrientations.splice(index, 1);\r\n    this.updateMassProperties();\r\n    this.updateBoundingRadius();\r\n    this.aabbNeedsUpdate = true;\r\n    shape.body = null;\r\n    return this;\r\n  }\r\n  /**\r\n   * Update the bounding radius of the body. Should be done if any of the shapes are changed.\r\n   */\r\n\r\n\r\n  updateBoundingRadius() {\r\n    const shapes = this.shapes;\r\n    const shapeOffsets = this.shapeOffsets;\r\n    const N = shapes.length;\r\n    let radius = 0;\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      const shape = shapes[i];\r\n      shape.updateBoundingSphereRadius();\r\n      const offset = shapeOffsets[i].length();\r\n      const r = shape.boundingSphereRadius;\r\n\r\n      if (offset + r > radius) {\r\n        radius = offset + r;\r\n      }\r\n    }\r\n\r\n    this.boundingRadius = radius;\r\n  }\r\n  /**\r\n   * Updates the .aabb\r\n   */\r\n\r\n\r\n  updateAABB() {\r\n    const shapes = this.shapes;\r\n    const shapeOffsets = this.shapeOffsets;\r\n    const shapeOrientations = this.shapeOrientations;\r\n    const N = shapes.length;\r\n    const offset = tmpVec;\r\n    const orientation = tmpQuat;\r\n    const bodyQuat = this.quaternion;\r\n    const aabb = this.aabb;\r\n    const shapeAABB = updateAABB_shapeAABB;\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      const shape = shapes[i]; // Get shape world position\r\n\r\n      bodyQuat.vmult(shapeOffsets[i], offset);\r\n      offset.vadd(this.position, offset); // Get shape world quaternion\r\n\r\n      bodyQuat.mult(shapeOrientations[i], orientation); // Get shape AABB\r\n\r\n      shape.calculateWorldAABB(offset, orientation, shapeAABB.lowerBound, shapeAABB.upperBound);\r\n\r\n      if (i === 0) {\r\n        aabb.copy(shapeAABB);\r\n      } else {\r\n        aabb.extend(shapeAABB);\r\n      }\r\n    }\r\n\r\n    this.aabbNeedsUpdate = false;\r\n  }\r\n  /**\r\n   * Update `.inertiaWorld` and `.invInertiaWorld`\r\n   */\r\n\r\n\r\n  updateInertiaWorld(force) {\r\n    const I = this.invInertia;\r\n\r\n    if (I.x === I.y && I.y === I.z && !force) ; else {\r\n      const m1 = uiw_m1;\r\n      const m2 = uiw_m2;\r\n      uiw_m3;\r\n      m1.setRotationFromQuaternion(this.quaternion);\r\n      m1.transpose(m2);\r\n      m1.scale(I, m1);\r\n      m1.mmult(m2, this.invInertiaWorld);\r\n    }\r\n  }\r\n  /**\r\n   * Apply force to a point of the body. This could for example be a point on the Body surface.\r\n   * Applying force this way will add to Body.force and Body.torque.\r\n   * @param force The amount of force to add.\r\n   * @param relativePoint A point relative to the center of mass to apply the force on.\r\n   */\r\n\r\n\r\n  applyForce(force, relativePoint) {\r\n    if (relativePoint === void 0) {\r\n      relativePoint = new Vec3();\r\n    }\r\n\r\n    // Needed?\r\n    if (this.type !== Body.DYNAMIC) {\r\n      return;\r\n    }\r\n\r\n    if (this.sleepState === Body.SLEEPING) {\r\n      this.wakeUp();\r\n    } // Compute produced rotational force\r\n\r\n\r\n    const rotForce = Body_applyForce_rotForce;\r\n    relativePoint.cross(force, rotForce); // Add linear force\r\n\r\n    this.force.vadd(force, this.force); // Add rotational force\r\n\r\n    this.torque.vadd(rotForce, this.torque);\r\n  }\r\n  /**\r\n   * Apply force to a local point in the body.\r\n   * @param force The force vector to apply, defined locally in the body frame.\r\n   * @param localPoint A local point in the body to apply the force on.\r\n   */\r\n\r\n\r\n  applyLocalForce(localForce, localPoint) {\r\n    if (localPoint === void 0) {\r\n      localPoint = new Vec3();\r\n    }\r\n\r\n    if (this.type !== Body.DYNAMIC) {\r\n      return;\r\n    }\r\n\r\n    const worldForce = Body_applyLocalForce_worldForce;\r\n    const relativePointWorld = Body_applyLocalForce_relativePointWorld; // Transform the force vector to world space\r\n\r\n    this.vectorToWorldFrame(localForce, worldForce);\r\n    this.vectorToWorldFrame(localPoint, relativePointWorld);\r\n    this.applyForce(worldForce, relativePointWorld);\r\n  }\r\n  /**\r\n   * Apply torque to the body.\r\n   * @param torque The amount of torque to add.\r\n   */\r\n\r\n\r\n  applyTorque(torque) {\r\n    if (this.type !== Body.DYNAMIC) {\r\n      return;\r\n    }\r\n\r\n    if (this.sleepState === Body.SLEEPING) {\r\n      this.wakeUp();\r\n    } // Add rotational force\r\n\r\n\r\n    this.torque.vadd(torque, this.torque);\r\n  }\r\n  /**\r\n   * Apply impulse to a point of the body. This could for example be a point on the Body surface.\r\n   * An impulse is a force added to a body during a short period of time (impulse = force * time).\r\n   * Impulses will be added to Body.velocity and Body.angularVelocity.\r\n   * @param impulse The amount of impulse to add.\r\n   * @param relativePoint A point relative to the center of mass to apply the force on.\r\n   */\r\n\r\n\r\n  applyImpulse(impulse, relativePoint) {\r\n    if (relativePoint === void 0) {\r\n      relativePoint = new Vec3();\r\n    }\r\n\r\n    if (this.type !== Body.DYNAMIC) {\r\n      return;\r\n    }\r\n\r\n    if (this.sleepState === Body.SLEEPING) {\r\n      this.wakeUp();\r\n    } // Compute point position relative to the body center\r\n\r\n\r\n    const r = relativePoint; // Compute produced central impulse velocity\r\n\r\n    const velo = Body_applyImpulse_velo;\r\n    velo.copy(impulse);\r\n    velo.scale(this.invMass, velo); // Add linear impulse\r\n\r\n    this.velocity.vadd(velo, this.velocity); // Compute produced rotational impulse velocity\r\n\r\n    const rotVelo = Body_applyImpulse_rotVelo;\r\n    r.cross(impulse, rotVelo);\r\n    /*\r\n     rotVelo.x *= this.invInertia.x;\r\n     rotVelo.y *= this.invInertia.y;\r\n     rotVelo.z *= this.invInertia.z;\r\n     */\r\n\r\n    this.invInertiaWorld.vmult(rotVelo, rotVelo); // Add rotational Impulse\r\n\r\n    this.angularVelocity.vadd(rotVelo, this.angularVelocity);\r\n  }\r\n  /**\r\n   * Apply locally-defined impulse to a local point in the body.\r\n   * @param force The force vector to apply, defined locally in the body frame.\r\n   * @param localPoint A local point in the body to apply the force on.\r\n   */\r\n\r\n\r\n  applyLocalImpulse(localImpulse, localPoint) {\r\n    if (localPoint === void 0) {\r\n      localPoint = new Vec3();\r\n    }\r\n\r\n    if (this.type !== Body.DYNAMIC) {\r\n      return;\r\n    }\r\n\r\n    const worldImpulse = Body_applyLocalImpulse_worldImpulse;\r\n    const relativePointWorld = Body_applyLocalImpulse_relativePoint; // Transform the force vector to world space\r\n\r\n    this.vectorToWorldFrame(localImpulse, worldImpulse);\r\n    this.vectorToWorldFrame(localPoint, relativePointWorld);\r\n    this.applyImpulse(worldImpulse, relativePointWorld);\r\n  }\r\n  /**\r\n   * Should be called whenever you change the body shape or mass.\r\n   */\r\n\r\n\r\n  updateMassProperties() {\r\n    const halfExtents = Body_updateMassProperties_halfExtents;\r\n    this.invMass = this.mass > 0 ? 1.0 / this.mass : 0;\r\n    const I = this.inertia;\r\n    const fixed = this.fixedRotation; // Approximate with AABB box\r\n\r\n    this.updateAABB();\r\n    halfExtents.set((this.aabb.upperBound.x - this.aabb.lowerBound.x) / 2, (this.aabb.upperBound.y - this.aabb.lowerBound.y) / 2, (this.aabb.upperBound.z - this.aabb.lowerBound.z) / 2);\r\n    PhysBox.calculateInertia(halfExtents, this.mass, I);\r\n    this.invInertia.set(I.x > 0 && !fixed ? 1.0 / I.x : 0, I.y > 0 && !fixed ? 1.0 / I.y : 0, I.z > 0 && !fixed ? 1.0 / I.z : 0);\r\n    this.updateInertiaWorld(true);\r\n  }\r\n  /**\r\n   * Get world velocity of a point in the body.\r\n   * @param worldPoint\r\n   * @param result\r\n   * @return The result vector.\r\n   */\r\n\r\n\r\n  getVelocityAtWorldPoint(worldPoint, result) {\r\n    const r = new Vec3();\r\n    worldPoint.vsub(this.position, r);\r\n    this.angularVelocity.cross(r, result);\r\n    this.velocity.vadd(result, result);\r\n    return result;\r\n  }\r\n  /**\r\n   * Move the body forward in time.\r\n   * @param dt Time step\r\n   * @param quatNormalize Set to true to normalize the body quaternion\r\n   * @param quatNormalizeFast If the quaternion should be normalized using \"fast\" quaternion normalization\r\n   */\r\n\r\n\r\n  integrate(dt, quatNormalize, quatNormalizeFast) {\r\n    // Save previous position\r\n    this.previousPosition.copy(this.position);\r\n    this.previousQuaternion.copy(this.quaternion);\r\n\r\n    if (!(this.type === Body.DYNAMIC || this.type === Body.KINEMATIC) || this.sleepState === Body.SLEEPING) {\r\n      // Only for dynamic\r\n      return;\r\n    }\r\n\r\n    const velo = this.velocity;\r\n    const angularVelo = this.angularVelocity;\r\n    const pos = this.position;\r\n    const force = this.force;\r\n    const torque = this.torque;\r\n    const quat = this.quaternion;\r\n    const invMass = this.invMass;\r\n    const invInertia = this.invInertiaWorld;\r\n    const linearFactor = this.linearFactor;\r\n    const iMdt = invMass * dt;\r\n    velo.x += force.x * iMdt * linearFactor.x;\r\n    velo.y += force.y * iMdt * linearFactor.y;\r\n    velo.z += force.z * iMdt * linearFactor.z;\r\n    const e = invInertia.elements;\r\n    const angularFactor = this.angularFactor;\r\n    const tx = torque.x * angularFactor.x;\r\n    const ty = torque.y * angularFactor.y;\r\n    const tz = torque.z * angularFactor.z;\r\n    angularVelo.x += dt * (e[0] * tx + e[1] * ty + e[2] * tz);\r\n    angularVelo.y += dt * (e[3] * tx + e[4] * ty + e[5] * tz);\r\n    angularVelo.z += dt * (e[6] * tx + e[7] * ty + e[8] * tz); // Use new velocity  - leap frog\r\n\r\n    pos.x += velo.x * dt;\r\n    pos.y += velo.y * dt;\r\n    pos.z += velo.z * dt;\r\n    quat.integrate(this.angularVelocity, dt, this.angularFactor, quat);\r\n\r\n    if (quatNormalize) {\r\n      if (quatNormalizeFast) {\r\n        quat.normalizeFast();\r\n      } else {\r\n        quat.normalize();\r\n      }\r\n    }\r\n\r\n    this.aabbNeedsUpdate = true; // Update world inertia\r\n\r\n    this.updateInertiaWorld();\r\n  }\r\n\r\n}\r\nBody.idCounter = 0;\r\nBody.COLLIDE_EVENT_NAME = 'collide';\r\nBody.DYNAMIC = BODY_TYPES.DYNAMIC;\r\nBody.STATIC = BODY_TYPES.STATIC;\r\nBody.KINEMATIC = BODY_TYPES.KINEMATIC;\r\nBody.AWAKE = BODY_SLEEP_STATES.AWAKE;\r\nBody.SLEEPY = BODY_SLEEP_STATES.SLEEPY;\r\nBody.SLEEPING = BODY_SLEEP_STATES.SLEEPING;\r\nBody.wakeupEvent = {\r\n  type: 'wakeup'\r\n};\r\nBody.sleepyEvent = {\r\n  type: 'sleepy'\r\n};\r\nBody.sleepEvent = {\r\n  type: 'sleep'\r\n};\r\nconst tmpVec = new Vec3();\r\nconst tmpQuat = new Quaternion();\r\nconst updateAABB_shapeAABB = new AABB();\r\nconst uiw_m1 = new Mat3();\r\nconst uiw_m2 = new Mat3();\r\nconst uiw_m3 = new Mat3();\r\nconst Body_applyForce_rotForce = new Vec3();\r\nconst Body_applyLocalForce_worldForce = new Vec3();\r\nconst Body_applyLocalForce_relativePointWorld = new Vec3();\r\nconst Body_applyImpulse_velo = new Vec3();\r\nconst Body_applyImpulse_rotVelo = new Vec3();\r\nconst Body_applyLocalImpulse_worldImpulse = new Vec3();\r\nconst Body_applyLocalImpulse_relativePoint = new Vec3();\r\nconst Body_updateMassProperties_halfExtents = new Vec3();\r\n\r\n/**\r\n * Base class for broadphase implementations\r\n * @author schteppe\r\n */\r\nclass Broadphase {\r\n  /**\r\n   * The world to search for collisions in.\r\n   */\r\n\r\n  /**\r\n   * If set to true, the broadphase uses bounding boxes for intersection tests, else it uses bounding spheres.\r\n   */\r\n\r\n  /**\r\n   * Set to true if the objects in the world moved.\r\n   */\r\n  constructor() {\r\n    this.world = null;\r\n    this.useBoundingBoxes = false;\r\n    this.dirty = true;\r\n  }\r\n  /**\r\n   * Get the collision pairs from the world\r\n   * @param world The world to search in\r\n   * @param p1 Empty array to be filled with body objects\r\n   * @param p2 Empty array to be filled with body objects\r\n   */\r\n\r\n\r\n  collisionPairs(world, p1, p2) {\r\n    throw new Error('collisionPairs not implemented for this BroadPhase class!');\r\n  }\r\n  /**\r\n   * Check if a body pair needs to be intersection tested at all.\r\n   */\r\n\r\n\r\n  needBroadphaseCollision(bodyA, bodyB) {\r\n    // Check collision filter masks\r\n    if ((bodyA.collisionFilterGroup & bodyB.collisionFilterMask) === 0 || (bodyB.collisionFilterGroup & bodyA.collisionFilterMask) === 0) {\r\n      return false;\r\n    } // Check types\r\n\r\n\r\n    if (((bodyA.type & Body.STATIC) !== 0 || bodyA.sleepState === Body.SLEEPING) && ((bodyB.type & Body.STATIC) !== 0 || bodyB.sleepState === Body.SLEEPING)) {\r\n      // Both bodies are static or sleeping. Skip.\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  /**\r\n   * Check if the bounding volumes of two bodies intersect.\r\n   */\r\n\r\n\r\n  intersectionTest(bodyA, bodyB, pairs1, pairs2) {\r\n    if (this.useBoundingBoxes) {\r\n      this.doBoundingBoxBroadphase(bodyA, bodyB, pairs1, pairs2);\r\n    } else {\r\n      this.doBoundingSphereBroadphase(bodyA, bodyB, pairs1, pairs2);\r\n    }\r\n  }\r\n  /**\r\n   * Check if the bounding spheres of two bodies are intersecting.\r\n   * @param pairs1 bodyA is appended to this array if intersection\r\n   * @param pairs2 bodyB is appended to this array if intersection\r\n   */\r\n\r\n\r\n  doBoundingSphereBroadphase(bodyA, bodyB, pairs1, pairs2) {\r\n    const r = Broadphase_collisionPairs_r;\r\n    bodyB.position.vsub(bodyA.position, r);\r\n    const boundingRadiusSum2 = (bodyA.boundingRadius + bodyB.boundingRadius) ** 2;\r\n    const norm2 = r.lengthSquared();\r\n\r\n    if (norm2 < boundingRadiusSum2) {\r\n      pairs1.push(bodyA);\r\n      pairs2.push(bodyB);\r\n    }\r\n  }\r\n  /**\r\n   * Check if the bounding boxes of two bodies are intersecting.\r\n   */\r\n\r\n\r\n  doBoundingBoxBroadphase(bodyA, bodyB, pairs1, pairs2) {\r\n    if (bodyA.aabbNeedsUpdate) {\r\n      bodyA.updateAABB();\r\n    }\r\n\r\n    if (bodyB.aabbNeedsUpdate) {\r\n      bodyB.updateAABB();\r\n    } // Check AABB / AABB\r\n\r\n\r\n    if (bodyA.aabb.overlaps(bodyB.aabb)) {\r\n      pairs1.push(bodyA);\r\n      pairs2.push(bodyB);\r\n    }\r\n  }\r\n  /**\r\n   * Removes duplicate pairs from the pair arrays.\r\n   */\r\n\r\n\r\n  makePairsUnique(pairs1, pairs2) {\r\n    const t = Broadphase_makePairsUnique_temp;\r\n    const p1 = Broadphase_makePairsUnique_p1;\r\n    const p2 = Broadphase_makePairsUnique_p2;\r\n    const N = pairs1.length;\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      p1[i] = pairs1[i];\r\n      p2[i] = pairs2[i];\r\n    }\r\n\r\n    pairs1.length = 0;\r\n    pairs2.length = 0;\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      const id1 = p1[i].id;\r\n      const id2 = p2[i].id;\r\n      const key = id1 < id2 ? `${id1},${id2}` : `${id2},${id1}`;\r\n      t[key] = i;\r\n      t.keys.push(key);\r\n    }\r\n\r\n    for (let i = 0; i !== t.keys.length; i++) {\r\n      const key = t.keys.pop();\r\n      const pairIndex = t[key];\r\n      pairs1.push(p1[pairIndex]);\r\n      pairs2.push(p2[pairIndex]);\r\n      delete t[key];\r\n    }\r\n  }\r\n  /**\r\n   * To be implemented by subcasses\r\n   */\r\n\r\n\r\n  setWorld(world) {}\r\n  /**\r\n   * Check if the bounding spheres of two bodies overlap.\r\n   */\r\n\r\n\r\n  static boundingSphereCheck(bodyA, bodyB) {\r\n    const dist = new Vec3(); // bsc_dist;\r\n\r\n    bodyA.position.vsub(bodyB.position, dist);\r\n    const sa = bodyA.shapes[0];\r\n    const sb = bodyB.shapes[0];\r\n    return Math.pow(sa.boundingSphereRadius + sb.boundingSphereRadius, 2) > dist.lengthSquared();\r\n  }\r\n  /**\r\n   * Returns all the bodies within the AABB.\r\n   */\r\n\r\n\r\n  aabbQuery(world, aabb, result) {\r\n    console.warn('.aabbQuery is not implemented in this Broadphase subclass.');\r\n    return [];\r\n  }\r\n\r\n} // Temp objects\r\n\r\nconst Broadphase_collisionPairs_r = new Vec3();\r\nnew Vec3();\r\nnew Quaternion();\r\nnew Vec3();\r\nconst Broadphase_makePairsUnique_temp = {\r\n  keys: []\r\n};\r\nconst Broadphase_makePairsUnique_p1 = [];\r\nconst Broadphase_makePairsUnique_p2 = [];\r\nnew Vec3();\r\n\r\n/**\r\n * Axis aligned uniform grid broadphase.\r\n * @todo Needs support for more than just planes and spheres.\r\n */\r\nclass GridBroadphase extends Broadphase {\r\n  /**\r\n   * Number of boxes along x\r\n   */\r\n\r\n  /**\r\n   * Number of boxes along y\r\n   */\r\n\r\n  /**\r\n   * Number of boxes along z\r\n   */\r\n\r\n  /**\r\n   * aabbMin\r\n   */\r\n\r\n  /**\r\n   * aabbMax\r\n   */\r\n\r\n  /**\r\n   * bins\r\n   */\r\n\r\n  /**\r\n   * binLengths\r\n   */\r\n\r\n  /**\r\n   * @param nx Number of boxes along x.\r\n   * @param ny Number of boxes along y.\r\n   * @param nz Number of boxes along z.\r\n   */\r\n  constructor(aabbMin, aabbMax, nx, ny, nz) {\r\n    if (aabbMin === void 0) {\r\n      aabbMin = new Vec3(100, 100, 100);\r\n    }\r\n\r\n    if (aabbMax === void 0) {\r\n      aabbMax = new Vec3(-100, -100, -100);\r\n    }\r\n\r\n    if (nx === void 0) {\r\n      nx = 10;\r\n    }\r\n\r\n    if (ny === void 0) {\r\n      ny = 10;\r\n    }\r\n\r\n    if (nz === void 0) {\r\n      nz = 10;\r\n    }\r\n\r\n    super();\r\n    this.nx = nx;\r\n    this.ny = ny;\r\n    this.nz = nz;\r\n    this.aabbMin = aabbMin;\r\n    this.aabbMax = aabbMax;\r\n    const nbins = this.nx * this.ny * this.nz;\r\n\r\n    if (nbins <= 0) {\r\n      throw \"GridBroadphase: Each dimension's n must be >0\";\r\n    }\r\n\r\n    this.bins = [];\r\n    this.binLengths = []; // Rather than continually resizing arrays (thrashing the memory), just record length and allow them to grow\r\n\r\n    this.bins.length = nbins;\r\n    this.binLengths.length = nbins;\r\n\r\n    for (let i = 0; i < nbins; i++) {\r\n      this.bins[i] = [];\r\n      this.binLengths[i] = 0;\r\n    }\r\n  }\r\n  /**\r\n   * Get all the collision pairs in the physics world\r\n   */\r\n\r\n\r\n  collisionPairs(world, pairs1, pairs2) {\r\n    const N = world.bodies.length;\r\n    const bodies = world.bodies;\r\n    const max = this.aabbMax;\r\n    const min = this.aabbMin;\r\n    const nx = this.nx;\r\n    const ny = this.ny;\r\n    const nz = this.nz;\r\n    const xstep = ny * nz;\r\n    const ystep = nz;\r\n    const zstep = 1;\r\n    const xmax = max.x;\r\n    const ymax = max.y;\r\n    const zmax = max.z;\r\n    const xmin = min.x;\r\n    const ymin = min.y;\r\n    const zmin = min.z;\r\n    const xmult = nx / (xmax - xmin);\r\n    const ymult = ny / (ymax - ymin);\r\n    const zmult = nz / (zmax - zmin);\r\n    const binsizeX = (xmax - xmin) / nx;\r\n    const binsizeY = (ymax - ymin) / ny;\r\n    const binsizeZ = (zmax - zmin) / nz;\r\n    const binRadius = Math.sqrt(binsizeX * binsizeX + binsizeY * binsizeY + binsizeZ * binsizeZ) * 0.5;\r\n    const types = Shape.types;\r\n    const SPHERE = types.SPHERE;\r\n    const PLANE = types.PLANE;\r\n    types.BOX;\r\n    types.COMPOUND;\r\n    types.CONVEXPOLYHEDRON;\r\n    const bins = this.bins;\r\n    const binLengths = this.binLengths;\r\n    const Nbins = this.bins.length; // Reset bins\r\n\r\n    for (let i = 0; i !== Nbins; i++) {\r\n      binLengths[i] = 0;\r\n    }\r\n\r\n    const ceil = Math.ceil;\r\n\r\n    function addBoxToBins(x0, y0, z0, x1, y1, z1, bi) {\r\n      let xoff0 = (x0 - xmin) * xmult | 0;\r\n      let yoff0 = (y0 - ymin) * ymult | 0;\r\n      let zoff0 = (z0 - zmin) * zmult | 0;\r\n      let xoff1 = ceil((x1 - xmin) * xmult);\r\n      let yoff1 = ceil((y1 - ymin) * ymult);\r\n      let zoff1 = ceil((z1 - zmin) * zmult);\r\n\r\n      if (xoff0 < 0) {\r\n        xoff0 = 0;\r\n      } else if (xoff0 >= nx) {\r\n        xoff0 = nx - 1;\r\n      }\r\n\r\n      if (yoff0 < 0) {\r\n        yoff0 = 0;\r\n      } else if (yoff0 >= ny) {\r\n        yoff0 = ny - 1;\r\n      }\r\n\r\n      if (zoff0 < 0) {\r\n        zoff0 = 0;\r\n      } else if (zoff0 >= nz) {\r\n        zoff0 = nz - 1;\r\n      }\r\n\r\n      if (xoff1 < 0) {\r\n        xoff1 = 0;\r\n      } else if (xoff1 >= nx) {\r\n        xoff1 = nx - 1;\r\n      }\r\n\r\n      if (yoff1 < 0) {\r\n        yoff1 = 0;\r\n      } else if (yoff1 >= ny) {\r\n        yoff1 = ny - 1;\r\n      }\r\n\r\n      if (zoff1 < 0) {\r\n        zoff1 = 0;\r\n      } else if (zoff1 >= nz) {\r\n        zoff1 = nz - 1;\r\n      }\r\n\r\n      xoff0 *= xstep;\r\n      yoff0 *= ystep;\r\n      zoff0 *= zstep;\r\n      xoff1 *= xstep;\r\n      yoff1 *= ystep;\r\n      zoff1 *= zstep;\r\n\r\n      for (let xoff = xoff0; xoff <= xoff1; xoff += xstep) {\r\n        for (let yoff = yoff0; yoff <= yoff1; yoff += ystep) {\r\n          for (let zoff = zoff0; zoff <= zoff1; zoff += zstep) {\r\n            const idx = xoff + yoff + zoff;\r\n            bins[idx][binLengths[idx]++] = bi;\r\n          }\r\n        }\r\n      }\r\n    } // Put all bodies into the bins\r\n\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      const bi = bodies[i];\r\n      const si = bi.shapes[0];\r\n\r\n      switch (si.type) {\r\n        case SPHERE:\r\n          {\r\n            const shape = si; // Put in bin\r\n            // check if overlap with other bins\r\n\r\n            const x = bi.position.x;\r\n            const y = bi.position.y;\r\n            const z = bi.position.z;\r\n            const r = shape.radius;\r\n            addBoxToBins(x - r, y - r, z - r, x + r, y + r, z + r, bi);\r\n            break;\r\n          }\r\n\r\n        case PLANE:\r\n          {\r\n            const shape = si;\r\n\r\n            if (shape.worldNormalNeedsUpdate) {\r\n              shape.computeWorldNormal(bi.quaternion);\r\n            }\r\n\r\n            const planeNormal = shape.worldNormal; //Relative position from origin of plane object to the first bin\r\n            //Incremented as we iterate through the bins\r\n\r\n            const xreset = xmin + binsizeX * 0.5 - bi.position.x;\r\n            const yreset = ymin + binsizeY * 0.5 - bi.position.y;\r\n            const zreset = zmin + binsizeZ * 0.5 - bi.position.z;\r\n            const d = GridBroadphase_collisionPairs_d;\r\n            d.set(xreset, yreset, zreset);\r\n\r\n            for (let xi = 0, xoff = 0; xi !== nx; xi++, xoff += xstep, d.y = yreset, d.x += binsizeX) {\r\n              for (let yi = 0, yoff = 0; yi !== ny; yi++, yoff += ystep, d.z = zreset, d.y += binsizeY) {\r\n                for (let zi = 0, zoff = 0; zi !== nz; zi++, zoff += zstep, d.z += binsizeZ) {\r\n                  if (d.dot(planeNormal) < binRadius) {\r\n                    const idx = xoff + yoff + zoff;\r\n                    bins[idx][binLengths[idx]++] = bi;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n        default:\r\n          {\r\n            if (bi.aabbNeedsUpdate) {\r\n              bi.updateAABB();\r\n            }\r\n\r\n            addBoxToBins(bi.aabb.lowerBound.x, bi.aabb.lowerBound.y, bi.aabb.lowerBound.z, bi.aabb.upperBound.x, bi.aabb.upperBound.y, bi.aabb.upperBound.z, bi);\r\n            break;\r\n          }\r\n      }\r\n    } // Check each bin\r\n\r\n\r\n    for (let i = 0; i !== Nbins; i++) {\r\n      const binLength = binLengths[i]; //Skip bins with no potential collisions\r\n\r\n      if (binLength > 1) {\r\n        const bin = bins[i]; // Do N^2 broadphase inside\r\n\r\n        for (let xi = 0; xi !== binLength; xi++) {\r\n          const bi = bin[xi];\r\n\r\n          for (let yi = 0; yi !== xi; yi++) {\r\n            const bj = bin[yi];\r\n\r\n            if (this.needBroadphaseCollision(bi, bj)) {\r\n              this.intersectionTest(bi, bj, pairs1, pairs2);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } //\tfor (let zi = 0, zoff=0; zi < nz; zi++, zoff+= zstep) {\r\n    //\t\tconsole.log(\"layer \"+zi);\r\n    //\t\tfor (let yi = 0, yoff=0; yi < ny; yi++, yoff += ystep) {\r\n    //\t\t\tconst row = '';\r\n    //\t\t\tfor (let xi = 0, xoff=0; xi < nx; xi++, xoff += xstep) {\r\n    //\t\t\t\tconst idx = xoff + yoff + zoff;\r\n    //\t\t\t\trow += ' ' + binLengths[idx];\r\n    //\t\t\t}\r\n    //\t\t\tconsole.log(row);\r\n    //\t\t}\r\n    //\t}\r\n\r\n\r\n    this.makePairsUnique(pairs1, pairs2);\r\n  }\r\n\r\n}\r\nconst GridBroadphase_collisionPairs_d = new Vec3();\r\nnew Vec3();\r\n\r\n/**\r\n * Naive broadphase implementation, used in lack of better ones.\r\n *\r\n * The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 _(which is bad)_\r\n */\r\nclass NaiveBroadphase extends Broadphase {\r\n  /**\r\n   * @todo Remove useless constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n  }\r\n  /**\r\n   * Get all the collision pairs in the physics world\r\n   */\r\n\r\n\r\n  collisionPairs(world, pairs1, pairs2) {\r\n    const bodies = world.bodies;\r\n    const n = bodies.length;\r\n    let bi;\r\n    let bj; // Naive N^2 ftw!\r\n\r\n    for (let i = 0; i !== n; i++) {\r\n      for (let j = 0; j !== i; j++) {\r\n        bi = bodies[i];\r\n        bj = bodies[j];\r\n\r\n        if (!this.needBroadphaseCollision(bi, bj)) {\r\n          continue;\r\n        }\r\n\r\n        this.intersectionTest(bi, bj, pairs1, pairs2);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Returns all the bodies within an AABB.\r\n   * @param result An array to store resulting bodies in.\r\n   */\r\n\r\n\r\n  aabbQuery(world, aabb, result) {\r\n    if (result === void 0) {\r\n      result = [];\r\n    }\r\n\r\n    for (let i = 0; i < world.bodies.length; i++) {\r\n      const b = world.bodies[i];\r\n\r\n      if (b.aabbNeedsUpdate) {\r\n        b.updateAABB();\r\n      } // Ugly hack until Body gets aabb\r\n\r\n\r\n      if (b.aabb.overlaps(aabb)) {\r\n        result.push(b);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Storage for Ray casting data\r\n */\r\nclass RaycastResult {\r\n  /**\r\n   * rayFromWorld\r\n   */\r\n\r\n  /**\r\n   * rayToWorld\r\n   */\r\n\r\n  /**\r\n   * hitNormalWorld\r\n   */\r\n\r\n  /**\r\n   * hitPointWorld\r\n   */\r\n\r\n  /**\r\n   * hasHit\r\n   */\r\n\r\n  /**\r\n   * shape\r\n   */\r\n\r\n  /**\r\n   * body\r\n   */\r\n\r\n  /**\r\n   * The index of the hit triangle, if the hit shape was a trimesh\r\n   */\r\n\r\n  /**\r\n   * Distance to the hit. Will be set to -1 if there was no hit\r\n   */\r\n\r\n  /**\r\n   * If the ray should stop traversing the bodies\r\n   */\r\n  constructor() {\r\n    this.rayFromWorld = new Vec3();\r\n    this.rayToWorld = new Vec3();\r\n    this.hitNormalWorld = new Vec3();\r\n    this.hitPointWorld = new Vec3();\r\n    this.hasHit = false;\r\n    this.shape = null;\r\n    this.body = null;\r\n    this.hitFaceIndex = -1;\r\n    this.distance = -1;\r\n    this.shouldStop = false;\r\n  }\r\n  /**\r\n   * Reset all result data.\r\n   */\r\n\r\n\r\n  reset() {\r\n    this.rayFromWorld.setZero();\r\n    this.rayToWorld.setZero();\r\n    this.hitNormalWorld.setZero();\r\n    this.hitPointWorld.setZero();\r\n    this.hasHit = false;\r\n    this.shape = null;\r\n    this.body = null;\r\n    this.hitFaceIndex = -1;\r\n    this.distance = -1;\r\n    this.shouldStop = false;\r\n  }\r\n  /**\r\n   * abort\r\n   */\r\n\r\n\r\n  abort() {\r\n    this.shouldStop = true;\r\n  }\r\n  /**\r\n   * Set result data.\r\n   */\r\n\r\n\r\n  set(rayFromWorld, rayToWorld, hitNormalWorld, hitPointWorld, shape, body, distance) {\r\n    this.rayFromWorld.copy(rayFromWorld);\r\n    this.rayToWorld.copy(rayToWorld);\r\n    this.hitNormalWorld.copy(hitNormalWorld);\r\n    this.hitPointWorld.copy(hitPointWorld);\r\n    this.shape = shape;\r\n    this.body = body;\r\n    this.distance = distance;\r\n  }\r\n\r\n}\r\n\r\nlet _Shape$types$SPHERE, _Shape$types$PLANE, _Shape$types$BOX, _Shape$types$CYLINDER, _Shape$types$CONVEXPO, _Shape$types$HEIGHTFI, _Shape$types$TRIMESH;\r\n\r\n/**\r\n * RAY_MODES\r\n */\r\nconst RAY_MODES = {\r\n  /** CLOSEST */\r\n  CLOSEST: 1,\r\n\r\n  /** ANY */\r\n  ANY: 2,\r\n\r\n  /** ALL */\r\n  ALL: 4\r\n};\r\n/**\r\n * RayMode\r\n */\r\n\r\n_Shape$types$SPHERE = Shape.types.SPHERE;\r\n_Shape$types$PLANE = Shape.types.PLANE;\r\n_Shape$types$BOX = Shape.types.BOX;\r\n_Shape$types$CYLINDER = Shape.types.CYLINDER;\r\n_Shape$types$CONVEXPO = Shape.types.CONVEXPOLYHEDRON;\r\n_Shape$types$HEIGHTFI = Shape.types.HEIGHTFIELD;\r\n_Shape$types$TRIMESH = Shape.types.TRIMESH;\r\n\r\n/**\r\n * A line in 3D space that intersects bodies and return points.\r\n */\r\nclass Ray {\r\n  /**\r\n   * from\r\n   */\r\n\r\n  /**\r\n   * to\r\n   */\r\n\r\n  /**\r\n   * direction\r\n   */\r\n\r\n  /**\r\n   * The precision of the ray. Used when checking parallelity etc.\r\n   * @default 0.0001\r\n   */\r\n\r\n  /**\r\n   * Set to `false` if you don't want the Ray to take `collisionResponse` flags into account on bodies and shapes.\r\n   * @default true\r\n   */\r\n\r\n  /**\r\n   * If set to `true`, the ray skips any hits with normal.dot(rayDirection) < 0.\r\n   * @default false\r\n   */\r\n\r\n  /**\r\n   * collisionFilterMask\r\n   * @default -1\r\n   */\r\n\r\n  /**\r\n   * collisionFilterGroup\r\n   * @default -1\r\n   */\r\n\r\n  /**\r\n   * The intersection mode. Should be Ray.ANY, Ray.ALL or Ray.CLOSEST.\r\n   * @default RAY.ANY\r\n   */\r\n\r\n  /**\r\n   * Current result object.\r\n   */\r\n\r\n  /**\r\n   * Will be set to `true` during intersectWorld() if the ray hit anything.\r\n   */\r\n\r\n  /**\r\n   * User-provided result callback. Will be used if mode is Ray.ALL.\r\n   */\r\n\r\n  /**\r\n   * CLOSEST\r\n   */\r\n\r\n  /**\r\n   * ANY\r\n   */\r\n\r\n  /**\r\n   * ALL\r\n   */\r\n  get [_Shape$types$SPHERE]() {\r\n    return this._intersectSphere;\r\n  }\r\n\r\n  get [_Shape$types$PLANE]() {\r\n    return this._intersectPlane;\r\n  }\r\n\r\n  get [_Shape$types$BOX]() {\r\n    return this._intersectBox;\r\n  }\r\n\r\n  get [_Shape$types$CYLINDER]() {\r\n    return this._intersectConvex;\r\n  }\r\n\r\n  get [_Shape$types$CONVEXPO]() {\r\n    return this._intersectConvex;\r\n  }\r\n\r\n  get [_Shape$types$HEIGHTFI]() {\r\n    return this._intersectHeightfield;\r\n  }\r\n\r\n  get [_Shape$types$TRIMESH]() {\r\n    return this._intersectTrimesh;\r\n  }\r\n\r\n  constructor(from, to) {\r\n    if (from === void 0) {\r\n      from = new Vec3();\r\n    }\r\n\r\n    if (to === void 0) {\r\n      to = new Vec3();\r\n    }\r\n\r\n    this.from = from.clone();\r\n    this.to = to.clone();\r\n    this.direction = new Vec3();\r\n    this.precision = 0.0001;\r\n    this.checkCollisionResponse = true;\r\n    this.skipBackfaces = false;\r\n    this.collisionFilterMask = -1;\r\n    this.collisionFilterGroup = -1;\r\n    this.mode = Ray.ANY;\r\n    this.result = new RaycastResult();\r\n    this.hasHit = false;\r\n\r\n    this.callback = result => {};\r\n  }\r\n  /**\r\n   * Do itersection against all bodies in the given World.\r\n   * @return True if the ray hit anything, otherwise false.\r\n   */\r\n\r\n\r\n  intersectWorld(world, options) {\r\n    this.mode = options.mode || Ray.ANY;\r\n    this.result = options.result || new RaycastResult();\r\n    this.skipBackfaces = !!options.skipBackfaces;\r\n    this.collisionFilterMask = typeof options.collisionFilterMask !== 'undefined' ? options.collisionFilterMask : -1;\r\n    this.collisionFilterGroup = typeof options.collisionFilterGroup !== 'undefined' ? options.collisionFilterGroup : -1;\r\n    this.checkCollisionResponse = typeof options.checkCollisionResponse !== 'undefined' ? options.checkCollisionResponse : true;\r\n\r\n    if (options.from) {\r\n      this.from.copy(options.from);\r\n    }\r\n\r\n    if (options.to) {\r\n      this.to.copy(options.to);\r\n    }\r\n\r\n    this.callback = options.callback || (() => {});\r\n\r\n    this.hasHit = false;\r\n    this.result.reset();\r\n    this.updateDirection();\r\n    this.getAABB(tmpAABB$1);\r\n    tmpArray.length = 0;\r\n    world.broadphase.aabbQuery(world, tmpAABB$1, tmpArray);\r\n    this.intersectBodies(tmpArray);\r\n    return this.hasHit;\r\n  }\r\n  /**\r\n   * Shoot a ray at a body, get back information about the hit.\r\n   * @deprecated @param result set the result property of the Ray instead.\r\n   */\r\n\r\n\r\n  intersectBody(body, result) {\r\n    if (result) {\r\n      this.result = result;\r\n      this.updateDirection();\r\n    }\r\n\r\n    const checkCollisionResponse = this.checkCollisionResponse;\r\n\r\n    if (checkCollisionResponse && !body.collisionResponse) {\r\n      return;\r\n    }\r\n\r\n    if ((this.collisionFilterGroup & body.collisionFilterMask) === 0 || (body.collisionFilterGroup & this.collisionFilterMask) === 0) {\r\n      return;\r\n    }\r\n\r\n    const xi = intersectBody_xi;\r\n    const qi = intersectBody_qi;\r\n\r\n    for (let i = 0, N = body.shapes.length; i < N; i++) {\r\n      const shape = body.shapes[i];\r\n\r\n      if (checkCollisionResponse && !shape.collisionResponse) {\r\n        continue; // Skip\r\n      }\r\n\r\n      body.quaternion.mult(body.shapeOrientations[i], qi);\r\n      body.quaternion.vmult(body.shapeOffsets[i], xi);\r\n      xi.vadd(body.position, xi);\r\n      this.intersectShape(shape, qi, xi, body);\r\n\r\n      if (this.result.shouldStop) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Shoot a ray at an array bodies, get back information about the hit.\r\n   * @param bodies An array of Body objects.\r\n   * @deprecated @param result set the result property of the Ray instead.\r\n   *\r\n   */\r\n\r\n\r\n  intersectBodies(bodies, result) {\r\n    if (result) {\r\n      this.result = result;\r\n      this.updateDirection();\r\n    }\r\n\r\n    for (let i = 0, l = bodies.length; !this.result.shouldStop && i < l; i++) {\r\n      this.intersectBody(bodies[i]);\r\n    }\r\n  }\r\n  /**\r\n   * Updates the direction vector.\r\n   */\r\n\r\n\r\n  updateDirection() {\r\n    this.to.vsub(this.from, this.direction);\r\n    this.direction.normalize();\r\n  }\r\n\r\n  intersectShape(shape, quat, position, body) {\r\n    const from = this.from; // Checking boundingSphere\r\n\r\n    const distance = distanceFromIntersection(from, this.direction, position);\r\n\r\n    if (distance > shape.boundingSphereRadius) {\r\n      return;\r\n    }\r\n\r\n    const intersectMethod = this[shape.type];\r\n\r\n    if (intersectMethod) {\r\n      intersectMethod.call(this, shape, quat, position, body, shape);\r\n    }\r\n  }\r\n\r\n  _intersectBox(box, quat, position, body, reportedShape) {\r\n    return this._intersectConvex(box.convexPolyhedronRepresentation, quat, position, body, reportedShape);\r\n  }\r\n\r\n  _intersectPlane(shape, quat, position, body, reportedShape) {\r\n    const from = this.from;\r\n    const to = this.to;\r\n    const direction = this.direction; // Get plane normal\r\n\r\n    const worldNormal = new Vec3(0, 0, 1);\r\n    quat.vmult(worldNormal, worldNormal);\r\n    const len = new Vec3();\r\n    from.vsub(position, len);\r\n    const planeToFrom = len.dot(worldNormal);\r\n    to.vsub(position, len);\r\n    const planeToTo = len.dot(worldNormal);\r\n\r\n    if (planeToFrom * planeToTo > 0) {\r\n      // \"from\" and \"to\" are on the same side of the plane... bail out\r\n      return;\r\n    }\r\n\r\n    if (from.distanceTo(to) < planeToFrom) {\r\n      return;\r\n    }\r\n\r\n    const n_dot_dir = worldNormal.dot(direction);\r\n\r\n    if (Math.abs(n_dot_dir) < this.precision) {\r\n      // No intersection\r\n      return;\r\n    }\r\n\r\n    const planePointToFrom = new Vec3();\r\n    const dir_scaled_with_t = new Vec3();\r\n    const hitPointWorld = new Vec3();\r\n    from.vsub(position, planePointToFrom);\r\n    const t = -worldNormal.dot(planePointToFrom) / n_dot_dir;\r\n    direction.scale(t, dir_scaled_with_t);\r\n    from.vadd(dir_scaled_with_t, hitPointWorld);\r\n    this.reportIntersection(worldNormal, hitPointWorld, reportedShape, body, -1);\r\n  }\r\n  /**\r\n   * Get the world AABB of the ray.\r\n   */\r\n\r\n\r\n  getAABB(aabb) {\r\n    const {\r\n      lowerBound,\r\n      upperBound\r\n    } = aabb;\r\n    const to = this.to;\r\n    const from = this.from;\r\n    lowerBound.x = Math.min(to.x, from.x);\r\n    lowerBound.y = Math.min(to.y, from.y);\r\n    lowerBound.z = Math.min(to.z, from.z);\r\n    upperBound.x = Math.max(to.x, from.x);\r\n    upperBound.y = Math.max(to.y, from.y);\r\n    upperBound.z = Math.max(to.z, from.z);\r\n  }\r\n\r\n  _intersectHeightfield(shape, quat, position, body, reportedShape) {\r\n    shape.data;\r\n    shape.elementSize; // Convert the ray to local heightfield coordinates\r\n\r\n    const localRay = intersectHeightfield_localRay; //new Ray(this.from, this.to);\r\n\r\n    localRay.from.copy(this.from);\r\n    localRay.to.copy(this.to);\r\n    Transform.pointToLocalFrame(position, quat, localRay.from, localRay.from);\r\n    Transform.pointToLocalFrame(position, quat, localRay.to, localRay.to);\r\n    localRay.updateDirection(); // Get the index of the data points to test against\r\n\r\n    const index = intersectHeightfield_index;\r\n    let iMinX;\r\n    let iMinY;\r\n    let iMaxX;\r\n    let iMaxY; // Set to max\r\n\r\n    iMinX = iMinY = 0;\r\n    iMaxX = iMaxY = shape.data.length - 1;\r\n    const aabb = new AABB();\r\n    localRay.getAABB(aabb);\r\n    shape.getIndexOfPosition(aabb.lowerBound.x, aabb.lowerBound.y, index, true);\r\n    iMinX = Math.max(iMinX, index[0]);\r\n    iMinY = Math.max(iMinY, index[1]);\r\n    shape.getIndexOfPosition(aabb.upperBound.x, aabb.upperBound.y, index, true);\r\n    iMaxX = Math.min(iMaxX, index[0] + 1);\r\n    iMaxY = Math.min(iMaxY, index[1] + 1);\r\n\r\n    for (let i = iMinX; i < iMaxX; i++) {\r\n      for (let j = iMinY; j < iMaxY; j++) {\r\n        if (this.result.shouldStop) {\r\n          return;\r\n        }\r\n\r\n        shape.getAabbAtIndex(i, j, aabb);\r\n\r\n        if (!aabb.overlapsRay(localRay)) {\r\n          continue;\r\n        } // Lower triangle\r\n\r\n\r\n        shape.getConvexTrianglePillar(i, j, false);\r\n        Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\r\n\r\n        this._intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\r\n\r\n        if (this.result.shouldStop) {\r\n          return;\r\n        } // Upper triangle\r\n\r\n\r\n        shape.getConvexTrianglePillar(i, j, true);\r\n        Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\r\n\r\n        this._intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\r\n      }\r\n    }\r\n  }\r\n\r\n  _intersectSphere(sphere, quat, position, body, reportedShape) {\r\n    const from = this.from;\r\n    const to = this.to;\r\n    const r = sphere.radius;\r\n    const a = (to.x - from.x) ** 2 + (to.y - from.y) ** 2 + (to.z - from.z) ** 2;\r\n    const b = 2 * ((to.x - from.x) * (from.x - position.x) + (to.y - from.y) * (from.y - position.y) + (to.z - from.z) * (from.z - position.z));\r\n    const c = (from.x - position.x) ** 2 + (from.y - position.y) ** 2 + (from.z - position.z) ** 2 - r ** 2;\r\n    const delta = b ** 2 - 4 * a * c;\r\n    const intersectionPoint = Ray_intersectSphere_intersectionPoint;\r\n    const normal = Ray_intersectSphere_normal;\r\n\r\n    if (delta < 0) {\r\n      // No intersection\r\n      return;\r\n    } else if (delta === 0) {\r\n      // single intersection point\r\n      from.lerp(to, delta, intersectionPoint);\r\n      intersectionPoint.vsub(position, normal);\r\n      normal.normalize();\r\n      this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\r\n    } else {\r\n      const d1 = (-b - Math.sqrt(delta)) / (2 * a);\r\n      const d2 = (-b + Math.sqrt(delta)) / (2 * a);\r\n\r\n      if (d1 >= 0 && d1 <= 1) {\r\n        from.lerp(to, d1, intersectionPoint);\r\n        intersectionPoint.vsub(position, normal);\r\n        normal.normalize();\r\n        this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\r\n      }\r\n\r\n      if (this.result.shouldStop) {\r\n        return;\r\n      }\r\n\r\n      if (d2 >= 0 && d2 <= 1) {\r\n        from.lerp(to, d2, intersectionPoint);\r\n        intersectionPoint.vsub(position, normal);\r\n        normal.normalize();\r\n        this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\r\n      }\r\n    }\r\n  }\r\n\r\n  _intersectConvex(shape, quat, position, body, reportedShape, options) {\r\n    intersectConvex_minDistNormal;\r\n    const normal = intersectConvex_normal;\r\n    const vector = intersectConvex_vector;\r\n    intersectConvex_minDistIntersect;\r\n    const faceList = options && options.faceList || null; // Checking faces\r\n\r\n    const faces = shape.faces;\r\n    const vertices = shape.vertices;\r\n    const normals = shape.faceNormals;\r\n    const direction = this.direction;\r\n    const from = this.from;\r\n    const to = this.to;\r\n    const fromToDistance = from.distanceTo(to);\r\n    const Nfaces = faceList ? faceList.length : faces.length;\r\n    const result = this.result;\r\n\r\n    for (let j = 0; !result.shouldStop && j < Nfaces; j++) {\r\n      const fi = faceList ? faceList[j] : j;\r\n      const face = faces[fi];\r\n      const faceNormal = normals[fi];\r\n      const q = quat;\r\n      const x = position; // determine if ray intersects the plane of the face\r\n      // note: this works regardless of the direction of the face normal\r\n      // Get plane point in world coordinates...\r\n\r\n      vector.copy(vertices[face[0]]);\r\n      q.vmult(vector, vector);\r\n      vector.vadd(x, vector); // ...but make it relative to the ray from. We'll fix this later.\r\n\r\n      vector.vsub(from, vector); // Get plane normal\r\n\r\n      q.vmult(faceNormal, normal); // If this dot product is negative, we have something interesting\r\n\r\n      const dot = direction.dot(normal); // Bail out if ray and plane are parallel\r\n\r\n      if (Math.abs(dot) < this.precision) {\r\n        continue;\r\n      } // calc distance to plane\r\n\r\n\r\n      const scalar = normal.dot(vector) / dot; // if negative distance, then plane is behind ray\r\n\r\n      if (scalar < 0) {\r\n        continue;\r\n      } // if (dot < 0) {\r\n      // Intersection point is from + direction * scalar\r\n\r\n\r\n      direction.scale(scalar, intersectPoint);\r\n      intersectPoint.vadd(from, intersectPoint); // a is the point we compare points b and c with.\r\n\r\n      a.copy(vertices[face[0]]);\r\n      q.vmult(a, a);\r\n      x.vadd(a, a);\r\n\r\n      for (let i = 1; !result.shouldStop && i < face.length - 1; i++) {\r\n        // Transform 3 vertices to world coords\r\n        b.copy(vertices[face[i]]);\r\n        c.copy(vertices[face[i + 1]]);\r\n        q.vmult(b, b);\r\n        q.vmult(c, c);\r\n        x.vadd(b, b);\r\n        x.vadd(c, c);\r\n        const distance = intersectPoint.distanceTo(from);\r\n\r\n        if (!(Ray.pointInTriangle(intersectPoint, a, b, c) || Ray.pointInTriangle(intersectPoint, b, a, c)) || distance > fromToDistance) {\r\n          continue;\r\n        }\r\n\r\n        this.reportIntersection(normal, intersectPoint, reportedShape, body, fi);\r\n      } // }\r\n\r\n    }\r\n  }\r\n  /**\r\n   * @todo Optimize by transforming the world to local space first.\r\n   * @todo Use Octree lookup\r\n   */\r\n\r\n\r\n  _intersectTrimesh(mesh, quat, position, body, reportedShape, options) {\r\n    const normal = intersectTrimesh_normal;\r\n    const triangles = intersectTrimesh_triangles;\r\n    const treeTransform = intersectTrimesh_treeTransform;\r\n    const vector = intersectConvex_vector;\r\n    const localDirection = intersectTrimesh_localDirection;\r\n    const localFrom = intersectTrimesh_localFrom;\r\n    const localTo = intersectTrimesh_localTo;\r\n    const worldIntersectPoint = intersectTrimesh_worldIntersectPoint;\r\n    const worldNormal = intersectTrimesh_worldNormal; // Checking faces\r\n\r\n    const indices = mesh.indices;\r\n    mesh.vertices; // const normals = mesh.faceNormals\r\n\r\n    const from = this.from;\r\n    const to = this.to;\r\n    const direction = this.direction;\r\n    treeTransform.position.copy(position);\r\n    treeTransform.quaternion.copy(quat); // Transform ray to local space!\r\n\r\n    Transform.vectorToLocalFrame(position, quat, direction, localDirection);\r\n    Transform.pointToLocalFrame(position, quat, from, localFrom);\r\n    Transform.pointToLocalFrame(position, quat, to, localTo);\r\n    localTo.x *= mesh.scale.x;\r\n    localTo.y *= mesh.scale.y;\r\n    localTo.z *= mesh.scale.z;\r\n    localFrom.x *= mesh.scale.x;\r\n    localFrom.y *= mesh.scale.y;\r\n    localFrom.z *= mesh.scale.z;\r\n    localTo.vsub(localFrom, localDirection);\r\n    localDirection.normalize();\r\n    const fromToDistanceSquared = localFrom.distanceSquared(localTo);\r\n    mesh.tree.rayQuery(this, treeTransform, triangles);\r\n\r\n    for (let i = 0, N = triangles.length; !this.result.shouldStop && i !== N; i++) {\r\n      const trianglesIndex = triangles[i];\r\n      mesh.getNormal(trianglesIndex, normal); // determine if ray intersects the plane of the face\r\n      // note: this works regardless of the direction of the face normal\r\n      // Get plane point in world coordinates...\r\n\r\n      mesh.getVertex(indices[trianglesIndex * 3], a); // ...but make it relative to the ray from. We'll fix this later.\r\n\r\n      a.vsub(localFrom, vector); // If this dot product is negative, we have something interesting\r\n\r\n      const dot = localDirection.dot(normal); // Bail out if ray and plane are parallel\r\n      // if (Math.abs( dot ) < this.precision){\r\n      //     continue;\r\n      // }\r\n      // calc distance to plane\r\n\r\n      const scalar = normal.dot(vector) / dot; // if negative distance, then plane is behind ray\r\n\r\n      if (scalar < 0) {\r\n        continue;\r\n      } // Intersection point is from + direction * scalar\r\n\r\n\r\n      localDirection.scale(scalar, intersectPoint);\r\n      intersectPoint.vadd(localFrom, intersectPoint); // Get triangle vertices\r\n\r\n      mesh.getVertex(indices[trianglesIndex * 3 + 1], b);\r\n      mesh.getVertex(indices[trianglesIndex * 3 + 2], c);\r\n      const squaredDistance = intersectPoint.distanceSquared(localFrom);\r\n\r\n      if (!(Ray.pointInTriangle(intersectPoint, b, a, c) || Ray.pointInTriangle(intersectPoint, a, b, c)) || squaredDistance > fromToDistanceSquared) {\r\n        continue;\r\n      } // transform intersectpoint and normal to world\r\n\r\n\r\n      Transform.vectorToWorldFrame(quat, normal, worldNormal);\r\n      Transform.pointToWorldFrame(position, quat, intersectPoint, worldIntersectPoint);\r\n      this.reportIntersection(worldNormal, worldIntersectPoint, reportedShape, body, trianglesIndex);\r\n    }\r\n\r\n    triangles.length = 0;\r\n  }\r\n  /**\r\n   * @return True if the intersections should continue\r\n   */\r\n\r\n\r\n  reportIntersection(normal, hitPointWorld, shape, body, hitFaceIndex) {\r\n    const from = this.from;\r\n    const to = this.to;\r\n    const distance = from.distanceTo(hitPointWorld);\r\n    const result = this.result; // Skip back faces?\r\n\r\n    if (this.skipBackfaces && normal.dot(this.direction) > 0) {\r\n      return;\r\n    }\r\n\r\n    result.hitFaceIndex = typeof hitFaceIndex !== 'undefined' ? hitFaceIndex : -1;\r\n\r\n    switch (this.mode) {\r\n      case Ray.ALL:\r\n        this.hasHit = true;\r\n        result.set(from, to, normal, hitPointWorld, shape, body, distance);\r\n        result.hasHit = true;\r\n        this.callback(result);\r\n        break;\r\n\r\n      case Ray.CLOSEST:\r\n        // Store if closer than current closest\r\n        if (distance < result.distance || !result.hasHit) {\r\n          this.hasHit = true;\r\n          result.hasHit = true;\r\n          result.set(from, to, normal, hitPointWorld, shape, body, distance);\r\n        }\r\n\r\n        break;\r\n\r\n      case Ray.ANY:\r\n        // Report and stop.\r\n        this.hasHit = true;\r\n        result.hasHit = true;\r\n        result.set(from, to, normal, hitPointWorld, shape, body, distance);\r\n        result.shouldStop = true;\r\n        break;\r\n    }\r\n  }\r\n  /**\r\n   * As per \"Barycentric Technique\" as named\r\n   * {@link https://www.blackpawn.com/texts/pointinpoly/default.html here} but without the division\r\n   */\r\n\r\n\r\n  static pointInTriangle(p, a, b, c) {\r\n    c.vsub(a, v0);\r\n    b.vsub(a, v1);\r\n    p.vsub(a, v2);\r\n    const dot00 = v0.dot(v0);\r\n    const dot01 = v0.dot(v1);\r\n    const dot02 = v0.dot(v2);\r\n    const dot11 = v1.dot(v1);\r\n    const dot12 = v1.dot(v2);\r\n    let u;\r\n    let v;\r\n    return (u = dot11 * dot02 - dot01 * dot12) >= 0 && (v = dot00 * dot12 - dot01 * dot02) >= 0 && u + v < dot00 * dot11 - dot01 * dot01;\r\n  }\r\n\r\n}\r\nRay.CLOSEST = RAY_MODES.CLOSEST;\r\nRay.ANY = RAY_MODES.ANY;\r\nRay.ALL = RAY_MODES.ALL;\r\nconst tmpAABB$1 = new AABB();\r\nconst tmpArray = [];\r\nconst v1 = new Vec3();\r\nconst v2 = new Vec3();\r\nconst intersectBody_xi = new Vec3();\r\nconst intersectBody_qi = new Quaternion();\r\nconst intersectPoint = new Vec3();\r\nconst a = new Vec3();\r\nconst b = new Vec3();\r\nconst c = new Vec3();\r\nnew Vec3();\r\nnew RaycastResult();\r\nconst intersectConvexOptions = {\r\n  faceList: [0]\r\n};\r\nconst worldPillarOffset = new Vec3();\r\nconst intersectHeightfield_localRay = new Ray();\r\nconst intersectHeightfield_index = [];\r\nconst Ray_intersectSphere_intersectionPoint = new Vec3();\r\nconst Ray_intersectSphere_normal = new Vec3();\r\nconst intersectConvex_normal = new Vec3();\r\nconst intersectConvex_minDistNormal = new Vec3();\r\nconst intersectConvex_minDistIntersect = new Vec3();\r\nconst intersectConvex_vector = new Vec3();\r\nconst intersectTrimesh_normal = new Vec3();\r\nconst intersectTrimesh_localDirection = new Vec3();\r\nconst intersectTrimesh_localFrom = new Vec3();\r\nconst intersectTrimesh_localTo = new Vec3();\r\nconst intersectTrimesh_worldNormal = new Vec3();\r\nconst intersectTrimesh_worldIntersectPoint = new Vec3();\r\nnew AABB();\r\nconst intersectTrimesh_triangles = [];\r\nconst intersectTrimesh_treeTransform = new Transform();\r\nconst v0 = new Vec3();\r\nconst intersect = new Vec3();\r\n\r\nfunction distanceFromIntersection(from, direction, position) {\r\n  // v0 is vector from from to position\r\n  position.vsub(from, v0);\r\n  const dot = v0.dot(direction); // intersect = direction*dot + from\r\n\r\n  direction.scale(dot, intersect);\r\n  intersect.vadd(from, intersect);\r\n  const distance = position.distanceTo(intersect);\r\n  return distance;\r\n}\r\n\r\n/**\r\n * Sweep and prune broadphase along one axis.\r\n */\r\nclass SAPBroadphase extends Broadphase {\r\n  /**\r\n   * List of bodies currently in the broadphase.\r\n   */\r\n\r\n  /**\r\n   * The world to search in.\r\n   */\r\n\r\n  /**\r\n   * Axis to sort the bodies along.\r\n   * Set to 0 for x axis, and 1 for y axis.\r\n   * For best performance, pick the axis where bodies are most distributed.\r\n   */\r\n\r\n  /**\r\n   * Check if the bounds of two bodies overlap, along the given SAP axis.\r\n   */\r\n  static checkBounds(bi, bj, axisIndex) {\r\n    let biPos;\r\n    let bjPos;\r\n\r\n    if (axisIndex === 0) {\r\n      biPos = bi.position.x;\r\n      bjPos = bj.position.x;\r\n    } else if (axisIndex === 1) {\r\n      biPos = bi.position.y;\r\n      bjPos = bj.position.y;\r\n    } else if (axisIndex === 2) {\r\n      biPos = bi.position.z;\r\n      bjPos = bj.position.z;\r\n    }\r\n\r\n    const ri = bi.boundingRadius,\r\n          rj = bj.boundingRadius,\r\n          boundA2 = biPos + ri,\r\n          boundB1 = bjPos - rj;\r\n    return boundB1 < boundA2;\r\n  } // Note: these are identical, save for x/y/z lowerbound\r\n\r\n  /**\r\n   * insertionSortX\r\n   */\r\n\r\n\r\n  static insertionSortX(a) {\r\n    for (let i = 1, l = a.length; i < l; i++) {\r\n      const v = a[i];\r\n      let j;\r\n\r\n      for (j = i - 1; j >= 0; j--) {\r\n        if (a[j].aabb.lowerBound.x <= v.aabb.lowerBound.x) {\r\n          break;\r\n        }\r\n\r\n        a[j + 1] = a[j];\r\n      }\r\n\r\n      a[j + 1] = v;\r\n    }\r\n\r\n    return a;\r\n  }\r\n  /**\r\n   * insertionSortY\r\n   */\r\n\r\n\r\n  static insertionSortY(a) {\r\n    for (let i = 1, l = a.length; i < l; i++) {\r\n      const v = a[i];\r\n      let j;\r\n\r\n      for (j = i - 1; j >= 0; j--) {\r\n        if (a[j].aabb.lowerBound.y <= v.aabb.lowerBound.y) {\r\n          break;\r\n        }\r\n\r\n        a[j + 1] = a[j];\r\n      }\r\n\r\n      a[j + 1] = v;\r\n    }\r\n\r\n    return a;\r\n  }\r\n  /**\r\n   * insertionSortZ\r\n   */\r\n\r\n\r\n  static insertionSortZ(a) {\r\n    for (let i = 1, l = a.length; i < l; i++) {\r\n      const v = a[i];\r\n      let j;\r\n\r\n      for (j = i - 1; j >= 0; j--) {\r\n        if (a[j].aabb.lowerBound.z <= v.aabb.lowerBound.z) {\r\n          break;\r\n        }\r\n\r\n        a[j + 1] = a[j];\r\n      }\r\n\r\n      a[j + 1] = v;\r\n    }\r\n\r\n    return a;\r\n  }\r\n\r\n  constructor(world) {\r\n    super();\r\n    this.axisList = [];\r\n    this.world = null;\r\n    this.axisIndex = 0;\r\n    const axisList = this.axisList;\r\n\r\n    this._addBodyHandler = event => {\r\n      axisList.push(event.body);\r\n    };\r\n\r\n    this._removeBodyHandler = event => {\r\n      const idx = axisList.indexOf(event.body);\r\n\r\n      if (idx !== -1) {\r\n        axisList.splice(idx, 1);\r\n      }\r\n    };\r\n\r\n    if (world) {\r\n      this.setWorld(world);\r\n    }\r\n  }\r\n  /**\r\n   * Change the world\r\n   */\r\n\r\n\r\n  setWorld(world) {\r\n    // Clear the old axis array\r\n    this.axisList.length = 0; // Add all bodies from the new world\r\n\r\n    for (let i = 0; i < world.bodies.length; i++) {\r\n      this.axisList.push(world.bodies[i]);\r\n    } // Remove old handlers, if any\r\n\r\n\r\n    world.removeEventListener('addBody', this._addBodyHandler);\r\n    world.removeEventListener('removeBody', this._removeBodyHandler); // Add handlers to update the list of bodies.\r\n\r\n    world.addEventListener('addBody', this._addBodyHandler);\r\n    world.addEventListener('removeBody', this._removeBodyHandler);\r\n    this.world = world;\r\n    this.dirty = true;\r\n  }\r\n  /**\r\n   * Collect all collision pairs\r\n   */\r\n\r\n\r\n  collisionPairs(world, p1, p2) {\r\n    const bodies = this.axisList;\r\n    const N = bodies.length;\r\n    const axisIndex = this.axisIndex;\r\n    let i;\r\n    let j;\r\n\r\n    if (this.dirty) {\r\n      this.sortList();\r\n      this.dirty = false;\r\n    } // Look through the list\r\n\r\n\r\n    for (i = 0; i !== N; i++) {\r\n      const bi = bodies[i];\r\n\r\n      for (j = i + 1; j < N; j++) {\r\n        const bj = bodies[j];\r\n\r\n        if (!this.needBroadphaseCollision(bi, bj)) {\r\n          continue;\r\n        }\r\n\r\n        if (!SAPBroadphase.checkBounds(bi, bj, axisIndex)) {\r\n          break;\r\n        }\r\n\r\n        this.intersectionTest(bi, bj, p1, p2);\r\n      }\r\n    }\r\n  }\r\n\r\n  sortList() {\r\n    const axisList = this.axisList;\r\n    const axisIndex = this.axisIndex;\r\n    const N = axisList.length; // Update AABBs\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      const bi = axisList[i];\r\n\r\n      if (bi.aabbNeedsUpdate) {\r\n        bi.updateAABB();\r\n      }\r\n    } // Sort the list\r\n\r\n\r\n    if (axisIndex === 0) {\r\n      SAPBroadphase.insertionSortX(axisList);\r\n    } else if (axisIndex === 1) {\r\n      SAPBroadphase.insertionSortY(axisList);\r\n    } else if (axisIndex === 2) {\r\n      SAPBroadphase.insertionSortZ(axisList);\r\n    }\r\n  }\r\n  /**\r\n   * Computes the variance of the body positions and estimates the best axis to use.\r\n   * Will automatically set property `axisIndex`.\r\n   */\r\n\r\n\r\n  autoDetectAxis() {\r\n    let sumX = 0;\r\n    let sumX2 = 0;\r\n    let sumY = 0;\r\n    let sumY2 = 0;\r\n    let sumZ = 0;\r\n    let sumZ2 = 0;\r\n    const bodies = this.axisList;\r\n    const N = bodies.length;\r\n    const invN = 1 / N;\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      const b = bodies[i];\r\n      const centerX = b.position.x;\r\n      sumX += centerX;\r\n      sumX2 += centerX * centerX;\r\n      const centerY = b.position.y;\r\n      sumY += centerY;\r\n      sumY2 += centerY * centerY;\r\n      const centerZ = b.position.z;\r\n      sumZ += centerZ;\r\n      sumZ2 += centerZ * centerZ;\r\n    }\r\n\r\n    const varianceX = sumX2 - sumX * sumX * invN;\r\n    const varianceY = sumY2 - sumY * sumY * invN;\r\n    const varianceZ = sumZ2 - sumZ * sumZ * invN;\r\n\r\n    if (varianceX > varianceY) {\r\n      if (varianceX > varianceZ) {\r\n        this.axisIndex = 0;\r\n      } else {\r\n        this.axisIndex = 2;\r\n      }\r\n    } else if (varianceY > varianceZ) {\r\n      this.axisIndex = 1;\r\n    } else {\r\n      this.axisIndex = 2;\r\n    }\r\n  }\r\n  /**\r\n   * Returns all the bodies within an AABB.\r\n   * @param result An array to store resulting bodies in.\r\n   */\r\n\r\n\r\n  aabbQuery(world, aabb, result) {\r\n    if (result === void 0) {\r\n      result = [];\r\n    }\r\n\r\n    if (this.dirty) {\r\n      this.sortList();\r\n      this.dirty = false;\r\n    }\r\n\r\n    const axisIndex = this.axisIndex;\r\n    let axis = 'x';\r\n\r\n    if (axisIndex === 1) {\r\n      axis = 'y';\r\n    }\r\n\r\n    if (axisIndex === 2) {\r\n      axis = 'z';\r\n    }\r\n\r\n    const axisList = this.axisList;\r\n    aabb.lowerBound[axis];\r\n    aabb.upperBound[axis];\r\n\r\n    for (let i = 0; i < axisList.length; i++) {\r\n      const b = axisList[i];\r\n\r\n      if (b.aabbNeedsUpdate) {\r\n        b.updateAABB();\r\n      }\r\n\r\n      if (b.aabb.overlaps(aabb)) {\r\n        result.push(b);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\nclass Utils {\r\n  /**\r\n   * Extend an options object with default values.\r\n   * @param options The options object. May be falsy: in this case, a new object is created and returned.\r\n   * @param defaults An object containing default values.\r\n   * @return The modified options object.\r\n   */\r\n  static defaults(options, defaults) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    for (let key in defaults) {\r\n      if (!(key in options)) {\r\n        options[key] = defaults[key];\r\n      }\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Constraint base class\r\n */\r\nclass Constraint {\r\n  /**\r\n   * Equations to be solved in this constraint.\r\n   */\r\n\r\n  /**\r\n   * Body A.\r\n   */\r\n\r\n  /**\r\n   * Body B.\r\n   */\r\n\r\n  /**\r\n   * Set to false if you don't want the bodies to collide when they are connected.\r\n   */\r\n  constructor(bodyA, bodyB, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    options = Utils.defaults(options, {\r\n      collideConnected: true,\r\n      wakeUpBodies: true\r\n    });\r\n    this.equations = [];\r\n    this.bodyA = bodyA;\r\n    this.bodyB = bodyB;\r\n    this.id = Constraint.idCounter++;\r\n    this.collideConnected = options.collideConnected;\r\n\r\n    if (options.wakeUpBodies) {\r\n      if (bodyA) {\r\n        bodyA.wakeUp();\r\n      }\r\n\r\n      if (bodyB) {\r\n        bodyB.wakeUp();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Update all the equations with data.\r\n   */\r\n\r\n\r\n  update() {\r\n    throw new Error('method update() not implmemented in this Constraint subclass!');\r\n  }\r\n  /**\r\n   * Enables all equations in the constraint.\r\n   */\r\n\r\n\r\n  enable() {\r\n    const eqs = this.equations;\r\n\r\n    for (let i = 0; i < eqs.length; i++) {\r\n      eqs[i].enabled = true;\r\n    }\r\n  }\r\n  /**\r\n   * Disables all equations in the constraint.\r\n   */\r\n\r\n\r\n  disable() {\r\n    const eqs = this.equations;\r\n\r\n    for (let i = 0; i < eqs.length; i++) {\r\n      eqs[i].enabled = false;\r\n    }\r\n  }\r\n\r\n}\r\nConstraint.idCounter = 0;\r\n\r\n/**\r\n * An element containing 6 entries, 3 spatial and 3 rotational degrees of freedom.\r\n */\r\n\r\nclass JacobianElement {\r\n  /**\r\n   * spatial\r\n   */\r\n\r\n  /**\r\n   * rotational\r\n   */\r\n  constructor() {\r\n    this.spatial = new Vec3();\r\n    this.rotational = new Vec3();\r\n  }\r\n  /**\r\n   * Multiply with other JacobianElement\r\n   */\r\n\r\n\r\n  multiplyElement(element) {\r\n    return element.spatial.dot(this.spatial) + element.rotational.dot(this.rotational);\r\n  }\r\n  /**\r\n   * Multiply with two vectors\r\n   */\r\n\r\n\r\n  multiplyVectors(spatial, rotational) {\r\n    return spatial.dot(this.spatial) + rotational.dot(this.rotational);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Equation base class.\r\n *\r\n * `a`, `b` and `eps` are {@link https://www8.cs.umu.se/kurser/5DV058/VT15/lectures/SPOOKlabnotes.pdf SPOOK} parameters that default to `0.0`. See {@link https://github.com/schteppe/cannon.js/issues/238#issuecomment-147172327 this exchange} for more details on Cannon's physics implementation.\r\n */\r\nclass Equation {\r\n  /**\r\n   * Minimum (read: negative max) force to be applied by the constraint.\r\n   */\r\n\r\n  /**\r\n   * Maximum (read: positive max) force to be applied by the constraint.\r\n   */\r\n\r\n  /**\r\n   * SPOOK parameter\r\n   */\r\n\r\n  /**\r\n   * SPOOK parameter\r\n   */\r\n\r\n  /**\r\n   * SPOOK parameter\r\n   */\r\n\r\n  /**\r\n   * A number, proportional to the force added to the bodies.\r\n   */\r\n  constructor(bi, bj, minForce, maxForce) {\r\n    if (minForce === void 0) {\r\n      minForce = -1e6;\r\n    }\r\n\r\n    if (maxForce === void 0) {\r\n      maxForce = 1e6;\r\n    }\r\n\r\n    this.id = Equation.idCounter++;\r\n    this.minForce = minForce;\r\n    this.maxForce = maxForce;\r\n    this.bi = bi;\r\n    this.bj = bj;\r\n    this.a = 0.0; // SPOOK parameter\r\n\r\n    this.b = 0.0; // SPOOK parameter\r\n\r\n    this.eps = 0.0; // SPOOK parameter\r\n\r\n    this.jacobianElementA = new JacobianElement();\r\n    this.jacobianElementB = new JacobianElement();\r\n    this.enabled = true;\r\n    this.multiplier = 0;\r\n    this.setSpookParams(1e7, 4, 1 / 60); // Set typical spook params\r\n  }\r\n  /**\r\n   * Recalculates a, b, and eps.\r\n   *\r\n   * The Equation constructor sets typical SPOOK parameters as such:\r\n   * * `stiffness` = 1e7\r\n   * * `relaxation` = 4\r\n   * * `timeStep`= 1 / 60, _note the hardcoded refresh rate._\r\n   */\r\n\r\n\r\n  setSpookParams(stiffness, relaxation, timeStep) {\r\n    const d = relaxation;\r\n    const k = stiffness;\r\n    const h = timeStep;\r\n    this.a = 4.0 / (h * (1 + 4 * d));\r\n    this.b = 4.0 * d / (1 + 4 * d);\r\n    this.eps = 4.0 / (h * h * k * (1 + 4 * d));\r\n  }\r\n  /**\r\n   * Computes the right hand side of the SPOOK equation\r\n   */\r\n\r\n\r\n  computeB(a, b, h) {\r\n    const GW = this.computeGW();\r\n    const Gq = this.computeGq();\r\n    const GiMf = this.computeGiMf();\r\n    return -Gq * a - GW * b - GiMf * h;\r\n  }\r\n  /**\r\n   * Computes G*q, where q are the generalized body coordinates\r\n   */\r\n\r\n\r\n  computeGq() {\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB;\r\n    const bi = this.bi;\r\n    const bj = this.bj;\r\n    const xi = bi.position;\r\n    const xj = bj.position;\r\n    return GA.spatial.dot(xi) + GB.spatial.dot(xj);\r\n  }\r\n  /**\r\n   * Computes G*W, where W are the body velocities\r\n   */\r\n\r\n\r\n  computeGW() {\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB;\r\n    const bi = this.bi;\r\n    const bj = this.bj;\r\n    const vi = bi.velocity;\r\n    const vj = bj.velocity;\r\n    const wi = bi.angularVelocity;\r\n    const wj = bj.angularVelocity;\r\n    return GA.multiplyVectors(vi, wi) + GB.multiplyVectors(vj, wj);\r\n  }\r\n  /**\r\n   * Computes G*Wlambda, where W are the body velocities\r\n   */\r\n\r\n\r\n  computeGWlambda() {\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB;\r\n    const bi = this.bi;\r\n    const bj = this.bj;\r\n    const vi = bi.vlambda;\r\n    const vj = bj.vlambda;\r\n    const wi = bi.wlambda;\r\n    const wj = bj.wlambda;\r\n    return GA.multiplyVectors(vi, wi) + GB.multiplyVectors(vj, wj);\r\n  }\r\n  /**\r\n   * Computes G*inv(M)*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.\r\n   */\r\n\r\n\r\n  computeGiMf() {\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB;\r\n    const bi = this.bi;\r\n    const bj = this.bj;\r\n    const fi = bi.force;\r\n    const ti = bi.torque;\r\n    const fj = bj.force;\r\n    const tj = bj.torque;\r\n    const invMassi = bi.invMassSolve;\r\n    const invMassj = bj.invMassSolve;\r\n    fi.scale(invMassi, iMfi);\r\n    fj.scale(invMassj, iMfj);\r\n    bi.invInertiaWorldSolve.vmult(ti, invIi_vmult_taui);\r\n    bj.invInertiaWorldSolve.vmult(tj, invIj_vmult_tauj);\r\n    return GA.multiplyVectors(iMfi, invIi_vmult_taui) + GB.multiplyVectors(iMfj, invIj_vmult_tauj);\r\n  }\r\n  /**\r\n   * Computes G*inv(M)*G'\r\n   */\r\n\r\n\r\n  computeGiMGt() {\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB;\r\n    const bi = this.bi;\r\n    const bj = this.bj;\r\n    const invMassi = bi.invMassSolve;\r\n    const invMassj = bj.invMassSolve;\r\n    const invIi = bi.invInertiaWorldSolve;\r\n    const invIj = bj.invInertiaWorldSolve;\r\n    let result = invMassi + invMassj;\r\n    invIi.vmult(GA.rotational, tmp);\r\n    result += tmp.dot(GA.rotational);\r\n    invIj.vmult(GB.rotational, tmp);\r\n    result += tmp.dot(GB.rotational);\r\n    return result;\r\n  }\r\n  /**\r\n   * Add constraint velocity to the bodies.\r\n   */\r\n\r\n\r\n  addToWlambda(deltalambda) {\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB;\r\n    const bi = this.bi;\r\n    const bj = this.bj;\r\n    const temp = addToWlambda_temp; // Add to linear velocity\r\n    // v_lambda += inv(M) * delta_lamba * G\r\n\r\n    bi.vlambda.addScaledVector(bi.invMassSolve * deltalambda, GA.spatial, bi.vlambda);\r\n    bj.vlambda.addScaledVector(bj.invMassSolve * deltalambda, GB.spatial, bj.vlambda); // Add to angular velocity\r\n\r\n    bi.invInertiaWorldSolve.vmult(GA.rotational, temp);\r\n    bi.wlambda.addScaledVector(deltalambda, temp, bi.wlambda);\r\n    bj.invInertiaWorldSolve.vmult(GB.rotational, temp);\r\n    bj.wlambda.addScaledVector(deltalambda, temp, bj.wlambda);\r\n  }\r\n  /**\r\n   * Compute the denominator part of the SPOOK equation: C = G*inv(M)*G' + eps\r\n   */\r\n\r\n\r\n  computeC() {\r\n    return this.computeGiMGt() + this.eps;\r\n  }\r\n\r\n}\r\nEquation.idCounter = 0;\r\nconst iMfi = new Vec3();\r\nconst iMfj = new Vec3();\r\nconst invIi_vmult_taui = new Vec3();\r\nconst invIj_vmult_tauj = new Vec3();\r\nconst tmp = new Vec3();\r\nconst addToWlambda_temp = new Vec3();\r\n\r\n/**\r\n * Contact/non-penetration constraint equation\r\n */\r\nclass ContactEquation extends Equation {\r\n  /**\r\n   * \"bounciness\": u1 = -e*u0\r\n   */\r\n\r\n  /**\r\n   * World-oriented vector that goes from the center of bi to the contact point.\r\n   */\r\n\r\n  /**\r\n   * World-oriented vector that starts in body j position and goes to the contact point.\r\n   */\r\n\r\n  /**\r\n   * Contact normal, pointing out of body i.\r\n   */\r\n  constructor(bodyA, bodyB, maxForce) {\r\n    if (maxForce === void 0) {\r\n      maxForce = 1e6;\r\n    }\r\n\r\n    super(bodyA, bodyB, 0, maxForce);\r\n    this.restitution = 0.0;\r\n    this.ri = new Vec3();\r\n    this.rj = new Vec3();\r\n    this.ni = new Vec3();\r\n  }\r\n\r\n  computeB(h) {\r\n    const a = this.a;\r\n    const b = this.b;\r\n    const bi = this.bi;\r\n    const bj = this.bj;\r\n    const ri = this.ri;\r\n    const rj = this.rj;\r\n    const rixn = ContactEquation_computeB_temp1;\r\n    const rjxn = ContactEquation_computeB_temp2;\r\n    const vi = bi.velocity;\r\n    const wi = bi.angularVelocity;\r\n    bi.force;\r\n    bi.torque;\r\n    const vj = bj.velocity;\r\n    const wj = bj.angularVelocity;\r\n    bj.force;\r\n    bj.torque;\r\n    const penetrationVec = ContactEquation_computeB_temp3;\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB;\r\n    const n = this.ni; // Caluclate cross products\r\n\r\n    ri.cross(n, rixn);\r\n    rj.cross(n, rjxn); // g = xj+rj -(xi+ri)\r\n    // G = [ -ni  -rixn  ni  rjxn ]\r\n\r\n    n.negate(GA.spatial);\r\n    rixn.negate(GA.rotational);\r\n    GB.spatial.copy(n);\r\n    GB.rotational.copy(rjxn); // Calculate the penetration vector\r\n\r\n    penetrationVec.copy(bj.position);\r\n    penetrationVec.vadd(rj, penetrationVec);\r\n    penetrationVec.vsub(bi.position, penetrationVec);\r\n    penetrationVec.vsub(ri, penetrationVec);\r\n    const g = n.dot(penetrationVec); // Compute iteration\r\n\r\n    const ePlusOne = this.restitution + 1;\r\n    const GW = ePlusOne * vj.dot(n) - ePlusOne * vi.dot(n) + wj.dot(rjxn) - wi.dot(rixn);\r\n    const GiMf = this.computeGiMf();\r\n    const B = -g * a - GW * b - h * GiMf;\r\n    return B;\r\n  }\r\n  /**\r\n   * Get the current relative velocity in the contact point.\r\n   */\r\n\r\n\r\n  getImpactVelocityAlongNormal() {\r\n    const vi = ContactEquation_getImpactVelocityAlongNormal_vi;\r\n    const vj = ContactEquation_getImpactVelocityAlongNormal_vj;\r\n    const xi = ContactEquation_getImpactVelocityAlongNormal_xi;\r\n    const xj = ContactEquation_getImpactVelocityAlongNormal_xj;\r\n    const relVel = ContactEquation_getImpactVelocityAlongNormal_relVel;\r\n    this.bi.position.vadd(this.ri, xi);\r\n    this.bj.position.vadd(this.rj, xj);\r\n    this.bi.getVelocityAtWorldPoint(xi, vi);\r\n    this.bj.getVelocityAtWorldPoint(xj, vj);\r\n    vi.vsub(vj, relVel);\r\n    return this.ni.dot(relVel);\r\n  }\r\n\r\n}\r\nconst ContactEquation_computeB_temp1 = new Vec3(); // Temp vectors\r\n\r\nconst ContactEquation_computeB_temp2 = new Vec3();\r\nconst ContactEquation_computeB_temp3 = new Vec3();\r\nconst ContactEquation_getImpactVelocityAlongNormal_vi = new Vec3();\r\nconst ContactEquation_getImpactVelocityAlongNormal_vj = new Vec3();\r\nconst ContactEquation_getImpactVelocityAlongNormal_xi = new Vec3();\r\nconst ContactEquation_getImpactVelocityAlongNormal_xj = new Vec3();\r\nconst ContactEquation_getImpactVelocityAlongNormal_relVel = new Vec3();\r\n\r\n/**\r\n * Connects two bodies at given offset points.\r\n * @example\r\n *     const bodyA = new Body({ mass: 1 })\r\n *     const bodyB = new Body({ mass: 1 })\r\n *     bodyA.position.set(-1, 0, 0)\r\n *     bodyB.position.set(1, 0, 0)\r\n *     bodyA.addShape(shapeA)\r\n *     bodyB.addShape(shapeB)\r\n *     world.addBody(bodyA)\r\n *     world.addBody(bodyB)\r\n *     const localPivotA = new Vec3(1, 0, 0)\r\n *     const localPivotB = new Vec3(-1, 0, 0)\r\n *     const constraint = new PointToPointConstraint(bodyA, localPivotA, bodyB, localPivotB)\r\n *     world.addConstraint(constraint)\r\n */\r\nclass PointToPointConstraint extends Constraint {\r\n  /**\r\n   * Pivot, defined locally in bodyA.\r\n   */\r\n\r\n  /**\r\n   * Pivot, defined locally in bodyB.\r\n   */\r\n\r\n  /**\r\n   * @param pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\r\n   * @param bodyB Body that will be constrained in a similar way to the same point as bodyA. We will therefore get a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\r\n   * @param pivotB The point relative to the center of mass of bodyB which bodyB is constrained to.\r\n   * @param maxForce The maximum force that should be applied to constrain the bodies.\r\n   */\r\n  constructor(bodyA, pivotA, bodyB, pivotB, maxForce) {\r\n    if (pivotA === void 0) {\r\n      pivotA = new Vec3();\r\n    }\r\n\r\n    if (pivotB === void 0) {\r\n      pivotB = new Vec3();\r\n    }\r\n\r\n    if (maxForce === void 0) {\r\n      maxForce = 1e6;\r\n    }\r\n\r\n    super(bodyA, bodyB);\r\n    this.pivotA = pivotA.clone();\r\n    this.pivotB = pivotB.clone();\r\n    const x = this.equationX = new ContactEquation(bodyA, bodyB);\r\n    const y = this.equationY = new ContactEquation(bodyA, bodyB);\r\n    const z = this.equationZ = new ContactEquation(bodyA, bodyB); // Equations to be fed to the solver\r\n\r\n    this.equations.push(x, y, z); // Make the equations bidirectional\r\n\r\n    x.minForce = y.minForce = z.minForce = -maxForce;\r\n    x.maxForce = y.maxForce = z.maxForce = maxForce;\r\n    x.ni.set(1, 0, 0);\r\n    y.ni.set(0, 1, 0);\r\n    z.ni.set(0, 0, 1);\r\n  }\r\n\r\n  update() {\r\n    const bodyA = this.bodyA;\r\n    const bodyB = this.bodyB;\r\n    const x = this.equationX;\r\n    const y = this.equationY;\r\n    const z = this.equationZ; // Rotate the pivots to world space\r\n\r\n    bodyA.quaternion.vmult(this.pivotA, x.ri);\r\n    bodyB.quaternion.vmult(this.pivotB, x.rj);\r\n    y.ri.copy(x.ri);\r\n    y.rj.copy(x.rj);\r\n    z.ri.copy(x.ri);\r\n    z.rj.copy(x.rj);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Cone equation. Works to keep the given body world vectors aligned, or tilted within a given angle from each other.\r\n */\r\nclass ConeEquation extends Equation {\r\n  /**\r\n   * Local axis in A\r\n   */\r\n\r\n  /**\r\n   * Local axis in B\r\n   */\r\n\r\n  /**\r\n   * The \"cone angle\" to keep\r\n   */\r\n  constructor(bodyA, bodyB, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\r\n    super(bodyA, bodyB, -maxForce, maxForce);\r\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\r\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\r\n    this.angle = typeof options.angle !== 'undefined' ? options.angle : 0;\r\n  }\r\n\r\n  computeB(h) {\r\n    const a = this.a;\r\n    const b = this.b;\r\n    const ni = this.axisA;\r\n    const nj = this.axisB;\r\n    const nixnj = tmpVec1$2;\r\n    const njxni = tmpVec2$2;\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB; // Caluclate cross products\r\n\r\n    ni.cross(nj, nixnj);\r\n    nj.cross(ni, njxni); // The angle between two vector is:\r\n    // cos(theta) = a * b / (length(a) * length(b) = { len(a) = len(b) = 1 } = a * b\r\n    // g = a * b\r\n    // gdot = (b x a) * wi + (a x b) * wj\r\n    // G = [0 bxa 0 axb]\r\n    // W = [vi wi vj wj]\r\n\r\n    GA.rotational.copy(njxni);\r\n    GB.rotational.copy(nixnj);\r\n    const g = Math.cos(this.angle) - ni.dot(nj);\r\n    const GW = this.computeGW();\r\n    const GiMf = this.computeGiMf();\r\n    const B = -g * a - GW * b - h * GiMf;\r\n    return B;\r\n  }\r\n\r\n}\r\nconst tmpVec1$2 = new Vec3();\r\nconst tmpVec2$2 = new Vec3();\r\n\r\n/**\r\n * Rotational constraint. Works to keep the local vectors orthogonal to each other in world space.\r\n */\r\nclass RotationalEquation extends Equation {\r\n  /**\r\n   * World oriented rotational axis.\r\n   */\r\n\r\n  /**\r\n   * World oriented rotational axis.\r\n   */\r\n\r\n  /**\r\n   * maxAngle\r\n   */\r\n  constructor(bodyA, bodyB, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\r\n    super(bodyA, bodyB, -maxForce, maxForce);\r\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\r\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\r\n    this.maxAngle = Math.PI / 2;\r\n  }\r\n\r\n  computeB(h) {\r\n    const a = this.a;\r\n    const b = this.b;\r\n    const ni = this.axisA;\r\n    const nj = this.axisB;\r\n    const nixnj = tmpVec1$1;\r\n    const njxni = tmpVec2$1;\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB; // Caluclate cross products\r\n\r\n    ni.cross(nj, nixnj);\r\n    nj.cross(ni, njxni); // g = ni * nj\r\n    // gdot = (nj x ni) * wi + (ni x nj) * wj\r\n    // G = [0 njxni 0 nixnj]\r\n    // W = [vi wi vj wj]\r\n\r\n    GA.rotational.copy(njxni);\r\n    GB.rotational.copy(nixnj);\r\n    const g = Math.cos(this.maxAngle) - ni.dot(nj);\r\n    const GW = this.computeGW();\r\n    const GiMf = this.computeGiMf();\r\n    const B = -g * a - GW * b - h * GiMf;\r\n    return B;\r\n  }\r\n\r\n}\r\nconst tmpVec1$1 = new Vec3();\r\nconst tmpVec2$1 = new Vec3();\r\n\r\n/**\r\n * A Cone Twist constraint, useful for ragdolls.\r\n */\r\nclass ConeTwistConstraint extends PointToPointConstraint {\r\n  /**\r\n   * The axis direction for the constraint of the body A.\r\n   */\r\n\r\n  /**\r\n   * The axis direction for the constraint of the body B.\r\n   */\r\n\r\n  /**\r\n   * The aperture angle of the cone.\r\n   */\r\n\r\n  /**\r\n   * The twist angle of the joint.\r\n   */\r\n  constructor(bodyA, bodyB, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6; // Set pivot point in between\r\n\r\n    const pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\r\n    const pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\r\n    super(bodyA, pivotA, bodyB, pivotB, maxForce);\r\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3();\r\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3();\r\n    this.collideConnected = !!options.collideConnected;\r\n    this.angle = typeof options.angle !== 'undefined' ? options.angle : 0;\r\n    const c = this.coneEquation = new ConeEquation(bodyA, bodyB, options);\r\n    const t = this.twistEquation = new RotationalEquation(bodyA, bodyB, options);\r\n    this.twistAngle = typeof options.twistAngle !== 'undefined' ? options.twistAngle : 0; // Make the cone equation push the bodies toward the cone axis, not outward\r\n\r\n    c.maxForce = 0;\r\n    c.minForce = -maxForce; // Make the twist equation add torque toward the initial position\r\n\r\n    t.maxForce = 0;\r\n    t.minForce = -maxForce;\r\n    this.equations.push(c, t);\r\n  }\r\n\r\n  update() {\r\n    const bodyA = this.bodyA;\r\n    const bodyB = this.bodyB;\r\n    const cone = this.coneEquation;\r\n    const twist = this.twistEquation;\r\n    super.update(); // Update the axes to the cone constraint\r\n\r\n    bodyA.vectorToWorldFrame(this.axisA, cone.axisA);\r\n    bodyB.vectorToWorldFrame(this.axisB, cone.axisB); // Update the world axes in the twist constraint\r\n\r\n    this.axisA.tangents(twist.axisA, twist.axisA);\r\n    bodyA.vectorToWorldFrame(twist.axisA, twist.axisA);\r\n    this.axisB.tangents(twist.axisB, twist.axisB);\r\n    bodyB.vectorToWorldFrame(twist.axisB, twist.axisB);\r\n    cone.angle = this.angle;\r\n    twist.maxAngle = this.twistAngle;\r\n  }\r\n\r\n}\r\nnew Vec3();\r\nnew Vec3();\r\n\r\n/**\r\n * Constrains two bodies to be at a constant distance from each others center of mass.\r\n */\r\nclass DistanceConstraint extends Constraint {\r\n  /**\r\n   * The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\r\n   */\r\n\r\n  /**\r\n   * @param distance The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB.\r\n   * @param maxForce The maximum force that should be applied to constrain the bodies.\r\n   */\r\n  constructor(bodyA, bodyB, distance, maxForce) {\r\n    if (maxForce === void 0) {\r\n      maxForce = 1e6;\r\n    }\r\n\r\n    super(bodyA, bodyB);\r\n\r\n    if (typeof distance === 'undefined') {\r\n      distance = bodyA.position.distanceTo(bodyB.position);\r\n    }\r\n\r\n    this.distance = distance;\r\n    const eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\r\n    this.equations.push(eq); // Make it bidirectional\r\n\r\n    eq.minForce = -maxForce;\r\n    eq.maxForce = maxForce;\r\n  }\r\n  /**\r\n   * update\r\n   */\r\n\r\n\r\n  update() {\r\n    const bodyA = this.bodyA;\r\n    const bodyB = this.bodyB;\r\n    const eq = this.distanceEquation;\r\n    const halfDist = this.distance * 0.5;\r\n    const normal = eq.ni;\r\n    bodyB.position.vsub(bodyA.position, normal);\r\n    normal.normalize();\r\n    normal.scale(halfDist, eq.ri);\r\n    normal.scale(-halfDist, eq.rj);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Lock constraint. Will remove all degrees of freedom between the bodies.\r\n */\r\nclass LockConstraint extends PointToPointConstraint {\r\n  constructor(bodyA, bodyB, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6; // Set pivot point in between\r\n\r\n    const pivotA = new Vec3();\r\n    const pivotB = new Vec3();\r\n    const halfWay = new Vec3();\r\n    bodyA.position.vadd(bodyB.position, halfWay);\r\n    halfWay.scale(0.5, halfWay);\r\n    bodyB.pointToLocalFrame(halfWay, pivotB);\r\n    bodyA.pointToLocalFrame(halfWay, pivotA); // The point-to-point constraint will keep a point shared between the bodies\r\n\r\n    super(bodyA, pivotA, bodyB, pivotB, maxForce); // Store initial rotation of the bodies as unit vectors in the local body spaces\r\n\r\n    this.xA = bodyA.vectorToLocalFrame(Vec3.UNIT_X);\r\n    this.xB = bodyB.vectorToLocalFrame(Vec3.UNIT_X);\r\n    this.yA = bodyA.vectorToLocalFrame(Vec3.UNIT_Y);\r\n    this.yB = bodyB.vectorToLocalFrame(Vec3.UNIT_Y);\r\n    this.zA = bodyA.vectorToLocalFrame(Vec3.UNIT_Z);\r\n    this.zB = bodyB.vectorToLocalFrame(Vec3.UNIT_Z); // ...and the following rotational equations will keep all rotational DOF's in place\r\n\r\n    const r1 = this.rotationalEquation1 = new RotationalEquation(bodyA, bodyB, options);\r\n    const r2 = this.rotationalEquation2 = new RotationalEquation(bodyA, bodyB, options);\r\n    const r3 = this.rotationalEquation3 = new RotationalEquation(bodyA, bodyB, options);\r\n    this.equations.push(r1, r2, r3);\r\n  }\r\n  /**\r\n   * update\r\n   */\r\n\r\n\r\n  update() {\r\n    const bodyA = this.bodyA;\r\n    const bodyB = this.bodyB;\r\n    this.motorEquation;\r\n    const r1 = this.rotationalEquation1;\r\n    const r2 = this.rotationalEquation2;\r\n    const r3 = this.rotationalEquation3;\r\n    LockConstraint_update_tmpVec1;\r\n    LockConstraint_update_tmpVec2;\r\n    super.update(); // These vector pairs must be orthogonal\r\n\r\n    bodyA.vectorToWorldFrame(this.xA, r1.axisA);\r\n    bodyB.vectorToWorldFrame(this.yB, r1.axisB);\r\n    bodyA.vectorToWorldFrame(this.yA, r2.axisA);\r\n    bodyB.vectorToWorldFrame(this.zB, r2.axisB);\r\n    bodyA.vectorToWorldFrame(this.zA, r3.axisA);\r\n    bodyB.vectorToWorldFrame(this.xB, r3.axisB);\r\n  }\r\n\r\n}\r\nconst LockConstraint_update_tmpVec1 = new Vec3();\r\nconst LockConstraint_update_tmpVec2 = new Vec3();\r\n\r\n/**\r\n * Rotational motor constraint. Tries to keep the relative angular velocity of the bodies to a given value.\r\n */\r\nclass RotationalMotorEquation extends Equation {\r\n  /**\r\n   * World oriented rotational axis.\r\n   */\r\n\r\n  /**\r\n   * World oriented rotational axis.\r\n   */\r\n\r\n  /**\r\n   * Motor velocity.\r\n   */\r\n  constructor(bodyA, bodyB, maxForce) {\r\n    if (maxForce === void 0) {\r\n      maxForce = 1e6;\r\n    }\r\n\r\n    super(bodyA, bodyB, -maxForce, maxForce);\r\n    this.axisA = new Vec3();\r\n    this.axisB = new Vec3();\r\n    this.targetVelocity = 0;\r\n  }\r\n\r\n  computeB(h) {\r\n    this.a;\r\n    const b = this.b;\r\n    this.bi;\r\n    this.bj;\r\n    const axisA = this.axisA;\r\n    const axisB = this.axisB;\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB; // g = 0\r\n    // gdot = axisA * wi - axisB * wj\r\n    // gdot = G * W = G * [vi wi vj wj]\r\n    // =>\r\n    // G = [0 axisA 0 -axisB]\r\n\r\n    GA.rotational.copy(axisA);\r\n    axisB.negate(GB.rotational);\r\n    const GW = this.computeGW() - this.targetVelocity;\r\n    const GiMf = this.computeGiMf();\r\n    const B = -GW * b - h * GiMf;\r\n    return B;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Hinge constraint. Think of it as a door hinge. It tries to keep the door in the correct place and with the correct orientation.\r\n */\r\nclass HingeConstraint extends PointToPointConstraint {\r\n  /**\r\n   * Rotation axis, defined locally in bodyA.\r\n   */\r\n\r\n  /**\r\n   * Rotation axis, defined locally in bodyB.\r\n   */\r\n  constructor(bodyA, bodyB, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    const maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\r\n    const pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\r\n    const pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\r\n    super(bodyA, pivotA, bodyB, pivotB, maxForce);\r\n    const axisA = this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\r\n    axisA.normalize();\r\n    const axisB = this.axisB = options.axisB ? options.axisB.clone() : new Vec3(1, 0, 0);\r\n    axisB.normalize();\r\n    this.collideConnected = !!options.collideConnected;\r\n    const rotational1 = this.rotationalEquation1 = new RotationalEquation(bodyA, bodyB, options);\r\n    const rotational2 = this.rotationalEquation2 = new RotationalEquation(bodyA, bodyB, options);\r\n    const motor = this.motorEquation = new RotationalMotorEquation(bodyA, bodyB, maxForce);\r\n    motor.enabled = false; // Not enabled by default\r\n    // Equations to be fed to the solver\r\n\r\n    this.equations.push(rotational1, rotational2, motor);\r\n  }\r\n  /**\r\n   * enableMotor\r\n   */\r\n\r\n\r\n  enableMotor() {\r\n    this.motorEquation.enabled = true;\r\n  }\r\n  /**\r\n   * disableMotor\r\n   */\r\n\r\n\r\n  disableMotor() {\r\n    this.motorEquation.enabled = false;\r\n  }\r\n  /**\r\n   * setMotorSpeed\r\n   */\r\n\r\n\r\n  setMotorSpeed(speed) {\r\n    this.motorEquation.targetVelocity = speed;\r\n  }\r\n  /**\r\n   * setMotorMaxForce\r\n   */\r\n\r\n\r\n  setMotorMaxForce(maxForce) {\r\n    this.motorEquation.maxForce = maxForce;\r\n    this.motorEquation.minForce = -maxForce;\r\n  }\r\n  /**\r\n   * update\r\n   */\r\n\r\n\r\n  update() {\r\n    const bodyA = this.bodyA;\r\n    const bodyB = this.bodyB;\r\n    const motor = this.motorEquation;\r\n    const r1 = this.rotationalEquation1;\r\n    const r2 = this.rotationalEquation2;\r\n    const worldAxisA = HingeConstraint_update_tmpVec1;\r\n    const worldAxisB = HingeConstraint_update_tmpVec2;\r\n    const axisA = this.axisA;\r\n    const axisB = this.axisB;\r\n    super.update(); // Get world axes\r\n\r\n    bodyA.quaternion.vmult(axisA, worldAxisA);\r\n    bodyB.quaternion.vmult(axisB, worldAxisB);\r\n    worldAxisA.tangents(r1.axisA, r2.axisA);\r\n    r1.axisB.copy(worldAxisB);\r\n    r2.axisB.copy(worldAxisB);\r\n\r\n    if (this.motorEquation.enabled) {\r\n      bodyA.quaternion.vmult(this.axisA, motor.axisA);\r\n      bodyB.quaternion.vmult(this.axisB, motor.axisB);\r\n    }\r\n  }\r\n\r\n}\r\nconst HingeConstraint_update_tmpVec1 = new Vec3();\r\nconst HingeConstraint_update_tmpVec2 = new Vec3();\r\n\r\n/**\r\n * Constrains the slipping in a contact along a tangent\r\n */\r\nclass FrictionEquation extends Equation {\r\n  // Tangent\r\n\r\n  /**\r\n   * @param slipForce should be +-F_friction = +-mu * F_normal = +-mu * m * g\r\n   */\r\n  constructor(bodyA, bodyB, slipForce) {\r\n    super(bodyA, bodyB, -slipForce, slipForce);\r\n    this.ri = new Vec3();\r\n    this.rj = new Vec3();\r\n    this.t = new Vec3();\r\n  }\r\n\r\n  computeB(h) {\r\n    this.a;\r\n    const b = this.b;\r\n    this.bi;\r\n    this.bj;\r\n    const ri = this.ri;\r\n    const rj = this.rj;\r\n    const rixt = FrictionEquation_computeB_temp1;\r\n    const rjxt = FrictionEquation_computeB_temp2;\r\n    const t = this.t; // Caluclate cross products\r\n\r\n    ri.cross(t, rixt);\r\n    rj.cross(t, rjxt); // G = [-t -rixt t rjxt]\r\n    // And remember, this is a pure velocity constraint, g is always zero!\r\n\r\n    const GA = this.jacobianElementA;\r\n    const GB = this.jacobianElementB;\r\n    t.negate(GA.spatial);\r\n    rixt.negate(GA.rotational);\r\n    GB.spatial.copy(t);\r\n    GB.rotational.copy(rjxt);\r\n    const GW = this.computeGW();\r\n    const GiMf = this.computeGiMf();\r\n    const B = -GW * b - h * GiMf;\r\n    return B;\r\n  }\r\n\r\n}\r\nconst FrictionEquation_computeB_temp1 = new Vec3();\r\nconst FrictionEquation_computeB_temp2 = new Vec3();\r\n\r\n/**\r\n * Defines what happens when two materials meet.\r\n * @todo Refactor materials to materialA and materialB\r\n */\r\nclass ContactMaterial {\r\n  /**\r\n   * Identifier of this material.\r\n   */\r\n\r\n  /**\r\n   * Participating materials.\r\n   */\r\n\r\n  /**\r\n   * Friction coefficient.\r\n   * @default 0.3\r\n   */\r\n\r\n  /**\r\n   * Restitution coefficient.\r\n   * @default 0.3\r\n   */\r\n\r\n  /**\r\n   * Stiffness of the produced contact equations.\r\n   * @default 1e7\r\n   */\r\n\r\n  /**\r\n   * Relaxation time of the produced contact equations.\r\n   * @default 3\r\n   */\r\n\r\n  /**\r\n   * Stiffness of the produced friction equations.\r\n   * @default 1e7\r\n   */\r\n\r\n  /**\r\n   * Relaxation time of the produced friction equations\r\n   * @default 3\r\n   */\r\n  constructor(m1, m2, options) {\r\n    options = Utils.defaults(options, {\r\n      friction: 0.3,\r\n      restitution: 0.3,\r\n      contactEquationStiffness: 1e7,\r\n      contactEquationRelaxation: 3,\r\n      frictionEquationStiffness: 1e7,\r\n      frictionEquationRelaxation: 3\r\n    });\r\n    this.id = ContactMaterial.idCounter++;\r\n    this.materials = [m1, m2];\r\n    this.friction = options.friction;\r\n    this.restitution = options.restitution;\r\n    this.contactEquationStiffness = options.contactEquationStiffness;\r\n    this.contactEquationRelaxation = options.contactEquationRelaxation;\r\n    this.frictionEquationStiffness = options.frictionEquationStiffness;\r\n    this.frictionEquationRelaxation = options.frictionEquationRelaxation;\r\n  }\r\n\r\n}\r\nContactMaterial.idCounter = 0;\r\n\r\n/**\r\n * Defines a physics material.\r\n */\r\nclass Material {\r\n  /**\r\n   * Material name.\r\n   * If options is a string, name will be set to that string.\r\n   * @todo Deprecate this\r\n   */\r\n\r\n  /** Material id. */\r\n\r\n  /**\r\n   * Friction for this material.\r\n   * If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from `defaultContactMaterial` in the World will be used.\r\n   */\r\n\r\n  /**\r\n   * Restitution for this material.\r\n   * If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from `defaultContactMaterial` in the World will be used.\r\n   */\r\n  constructor(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    let name = ''; // Backwards compatibility fix\r\n\r\n    if (typeof options === 'string') {\r\n      //console.warn(`Passing a string to MaterialOptions is deprecated, and has no effect`)\r\n      name = options;\r\n      options = {};\r\n    }\r\n\r\n    this.name = name;\r\n    this.id = Material.idCounter++;\r\n    this.friction = typeof options.friction !== 'undefined' ? options.friction : -1;\r\n    this.restitution = typeof options.restitution !== 'undefined' ? options.restitution : -1;\r\n  }\r\n\r\n}\r\nMaterial.idCounter = 0;\r\n\r\n/**\r\n * A spring, connecting two bodies.\r\n * @example\r\n *     const spring = new Spring(boxBody, sphereBody, {\r\n *       restLength: 0,\r\n *       stiffness: 50,\r\n *       damping: 1,\r\n *     })\r\n *\r\n *     // Compute the force after each step\r\n *     world.addEventListener('postStep', (event) => {\r\n *       spring.applyForce()\r\n *     })\r\n */\r\nclass Spring {\r\n  /**\r\n   * Rest length of the spring. A number > 0.\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * Stiffness of the spring. A number >= 0.\r\n   * @default 100\r\n   */\r\n\r\n  /**\r\n   * Damping of the spring. A number >= 0.\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * First connected body.\r\n   */\r\n\r\n  /**\r\n   * Second connected body.\r\n   */\r\n\r\n  /**\r\n   * Anchor for bodyA in local bodyA coordinates.\r\n   * Where to hook the spring to body A, in local body coordinates.\r\n   * @default new Vec3()\r\n   */\r\n\r\n  /**\r\n   * Anchor for bodyB in local bodyB coordinates.\r\n   * Where to hook the spring to body B, in local body coordinates.\r\n   * @default new Vec3()\r\n   */\r\n  constructor(bodyA, bodyB, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    this.restLength = typeof options.restLength === 'number' ? options.restLength : 1;\r\n    this.stiffness = options.stiffness || 100;\r\n    this.damping = options.damping || 1;\r\n    this.bodyA = bodyA;\r\n    this.bodyB = bodyB;\r\n    this.localAnchorA = new Vec3();\r\n    this.localAnchorB = new Vec3();\r\n\r\n    if (options.localAnchorA) {\r\n      this.localAnchorA.copy(options.localAnchorA);\r\n    }\r\n\r\n    if (options.localAnchorB) {\r\n      this.localAnchorB.copy(options.localAnchorB);\r\n    }\r\n\r\n    if (options.worldAnchorA) {\r\n      this.setWorldAnchorA(options.worldAnchorA);\r\n    }\r\n\r\n    if (options.worldAnchorB) {\r\n      this.setWorldAnchorB(options.worldAnchorB);\r\n    }\r\n  }\r\n  /**\r\n   * Set the anchor point on body A, using world coordinates.\r\n   */\r\n\r\n\r\n  setWorldAnchorA(worldAnchorA) {\r\n    this.bodyA.pointToLocalFrame(worldAnchorA, this.localAnchorA);\r\n  }\r\n  /**\r\n   * Set the anchor point on body B, using world coordinates.\r\n   */\r\n\r\n\r\n  setWorldAnchorB(worldAnchorB) {\r\n    this.bodyB.pointToLocalFrame(worldAnchorB, this.localAnchorB);\r\n  }\r\n  /**\r\n   * Get the anchor point on body A, in world coordinates.\r\n   * @param result The vector to store the result in.\r\n   */\r\n\r\n\r\n  getWorldAnchorA(result) {\r\n    this.bodyA.pointToWorldFrame(this.localAnchorA, result);\r\n  }\r\n  /**\r\n   * Get the anchor point on body B, in world coordinates.\r\n   * @param result The vector to store the result in.\r\n   */\r\n\r\n\r\n  getWorldAnchorB(result) {\r\n    this.bodyB.pointToWorldFrame(this.localAnchorB, result);\r\n  }\r\n  /**\r\n   * Apply the spring force to the connected bodies.\r\n   */\r\n\r\n\r\n  applyForce() {\r\n    const k = this.stiffness;\r\n    const d = this.damping;\r\n    const l = this.restLength;\r\n    const bodyA = this.bodyA;\r\n    const bodyB = this.bodyB;\r\n    const r = applyForce_r;\r\n    const r_unit = applyForce_r_unit;\r\n    const u = applyForce_u;\r\n    const f = applyForce_f;\r\n    const tmp = applyForce_tmp;\r\n    const worldAnchorA = applyForce_worldAnchorA;\r\n    const worldAnchorB = applyForce_worldAnchorB;\r\n    const ri = applyForce_ri;\r\n    const rj = applyForce_rj;\r\n    const ri_x_f = applyForce_ri_x_f;\r\n    const rj_x_f = applyForce_rj_x_f; // Get world anchors\r\n\r\n    this.getWorldAnchorA(worldAnchorA);\r\n    this.getWorldAnchorB(worldAnchorB); // Get offset points\r\n\r\n    worldAnchorA.vsub(bodyA.position, ri);\r\n    worldAnchorB.vsub(bodyB.position, rj); // Compute distance vector between world anchor points\r\n\r\n    worldAnchorB.vsub(worldAnchorA, r);\r\n    const rlen = r.length();\r\n    r_unit.copy(r);\r\n    r_unit.normalize(); // Compute relative velocity of the anchor points, u\r\n\r\n    bodyB.velocity.vsub(bodyA.velocity, u); // Add rotational velocity\r\n\r\n    bodyB.angularVelocity.cross(rj, tmp);\r\n    u.vadd(tmp, u);\r\n    bodyA.angularVelocity.cross(ri, tmp);\r\n    u.vsub(tmp, u); // F = - k * ( x - L ) - D * ( u )\r\n\r\n    r_unit.scale(-k * (rlen - l) - d * u.dot(r_unit), f); // Add forces to bodies\r\n\r\n    bodyA.force.vsub(f, bodyA.force);\r\n    bodyB.force.vadd(f, bodyB.force); // Angular force\r\n\r\n    ri.cross(f, ri_x_f);\r\n    rj.cross(f, rj_x_f);\r\n    bodyA.torque.vsub(ri_x_f, bodyA.torque);\r\n    bodyB.torque.vadd(rj_x_f, bodyB.torque);\r\n  }\r\n\r\n}\r\nconst applyForce_r = new Vec3();\r\nconst applyForce_r_unit = new Vec3();\r\nconst applyForce_u = new Vec3();\r\nconst applyForce_f = new Vec3();\r\nconst applyForce_worldAnchorA = new Vec3();\r\nconst applyForce_worldAnchorB = new Vec3();\r\nconst applyForce_ri = new Vec3();\r\nconst applyForce_rj = new Vec3();\r\nconst applyForce_ri_x_f = new Vec3();\r\nconst applyForce_rj_x_f = new Vec3();\r\nconst applyForce_tmp = new Vec3();\r\n\r\n/**\r\n * WheelInfo\r\n */\r\nclass WheelInfo {\r\n  /**\r\n   * Max travel distance of the suspension, in meters.\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * Speed to apply to the wheel rotation when the wheel is sliding.\r\n   * @default -0.1\r\n   */\r\n\r\n  /**\r\n   * If the customSlidingRotationalSpeed should be used.\r\n   * @default false\r\n   */\r\n\r\n  /**\r\n   * sliding\r\n   */\r\n\r\n  /**\r\n   * Connection point, defined locally in the chassis body frame.\r\n   */\r\n\r\n  /**\r\n   * chassisConnectionPointWorld\r\n   */\r\n\r\n  /**\r\n   * directionLocal\r\n   */\r\n\r\n  /**\r\n   * directionWorld\r\n   */\r\n\r\n  /**\r\n   * axleLocal\r\n   */\r\n\r\n  /**\r\n   * axleWorld\r\n   */\r\n\r\n  /**\r\n   * suspensionRestLength\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * suspensionMaxLength\r\n   * @default 2\r\n   */\r\n\r\n  /**\r\n   * radius\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * suspensionStiffness\r\n   * @default 100\r\n   */\r\n\r\n  /**\r\n   * dampingCompression\r\n   * @default 10\r\n   */\r\n\r\n  /**\r\n   * dampingRelaxation\r\n   * @default 10\r\n   */\r\n\r\n  /**\r\n   * frictionSlip\r\n   * @default 10.5\r\n   */\r\n\r\n  /** forwardAcceleration */\r\n\r\n  /** sideAcceleration */\r\n\r\n  /**\r\n   * steering\r\n   * @default 0\r\n   */\r\n\r\n  /**\r\n   * Rotation value, in radians.\r\n   * @default 0\r\n   */\r\n\r\n  /**\r\n   * deltaRotation\r\n   * @default 0\r\n   */\r\n\r\n  /**\r\n   * rollInfluence\r\n   * @default 0.01\r\n   */\r\n\r\n  /**\r\n   * maxSuspensionForce\r\n   */\r\n\r\n  /**\r\n   * engineForce\r\n   */\r\n\r\n  /**\r\n   * brake\r\n   */\r\n\r\n  /**\r\n   * isFrontWheel\r\n   * @default true\r\n   */\r\n\r\n  /**\r\n   * clippedInvContactDotSuspension\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * suspensionRelativeVelocity\r\n   * @default 0\r\n   */\r\n\r\n  /**\r\n   * suspensionForce\r\n   * @default 0\r\n   */\r\n\r\n  /**\r\n   * slipInfo\r\n   */\r\n\r\n  /**\r\n   * skidInfo\r\n   * @default 0\r\n   */\r\n\r\n  /**\r\n   * suspensionLength\r\n   * @default 0\r\n   */\r\n\r\n  /**\r\n   * sideImpulse\r\n   */\r\n\r\n  /**\r\n   * forwardImpulse\r\n   */\r\n\r\n  /**\r\n   * The result from raycasting.\r\n   */\r\n\r\n  /**\r\n   * Wheel world transform.\r\n   */\r\n\r\n  /**\r\n   * isInContact\r\n   */\r\n  constructor(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    options = Utils.defaults(options, {\r\n      chassisConnectionPointLocal: new Vec3(),\r\n      chassisConnectionPointWorld: new Vec3(),\r\n      directionLocal: new Vec3(),\r\n      directionWorld: new Vec3(),\r\n      axleLocal: new Vec3(),\r\n      axleWorld: new Vec3(),\r\n      suspensionRestLength: 1,\r\n      suspensionMaxLength: 2,\r\n      radius: 1,\r\n      suspensionStiffness: 100,\r\n      dampingCompression: 10,\r\n      dampingRelaxation: 10,\r\n      frictionSlip: 10.5,\r\n      forwardAcceleration: 1,\r\n      sideAcceleration: 1,\r\n      steering: 0,\r\n      rotation: 0,\r\n      deltaRotation: 0,\r\n      rollInfluence: 0.01,\r\n      maxSuspensionForce: Number.MAX_VALUE,\r\n      isFrontWheel: true,\r\n      clippedInvContactDotSuspension: 1,\r\n      suspensionRelativeVelocity: 0,\r\n      suspensionForce: 0,\r\n      slipInfo: 0,\r\n      skidInfo: 0,\r\n      suspensionLength: 0,\r\n      maxSuspensionTravel: 1,\r\n      useCustomSlidingRotationalSpeed: false,\r\n      customSlidingRotationalSpeed: -0.1\r\n    });\r\n    this.maxSuspensionTravel = options.maxSuspensionTravel;\r\n    this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\r\n    this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\r\n    this.sliding = false;\r\n    this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\r\n    this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\r\n    this.directionLocal = options.directionLocal.clone();\r\n    this.directionWorld = options.directionWorld.clone();\r\n    this.axleLocal = options.axleLocal.clone();\r\n    this.axleWorld = options.axleWorld.clone();\r\n    this.suspensionRestLength = options.suspensionRestLength;\r\n    this.suspensionMaxLength = options.suspensionMaxLength;\r\n    this.radius = options.radius;\r\n    this.suspensionStiffness = options.suspensionStiffness;\r\n    this.dampingCompression = options.dampingCompression;\r\n    this.dampingRelaxation = options.dampingRelaxation;\r\n    this.frictionSlip = options.frictionSlip;\r\n    this.forwardAcceleration = options.forwardAcceleration;\r\n    this.sideAcceleration = options.sideAcceleration;\r\n    this.steering = 0;\r\n    this.rotation = 0;\r\n    this.deltaRotation = 0;\r\n    this.rollInfluence = options.rollInfluence;\r\n    this.maxSuspensionForce = options.maxSuspensionForce;\r\n    this.engineForce = 0;\r\n    this.brake = 0;\r\n    this.isFrontWheel = options.isFrontWheel;\r\n    this.clippedInvContactDotSuspension = 1;\r\n    this.suspensionRelativeVelocity = 0;\r\n    this.suspensionForce = 0;\r\n    this.slipInfo = 0;\r\n    this.skidInfo = 0;\r\n    this.suspensionLength = 0;\r\n    this.sideImpulse = 0;\r\n    this.forwardImpulse = 0;\r\n    this.raycastResult = new RaycastResult();\r\n    this.worldTransform = new Transform();\r\n    this.isInContact = false;\r\n  }\r\n\r\n  updateWheel(chassis) {\r\n    const raycastResult = this.raycastResult;\r\n\r\n    if (this.isInContact) {\r\n      const project = raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\r\n      raycastResult.hitPointWorld.vsub(chassis.position, relpos);\r\n      chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\r\n      const projVel = raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\r\n\r\n      if (project >= -0.1) {\r\n        this.suspensionRelativeVelocity = 0.0;\r\n        this.clippedInvContactDotSuspension = 1.0 / 0.1;\r\n      } else {\r\n        const inv = -1 / project;\r\n        this.suspensionRelativeVelocity = projVel * inv;\r\n        this.clippedInvContactDotSuspension = inv;\r\n      }\r\n    } else {\r\n      // Not in contact : position wheel in a nice (rest length) position\r\n      raycastResult.suspensionLength = this.suspensionRestLength;\r\n      this.suspensionRelativeVelocity = 0.0;\r\n      raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\r\n      this.clippedInvContactDotSuspension = 1.0;\r\n    }\r\n  }\r\n\r\n}\r\nconst chassis_velocity_at_contactPoint = new Vec3();\r\nconst relpos = new Vec3();\r\n\r\n/**\r\n * Vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.\r\n */\r\nclass RaycastVehicle {\r\n  /** The car chassis body. */\r\n\r\n  /** The wheels. */\r\n\r\n  /** Will be set to true if the car is sliding. */\r\n\r\n  /** Index of the right axis. x=0, y=1, z=2 */\r\n\r\n  /** Index of the forward axis. x=0, y=1, z=2 */\r\n\r\n  /** Index of the up axis. x=0, y=1, z=2 */\r\n\r\n  /** The constraints. */\r\n\r\n  /** Optional pre-step callback. */\r\n\r\n  /** Number of wheels on the ground. */\r\n  constructor(options) {\r\n    this.chassisBody = options.chassisBody;\r\n    this.wheelInfos = [];\r\n    this.sliding = false;\r\n    this.world = null;\r\n    this.indexRightAxis = typeof options.indexRightAxis !== 'undefined' ? options.indexRightAxis : 2;\r\n    this.indexForwardAxis = typeof options.indexForwardAxis !== 'undefined' ? options.indexForwardAxis : 0;\r\n    this.indexUpAxis = typeof options.indexUpAxis !== 'undefined' ? options.indexUpAxis : 1;\r\n    this.constraints = [];\r\n\r\n    this.preStepCallback = () => {};\r\n\r\n    this.currentVehicleSpeedKmHour = 0;\r\n    this.numWheelsOnGround = 0;\r\n  }\r\n  /**\r\n   * Add a wheel. For information about the options, see `WheelInfo`.\r\n   */\r\n\r\n\r\n  addWheel(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    const info = new WheelInfo(options);\r\n    const index = this.wheelInfos.length;\r\n    this.wheelInfos.push(info);\r\n    return index;\r\n  }\r\n  /**\r\n   * Set the steering value of a wheel.\r\n   */\r\n\r\n\r\n  setSteeringValue(value, wheelIndex) {\r\n    const wheel = this.wheelInfos[wheelIndex];\r\n    wheel.steering = value;\r\n  }\r\n  /**\r\n   * Set the wheel force to apply on one of the wheels each time step\r\n   */\r\n\r\n\r\n  applyEngineForce(value, wheelIndex) {\r\n    this.wheelInfos[wheelIndex].engineForce = value;\r\n  }\r\n  /**\r\n   * Set the braking force of a wheel\r\n   */\r\n\r\n\r\n  setBrake(brake, wheelIndex) {\r\n    this.wheelInfos[wheelIndex].brake = brake;\r\n  }\r\n  /**\r\n   * Add the vehicle including its constraints to the world.\r\n   */\r\n\r\n\r\n  addToWorld(world) {\r\n    world.addBody(this.chassisBody);\r\n    const that = this;\r\n\r\n    this.preStepCallback = () => {\r\n      that.updateVehicle(world.dt);\r\n    };\r\n\r\n    world.addEventListener('preStep', this.preStepCallback);\r\n    this.world = world;\r\n  }\r\n  /**\r\n   * Get one of the wheel axles, world-oriented.\r\n   */\r\n\r\n\r\n  getVehicleAxisWorld(axisIndex, result) {\r\n    result.set(axisIndex === 0 ? 1 : 0, axisIndex === 1 ? 1 : 0, axisIndex === 2 ? 1 : 0);\r\n    this.chassisBody.vectorToWorldFrame(result, result);\r\n  }\r\n\r\n  updateVehicle(timeStep) {\r\n    const wheelInfos = this.wheelInfos;\r\n    const numWheels = wheelInfos.length;\r\n    const chassisBody = this.chassisBody;\r\n\r\n    for (let i = 0; i < numWheels; i++) {\r\n      this.updateWheelTransform(i);\r\n    }\r\n\r\n    this.currentVehicleSpeedKmHour = 3.6 * chassisBody.velocity.length();\r\n    const forwardWorld = new Vec3();\r\n    this.getVehicleAxisWorld(this.indexForwardAxis, forwardWorld);\r\n\r\n    if (forwardWorld.dot(chassisBody.velocity) < 0) {\r\n      this.currentVehicleSpeedKmHour *= -1;\r\n    } // simulate suspension\r\n\r\n\r\n    for (let i = 0; i < numWheels; i++) {\r\n      this.castRay(wheelInfos[i]);\r\n    }\r\n\r\n    this.updateSuspension(timeStep);\r\n    const impulse = new Vec3();\r\n    const relpos = new Vec3();\r\n\r\n    for (let i = 0; i < numWheels; i++) {\r\n      //apply suspension force\r\n      const wheel = wheelInfos[i];\r\n      let suspensionForce = wheel.suspensionForce;\r\n\r\n      if (suspensionForce > wheel.maxSuspensionForce) {\r\n        suspensionForce = wheel.maxSuspensionForce;\r\n      }\r\n\r\n      wheel.raycastResult.hitNormalWorld.scale(suspensionForce * timeStep, impulse);\r\n      wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, relpos);\r\n      chassisBody.applyImpulse(impulse, relpos);\r\n    }\r\n\r\n    this.updateFriction(timeStep);\r\n    const hitNormalWorldScaledWithProj = new Vec3();\r\n    const fwd = new Vec3();\r\n    const vel = new Vec3();\r\n\r\n    for (let i = 0; i < numWheels; i++) {\r\n      const wheel = wheelInfos[i]; //const relpos = new Vec3();\r\n      //wheel.chassisConnectionPointWorld.vsub(chassisBody.position, relpos);\r\n\r\n      chassisBody.getVelocityAtWorldPoint(wheel.chassisConnectionPointWorld, vel); // Hack to get the rotation in the correct direction\r\n\r\n      let m = 1;\r\n\r\n      switch (this.indexUpAxis) {\r\n        case 1:\r\n          m = -1;\r\n          break;\r\n      }\r\n\r\n      if (wheel.isInContact) {\r\n        this.getVehicleAxisWorld(this.indexForwardAxis, fwd);\r\n        const proj = fwd.dot(wheel.raycastResult.hitNormalWorld);\r\n        wheel.raycastResult.hitNormalWorld.scale(proj, hitNormalWorldScaledWithProj);\r\n        fwd.vsub(hitNormalWorldScaledWithProj, fwd);\r\n        const proj2 = fwd.dot(vel);\r\n        wheel.deltaRotation = m * proj2 * timeStep / wheel.radius;\r\n      }\r\n\r\n      if ((wheel.sliding || !wheel.isInContact) && wheel.engineForce !== 0 && wheel.useCustomSlidingRotationalSpeed) {\r\n        // Apply custom rotation when accelerating and sliding\r\n        wheel.deltaRotation = (wheel.engineForce > 0 ? 1 : -1) * wheel.customSlidingRotationalSpeed * timeStep;\r\n      } // Lock wheels\r\n\r\n\r\n      if (Math.abs(wheel.brake) > Math.abs(wheel.engineForce)) {\r\n        wheel.deltaRotation = 0;\r\n      }\r\n\r\n      wheel.rotation += wheel.deltaRotation; // Use the old value\r\n\r\n      wheel.deltaRotation *= 0.99; // damping of rotation when not in contact\r\n    }\r\n  }\r\n\r\n  updateSuspension(deltaTime) {\r\n    const chassisBody = this.chassisBody;\r\n    const chassisMass = chassisBody.mass;\r\n    const wheelInfos = this.wheelInfos;\r\n    const numWheels = wheelInfos.length;\r\n\r\n    for (let w_it = 0; w_it < numWheels; w_it++) {\r\n      const wheel = wheelInfos[w_it];\r\n\r\n      if (wheel.isInContact) {\r\n        let force; // Spring\r\n\r\n        const susp_length = wheel.suspensionRestLength;\r\n        const current_length = wheel.suspensionLength;\r\n        const length_diff = susp_length - current_length;\r\n        force = wheel.suspensionStiffness * length_diff * wheel.clippedInvContactDotSuspension; // Damper\r\n\r\n        const projected_rel_vel = wheel.suspensionRelativeVelocity;\r\n        let susp_damping;\r\n\r\n        if (projected_rel_vel < 0) {\r\n          susp_damping = wheel.dampingCompression;\r\n        } else {\r\n          susp_damping = wheel.dampingRelaxation;\r\n        }\r\n\r\n        force -= susp_damping * projected_rel_vel;\r\n        wheel.suspensionForce = force * chassisMass;\r\n\r\n        if (wheel.suspensionForce < 0) {\r\n          wheel.suspensionForce = 0;\r\n        }\r\n      } else {\r\n        wheel.suspensionForce = 0;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Remove the vehicle including its constraints from the world.\r\n   */\r\n\r\n\r\n  removeFromWorld(world) {\r\n    this.constraints;\r\n    world.removeBody(this.chassisBody);\r\n    world.removeEventListener('preStep', this.preStepCallback);\r\n    this.world = null;\r\n  }\r\n\r\n  castRay(wheel) {\r\n    const rayvector = castRay_rayvector;\r\n    const target = castRay_target;\r\n    this.updateWheelTransformWorld(wheel);\r\n    const chassisBody = this.chassisBody;\r\n    let depth = -1;\r\n    const raylen = wheel.suspensionRestLength + wheel.radius;\r\n    wheel.directionWorld.scale(raylen, rayvector);\r\n    const source = wheel.chassisConnectionPointWorld;\r\n    source.vadd(rayvector, target);\r\n    const raycastResult = wheel.raycastResult;\r\n    raycastResult.reset(); // Turn off ray collision with the chassis temporarily\r\n\r\n    const oldState = chassisBody.collisionResponse;\r\n    chassisBody.collisionResponse = false; // Cast ray against world\r\n\r\n    this.world.rayTest(source, target, raycastResult);\r\n    chassisBody.collisionResponse = oldState;\r\n    const object = raycastResult.body;\r\n    wheel.raycastResult.groundObject = 0;\r\n\r\n    if (object) {\r\n      depth = raycastResult.distance;\r\n      wheel.raycastResult.hitNormalWorld = raycastResult.hitNormalWorld;\r\n      wheel.isInContact = true;\r\n      const hitDistance = raycastResult.distance;\r\n      wheel.suspensionLength = hitDistance - wheel.radius; // clamp on max suspension travel\r\n\r\n      const minSuspensionLength = wheel.suspensionRestLength - wheel.maxSuspensionTravel;\r\n      const maxSuspensionLength = wheel.suspensionRestLength + wheel.maxSuspensionTravel;\r\n\r\n      if (wheel.suspensionLength < minSuspensionLength) {\r\n        wheel.suspensionLength = minSuspensionLength;\r\n      }\r\n\r\n      if (wheel.suspensionLength > maxSuspensionLength) {\r\n        wheel.suspensionLength = maxSuspensionLength;\r\n        wheel.raycastResult.reset();\r\n      }\r\n\r\n      const denominator = wheel.raycastResult.hitNormalWorld.dot(wheel.directionWorld);\r\n      const chassis_velocity_at_contactPoint = new Vec3();\r\n      chassisBody.getVelocityAtWorldPoint(wheel.raycastResult.hitPointWorld, chassis_velocity_at_contactPoint);\r\n      const projVel = wheel.raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\r\n\r\n      if (denominator >= -0.1) {\r\n        wheel.suspensionRelativeVelocity = 0;\r\n        wheel.clippedInvContactDotSuspension = 1 / 0.1;\r\n      } else {\r\n        const inv = -1 / denominator;\r\n        wheel.suspensionRelativeVelocity = projVel * inv;\r\n        wheel.clippedInvContactDotSuspension = inv;\r\n      }\r\n    } else {\r\n      //put wheel info as in rest position\r\n      wheel.suspensionLength = wheel.suspensionRestLength + 0 * wheel.maxSuspensionTravel;\r\n      wheel.suspensionRelativeVelocity = 0.0;\r\n      wheel.directionWorld.scale(-1, wheel.raycastResult.hitNormalWorld);\r\n      wheel.clippedInvContactDotSuspension = 1.0;\r\n    }\r\n\r\n    return depth;\r\n  }\r\n\r\n  updateWheelTransformWorld(wheel) {\r\n    wheel.isInContact = false;\r\n    const chassisBody = this.chassisBody;\r\n    chassisBody.pointToWorldFrame(wheel.chassisConnectionPointLocal, wheel.chassisConnectionPointWorld);\r\n    chassisBody.vectorToWorldFrame(wheel.directionLocal, wheel.directionWorld);\r\n    chassisBody.vectorToWorldFrame(wheel.axleLocal, wheel.axleWorld);\r\n  }\r\n  /**\r\n   * Update one of the wheel transform.\r\n   * Note when rendering wheels: during each step, wheel transforms are updated BEFORE the chassis; ie. their position becomes invalid after the step. Thus when you render wheels, you must update wheel transforms before rendering them. See raycastVehicle demo for an example.\r\n   * @param wheelIndex The wheel index to update.\r\n   */\r\n\r\n\r\n  updateWheelTransform(wheelIndex) {\r\n    const up = tmpVec4;\r\n    const right = tmpVec5;\r\n    const fwd = tmpVec6;\r\n    const wheel = this.wheelInfos[wheelIndex];\r\n    this.updateWheelTransformWorld(wheel);\r\n    wheel.directionLocal.scale(-1, up);\r\n    right.copy(wheel.axleLocal);\r\n    up.cross(right, fwd);\r\n    fwd.normalize();\r\n    right.normalize(); // Rotate around steering over the wheelAxle\r\n\r\n    const steering = wheel.steering;\r\n    const steeringOrn = new Quaternion();\r\n    steeringOrn.setFromAxisAngle(up, steering);\r\n    const rotatingOrn = new Quaternion();\r\n    rotatingOrn.setFromAxisAngle(right, wheel.rotation); // World rotation of the wheel\r\n\r\n    const q = wheel.worldTransform.quaternion;\r\n    this.chassisBody.quaternion.mult(steeringOrn, q);\r\n    q.mult(rotatingOrn, q);\r\n    q.normalize(); // world position of the wheel\r\n\r\n    const p = wheel.worldTransform.position;\r\n    p.copy(wheel.directionWorld);\r\n    p.scale(wheel.suspensionLength, p);\r\n    p.vadd(wheel.chassisConnectionPointWorld, p);\r\n  }\r\n  /**\r\n   * Get the world transform of one of the wheels\r\n   */\r\n\r\n\r\n  getWheelTransformWorld(wheelIndex) {\r\n    return this.wheelInfos[wheelIndex].worldTransform;\r\n  }\r\n\r\n  updateFriction(timeStep) {\r\n    const surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj; //calculate the impulse, so that the wheels don't move sidewards\r\n\r\n    const wheelInfos = this.wheelInfos;\r\n    const numWheels = wheelInfos.length;\r\n    const chassisBody = this.chassisBody;\r\n    const forwardWS = updateFriction_forwardWS;\r\n    const axle = updateFriction_axle;\r\n    this.numWheelsOnGround = 0;\r\n\r\n    for (let i = 0; i < numWheels; i++) {\r\n      const wheel = wheelInfos[i];\r\n      const groundObject = wheel.raycastResult.body;\r\n\r\n      if (groundObject) {\r\n        this.numWheelsOnGround++;\r\n      }\r\n\r\n      wheel.sideImpulse = 0;\r\n      wheel.forwardImpulse = 0;\r\n\r\n      if (!forwardWS[i]) {\r\n        forwardWS[i] = new Vec3();\r\n      }\r\n\r\n      if (!axle[i]) {\r\n        axle[i] = new Vec3();\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < numWheels; i++) {\r\n      const wheel = wheelInfos[i];\r\n      const groundObject = wheel.raycastResult.body;\r\n\r\n      if (groundObject) {\r\n        const axlei = axle[i];\r\n        const wheelTrans = this.getWheelTransformWorld(i); // Get world axle\r\n\r\n        wheelTrans.vectorToWorldFrame(directions[this.indexRightAxis], axlei);\r\n        const surfNormalWS = wheel.raycastResult.hitNormalWorld;\r\n        const proj = axlei.dot(surfNormalWS);\r\n        surfNormalWS.scale(proj, surfNormalWS_scaled_proj);\r\n        axlei.vsub(surfNormalWS_scaled_proj, axlei);\r\n        axlei.normalize();\r\n        surfNormalWS.cross(axlei, forwardWS[i]);\r\n        forwardWS[i].normalize();\r\n        wheel.sideImpulse = resolveSingleBilateral(chassisBody, wheel.raycastResult.hitPointWorld, groundObject, wheel.raycastResult.hitPointWorld, axlei);\r\n        wheel.sideImpulse *= sideFrictionStiffness2;\r\n      }\r\n    }\r\n\r\n    const sideFactor = 1;\r\n    const fwdFactor = 0.5;\r\n    this.sliding = false;\r\n\r\n    for (let i = 0; i < numWheels; i++) {\r\n      const wheel = wheelInfos[i];\r\n      const groundObject = wheel.raycastResult.body;\r\n      let rollingFriction = 0;\r\n      wheel.slipInfo = 1;\r\n\r\n      if (groundObject) {\r\n        const defaultRollingFrictionImpulse = 0;\r\n        const maxImpulse = wheel.brake ? wheel.brake : defaultRollingFrictionImpulse; // btWheelContactPoint contactPt(chassisBody,groundObject,wheelInfraycastInfo.hitPointWorld,forwardWS[wheel],maxImpulse);\r\n        // rollingFriction = calcRollingFriction(contactPt);\r\n\r\n        rollingFriction = calcRollingFriction(chassisBody, groundObject, wheel.raycastResult.hitPointWorld, forwardWS[i], maxImpulse);\r\n        rollingFriction += wheel.engineForce * timeStep; // rollingFriction = 0;\r\n\r\n        const factor = maxImpulse / rollingFriction;\r\n        wheel.slipInfo *= factor;\r\n      } //switch between active rolling (throttle), braking and non-active rolling friction (nthrottle/break)\r\n\r\n\r\n      wheel.forwardImpulse = 0;\r\n      wheel.skidInfo = 1;\r\n\r\n      if (groundObject) {\r\n        wheel.skidInfo = 1;\r\n        const maximp = wheel.suspensionForce * timeStep * wheel.frictionSlip;\r\n        const maximpSide = maximp;\r\n        const maximpSquared = maximp * maximpSide;\r\n        wheel.forwardImpulse = rollingFriction; //wheelInfo.engineForce* timeStep;\r\n\r\n        const x = wheel.forwardImpulse * fwdFactor / wheel.forwardAcceleration;\r\n        const y = wheel.sideImpulse * sideFactor / wheel.sideAcceleration;\r\n        const impulseSquared = x * x + y * y;\r\n        wheel.sliding = false;\r\n\r\n        if (impulseSquared > maximpSquared) {\r\n          this.sliding = true;\r\n          wheel.sliding = true;\r\n          const factor = maximp / Math.sqrt(impulseSquared);\r\n          wheel.skidInfo *= factor;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.sliding) {\r\n      for (let i = 0; i < numWheels; i++) {\r\n        const wheel = wheelInfos[i];\r\n\r\n        if (wheel.sideImpulse !== 0) {\r\n          if (wheel.skidInfo < 1) {\r\n            wheel.forwardImpulse *= wheel.skidInfo;\r\n            wheel.sideImpulse *= wheel.skidInfo;\r\n          }\r\n        }\r\n      }\r\n    } // apply the impulses\r\n\r\n\r\n    for (let i = 0; i < numWheels; i++) {\r\n      const wheel = wheelInfos[i];\r\n      const rel_pos = new Vec3();\r\n      wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, rel_pos); // cannons applyimpulse is using world coord for the position\r\n      //rel_pos.copy(wheel.raycastResult.hitPointWorld);\r\n\r\n      if (wheel.forwardImpulse !== 0) {\r\n        const impulse = new Vec3();\r\n        forwardWS[i].scale(wheel.forwardImpulse, impulse);\r\n        chassisBody.applyImpulse(impulse, rel_pos);\r\n      }\r\n\r\n      if (wheel.sideImpulse !== 0) {\r\n        const groundObject = wheel.raycastResult.body;\r\n        const rel_pos2 = new Vec3();\r\n        wheel.raycastResult.hitPointWorld.vsub(groundObject.position, rel_pos2); //rel_pos2.copy(wheel.raycastResult.hitPointWorld);\r\n\r\n        const sideImp = new Vec3();\r\n        axle[i].scale(wheel.sideImpulse, sideImp); // Scale the relative position in the up direction with rollInfluence.\r\n        // If rollInfluence is 1, the impulse will be applied on the hitPoint (easy to roll over), if it is zero it will be applied in the same plane as the center of mass (not easy to roll over).\r\n\r\n        chassisBody.vectorToLocalFrame(rel_pos, rel_pos);\r\n        rel_pos['xyz'[this.indexUpAxis]] *= wheel.rollInfluence;\r\n        chassisBody.vectorToWorldFrame(rel_pos, rel_pos);\r\n        chassisBody.applyImpulse(sideImp, rel_pos); //apply friction impulse on the ground\r\n\r\n        sideImp.scale(-1, sideImp);\r\n        groundObject.applyImpulse(sideImp, rel_pos2);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\nnew Vec3();\r\nnew Vec3();\r\nnew Vec3();\r\nconst tmpVec4 = new Vec3();\r\nconst tmpVec5 = new Vec3();\r\nconst tmpVec6 = new Vec3();\r\nnew Ray();\r\nnew Vec3();\r\nconst castRay_rayvector = new Vec3();\r\nconst castRay_target = new Vec3();\r\nconst directions = [new Vec3(1, 0, 0), new Vec3(0, 1, 0), new Vec3(0, 0, 1)];\r\nconst updateFriction_surfNormalWS_scaled_proj = new Vec3();\r\nconst updateFriction_axle = [];\r\nconst updateFriction_forwardWS = [];\r\nconst sideFrictionStiffness2 = 1;\r\nconst calcRollingFriction_vel1 = new Vec3();\r\nconst calcRollingFriction_vel2 = new Vec3();\r\nconst calcRollingFriction_vel = new Vec3();\r\n\r\nfunction calcRollingFriction(body0, body1, frictionPosWorld, frictionDirectionWorld, maxImpulse) {\r\n  let j1 = 0;\r\n  const contactPosWorld = frictionPosWorld; // const rel_pos1 = new Vec3();\r\n  // const rel_pos2 = new Vec3();\r\n\r\n  const vel1 = calcRollingFriction_vel1;\r\n  const vel2 = calcRollingFriction_vel2;\r\n  const vel = calcRollingFriction_vel; // contactPosWorld.vsub(body0.position, rel_pos1);\r\n  // contactPosWorld.vsub(body1.position, rel_pos2);\r\n\r\n  body0.getVelocityAtWorldPoint(contactPosWorld, vel1);\r\n  body1.getVelocityAtWorldPoint(contactPosWorld, vel2);\r\n  vel1.vsub(vel2, vel);\r\n  const vrel = frictionDirectionWorld.dot(vel);\r\n  const denom0 = computeImpulseDenominator(body0, frictionPosWorld, frictionDirectionWorld);\r\n  const denom1 = computeImpulseDenominator(body1, frictionPosWorld, frictionDirectionWorld);\r\n  const relaxation = 1;\r\n  const jacDiagABInv = relaxation / (denom0 + denom1); // calculate j that moves us to zero relative velocity\r\n\r\n  j1 = -vrel * jacDiagABInv;\r\n\r\n  if (maxImpulse < j1) {\r\n    j1 = maxImpulse;\r\n  }\r\n\r\n  if (j1 < -maxImpulse) {\r\n    j1 = -maxImpulse;\r\n  }\r\n\r\n  return j1;\r\n}\r\n\r\nconst computeImpulseDenominator_r0 = new Vec3();\r\nconst computeImpulseDenominator_c0 = new Vec3();\r\nconst computeImpulseDenominator_vec = new Vec3();\r\nconst computeImpulseDenominator_m = new Vec3();\r\n\r\nfunction computeImpulseDenominator(body, pos, normal) {\r\n  const r0 = computeImpulseDenominator_r0;\r\n  const c0 = computeImpulseDenominator_c0;\r\n  const vec = computeImpulseDenominator_vec;\r\n  const m = computeImpulseDenominator_m;\r\n  pos.vsub(body.position, r0);\r\n  r0.cross(normal, c0);\r\n  body.invInertiaWorld.vmult(c0, m);\r\n  m.cross(r0, vec);\r\n  return body.invMass + normal.dot(vec);\r\n}\r\n\r\nconst resolveSingleBilateral_vel1 = new Vec3();\r\nconst resolveSingleBilateral_vel2 = new Vec3();\r\nconst resolveSingleBilateral_vel = new Vec3(); // bilateral constraint between two dynamic objects\r\n\r\nfunction resolveSingleBilateral(body1, pos1, body2, pos2, normal) {\r\n  const normalLenSqr = normal.lengthSquared();\r\n\r\n  if (normalLenSqr > 1.1) {\r\n    return 0; // no impulse\r\n  } // const rel_pos1 = new Vec3();\r\n  // const rel_pos2 = new Vec3();\r\n  // pos1.vsub(body1.position, rel_pos1);\r\n  // pos2.vsub(body2.position, rel_pos2);\r\n\r\n\r\n  const vel1 = resolveSingleBilateral_vel1;\r\n  const vel2 = resolveSingleBilateral_vel2;\r\n  const vel = resolveSingleBilateral_vel;\r\n  body1.getVelocityAtWorldPoint(pos1, vel1);\r\n  body2.getVelocityAtWorldPoint(pos2, vel2);\r\n  vel1.vsub(vel2, vel);\r\n  const rel_vel = normal.dot(vel);\r\n  const contactDamping = 0.2;\r\n  const massTerm = 1 / (body1.invMass + body2.invMass);\r\n  const impulse = -contactDamping * rel_vel * massTerm;\r\n  return impulse;\r\n}\r\n\r\n/**\r\n * Spherical shape\r\n * @example\r\n *     const radius = 1\r\n *     const sphereShape = new CANNON.Sphere(radius)\r\n *     const sphereBody = new CANNON.Body({ mass: 1, shape: sphereShape })\r\n *     world.addBody(sphereBody)\r\n */\r\nclass Sphere extends Shape {\r\n  /**\r\n   * The radius of the sphere.\r\n   */\r\n\r\n  /**\r\n   *\r\n   * @param radius The radius of the sphere, a non-negative number.\r\n   */\r\n  constructor(radius) {\r\n    super({\r\n      type: Shape.types.SPHERE\r\n    });\r\n    this.radius = radius !== undefined ? radius : 1.0;\r\n\r\n    if (this.radius < 0) {\r\n      throw new Error('The sphere radius cannot be negative.');\r\n    }\r\n\r\n    this.updateBoundingSphereRadius();\r\n  }\r\n  /** calculateLocalInertia */\r\n\r\n\r\n  calculateLocalInertia(mass, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    const I = 2.0 * mass * this.radius * this.radius / 5.0;\r\n    target.x = I;\r\n    target.y = I;\r\n    target.z = I;\r\n    return target;\r\n  }\r\n  /** volume */\r\n\r\n\r\n  volume() {\r\n    return 4.0 * Math.PI * Math.pow(this.radius, 3) / 3.0;\r\n  }\r\n\r\n  updateBoundingSphereRadius() {\r\n    this.boundingSphereRadius = this.radius;\r\n  }\r\n\r\n  calculateWorldAABB(pos, quat, min, max) {\r\n    const r = this.radius;\r\n    const axes = ['x', 'y', 'z'];\r\n\r\n    for (let i = 0; i < axes.length; i++) {\r\n      const ax = axes[i];\r\n      min[ax] = pos[ax] - r;\r\n      max[ax] = pos[ax] + r;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Simple vehicle helper class with spherical rigid body wheels.\r\n */\r\nclass RigidVehicle {\r\n  /**\r\n   * The bodies of the wheels.\r\n   */\r\n\r\n  /**\r\n   * The chassis body.\r\n   */\r\n\r\n  /**\r\n   * The constraints.\r\n   */\r\n\r\n  /**\r\n   * The wheel axes.\r\n   */\r\n\r\n  /**\r\n   * The wheel forces.\r\n   */\r\n  constructor(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    this.wheelBodies = [];\r\n    this.coordinateSystem = typeof options.coordinateSystem !== 'undefined' ? options.coordinateSystem.clone() : new Vec3(1, 2, 3);\r\n\r\n    if (options.chassisBody) {\r\n      this.chassisBody = options.chassisBody;\r\n    } else {\r\n      // No chassis body given. Create it!\r\n      this.chassisBody = new Body({\r\n        mass: 1,\r\n        shape: new Box(new Vec3(5, 0.5, 2))\r\n      });\r\n    }\r\n\r\n    this.constraints = [];\r\n    this.wheelAxes = [];\r\n    this.wheelForces = [];\r\n  }\r\n  /**\r\n   * Add a wheel\r\n   */\r\n\r\n\r\n  addWheel(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    let wheelBody;\r\n\r\n    if (options.body) {\r\n      wheelBody = options.body;\r\n    } else {\r\n      // No wheel body given. Create it!\r\n      wheelBody = new Body({\r\n        mass: 1,\r\n        shape: new Sphere(1.2)\r\n      });\r\n    }\r\n\r\n    this.wheelBodies.push(wheelBody);\r\n    this.wheelForces.push(0); // Position constrain wheels\r\n\r\n    const position = typeof options.position !== 'undefined' ? options.position.clone() : new Vec3(); // Set position locally to the chassis\r\n\r\n    const worldPosition = new Vec3();\r\n    this.chassisBody.pointToWorldFrame(position, worldPosition);\r\n    wheelBody.position.set(worldPosition.x, worldPosition.y, worldPosition.z); // Constrain wheel\r\n\r\n    const axis = typeof options.axis !== 'undefined' ? options.axis.clone() : new Vec3(0, 0, 1);\r\n    this.wheelAxes.push(axis);\r\n    const hingeConstraint = new HingeConstraint(this.chassisBody, wheelBody, {\r\n      pivotA: position,\r\n      axisA: axis,\r\n      pivotB: Vec3.ZERO,\r\n      axisB: axis,\r\n      collideConnected: false\r\n    });\r\n    this.constraints.push(hingeConstraint);\r\n    return this.wheelBodies.length - 1;\r\n  }\r\n  /**\r\n   * Set the steering value of a wheel.\r\n   * @todo check coordinateSystem\r\n   */\r\n\r\n\r\n  setSteeringValue(value, wheelIndex) {\r\n    // Set angle of the hinge axis\r\n    const axis = this.wheelAxes[wheelIndex];\r\n    const c = Math.cos(value);\r\n    const s = Math.sin(value);\r\n    const x = axis.x;\r\n    const z = axis.z;\r\n    this.constraints[wheelIndex].axisA.set(-c * x + s * z, 0, s * x + c * z);\r\n  }\r\n  /**\r\n   * Set the target rotational speed of the hinge constraint.\r\n   */\r\n\r\n\r\n  setMotorSpeed(value, wheelIndex) {\r\n    const hingeConstraint = this.constraints[wheelIndex];\r\n    hingeConstraint.enableMotor();\r\n    hingeConstraint.motorTargetVelocity = value;\r\n  }\r\n  /**\r\n   * Set the target rotational speed of the hinge constraint.\r\n   */\r\n\r\n\r\n  disableMotor(wheelIndex) {\r\n    const hingeConstraint = this.constraints[wheelIndex];\r\n    hingeConstraint.disableMotor();\r\n  }\r\n  /**\r\n   * Set the wheel force to apply on one of the wheels each time step\r\n   */\r\n\r\n\r\n  setWheelForce(value, wheelIndex) {\r\n    this.wheelForces[wheelIndex] = value;\r\n  }\r\n  /**\r\n   * Apply a torque on one of the wheels.\r\n   */\r\n\r\n\r\n  applyWheelForce(value, wheelIndex) {\r\n    const axis = this.wheelAxes[wheelIndex];\r\n    const wheelBody = this.wheelBodies[wheelIndex];\r\n    const bodyTorque = wheelBody.torque;\r\n    axis.scale(value, torque);\r\n    wheelBody.vectorToWorldFrame(torque, torque);\r\n    bodyTorque.vadd(torque, bodyTorque);\r\n  }\r\n  /**\r\n   * Add the vehicle including its constraints to the world.\r\n   */\r\n\r\n\r\n  addToWorld(world) {\r\n    const constraints = this.constraints;\r\n    const bodies = this.wheelBodies.concat([this.chassisBody]);\r\n\r\n    for (let i = 0; i < bodies.length; i++) {\r\n      world.addBody(bodies[i]);\r\n    }\r\n\r\n    for (let i = 0; i < constraints.length; i++) {\r\n      world.addConstraint(constraints[i]);\r\n    }\r\n\r\n    world.addEventListener('preStep', this._update.bind(this));\r\n  }\r\n\r\n  _update() {\r\n    const wheelForces = this.wheelForces;\r\n\r\n    for (let i = 0; i < wheelForces.length; i++) {\r\n      this.applyWheelForce(wheelForces[i], i);\r\n    }\r\n  }\r\n  /**\r\n   * Remove the vehicle including its constraints from the world.\r\n   */\r\n\r\n\r\n  removeFromWorld(world) {\r\n    const constraints = this.constraints;\r\n    const bodies = this.wheelBodies.concat([this.chassisBody]);\r\n\r\n    for (let i = 0; i < bodies.length; i++) {\r\n      world.removeBody(bodies[i]);\r\n    }\r\n\r\n    for (let i = 0; i < constraints.length; i++) {\r\n      world.removeConstraint(constraints[i]);\r\n    }\r\n  }\r\n  /**\r\n   * Get current rotational velocity of a wheel\r\n   */\r\n\r\n\r\n  getWheelSpeed(wheelIndex) {\r\n    const axis = this.wheelAxes[wheelIndex];\r\n    const wheelBody = this.wheelBodies[wheelIndex];\r\n    const w = wheelBody.angularVelocity;\r\n    this.chassisBody.vectorToWorldFrame(axis, worldAxis);\r\n    return w.dot(worldAxis);\r\n  }\r\n\r\n}\r\nconst torque = new Vec3();\r\nconst worldAxis = new Vec3();\r\n\r\n/**\r\n * Smoothed-particle hydrodynamics system\r\n * @todo Make parameters customizable in the constructor\r\n */\r\nclass SPHSystem {\r\n  /**\r\n   * The particles array.\r\n   */\r\n\r\n  /**\r\n   * Density of the system (kg/m3).\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * Distance below which two particles are considered to be neighbors.\r\n   * It should be adjusted so there are about 15-20 neighbor particles within this radius.\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * Viscosity of the system.\r\n   * @default 0.01\r\n   */\r\n\r\n  /**\r\n   * @default 0.000001\r\n   */\r\n  constructor() {\r\n    this.particles = [];\r\n    this.density = 1;\r\n    this.smoothingRadius = 1;\r\n    this.speedOfSound = 1;\r\n    this.viscosity = 0.01;\r\n    this.eps = 0.000001; // Stuff Computed per particle\r\n\r\n    this.pressures = [];\r\n    this.densities = [];\r\n    this.neighbors = [];\r\n  }\r\n  /**\r\n   * Add a particle to the system.\r\n   */\r\n\r\n\r\n  add(particle) {\r\n    this.particles.push(particle);\r\n\r\n    if (this.neighbors.length < this.particles.length) {\r\n      this.neighbors.push([]);\r\n    }\r\n  }\r\n  /**\r\n   * Remove a particle from the system.\r\n   */\r\n\r\n\r\n  remove(particle) {\r\n    const idx = this.particles.indexOf(particle);\r\n\r\n    if (idx !== -1) {\r\n      this.particles.splice(idx, 1);\r\n\r\n      if (this.neighbors.length > this.particles.length) {\r\n        this.neighbors.pop();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Get neighbors within smoothing volume, save in the array neighbors\r\n   */\r\n\r\n\r\n  getNeighbors(particle, neighbors) {\r\n    const N = this.particles.length;\r\n    const id = particle.id;\r\n    const R2 = this.smoothingRadius * this.smoothingRadius;\r\n    const dist = SPHSystem_getNeighbors_dist;\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      const p = this.particles[i];\r\n      p.position.vsub(particle.position, dist);\r\n\r\n      if (id !== p.id && dist.lengthSquared() < R2) {\r\n        neighbors.push(p);\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    const N = this.particles.length;\r\n    const dist = SPHSystem_update_dist;\r\n    const cs = this.speedOfSound;\r\n    const eps = this.eps;\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      const p = this.particles[i]; // Current particle\r\n\r\n      const neighbors = this.neighbors[i]; // Get neighbors\r\n\r\n      neighbors.length = 0;\r\n      this.getNeighbors(p, neighbors);\r\n      neighbors.push(this.particles[i]); // Add current too\r\n\r\n      const numNeighbors = neighbors.length; // Accumulate density for the particle\r\n\r\n      let sum = 0.0;\r\n\r\n      for (let j = 0; j !== numNeighbors; j++) {\r\n        //printf(\"Current particle has position %f %f %f\\n\",objects[id].pos.x(),objects[id].pos.y(),objects[id].pos.z());\r\n        p.position.vsub(neighbors[j].position, dist);\r\n        const len = dist.length();\r\n        const weight = this.w(len);\r\n        sum += neighbors[j].mass * weight;\r\n      } // Save\r\n\r\n\r\n      this.densities[i] = sum;\r\n      this.pressures[i] = cs * cs * (this.densities[i] - this.density);\r\n    } // Add forces\r\n    // Sum to these accelerations\r\n\r\n\r\n    const a_pressure = SPHSystem_update_a_pressure;\r\n    const a_visc = SPHSystem_update_a_visc;\r\n    const gradW = SPHSystem_update_gradW;\r\n    const r_vec = SPHSystem_update_r_vec;\r\n    const u = SPHSystem_update_u;\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      const particle = this.particles[i];\r\n      a_pressure.set(0, 0, 0);\r\n      a_visc.set(0, 0, 0); // Init vars\r\n\r\n      let Pij;\r\n      let nabla;\r\n\r\n      const neighbors = this.neighbors[i];\r\n      const numNeighbors = neighbors.length; //printf(\"Neighbors: \");\r\n\r\n      for (let j = 0; j !== numNeighbors; j++) {\r\n        const neighbor = neighbors[j]; //printf(\"%d \",nj);\r\n        // Get r once for all..\r\n\r\n        particle.position.vsub(neighbor.position, r_vec);\r\n        const r = r_vec.length(); // Pressure contribution\r\n\r\n        Pij = -neighbor.mass * (this.pressures[i] / (this.densities[i] * this.densities[i] + eps) + this.pressures[j] / (this.densities[j] * this.densities[j] + eps));\r\n        this.gradw(r_vec, gradW); // Add to pressure acceleration\r\n\r\n        gradW.scale(Pij, gradW);\r\n        a_pressure.vadd(gradW, a_pressure); // Viscosity contribution\r\n\r\n        neighbor.velocity.vsub(particle.velocity, u);\r\n        u.scale(1.0 / (0.0001 + this.densities[i] * this.densities[j]) * this.viscosity * neighbor.mass, u);\r\n        nabla = this.nablaw(r);\r\n        u.scale(nabla, u); // Add to viscosity acceleration\r\n\r\n        a_visc.vadd(u, a_visc);\r\n      } // Calculate force\r\n\r\n\r\n      a_visc.scale(particle.mass, a_visc);\r\n      a_pressure.scale(particle.mass, a_pressure); // Add force to particles\r\n\r\n      particle.force.vadd(a_visc, particle.force);\r\n      particle.force.vadd(a_pressure, particle.force);\r\n    }\r\n  } // Calculate the weight using the W(r) weightfunction\r\n\r\n\r\n  w(r) {\r\n    // 315\r\n    const h = this.smoothingRadius;\r\n    return 315.0 / (64.0 * Math.PI * h ** 9) * (h * h - r * r) ** 3;\r\n  } // calculate gradient of the weight function\r\n\r\n\r\n  gradw(rVec, resultVec) {\r\n    const r = rVec.length();\r\n    const h = this.smoothingRadius;\r\n    rVec.scale(945.0 / (32.0 * Math.PI * h ** 9) * (h * h - r * r) ** 2, resultVec);\r\n  } // Calculate nabla(W)\r\n\r\n\r\n  nablaw(r) {\r\n    const h = this.smoothingRadius;\r\n    const nabla = 945.0 / (32.0 * Math.PI * h ** 9) * (h * h - r * r) * (7 * r * r - 3 * h * h);\r\n    return nabla;\r\n  }\r\n\r\n}\r\nconst SPHSystem_getNeighbors_dist = new Vec3(); // Temp vectors for calculation\r\n\r\nconst SPHSystem_update_dist = new Vec3(); // Relative velocity\r\n\r\nconst SPHSystem_update_a_pressure = new Vec3();\r\nconst SPHSystem_update_a_visc = new Vec3();\r\nconst SPHSystem_update_gradW = new Vec3();\r\nconst SPHSystem_update_r_vec = new Vec3();\r\nconst SPHSystem_update_u = new Vec3();\r\n\r\n/**\r\n * Cylinder class.\r\n * @example\r\n *     const radiusTop = 0.5\r\n *     const radiusBottom = 0.5\r\n *     const height = 2\r\n *     const numSegments = 12\r\n *     const cylinderShape = new CANNON.Cylinder(radiusTop, radiusBottom, height, numSegments)\r\n *     const cylinderBody = new CANNON.Body({ mass: 1, shape: cylinderShape })\r\n *     world.addBody(cylinderBody)\r\n */\r\n\r\nclass Cylinder extends ConvexPolyhedron {\r\n  /** The radius of the top of the Cylinder. */\r\n\r\n  /** The radius of the bottom of the Cylinder. */\r\n\r\n  /** The height of the Cylinder. */\r\n\r\n  /** The number of segments to build the cylinder out of. */\r\n\r\n  /**\r\n   * @param radiusTop The radius of the top of the Cylinder.\r\n   * @param radiusBottom The radius of the bottom of the Cylinder.\r\n   * @param height The height of the Cylinder.\r\n   * @param numSegments The number of segments to build the cylinder out of.\r\n   */\r\n  constructor(radiusTop, radiusBottom, height, numSegments) {\r\n    if (radiusTop === void 0) {\r\n      radiusTop = 1;\r\n    }\r\n\r\n    if (radiusBottom === void 0) {\r\n      radiusBottom = 1;\r\n    }\r\n\r\n    if (height === void 0) {\r\n      height = 1;\r\n    }\r\n\r\n    if (numSegments === void 0) {\r\n      numSegments = 8;\r\n    }\r\n\r\n    if (radiusTop < 0) {\r\n      throw new Error('The cylinder radiusTop cannot be negative.');\r\n    }\r\n\r\n    if (radiusBottom < 0) {\r\n      throw new Error('The cylinder radiusBottom cannot be negative.');\r\n    }\r\n\r\n    const N = numSegments;\r\n    const vertices = [];\r\n    const axes = [];\r\n    const faces = [];\r\n    const bottomface = [];\r\n    const topface = [];\r\n    const cos = Math.cos;\r\n    const sin = Math.sin; // First bottom point\r\n\r\n    vertices.push(new Vec3(-radiusBottom * sin(0), -height * 0.5, radiusBottom * cos(0)));\r\n    bottomface.push(0); // First top point\r\n\r\n    vertices.push(new Vec3(-radiusTop * sin(0), height * 0.5, radiusTop * cos(0)));\r\n    topface.push(1);\r\n\r\n    for (let i = 0; i < N; i++) {\r\n      const theta = 2 * Math.PI / N * (i + 1);\r\n      const thetaN = 2 * Math.PI / N * (i + 0.5);\r\n\r\n      if (i < N - 1) {\r\n        // Bottom\r\n        vertices.push(new Vec3(-radiusBottom * sin(theta), -height * 0.5, radiusBottom * cos(theta)));\r\n        bottomface.push(2 * i + 2); // Top\r\n\r\n        vertices.push(new Vec3(-radiusTop * sin(theta), height * 0.5, radiusTop * cos(theta)));\r\n        topface.push(2 * i + 3); // Face\r\n\r\n        faces.push([2 * i, 2 * i + 1, 2 * i + 3, 2 * i + 2]);\r\n      } else {\r\n        faces.push([2 * i, 2 * i + 1, 1, 0]); // Connect\r\n      } // Axis: we can cut off half of them if we have even number of segments\r\n\r\n\r\n      if (N % 2 === 1 || i < N / 2) {\r\n        axes.push(new Vec3(-sin(thetaN), 0, cos(thetaN)));\r\n      }\r\n    }\r\n\r\n    faces.push(bottomface);\r\n    axes.push(new Vec3(0, 1, 0)); // Reorder top face\r\n\r\n    const temp = [];\r\n\r\n    for (let i = 0; i < topface.length; i++) {\r\n      temp.push(topface[topface.length - i - 1]);\r\n    }\r\n\r\n    faces.push(temp);\r\n    super({\r\n      vertices,\r\n      faces,\r\n      axes\r\n    });\r\n    this.type = Shape.types.CYLINDER;\r\n    this.radiusTop = radiusTop;\r\n    this.radiusBottom = radiusBottom;\r\n    this.height = height;\r\n    this.numSegments = numSegments;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Particle shape.\r\n * @example\r\n *     const particleShape = new CANNON.Particle()\r\n *     const particleBody = new CANNON.Body({ mass: 1, shape: particleShape })\r\n *     world.addBody(particleBody)\r\n */\r\nclass Particle extends Shape {\r\n  constructor() {\r\n    super({\r\n      type: Shape.types.PARTICLE\r\n    });\r\n  }\r\n  /**\r\n   * calculateLocalInertia\r\n   */\r\n\r\n\r\n  calculateLocalInertia(mass, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    target.set(0, 0, 0);\r\n    return target;\r\n  }\r\n\r\n  volume() {\r\n    return 0;\r\n  }\r\n\r\n  updateBoundingSphereRadius() {\r\n    this.boundingSphereRadius = 0;\r\n  }\r\n\r\n  calculateWorldAABB(pos, quat, min, max) {\r\n    // Get each axis max\r\n    min.copy(pos);\r\n    max.copy(pos);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * A plane, facing in the Z direction. The plane has its surface at z=0 and everything below z=0 is assumed to be solid plane. To make the plane face in some other direction than z, you must put it inside a Body and rotate that body. See the demos.\r\n * @example\r\n *     const planeShape = new CANNON.Plane()\r\n *     const planeBody = new CANNON.Body({ mass: 0, shape:  planeShape })\r\n *     planeBody.quaternion.setFromEuler(-Math.PI / 2, 0, 0) // make it face up\r\n *     world.addBody(planeBody)\r\n */\r\nclass Plane extends Shape {\r\n  /** worldNormal */\r\n\r\n  /** worldNormalNeedsUpdate */\r\n  constructor() {\r\n    super({\r\n      type: Shape.types.PLANE\r\n    }); // World oriented normal\r\n\r\n    this.worldNormal = new Vec3();\r\n    this.worldNormalNeedsUpdate = true;\r\n    this.boundingSphereRadius = Number.MAX_VALUE;\r\n  }\r\n  /** computeWorldNormal */\r\n\r\n\r\n  computeWorldNormal(quat) {\r\n    const n = this.worldNormal;\r\n    n.set(0, 0, 1);\r\n    quat.vmult(n, n);\r\n    this.worldNormalNeedsUpdate = false;\r\n  }\r\n\r\n  calculateLocalInertia(mass, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  volume() {\r\n    return (// The plane is infinite...\r\n      Number.MAX_VALUE\r\n    );\r\n  }\r\n\r\n  calculateWorldAABB(pos, quat, min, max) {\r\n    // The plane AABB is infinite, except if the normal is pointing along any axis\r\n    tempNormal.set(0, 0, 1); // Default plane normal is z\r\n\r\n    quat.vmult(tempNormal, tempNormal);\r\n    const maxVal = Number.MAX_VALUE;\r\n    min.set(-maxVal, -maxVal, -maxVal);\r\n    max.set(maxVal, maxVal, maxVal);\r\n\r\n    if (tempNormal.x === 1) {\r\n      max.x = pos.x;\r\n    } else if (tempNormal.x === -1) {\r\n      min.x = pos.x;\r\n    }\r\n\r\n    if (tempNormal.y === 1) {\r\n      max.y = pos.y;\r\n    } else if (tempNormal.y === -1) {\r\n      min.y = pos.y;\r\n    }\r\n\r\n    if (tempNormal.z === 1) {\r\n      max.z = pos.z;\r\n    } else if (tempNormal.z === -1) {\r\n      min.z = pos.z;\r\n    }\r\n  }\r\n\r\n  updateBoundingSphereRadius() {\r\n    this.boundingSphereRadius = Number.MAX_VALUE;\r\n  }\r\n\r\n}\r\nconst tempNormal = new Vec3();\r\n\r\n/**\r\n * Heightfield shape class. Height data is given as an array. These data points are spread out evenly with a given distance.\r\n * @todo Should be possible to use along all axes, not just y\r\n * @todo should be possible to scale along all axes\r\n * @todo Refactor elementSize to elementSizeX and elementSizeY\r\n *\r\n * @example\r\n *     // Generate some height data (y-values).\r\n *     const data = []\r\n *     for (let i = 0; i < 1000; i++) {\r\n *         const y = 0.5 * Math.cos(0.2 * i)\r\n *         data.push(y)\r\n *     }\r\n *\r\n *     // Create the heightfield shape\r\n *     const heightfieldShape = new CANNON.Heightfield(data, {\r\n *         elementSize: 1 // Distance between the data points in X and Y directions\r\n *     })\r\n *     const heightfieldBody = new CANNON.Body({ shape: heightfieldShape })\r\n *     world.addBody(heightfieldBody)\r\n */\r\nclass Heightfield extends Shape {\r\n  /**\r\n   * An array of numbers, or height values, that are spread out along the x axis.\r\n   */\r\n\r\n  /**\r\n   * Max value of the data points in the data array.\r\n   */\r\n\r\n  /**\r\n   * Minimum value of the data points in the data array.\r\n   */\r\n\r\n  /**\r\n   * World spacing between the data points in X and Y direction.\r\n   * @todo elementSizeX and Y\r\n   * @default 1\r\n   */\r\n\r\n  /**\r\n   * @default true\r\n   */\r\n\r\n  /**\r\n   * @param data An array of numbers, or height values, that are spread out along the x axis.\r\n   */\r\n  constructor(data, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    options = Utils.defaults(options, {\r\n      maxValue: null,\r\n      minValue: null,\r\n      elementSize: 1\r\n    });\r\n    super({\r\n      type: Shape.types.HEIGHTFIELD\r\n    });\r\n    this.data = data;\r\n    this.maxValue = options.maxValue;\r\n    this.minValue = options.minValue;\r\n    this.elementSize = options.elementSize;\r\n\r\n    if (options.minValue === null) {\r\n      this.updateMinValue();\r\n    }\r\n\r\n    if (options.maxValue === null) {\r\n      this.updateMaxValue();\r\n    }\r\n\r\n    this.cacheEnabled = true;\r\n    this.pillarConvex = new ConvexPolyhedron();\r\n    this.pillarOffset = new Vec3();\r\n    this.updateBoundingSphereRadius(); // \"i_j_isUpper\" => { convex: ..., offset: ... }\r\n    // for example:\r\n    // _cachedPillars[\"0_2_1\"]\r\n\r\n    this._cachedPillars = {};\r\n  }\r\n  /**\r\n   * Call whenever you change the data array.\r\n   */\r\n\r\n\r\n  update() {\r\n    this._cachedPillars = {};\r\n  }\r\n  /**\r\n   * Update the `minValue` property\r\n   */\r\n\r\n\r\n  updateMinValue() {\r\n    const data = this.data;\r\n    let minValue = data[0][0];\r\n\r\n    for (let i = 0; i !== data.length; i++) {\r\n      for (let j = 0; j !== data[i].length; j++) {\r\n        const v = data[i][j];\r\n\r\n        if (v < minValue) {\r\n          minValue = v;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.minValue = minValue;\r\n  }\r\n  /**\r\n   * Update the `maxValue` property\r\n   */\r\n\r\n\r\n  updateMaxValue() {\r\n    const data = this.data;\r\n    let maxValue = data[0][0];\r\n\r\n    for (let i = 0; i !== data.length; i++) {\r\n      for (let j = 0; j !== data[i].length; j++) {\r\n        const v = data[i][j];\r\n\r\n        if (v > maxValue) {\r\n          maxValue = v;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.maxValue = maxValue;\r\n  }\r\n  /**\r\n   * Set the height value at an index. Don't forget to update maxValue and minValue after you're done.\r\n   */\r\n\r\n\r\n  setHeightValueAtIndex(xi, yi, value) {\r\n    const data = this.data;\r\n    data[xi][yi] = value; // Invalidate cache\r\n\r\n    this.clearCachedConvexTrianglePillar(xi, yi, false);\r\n\r\n    if (xi > 0) {\r\n      this.clearCachedConvexTrianglePillar(xi - 1, yi, true);\r\n      this.clearCachedConvexTrianglePillar(xi - 1, yi, false);\r\n    }\r\n\r\n    if (yi > 0) {\r\n      this.clearCachedConvexTrianglePillar(xi, yi - 1, true);\r\n      this.clearCachedConvexTrianglePillar(xi, yi - 1, false);\r\n    }\r\n\r\n    if (yi > 0 && xi > 0) {\r\n      this.clearCachedConvexTrianglePillar(xi - 1, yi - 1, true);\r\n    }\r\n  }\r\n  /**\r\n   * Get max/min in a rectangle in the matrix data\r\n   * @param result An array to store the results in.\r\n   * @return The result array, if it was passed in. Minimum will be at position 0 and max at 1.\r\n   */\r\n\r\n\r\n  getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, result) {\r\n    if (result === void 0) {\r\n      result = [];\r\n    }\r\n\r\n    // Get max and min of the data\r\n    const data = this.data; // Set first value\r\n\r\n    let max = this.minValue;\r\n\r\n    for (let i = iMinX; i <= iMaxX; i++) {\r\n      for (let j = iMinY; j <= iMaxY; j++) {\r\n        const height = data[i][j];\r\n\r\n        if (height > max) {\r\n          max = height;\r\n        }\r\n      }\r\n    }\r\n\r\n    result[0] = this.minValue;\r\n    result[1] = max;\r\n  }\r\n  /**\r\n   * Get the index of a local position on the heightfield. The indexes indicate the rectangles, so if your terrain is made of N x N height data points, you will have rectangle indexes ranging from 0 to N-1.\r\n   * @param result Two-element array\r\n   * @param clamp If the position should be clamped to the heightfield edge.\r\n   */\r\n\r\n\r\n  getIndexOfPosition(x, y, result, clamp) {\r\n    // Get the index of the data points to test against\r\n    const w = this.elementSize;\r\n    const data = this.data;\r\n    let xi = Math.floor(x / w);\r\n    let yi = Math.floor(y / w);\r\n    result[0] = xi;\r\n    result[1] = yi;\r\n\r\n    if (clamp) {\r\n      // Clamp index to edges\r\n      if (xi < 0) {\r\n        xi = 0;\r\n      }\r\n\r\n      if (yi < 0) {\r\n        yi = 0;\r\n      }\r\n\r\n      if (xi >= data.length - 1) {\r\n        xi = data.length - 1;\r\n      }\r\n\r\n      if (yi >= data[0].length - 1) {\r\n        yi = data[0].length - 1;\r\n      }\r\n    } // Bail out if we are out of the terrain\r\n\r\n\r\n    if (xi < 0 || yi < 0 || xi >= data.length - 1 || yi >= data[0].length - 1) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getTriangleAt(x, y, edgeClamp, a, b, c) {\r\n    const idx = getHeightAt_idx;\r\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\r\n    let xi = idx[0];\r\n    let yi = idx[1];\r\n    const data = this.data;\r\n\r\n    if (edgeClamp) {\r\n      xi = Math.min(data.length - 2, Math.max(0, xi));\r\n      yi = Math.min(data[0].length - 2, Math.max(0, yi));\r\n    }\r\n\r\n    const elementSize = this.elementSize;\r\n    const lowerDist2 = (x / elementSize - xi) ** 2 + (y / elementSize - yi) ** 2;\r\n    const upperDist2 = (x / elementSize - (xi + 1)) ** 2 + (y / elementSize - (yi + 1)) ** 2;\r\n    const upper = lowerDist2 > upperDist2;\r\n    this.getTriangle(xi, yi, upper, a, b, c);\r\n    return upper;\r\n  }\r\n\r\n  getNormalAt(x, y, edgeClamp, result) {\r\n    const a = getNormalAt_a;\r\n    const b = getNormalAt_b;\r\n    const c = getNormalAt_c;\r\n    const e0 = getNormalAt_e0;\r\n    const e1 = getNormalAt_e1;\r\n    this.getTriangleAt(x, y, edgeClamp, a, b, c);\r\n    b.vsub(a, e0);\r\n    c.vsub(a, e1);\r\n    e0.cross(e1, result);\r\n    result.normalize();\r\n  }\r\n  /**\r\n   * Get an AABB of a square in the heightfield\r\n   * @param xi\r\n   * @param yi\r\n   * @param result\r\n   */\r\n\r\n\r\n  getAabbAtIndex(xi, yi, _ref) {\r\n    let {\r\n      lowerBound,\r\n      upperBound\r\n    } = _ref;\r\n    const data = this.data;\r\n    const elementSize = this.elementSize;\r\n    lowerBound.set(xi * elementSize, yi * elementSize, data[xi][yi]);\r\n    upperBound.set((xi + 1) * elementSize, (yi + 1) * elementSize, data[xi + 1][yi + 1]);\r\n  }\r\n  /**\r\n   * Get the height in the heightfield at a given position\r\n   */\r\n\r\n\r\n  getHeightAt(x, y, edgeClamp) {\r\n    const data = this.data;\r\n    const a = getHeightAt_a;\r\n    const b = getHeightAt_b;\r\n    const c = getHeightAt_c;\r\n    const idx = getHeightAt_idx;\r\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\r\n    let xi = idx[0];\r\n    let yi = idx[1];\r\n\r\n    if (edgeClamp) {\r\n      xi = Math.min(data.length - 2, Math.max(0, xi));\r\n      yi = Math.min(data[0].length - 2, Math.max(0, yi));\r\n    }\r\n\r\n    const upper = this.getTriangleAt(x, y, edgeClamp, a, b, c);\r\n    barycentricWeights(x, y, a.x, a.y, b.x, b.y, c.x, c.y, getHeightAt_weights);\r\n    const w = getHeightAt_weights;\r\n\r\n    if (upper) {\r\n      // Top triangle verts\r\n      return data[xi + 1][yi + 1] * w.x + data[xi][yi + 1] * w.y + data[xi + 1][yi] * w.z;\r\n    } else {\r\n      // Top triangle verts\r\n      return data[xi][yi] * w.x + data[xi + 1][yi] * w.y + data[xi][yi + 1] * w.z;\r\n    }\r\n  }\r\n\r\n  getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle) {\r\n    return `${xi}_${yi}_${getUpperTriangle ? 1 : 0}`;\r\n  }\r\n\r\n  getCachedConvexTrianglePillar(xi, yi, getUpperTriangle) {\r\n    return this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\r\n  }\r\n\r\n  setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, convex, offset) {\r\n    this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)] = {\r\n      convex,\r\n      offset\r\n    };\r\n  }\r\n\r\n  clearCachedConvexTrianglePillar(xi, yi, getUpperTriangle) {\r\n    delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\r\n  }\r\n  /**\r\n   * Get a triangle from the heightfield\r\n   */\r\n\r\n\r\n  getTriangle(xi, yi, upper, a, b, c) {\r\n    const data = this.data;\r\n    const elementSize = this.elementSize;\r\n\r\n    if (upper) {\r\n      // Top triangle verts\r\n      a.set((xi + 1) * elementSize, (yi + 1) * elementSize, data[xi + 1][yi + 1]);\r\n      b.set(xi * elementSize, (yi + 1) * elementSize, data[xi][yi + 1]);\r\n      c.set((xi + 1) * elementSize, yi * elementSize, data[xi + 1][yi]);\r\n    } else {\r\n      // Top triangle verts\r\n      a.set(xi * elementSize, yi * elementSize, data[xi][yi]);\r\n      b.set((xi + 1) * elementSize, yi * elementSize, data[xi + 1][yi]);\r\n      c.set(xi * elementSize, (yi + 1) * elementSize, data[xi][yi + 1]);\r\n    }\r\n  }\r\n  /**\r\n   * Get a triangle in the terrain in the form of a triangular convex shape.\r\n   */\r\n\r\n\r\n  getConvexTrianglePillar(xi, yi, getUpperTriangle) {\r\n    let result = this.pillarConvex;\r\n    let offsetResult = this.pillarOffset;\r\n\r\n    if (this.cacheEnabled) {\r\n      const data = this.getCachedConvexTrianglePillar(xi, yi, getUpperTriangle);\r\n\r\n      if (data) {\r\n        this.pillarConvex = data.convex;\r\n        this.pillarOffset = data.offset;\r\n        return;\r\n      }\r\n\r\n      result = new ConvexPolyhedron();\r\n      offsetResult = new Vec3();\r\n      this.pillarConvex = result;\r\n      this.pillarOffset = offsetResult;\r\n    }\r\n\r\n    const data = this.data;\r\n    const elementSize = this.elementSize;\r\n    const faces = result.faces; // Reuse verts if possible\r\n\r\n    result.vertices.length = 6;\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n      if (!result.vertices[i]) {\r\n        result.vertices[i] = new Vec3();\r\n      }\r\n    } // Reuse faces if possible\r\n\r\n\r\n    faces.length = 5;\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      if (!faces[i]) {\r\n        faces[i] = [];\r\n      }\r\n    }\r\n\r\n    const verts = result.vertices;\r\n    const h = (Math.min(data[xi][yi], data[xi + 1][yi], data[xi][yi + 1], data[xi + 1][yi + 1]) - this.minValue) / 2 + this.minValue;\r\n\r\n    if (!getUpperTriangle) {\r\n      // Center of the triangle pillar - all polygons are given relative to this one\r\n      offsetResult.set((xi + 0.25) * elementSize, // sort of center of a triangle\r\n      (yi + 0.25) * elementSize, h // vertical center\r\n      ); // Top triangle verts\r\n\r\n      verts[0].set(-0.25 * elementSize, -0.25 * elementSize, data[xi][yi] - h);\r\n      verts[1].set(0.75 * elementSize, -0.25 * elementSize, data[xi + 1][yi] - h);\r\n      verts[2].set(-0.25 * elementSize, 0.75 * elementSize, data[xi][yi + 1] - h); // bottom triangle verts\r\n\r\n      verts[3].set(-0.25 * elementSize, -0.25 * elementSize, -Math.abs(h) - 1);\r\n      verts[4].set(0.75 * elementSize, -0.25 * elementSize, -Math.abs(h) - 1);\r\n      verts[5].set(-0.25 * elementSize, 0.75 * elementSize, -Math.abs(h) - 1); // top triangle\r\n\r\n      faces[0][0] = 0;\r\n      faces[0][1] = 1;\r\n      faces[0][2] = 2; // bottom triangle\r\n\r\n      faces[1][0] = 5;\r\n      faces[1][1] = 4;\r\n      faces[1][2] = 3; // -x facing quad\r\n\r\n      faces[2][0] = 0;\r\n      faces[2][1] = 2;\r\n      faces[2][2] = 5;\r\n      faces[2][3] = 3; // -y facing quad\r\n\r\n      faces[3][0] = 1;\r\n      faces[3][1] = 0;\r\n      faces[3][2] = 3;\r\n      faces[3][3] = 4; // +xy facing quad\r\n\r\n      faces[4][0] = 4;\r\n      faces[4][1] = 5;\r\n      faces[4][2] = 2;\r\n      faces[4][3] = 1;\r\n    } else {\r\n      // Center of the triangle pillar - all polygons are given relative to this one\r\n      offsetResult.set((xi + 0.75) * elementSize, // sort of center of a triangle\r\n      (yi + 0.75) * elementSize, h // vertical center\r\n      ); // Top triangle verts\r\n\r\n      verts[0].set(0.25 * elementSize, 0.25 * elementSize, data[xi + 1][yi + 1] - h);\r\n      verts[1].set(-0.75 * elementSize, 0.25 * elementSize, data[xi][yi + 1] - h);\r\n      verts[2].set(0.25 * elementSize, -0.75 * elementSize, data[xi + 1][yi] - h); // bottom triangle verts\r\n\r\n      verts[3].set(0.25 * elementSize, 0.25 * elementSize, -Math.abs(h) - 1);\r\n      verts[4].set(-0.75 * elementSize, 0.25 * elementSize, -Math.abs(h) - 1);\r\n      verts[5].set(0.25 * elementSize, -0.75 * elementSize, -Math.abs(h) - 1); // Top triangle\r\n\r\n      faces[0][0] = 0;\r\n      faces[0][1] = 1;\r\n      faces[0][2] = 2; // bottom triangle\r\n\r\n      faces[1][0] = 5;\r\n      faces[1][1] = 4;\r\n      faces[1][2] = 3; // +x facing quad\r\n\r\n      faces[2][0] = 2;\r\n      faces[2][1] = 5;\r\n      faces[2][2] = 3;\r\n      faces[2][3] = 0; // +y facing quad\r\n\r\n      faces[3][0] = 3;\r\n      faces[3][1] = 4;\r\n      faces[3][2] = 1;\r\n      faces[3][3] = 0; // -xy facing quad\r\n\r\n      faces[4][0] = 1;\r\n      faces[4][1] = 4;\r\n      faces[4][2] = 5;\r\n      faces[4][3] = 2;\r\n    }\r\n\r\n    result.computeNormals();\r\n    result.computeEdges();\r\n    result.updateBoundingSphereRadius();\r\n    this.setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, result, offsetResult);\r\n  }\r\n\r\n  calculateLocalInertia(mass, target) {\r\n    if (target === void 0) {\r\n      target = new Vec3();\r\n    }\r\n\r\n    target.set(0, 0, 0);\r\n    return target;\r\n  }\r\n\r\n  volume() {\r\n    return (// The terrain is infinite\r\n      Number.MAX_VALUE\r\n    );\r\n  }\r\n\r\n  calculateWorldAABB(pos, quat, min, max) {\r\n    /** @TODO do it properly */\r\n    min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\r\n    max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\r\n  }\r\n\r\n  updateBoundingSphereRadius() {\r\n    // Use the bounding box of the min/max values\r\n    const data = this.data;\r\n    const s = this.elementSize;\r\n    this.boundingSphereRadius = new Vec3(data.length * s, data[0].length * s, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).length();\r\n  }\r\n  /**\r\n   * Sets the height values from an image. Currently only supported in browser.\r\n   */\r\n\r\n\r\n  setHeightsFromImage(image, scale) {\r\n    const {\r\n      x,\r\n      z,\r\n      y\r\n    } = scale;\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n    const context = canvas.getContext('2d');\r\n    context.drawImage(image, 0, 0);\r\n    const imageData = context.getImageData(0, 0, image.width, image.height);\r\n    const matrix = this.data;\r\n    matrix.length = 0;\r\n    this.elementSize = Math.abs(x) / imageData.width;\r\n\r\n    for (let i = 0; i < imageData.height; i++) {\r\n      const row = [];\r\n\r\n      for (let j = 0; j < imageData.width; j++) {\r\n        const a = imageData.data[(i * imageData.height + j) * 4];\r\n        const b = imageData.data[(i * imageData.height + j) * 4 + 1];\r\n        const c = imageData.data[(i * imageData.height + j) * 4 + 2];\r\n        const height = (a + b + c) / 4 / 255 * z;\r\n\r\n        if (x < 0) {\r\n          row.push(height);\r\n        } else {\r\n          row.unshift(height);\r\n        }\r\n      }\r\n\r\n      if (y < 0) {\r\n        matrix.unshift(row);\r\n      } else {\r\n        matrix.push(row);\r\n      }\r\n    }\r\n\r\n    this.updateMaxValue();\r\n    this.updateMinValue();\r\n    this.update();\r\n  }\r\n\r\n}\r\nconst getHeightAt_idx = [];\r\nconst getHeightAt_weights = new Vec3();\r\nconst getHeightAt_a = new Vec3();\r\nconst getHeightAt_b = new Vec3();\r\nconst getHeightAt_c = new Vec3();\r\nconst getNormalAt_a = new Vec3();\r\nconst getNormalAt_b = new Vec3();\r\nconst getNormalAt_c = new Vec3();\r\nconst getNormalAt_e0 = new Vec3();\r\nconst getNormalAt_e1 = new Vec3(); // from https://en.wikipedia.org/wiki/Barycentric_coordinate_system\r\n\r\nfunction barycentricWeights(x, y, ax, ay, bx, by, cx, cy, result) {\r\n  result.x = ((by - cy) * (x - cx) + (cx - bx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\r\n  result.y = ((cy - ay) * (x - cx) + (ax - cx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\r\n  result.z = 1 - result.x - result.y;\r\n}\r\n\r\n/**\r\n * OctreeNode\r\n */\r\nclass OctreeNode {\r\n  /** The root node */\r\n\r\n  /** Boundary of this node */\r\n\r\n  /** Contained data at the current node level */\r\n\r\n  /** Children to this node */\r\n  constructor(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    this.root = options.root || null;\r\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\r\n    this.data = [];\r\n    this.children = [];\r\n  }\r\n  /**\r\n   * reset\r\n   */\r\n\r\n\r\n  reset() {\r\n    this.children.length = this.data.length = 0;\r\n  }\r\n  /**\r\n   * Insert data into this node\r\n   * @return True if successful, otherwise false\r\n   */\r\n\r\n\r\n  insert(aabb, elementData, level) {\r\n    if (level === void 0) {\r\n      level = 0;\r\n    }\r\n\r\n    const nodeData = this.data; // Ignore objects that do not belong in this node\r\n\r\n    if (!this.aabb.contains(aabb)) {\r\n      return false; // object cannot be added\r\n    }\r\n\r\n    const children = this.children;\r\n    const maxDepth = this.maxDepth || this.root.maxDepth;\r\n\r\n    if (level < maxDepth) {\r\n      // Subdivide if there are no children yet\r\n      let subdivided = false;\r\n\r\n      if (!children.length) {\r\n        this.subdivide();\r\n        subdivided = true;\r\n      } // add to whichever node will accept it\r\n\r\n\r\n      for (let i = 0; i !== 8; i++) {\r\n        if (children[i].insert(aabb, elementData, level + 1)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      if (subdivided) {\r\n        // No children accepted! Might as well just remove em since they contain none\r\n        children.length = 0;\r\n      }\r\n    } // Too deep, or children didnt want it. add it in current node\r\n\r\n\r\n    nodeData.push(elementData);\r\n    return true;\r\n  }\r\n  /**\r\n   * Create 8 equally sized children nodes and put them in the `children` array.\r\n   */\r\n\r\n\r\n  subdivide() {\r\n    const aabb = this.aabb;\r\n    const l = aabb.lowerBound;\r\n    const u = aabb.upperBound;\r\n    const children = this.children;\r\n    children.push(new OctreeNode({\r\n      aabb: new AABB({\r\n        lowerBound: new Vec3(0, 0, 0)\r\n      })\r\n    }), new OctreeNode({\r\n      aabb: new AABB({\r\n        lowerBound: new Vec3(1, 0, 0)\r\n      })\r\n    }), new OctreeNode({\r\n      aabb: new AABB({\r\n        lowerBound: new Vec3(1, 1, 0)\r\n      })\r\n    }), new OctreeNode({\r\n      aabb: new AABB({\r\n        lowerBound: new Vec3(1, 1, 1)\r\n      })\r\n    }), new OctreeNode({\r\n      aabb: new AABB({\r\n        lowerBound: new Vec3(0, 1, 1)\r\n      })\r\n    }), new OctreeNode({\r\n      aabb: new AABB({\r\n        lowerBound: new Vec3(0, 0, 1)\r\n      })\r\n    }), new OctreeNode({\r\n      aabb: new AABB({\r\n        lowerBound: new Vec3(1, 0, 1)\r\n      })\r\n    }), new OctreeNode({\r\n      aabb: new AABB({\r\n        lowerBound: new Vec3(0, 1, 0)\r\n      })\r\n    }));\r\n    u.vsub(l, halfDiagonal);\r\n    halfDiagonal.scale(0.5, halfDiagonal);\r\n    const root = this.root || this;\r\n\r\n    for (let i = 0; i !== 8; i++) {\r\n      const child = children[i]; // Set current node as root\r\n\r\n      child.root = root; // Compute bounds\r\n\r\n      const lowerBound = child.aabb.lowerBound;\r\n      lowerBound.x *= halfDiagonal.x;\r\n      lowerBound.y *= halfDiagonal.y;\r\n      lowerBound.z *= halfDiagonal.z;\r\n      lowerBound.vadd(l, lowerBound); // Upper bound is always lower bound + halfDiagonal\r\n\r\n      lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\r\n    }\r\n  }\r\n  /**\r\n   * Get all data, potentially within an AABB\r\n   * @return The \"result\" object\r\n   */\r\n\r\n\r\n  aabbQuery(aabb, result) {\r\n    this.data; // abort if the range does not intersect this node\r\n    // if (!this.aabb.overlaps(aabb)){\r\n    //     return result;\r\n    // }\r\n    // Add objects at this level\r\n    // Array.prototype.push.apply(result, nodeData);\r\n    // Add child data\r\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\r\n\r\n    this.children; // for (let i = 0, N = this.children.length; i !== N; i++) {\r\n    //     children[i].aabbQuery(aabb, result);\r\n    // }\r\n\r\n    const queue = [this];\r\n\r\n    while (queue.length) {\r\n      const node = queue.pop();\r\n\r\n      if (node.aabb.overlaps(aabb)) {\r\n        Array.prototype.push.apply(result, node.data);\r\n      }\r\n\r\n      Array.prototype.push.apply(queue, node.children);\r\n    }\r\n\r\n    return result;\r\n  }\r\n  /**\r\n   * Get all data, potentially intersected by a ray.\r\n   * @return The \"result\" object\r\n   */\r\n\r\n\r\n  rayQuery(ray, treeTransform, result) {\r\n    // Use aabb query for now.\r\n\r\n    /** @todo implement real ray query which needs less lookups */\r\n    ray.getAABB(tmpAABB);\r\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\r\n    this.aabbQuery(tmpAABB, result);\r\n    return result;\r\n  }\r\n  /**\r\n   * removeEmptyNodes\r\n   */\r\n\r\n\r\n  removeEmptyNodes() {\r\n    for (let i = this.children.length - 1; i >= 0; i--) {\r\n      this.children[i].removeEmptyNodes();\r\n\r\n      if (!this.children[i].children.length && !this.children[i].data.length) {\r\n        this.children.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n/**\r\n * Octree\r\n */\r\n\r\n\r\nclass Octree extends OctreeNode {\r\n  /**\r\n   * Maximum subdivision depth\r\n   * @default 8\r\n   */\r\n\r\n  /**\r\n   * @param aabb The total AABB of the tree\r\n   */\r\n  constructor(aabb, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    super({\r\n      root: null,\r\n      aabb\r\n    });\r\n    this.maxDepth = typeof options.maxDepth !== 'undefined' ? options.maxDepth : 8;\r\n  }\r\n\r\n}\r\nconst halfDiagonal = new Vec3();\r\nconst tmpAABB = new AABB();\r\n\r\n/**\r\n * Trimesh.\r\n * @example\r\n *     // How to make a mesh with a single triangle\r\n *     const vertices = [\r\n *         0, 0, 0, // vertex 0\r\n *         1, 0, 0, // vertex 1\r\n *         0, 1, 0  // vertex 2\r\n *     ]\r\n *     const indices = [\r\n *         0, 1, 2  // triangle 0\r\n *     ]\r\n *     const trimeshShape = new CANNON.Trimesh(vertices, indices)\r\n */\r\nclass Trimesh extends Shape {\r\n  /**\r\n   * vertices\r\n   */\r\n\r\n  /**\r\n   * Array of integers, indicating which vertices each triangle consists of. The length of this array is thus 3 times the number of triangles.\r\n   */\r\n\r\n  /**\r\n   * The normals data.\r\n   */\r\n\r\n  /**\r\n   * The local AABB of the mesh.\r\n   */\r\n\r\n  /**\r\n   * References to vertex pairs, making up all unique edges in the trimesh.\r\n   */\r\n\r\n  /**\r\n   * Local scaling of the mesh. Use .setScale() to set it.\r\n   */\r\n\r\n  /**\r\n   * The indexed triangles. Use .updateTree() to update it.\r\n   */\r\n  constructor(vertices, indices) {\r\n    super({\r\n      type: Shape.types.TRIMESH\r\n    });\r\n    this.vertices = new Float32Array(vertices);\r\n    this.indices = new Int16Array(indices);\r\n    this.normals = new Float32Array(indices.length);\r\n    this.aabb = new AABB();\r\n    this.edges = null;\r\n    this.scale = new Vec3(1, 1, 1);\r\n    this.tree = new Octree();\r\n    this.updateEdges();\r\n    this.updateNormals();\r\n    this.updateAABB();\r\n    this.updateBoundingSphereRadius();\r\n    this.updateTree();\r\n  }\r\n  /**\r\n   * updateTree\r\n   */\r\n\r\n\r\n  updateTree() {\r\n    const tree = this.tree;\r\n    tree.reset();\r\n    tree.aabb.copy(this.aabb);\r\n    const scale = this.scale; // The local mesh AABB is scaled, but the octree AABB should be unscaled\r\n\r\n    tree.aabb.lowerBound.x *= 1 / scale.x;\r\n    tree.aabb.lowerBound.y *= 1 / scale.y;\r\n    tree.aabb.lowerBound.z *= 1 / scale.z;\r\n    tree.aabb.upperBound.x *= 1 / scale.x;\r\n    tree.aabb.upperBound.y *= 1 / scale.y;\r\n    tree.aabb.upperBound.z *= 1 / scale.z; // Insert all triangles\r\n\r\n    const triangleAABB = new AABB();\r\n    const a = new Vec3();\r\n    const b = new Vec3();\r\n    const c = new Vec3();\r\n    const points = [a, b, c];\r\n\r\n    for (let i = 0; i < this.indices.length / 3; i++) {\r\n      //this.getTriangleVertices(i, a, b, c);\r\n      // Get unscaled triangle verts\r\n      const i3 = i * 3;\r\n\r\n      this._getUnscaledVertex(this.indices[i3], a);\r\n\r\n      this._getUnscaledVertex(this.indices[i3 + 1], b);\r\n\r\n      this._getUnscaledVertex(this.indices[i3 + 2], c);\r\n\r\n      triangleAABB.setFromPoints(points);\r\n      tree.insert(triangleAABB, i);\r\n    }\r\n\r\n    tree.removeEmptyNodes();\r\n  }\r\n  /**\r\n   * Get triangles in a local AABB from the trimesh.\r\n   * @param result An array of integers, referencing the queried triangles.\r\n   */\r\n\r\n\r\n  getTrianglesInAABB(aabb, result) {\r\n    unscaledAABB.copy(aabb); // Scale it to local\r\n\r\n    const scale = this.scale;\r\n    const isx = scale.x;\r\n    const isy = scale.y;\r\n    const isz = scale.z;\r\n    const l = unscaledAABB.lowerBound;\r\n    const u = unscaledAABB.upperBound;\r\n    l.x /= isx;\r\n    l.y /= isy;\r\n    l.z /= isz;\r\n    u.x /= isx;\r\n    u.y /= isy;\r\n    u.z /= isz;\r\n    return this.tree.aabbQuery(unscaledAABB, result);\r\n  }\r\n  /**\r\n   * setScale\r\n   */\r\n\r\n\r\n  setScale(scale) {\r\n    const wasUniform = this.scale.x === this.scale.y && this.scale.y === this.scale.z;\r\n    const isUniform = scale.x === scale.y && scale.y === scale.z;\r\n\r\n    if (!(wasUniform && isUniform)) {\r\n      // Non-uniform scaling. Need to update normals.\r\n      this.updateNormals();\r\n    }\r\n\r\n    this.scale.copy(scale);\r\n    this.updateAABB();\r\n    this.updateBoundingSphereRadius();\r\n  }\r\n  /**\r\n   * Compute the normals of the faces. Will save in the `.normals` array.\r\n   */\r\n\r\n\r\n  updateNormals() {\r\n    const n = computeNormals_n; // Generate normals\r\n\r\n    const normals = this.normals;\r\n\r\n    for (let i = 0; i < this.indices.length / 3; i++) {\r\n      const i3 = i * 3;\r\n      const a = this.indices[i3];\r\n      const b = this.indices[i3 + 1];\r\n      const c = this.indices[i3 + 2];\r\n      this.getVertex(a, va);\r\n      this.getVertex(b, vb);\r\n      this.getVertex(c, vc);\r\n      Trimesh.computeNormal(vb, va, vc, n);\r\n      normals[i3] = n.x;\r\n      normals[i3 + 1] = n.y;\r\n      normals[i3 + 2] = n.z;\r\n    }\r\n  }\r\n  /**\r\n   * Update the `.edges` property\r\n   */\r\n\r\n\r\n  updateEdges() {\r\n    const edges = {};\r\n\r\n    const add = (a, b) => {\r\n      const key = a < b ? `${a}_${b}` : `${b}_${a}`;\r\n      edges[key] = true;\r\n    };\r\n\r\n    for (let i = 0; i < this.indices.length / 3; i++) {\r\n      const i3 = i * 3;\r\n      const a = this.indices[i3];\r\n      const b = this.indices[i3 + 1];\r\n      const c = this.indices[i3 + 2];\r\n      add(a, b);\r\n      add(b, c);\r\n      add(c, a);\r\n    }\r\n\r\n    const keys = Object.keys(edges);\r\n    this.edges = new Int16Array(keys.length * 2);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      const indices = keys[i].split('_');\r\n      this.edges[2 * i] = parseInt(indices[0], 10);\r\n      this.edges[2 * i + 1] = parseInt(indices[1], 10);\r\n    }\r\n  }\r\n  /**\r\n   * Get an edge vertex\r\n   * @param firstOrSecond 0 or 1, depending on which one of the vertices you need.\r\n   * @param vertexStore Where to store the result\r\n   */\r\n\r\n\r\n  getEdgeVertex(edgeIndex, firstOrSecond, vertexStore) {\r\n    const vertexIndex = this.edges[edgeIndex * 2 + (firstOrSecond ? 1 : 0)];\r\n    this.getVertex(vertexIndex, vertexStore);\r\n  }\r\n  /**\r\n   * Get a vector along an edge.\r\n   */\r\n\r\n\r\n  getEdgeVector(edgeIndex, vectorStore) {\r\n    const va = getEdgeVector_va;\r\n    const vb = getEdgeVector_vb;\r\n    this.getEdgeVertex(edgeIndex, 0, va);\r\n    this.getEdgeVertex(edgeIndex, 1, vb);\r\n    vb.vsub(va, vectorStore);\r\n  }\r\n  /**\r\n   * Get face normal given 3 vertices\r\n   */\r\n\r\n\r\n  static computeNormal(va, vb, vc, target) {\r\n    vb.vsub(va, ab);\r\n    vc.vsub(vb, cb);\r\n    cb.cross(ab, target);\r\n\r\n    if (!target.isZero()) {\r\n      target.normalize();\r\n    }\r\n  }\r\n  /**\r\n   * Get vertex i.\r\n   * @return The \"out\" vector object\r\n   */\r\n\r\n\r\n  getVertex(i, out) {\r\n    const scale = this.scale;\r\n\r\n    this._getUnscaledVertex(i, out);\r\n\r\n    out.x *= scale.x;\r\n    out.y *= scale.y;\r\n    out.z *= scale.z;\r\n    return out;\r\n  }\r\n  /**\r\n   * Get raw vertex i\r\n   * @return The \"out\" vector object\r\n   */\r\n\r\n\r\n  _getUnscaledVertex(i, out) {\r\n    const i3 = i * 3;\r\n    const vertices = this.vertices;\r\n    return out.set(vertices[i3], vertices[i3 + 1], vertices[i3 + 2]);\r\n  }\r\n  /**\r\n   * Get a vertex from the trimesh,transformed by the given position and quaternion.\r\n   * @return The \"out\" vector object\r\n   */\r\n\r\n\r\n  getWorldVertex(i, pos, quat, out) {\r\n    this.getVertex(i, out);\r\n    Transform.pointToWorldFrame(pos, quat, out, out);\r\n    return out;\r\n  }\r\n  /**\r\n   * Get the three vertices for triangle i.\r\n   */\r\n\r\n\r\n  getTriangleVertices(i, a, b, c) {\r\n    const i3 = i * 3;\r\n    this.getVertex(this.indices[i3], a);\r\n    this.getVertex(this.indices[i3 + 1], b);\r\n    this.getVertex(this.indices[i3 + 2], c);\r\n  }\r\n  /**\r\n   * Compute the normal of triangle i.\r\n   * @return The \"target\" vector object\r\n   */\r\n\r\n\r\n  getNormal(i, target) {\r\n    const i3 = i * 3;\r\n    return target.set(this.normals[i3], this.normals[i3 + 1], this.normals[i3 + 2]);\r\n  }\r\n  /**\r\n   * @return The \"target\" vector object\r\n   */\r\n\r\n\r\n  calculateLocalInertia(mass, target) {\r\n    // Approximate with box inertia\r\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\r\n    this.computeLocalAABB(cli_aabb);\r\n    const x = cli_aabb.upperBound.x - cli_aabb.lowerBound.x;\r\n    const y = cli_aabb.upperBound.y - cli_aabb.lowerBound.y;\r\n    const z = cli_aabb.upperBound.z - cli_aabb.lowerBound.z;\r\n    return target.set(1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * z * 2 * z), 1.0 / 12.0 * mass * (2 * x * 2 * x + 2 * z * 2 * z), 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * x * 2 * x));\r\n  }\r\n  /**\r\n   * Compute the local AABB for the trimesh\r\n   */\r\n\r\n\r\n  computeLocalAABB(aabb) {\r\n    const l = aabb.lowerBound;\r\n    const u = aabb.upperBound;\r\n    const n = this.vertices.length;\r\n    this.vertices;\r\n    const v = computeLocalAABB_worldVert;\r\n    this.getVertex(0, v);\r\n    l.copy(v);\r\n    u.copy(v);\r\n\r\n    for (let i = 0; i !== n; i++) {\r\n      this.getVertex(i, v);\r\n\r\n      if (v.x < l.x) {\r\n        l.x = v.x;\r\n      } else if (v.x > u.x) {\r\n        u.x = v.x;\r\n      }\r\n\r\n      if (v.y < l.y) {\r\n        l.y = v.y;\r\n      } else if (v.y > u.y) {\r\n        u.y = v.y;\r\n      }\r\n\r\n      if (v.z < l.z) {\r\n        l.z = v.z;\r\n      } else if (v.z > u.z) {\r\n        u.z = v.z;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Update the `.aabb` property\r\n   */\r\n\r\n\r\n  updateAABB() {\r\n    this.computeLocalAABB(this.aabb);\r\n  }\r\n  /**\r\n   * Will update the `.boundingSphereRadius` property\r\n   */\r\n\r\n\r\n  updateBoundingSphereRadius() {\r\n    // Assume points are distributed with local (0,0,0) as center\r\n    let max2 = 0;\r\n    const vertices = this.vertices;\r\n    const v = new Vec3();\r\n\r\n    for (let i = 0, N = vertices.length / 3; i !== N; i++) {\r\n      this.getVertex(i, v);\r\n      const norm2 = v.lengthSquared();\r\n\r\n      if (norm2 > max2) {\r\n        max2 = norm2;\r\n      }\r\n    }\r\n\r\n    this.boundingSphereRadius = Math.sqrt(max2);\r\n  }\r\n  /**\r\n   * calculateWorldAABB\r\n   */\r\n\r\n\r\n  calculateWorldAABB(pos, quat, min, max) {\r\n    /*\r\n        const n = this.vertices.length / 3,\r\n            verts = this.vertices;\r\n        const minx,miny,minz,maxx,maxy,maxz;\r\n         const v = tempWorldVertex;\r\n        for(let i=0; i<n; i++){\r\n            this.getVertex(i, v);\r\n            quat.vmult(v, v);\r\n            pos.vadd(v, v);\r\n            if (v.x < minx || minx===undefined){\r\n                minx = v.x;\r\n            } else if(v.x > maxx || maxx===undefined){\r\n                maxx = v.x;\r\n            }\r\n             if (v.y < miny || miny===undefined){\r\n                miny = v.y;\r\n            } else if(v.y > maxy || maxy===undefined){\r\n                maxy = v.y;\r\n            }\r\n             if (v.z < minz || minz===undefined){\r\n                minz = v.z;\r\n            } else if(v.z > maxz || maxz===undefined){\r\n                maxz = v.z;\r\n            }\r\n        }\r\n        min.set(minx,miny,minz);\r\n        max.set(maxx,maxy,maxz);\r\n        */\r\n    // Faster approximation using local AABB\r\n    const frame = calculateWorldAABB_frame;\r\n    const result = calculateWorldAABB_aabb;\r\n    frame.position = pos;\r\n    frame.quaternion = quat;\r\n    this.aabb.toWorldFrame(frame, result);\r\n    min.copy(result.lowerBound);\r\n    max.copy(result.upperBound);\r\n  }\r\n  /**\r\n   * Get approximate volume\r\n   */\r\n\r\n\r\n  volume() {\r\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\r\n  }\r\n  /**\r\n   * Create a Trimesh instance, shaped as a torus.\r\n   */\r\n\r\n\r\n  static createTorus(radius, tube, radialSegments, tubularSegments, arc) {\r\n    if (radius === void 0) {\r\n      radius = 1;\r\n    }\r\n\r\n    if (tube === void 0) {\r\n      tube = 0.5;\r\n    }\r\n\r\n    if (radialSegments === void 0) {\r\n      radialSegments = 8;\r\n    }\r\n\r\n    if (tubularSegments === void 0) {\r\n      tubularSegments = 6;\r\n    }\r\n\r\n    if (arc === void 0) {\r\n      arc = Math.PI * 2;\r\n    }\r\n\r\n    const vertices = [];\r\n    const indices = [];\r\n\r\n    for (let j = 0; j <= radialSegments; j++) {\r\n      for (let i = 0; i <= tubularSegments; i++) {\r\n        const u = i / tubularSegments * arc;\r\n        const v = j / radialSegments * Math.PI * 2;\r\n        const x = (radius + tube * Math.cos(v)) * Math.cos(u);\r\n        const y = (radius + tube * Math.cos(v)) * Math.sin(u);\r\n        const z = tube * Math.sin(v);\r\n        vertices.push(x, y, z);\r\n      }\r\n    }\r\n\r\n    for (let j = 1; j <= radialSegments; j++) {\r\n      for (let i = 1; i <= tubularSegments; i++) {\r\n        const a = (tubularSegments + 1) * j + i - 1;\r\n        const b = (tubularSegments + 1) * (j - 1) + i - 1;\r\n        const c = (tubularSegments + 1) * (j - 1) + i;\r\n        const d = (tubularSegments + 1) * j + i;\r\n        indices.push(a, b, d);\r\n        indices.push(b, c, d);\r\n      }\r\n    }\r\n\r\n    return new Trimesh(vertices, indices);\r\n  }\r\n\r\n}\r\nconst computeNormals_n = new Vec3();\r\nconst unscaledAABB = new AABB();\r\nconst getEdgeVector_va = new Vec3();\r\nconst getEdgeVector_vb = new Vec3();\r\nconst cb = new Vec3();\r\nconst ab = new Vec3();\r\nconst va = new Vec3();\r\nconst vb = new Vec3();\r\nconst vc = new Vec3();\r\nconst cli_aabb = new AABB();\r\nconst computeLocalAABB_worldVert = new Vec3();\r\nconst calculateWorldAABB_frame = new Transform();\r\nconst calculateWorldAABB_aabb = new AABB();\r\n\r\n/**\r\n * Constraint equation solver base class.\r\n */\r\nclass Solver {\r\n  /**\r\n   * All equations to be solved\r\n   */\r\n\r\n  /**\r\n   * @todo remove useless constructor\r\n   */\r\n  constructor() {\r\n    this.equations = [];\r\n  }\r\n  /**\r\n   * Should be implemented in subclasses!\r\n   * @todo use abstract\r\n   * @return number of iterations performed\r\n   */\r\n\r\n\r\n  solve(dt, world) {\r\n    return (// Should return the number of iterations done!\r\n      0\r\n    );\r\n  }\r\n  /**\r\n   * Add an equation\r\n   */\r\n\r\n\r\n  addEquation(eq) {\r\n    if (eq.enabled && !eq.bi.isTrigger && !eq.bj.isTrigger) {\r\n      this.equations.push(eq);\r\n    }\r\n  }\r\n  /**\r\n   * Remove an equation\r\n   */\r\n\r\n\r\n  removeEquation(eq) {\r\n    const eqs = this.equations;\r\n    const i = eqs.indexOf(eq);\r\n\r\n    if (i !== -1) {\r\n      eqs.splice(i, 1);\r\n    }\r\n  }\r\n  /**\r\n   * Add all equations\r\n   */\r\n\r\n\r\n  removeAllEquations() {\r\n    this.equations.length = 0;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Constraint equation Gauss-Seidel solver.\r\n * @todo The spook parameters should be specified for each constraint, not globally.\r\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\r\n */\r\nclass GSSolver extends Solver {\r\n  /**\r\n   * The number of solver iterations determines quality of the constraints in the world.\r\n   * The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\r\n   */\r\n\r\n  /**\r\n   * When tolerance is reached, the system is assumed to be converged.\r\n   */\r\n\r\n  /**\r\n   * @todo remove useless constructor\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.iterations = 10;\r\n    this.tolerance = 1e-7;\r\n  }\r\n  /**\r\n   * Solve\r\n   * @return number of iterations performed\r\n   */\r\n\r\n\r\n  solve(dt, world) {\r\n    let iter = 0;\r\n    const maxIter = this.iterations;\r\n    const tolSquared = this.tolerance * this.tolerance;\r\n    const equations = this.equations;\r\n    const Neq = equations.length;\r\n    const bodies = world.bodies;\r\n    const Nbodies = bodies.length;\r\n    const h = dt;\r\n    let B;\r\n    let invC;\r\n    let deltalambda;\r\n    let deltalambdaTot;\r\n    let GWlambda;\r\n    let lambdaj; // Update solve mass\r\n\r\n    if (Neq !== 0) {\r\n      for (let i = 0; i !== Nbodies; i++) {\r\n        bodies[i].updateSolveMassProperties();\r\n      }\r\n    } // Things that do not change during iteration can be computed once\r\n\r\n\r\n    const invCs = GSSolver_solve_invCs;\r\n    const Bs = GSSolver_solve_Bs;\r\n    const lambda = GSSolver_solve_lambda;\r\n    invCs.length = Neq;\r\n    Bs.length = Neq;\r\n    lambda.length = Neq;\r\n\r\n    for (let i = 0; i !== Neq; i++) {\r\n      const c = equations[i];\r\n      lambda[i] = 0.0;\r\n      Bs[i] = c.computeB(h);\r\n      invCs[i] = 1.0 / c.computeC();\r\n    }\r\n\r\n    if (Neq !== 0) {\r\n      // Reset vlambda\r\n      for (let i = 0; i !== Nbodies; i++) {\r\n        const b = bodies[i];\r\n        const vlambda = b.vlambda;\r\n        const wlambda = b.wlambda;\r\n        vlambda.set(0, 0, 0);\r\n        wlambda.set(0, 0, 0);\r\n      } // Iterate over equations\r\n\r\n\r\n      for (iter = 0; iter !== maxIter; iter++) {\r\n        // Accumulate the total error for each iteration.\r\n        deltalambdaTot = 0.0;\r\n\r\n        for (let j = 0; j !== Neq; j++) {\r\n          const c = equations[j]; // Compute iteration\r\n\r\n          B = Bs[j];\r\n          invC = invCs[j];\r\n          lambdaj = lambda[j];\r\n          GWlambda = c.computeGWlambda();\r\n          deltalambda = invC * (B - GWlambda - c.eps * lambdaj); // Clamp if we are not within the min/max interval\r\n\r\n          if (lambdaj + deltalambda < c.minForce) {\r\n            deltalambda = c.minForce - lambdaj;\r\n          } else if (lambdaj + deltalambda > c.maxForce) {\r\n            deltalambda = c.maxForce - lambdaj;\r\n          }\r\n\r\n          lambda[j] += deltalambda;\r\n          deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\r\n\r\n          c.addToWlambda(deltalambda);\r\n        } // If the total error is small enough - stop iterate\r\n\r\n\r\n        if (deltalambdaTot * deltalambdaTot < tolSquared) {\r\n          break;\r\n        }\r\n      } // Add result to velocity\r\n\r\n\r\n      for (let i = 0; i !== Nbodies; i++) {\r\n        const b = bodies[i];\r\n        const v = b.velocity;\r\n        const w = b.angularVelocity;\r\n        b.vlambda.vmul(b.linearFactor, b.vlambda);\r\n        v.vadd(b.vlambda, v);\r\n        b.wlambda.vmul(b.angularFactor, b.wlambda);\r\n        w.vadd(b.wlambda, w);\r\n      } // Set the `.multiplier` property of each equation\r\n\r\n\r\n      let l = equations.length;\r\n      const invDt = 1 / h;\r\n\r\n      while (l--) {\r\n        equations[l].multiplier = lambda[l] * invDt;\r\n      }\r\n    }\r\n\r\n    return iter;\r\n  }\r\n\r\n} // Just temporary number holders that we want to reuse each iteration.\r\n\r\nconst GSSolver_solve_lambda = [];\r\nconst GSSolver_solve_invCs = [];\r\nconst GSSolver_solve_Bs = [];\r\n\r\n/**\r\n * Splits the equations into islands and solves them independently. Can improve performance.\r\n */\r\nclass SplitSolver extends Solver {\r\n  /**\r\n   * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\r\n   */\r\n\r\n  /**\r\n   * When tolerance is reached, the system is assumed to be converged.\r\n   */\r\n\r\n  /** subsolver */\r\n  constructor(subsolver) {\r\n    super();\r\n    this.iterations = 10;\r\n    this.tolerance = 1e-7;\r\n    this.subsolver = subsolver;\r\n    this.nodes = [];\r\n    this.nodePool = []; // Create needed nodes, reuse if possible\r\n\r\n    while (this.nodePool.length < 128) {\r\n      this.nodePool.push(this.createNode());\r\n    }\r\n  }\r\n  /**\r\n   * createNode\r\n   */\r\n\r\n\r\n  createNode() {\r\n    return {\r\n      body: null,\r\n      children: [],\r\n      eqs: [],\r\n      visited: false\r\n    };\r\n  }\r\n  /**\r\n   * Solve the subsystems\r\n   * @return number of iterations performed\r\n   */\r\n\r\n\r\n  solve(dt, world) {\r\n    const nodes = SplitSolver_solve_nodes;\r\n    const nodePool = this.nodePool;\r\n    const bodies = world.bodies;\r\n    const equations = this.equations;\r\n    const Neq = equations.length;\r\n    const Nbodies = bodies.length;\r\n    const subsolver = this.subsolver; // Create needed nodes, reuse if possible\r\n\r\n    while (nodePool.length < Nbodies) {\r\n      nodePool.push(this.createNode());\r\n    }\r\n\r\n    nodes.length = Nbodies;\r\n\r\n    for (let i = 0; i < Nbodies; i++) {\r\n      nodes[i] = nodePool[i];\r\n    } // Reset node values\r\n\r\n\r\n    for (let i = 0; i !== Nbodies; i++) {\r\n      const node = nodes[i];\r\n      node.body = bodies[i];\r\n      node.children.length = 0;\r\n      node.eqs.length = 0;\r\n      node.visited = false;\r\n    }\r\n\r\n    for (let k = 0; k !== Neq; k++) {\r\n      const eq = equations[k];\r\n      const i = bodies.indexOf(eq.bi);\r\n      const j = bodies.indexOf(eq.bj);\r\n      const ni = nodes[i];\r\n      const nj = nodes[j];\r\n      ni.children.push(nj);\r\n      ni.eqs.push(eq);\r\n      nj.children.push(ni);\r\n      nj.eqs.push(eq);\r\n    }\r\n\r\n    let child;\r\n    let n = 0;\r\n    let eqs = SplitSolver_solve_eqs;\r\n    subsolver.tolerance = this.tolerance;\r\n    subsolver.iterations = this.iterations;\r\n    const dummyWorld = SplitSolver_solve_dummyWorld;\r\n\r\n    while (child = getUnvisitedNode(nodes)) {\r\n      eqs.length = 0;\r\n      dummyWorld.bodies.length = 0;\r\n      bfs(child, visitFunc, dummyWorld.bodies, eqs);\r\n      const Neqs = eqs.length;\r\n      eqs = eqs.sort(sortById);\r\n\r\n      for (let i = 0; i !== Neqs; i++) {\r\n        subsolver.addEquation(eqs[i]);\r\n      }\r\n\r\n      subsolver.solve(dt, dummyWorld);\r\n      subsolver.removeAllEquations();\r\n      n++;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n} // Returns the number of subsystems\r\n\r\nconst SplitSolver_solve_nodes = []; // All allocated node objects\r\n\r\nconst SplitSolver_solve_eqs = []; // Temp array\r\n\r\nconst SplitSolver_solve_dummyWorld = {\r\n  bodies: []\r\n}; // Temp object\r\n\r\nconst STATIC = Body.STATIC;\r\n\r\nfunction getUnvisitedNode(nodes) {\r\n  const Nnodes = nodes.length;\r\n\r\n  for (let i = 0; i !== Nnodes; i++) {\r\n    const node = nodes[i];\r\n\r\n    if (!node.visited && !(node.body.type & STATIC)) {\r\n      return node;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nconst queue = [];\r\n\r\nfunction bfs(root, visitFunc, bds, eqs) {\r\n  queue.push(root);\r\n  root.visited = true;\r\n  visitFunc(root, bds, eqs);\r\n\r\n  while (queue.length) {\r\n    const node = queue.pop(); // Loop over unvisited child nodes\r\n\r\n    let child;\r\n\r\n    while (child = getUnvisitedNode(node.children)) {\r\n      child.visited = true;\r\n      visitFunc(child, bds, eqs);\r\n      queue.push(child);\r\n    }\r\n  }\r\n}\r\n\r\nfunction visitFunc(node, bds, eqs) {\r\n  bds.push(node.body);\r\n  const Neqs = node.eqs.length;\r\n\r\n  for (let i = 0; i !== Neqs; i++) {\r\n    const eq = node.eqs[i];\r\n\r\n    if (!eqs.includes(eq)) {\r\n      eqs.push(eq);\r\n    }\r\n  }\r\n}\r\n\r\nfunction sortById(a, b) {\r\n  return b.id - a.id;\r\n}\r\n\r\n/**\r\n * For pooling objects that can be reused.\r\n */\r\nclass Pool {\r\n  constructor() {\r\n    this.objects = [];\r\n    this.type = Object;\r\n  }\r\n\r\n  /**\r\n   * Release an object after use\r\n   */\r\n  release() {\r\n    const Nargs = arguments.length;\r\n\r\n    for (let i = 0; i !== Nargs; i++) {\r\n      this.objects.push(i < 0 || arguments.length <= i ? undefined : arguments[i]);\r\n    }\r\n\r\n    return this;\r\n  }\r\n  /**\r\n   * Get an object\r\n   */\r\n\r\n\r\n  get() {\r\n    if (this.objects.length === 0) {\r\n      return this.constructObject();\r\n    } else {\r\n      return this.objects.pop();\r\n    }\r\n  }\r\n  /**\r\n   * Construct an object. Should be implemented in each subclass.\r\n   */\r\n\r\n\r\n  constructObject() {\r\n    throw new Error('constructObject() not implemented in this Pool subclass yet!');\r\n  }\r\n  /**\r\n   * @return Self, for chaining\r\n   */\r\n\r\n\r\n  resize(size) {\r\n    const objects = this.objects;\r\n\r\n    while (objects.length > size) {\r\n      objects.pop();\r\n    }\r\n\r\n    while (objects.length < size) {\r\n      objects.push(this.constructObject());\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Vec3Pool\r\n */\r\n\r\nclass Vec3Pool extends Pool {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.type = Vec3;\r\n  }\r\n\r\n  /**\r\n   * Construct a vector\r\n   */\r\n  constructObject() {\r\n    return new Vec3();\r\n  }\r\n\r\n}\r\n\r\n// Naming rule: based of the order in SHAPE_TYPES,\r\n// the first part of the method is formed by the\r\n// shape type that comes before, in the second part\r\n// there is the shape type that comes after in the SHAPE_TYPES list\r\nconst COLLISION_TYPES = {\r\n  sphereSphere: Shape.types.SPHERE,\r\n  spherePlane: Shape.types.SPHERE | Shape.types.PLANE,\r\n  boxBox: Shape.types.BOX | Shape.types.BOX,\r\n  sphereBox: Shape.types.SPHERE | Shape.types.BOX,\r\n  planeBox: Shape.types.PLANE | Shape.types.BOX,\r\n  convexConvex: Shape.types.CONVEXPOLYHEDRON,\r\n  sphereConvex: Shape.types.SPHERE | Shape.types.CONVEXPOLYHEDRON,\r\n  planeConvex: Shape.types.PLANE | Shape.types.CONVEXPOLYHEDRON,\r\n  boxConvex: Shape.types.BOX | Shape.types.CONVEXPOLYHEDRON,\r\n  sphereHeightfield: Shape.types.SPHERE | Shape.types.HEIGHTFIELD,\r\n  boxHeightfield: Shape.types.BOX | Shape.types.HEIGHTFIELD,\r\n  convexHeightfield: Shape.types.CONVEXPOLYHEDRON | Shape.types.HEIGHTFIELD,\r\n  sphereParticle: Shape.types.PARTICLE | Shape.types.SPHERE,\r\n  planeParticle: Shape.types.PLANE | Shape.types.PARTICLE,\r\n  boxParticle: Shape.types.BOX | Shape.types.PARTICLE,\r\n  convexParticle: Shape.types.PARTICLE | Shape.types.CONVEXPOLYHEDRON,\r\n  cylinderCylinder: Shape.types.CYLINDER,\r\n  sphereCylinder: Shape.types.SPHERE | Shape.types.CYLINDER,\r\n  planeCylinder: Shape.types.PLANE | Shape.types.CYLINDER,\r\n  boxCylinder: Shape.types.BOX | Shape.types.CYLINDER,\r\n  convexCylinder: Shape.types.CONVEXPOLYHEDRON | Shape.types.CYLINDER,\r\n  heightfieldCylinder: Shape.types.HEIGHTFIELD | Shape.types.CYLINDER,\r\n  particleCylinder: Shape.types.PARTICLE | Shape.types.CYLINDER,\r\n  sphereTrimesh: Shape.types.SPHERE | Shape.types.TRIMESH,\r\n  planeTrimesh: Shape.types.PLANE | Shape.types.TRIMESH\r\n};\r\n\r\n/**\r\n * Helper class for the World. Generates ContactEquations.\r\n * @todo Sphere-ConvexPolyhedron contacts\r\n * @todo Contact reduction\r\n * @todo should move methods to prototype\r\n */\r\nclass Narrowphase {\r\n  /**\r\n   * Internal storage of pooled contact points.\r\n   */\r\n\r\n  /**\r\n   * Pooled vectors.\r\n   */\r\n  get [COLLISION_TYPES.sphereSphere]() {\r\n    return this.sphereSphere;\r\n  }\r\n\r\n  get [COLLISION_TYPES.spherePlane]() {\r\n    return this.spherePlane;\r\n  }\r\n\r\n  get [COLLISION_TYPES.boxBox]() {\r\n    return this.boxBox;\r\n  }\r\n\r\n  get [COLLISION_TYPES.sphereBox]() {\r\n    return this.sphereBox;\r\n  }\r\n\r\n  get [COLLISION_TYPES.planeBox]() {\r\n    return this.planeBox;\r\n  }\r\n\r\n  get [COLLISION_TYPES.convexConvex]() {\r\n    return this.convexConvex;\r\n  }\r\n\r\n  get [COLLISION_TYPES.sphereConvex]() {\r\n    return this.sphereConvex;\r\n  }\r\n\r\n  get [COLLISION_TYPES.planeConvex]() {\r\n    return this.planeConvex;\r\n  }\r\n\r\n  get [COLLISION_TYPES.boxConvex]() {\r\n    return this.boxConvex;\r\n  }\r\n\r\n  get [COLLISION_TYPES.sphereHeightfield]() {\r\n    return this.sphereHeightfield;\r\n  }\r\n\r\n  get [COLLISION_TYPES.boxHeightfield]() {\r\n    return this.boxHeightfield;\r\n  }\r\n\r\n  get [COLLISION_TYPES.convexHeightfield]() {\r\n    return this.convexHeightfield;\r\n  }\r\n\r\n  get [COLLISION_TYPES.sphereParticle]() {\r\n    return this.sphereParticle;\r\n  }\r\n\r\n  get [COLLISION_TYPES.planeParticle]() {\r\n    return this.planeParticle;\r\n  }\r\n\r\n  get [COLLISION_TYPES.boxParticle]() {\r\n    return this.boxParticle;\r\n  }\r\n\r\n  get [COLLISION_TYPES.convexParticle]() {\r\n    return this.convexParticle;\r\n  }\r\n\r\n  get [COLLISION_TYPES.cylinderCylinder]() {\r\n    return this.convexConvex;\r\n  }\r\n\r\n  get [COLLISION_TYPES.sphereCylinder]() {\r\n    return this.sphereConvex;\r\n  }\r\n\r\n  get [COLLISION_TYPES.planeCylinder]() {\r\n    return this.planeConvex;\r\n  }\r\n\r\n  get [COLLISION_TYPES.boxCylinder]() {\r\n    return this.boxConvex;\r\n  }\r\n\r\n  get [COLLISION_TYPES.convexCylinder]() {\r\n    return this.convexConvex;\r\n  }\r\n\r\n  get [COLLISION_TYPES.heightfieldCylinder]() {\r\n    return this.heightfieldCylinder;\r\n  }\r\n\r\n  get [COLLISION_TYPES.particleCylinder]() {\r\n    return this.particleCylinder;\r\n  }\r\n\r\n  get [COLLISION_TYPES.sphereTrimesh]() {\r\n    return this.sphereTrimesh;\r\n  }\r\n\r\n  get [COLLISION_TYPES.planeTrimesh]() {\r\n    return this.planeTrimesh;\r\n  } // get [COLLISION_TYPES.convexTrimesh]() {\r\n  //   return this.convexTrimesh\r\n  // }\r\n\r\n\r\n  constructor(world) {\r\n    this.contactPointPool = [];\r\n    this.frictionEquationPool = [];\r\n    this.result = [];\r\n    this.frictionResult = [];\r\n    this.v3pool = new Vec3Pool();\r\n    this.world = world;\r\n    this.currentContactMaterial = world.defaultContactMaterial;\r\n    this.enableFrictionReduction = false;\r\n  }\r\n  /**\r\n   * Make a contact object, by using the internal pool or creating a new one.\r\n   */\r\n\r\n\r\n  createContactEquation(bi, bj, si, sj, overrideShapeA, overrideShapeB) {\r\n    let c;\r\n\r\n    if (this.contactPointPool.length) {\r\n      c = this.contactPointPool.pop();\r\n      c.bi = bi;\r\n      c.bj = bj;\r\n    } else {\r\n      c = new ContactEquation(bi, bj);\r\n    }\r\n\r\n    c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\r\n    const cm = this.currentContactMaterial;\r\n    c.restitution = cm.restitution;\r\n    c.setSpookParams(cm.contactEquationStiffness, cm.contactEquationRelaxation, this.world.dt);\r\n    const matA = si.material || bi.material;\r\n    const matB = sj.material || bj.material;\r\n\r\n    if (matA && matB && matA.restitution >= 0 && matB.restitution >= 0) {\r\n      c.restitution = matA.restitution * matB.restitution;\r\n    }\r\n\r\n    c.si = overrideShapeA || si;\r\n    c.sj = overrideShapeB || sj;\r\n    return c;\r\n  }\r\n\r\n  createFrictionEquationsFromContact(contactEquation, outArray) {\r\n    const bodyA = contactEquation.bi;\r\n    const bodyB = contactEquation.bj;\r\n    const shapeA = contactEquation.si;\r\n    const shapeB = contactEquation.sj;\r\n    const world = this.world;\r\n    const cm = this.currentContactMaterial; // If friction or restitution were specified in the material, use them\r\n\r\n    let friction = cm.friction;\r\n    const matA = shapeA.material || bodyA.material;\r\n    const matB = shapeB.material || bodyB.material;\r\n\r\n    if (matA && matB && matA.friction >= 0 && matB.friction >= 0) {\r\n      friction = matA.friction * matB.friction;\r\n    }\r\n\r\n    if (friction > 0) {\r\n      // Create 2 tangent equations\r\n      // Users may provide a force different from global gravity to use when computing contact friction.\r\n      const mug = friction * (world.frictionGravity || world.gravity).length();\r\n      let reducedMass = bodyA.invMass + bodyB.invMass;\r\n\r\n      if (reducedMass > 0) {\r\n        reducedMass = 1 / reducedMass;\r\n      }\r\n\r\n      const pool = this.frictionEquationPool;\r\n      const c1 = pool.length ? pool.pop() : new FrictionEquation(bodyA, bodyB, mug * reducedMass);\r\n      const c2 = pool.length ? pool.pop() : new FrictionEquation(bodyA, bodyB, mug * reducedMass);\r\n      c1.bi = c2.bi = bodyA;\r\n      c1.bj = c2.bj = bodyB;\r\n      c1.minForce = c2.minForce = -mug * reducedMass;\r\n      c1.maxForce = c2.maxForce = mug * reducedMass; // Copy over the relative vectors\r\n\r\n      c1.ri.copy(contactEquation.ri);\r\n      c1.rj.copy(contactEquation.rj);\r\n      c2.ri.copy(contactEquation.ri);\r\n      c2.rj.copy(contactEquation.rj); // Construct tangents\r\n\r\n      contactEquation.ni.tangents(c1.t, c2.t); // Set spook params\r\n\r\n      c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\r\n      c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\r\n      c1.enabled = c2.enabled = contactEquation.enabled;\r\n      outArray.push(c1, c2);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  /**\r\n   * Take the average N latest contact point on the plane.\r\n   */\r\n\r\n\r\n  createFrictionFromAverage(numContacts) {\r\n    // The last contactEquation\r\n    let c = this.result[this.result.length - 1]; // Create the result: two \"average\" friction equations\r\n\r\n    if (!this.createFrictionEquationsFromContact(c, this.frictionResult) || numContacts === 1) {\r\n      return;\r\n    }\r\n\r\n    const f1 = this.frictionResult[this.frictionResult.length - 2];\r\n    const f2 = this.frictionResult[this.frictionResult.length - 1];\r\n    averageNormal.setZero();\r\n    averageContactPointA.setZero();\r\n    averageContactPointB.setZero();\r\n    const bodyA = c.bi;\r\n    c.bj;\r\n\r\n    for (let i = 0; i !== numContacts; i++) {\r\n      c = this.result[this.result.length - 1 - i];\r\n\r\n      if (c.bi !== bodyA) {\r\n        averageNormal.vadd(c.ni, averageNormal);\r\n        averageContactPointA.vadd(c.ri, averageContactPointA);\r\n        averageContactPointB.vadd(c.rj, averageContactPointB);\r\n      } else {\r\n        averageNormal.vsub(c.ni, averageNormal);\r\n        averageContactPointA.vadd(c.rj, averageContactPointA);\r\n        averageContactPointB.vadd(c.ri, averageContactPointB);\r\n      }\r\n    }\r\n\r\n    const invNumContacts = 1 / numContacts;\r\n    averageContactPointA.scale(invNumContacts, f1.ri);\r\n    averageContactPointB.scale(invNumContacts, f1.rj);\r\n    f2.ri.copy(f1.ri); // Should be the same\r\n\r\n    f2.rj.copy(f1.rj);\r\n    averageNormal.normalize();\r\n    averageNormal.tangents(f1.t, f2.t); // return eq;\r\n  }\r\n  /**\r\n   * Generate all contacts between a list of body pairs\r\n   * @param p1 Array of body indices\r\n   * @param p2 Array of body indices\r\n   * @param result Array to store generated contacts\r\n   * @param oldcontacts Optional. Array of reusable contact objects\r\n   */\r\n\r\n\r\n  getContacts(p1, p2, world, result, oldcontacts, frictionResult, frictionPool) {\r\n    // Save old contact objects\r\n    this.contactPointPool = oldcontacts;\r\n    this.frictionEquationPool = frictionPool;\r\n    this.result = result;\r\n    this.frictionResult = frictionResult;\r\n    const qi = tmpQuat1;\r\n    const qj = tmpQuat2;\r\n    const xi = tmpVec1;\r\n    const xj = tmpVec2;\r\n\r\n    for (let k = 0, N = p1.length; k !== N; k++) {\r\n      // Get current collision bodies\r\n      const bi = p1[k];\r\n      const bj = p2[k]; // Get contact material\r\n\r\n      let bodyContactMaterial = null;\r\n\r\n      if (bi.material && bj.material) {\r\n        bodyContactMaterial = world.getContactMaterial(bi.material, bj.material) || null;\r\n      }\r\n\r\n      const justTest = bi.type & Body.KINEMATIC && bj.type & Body.STATIC || bi.type & Body.STATIC && bj.type & Body.KINEMATIC || bi.type & Body.KINEMATIC && bj.type & Body.KINEMATIC;\r\n\r\n      for (let i = 0; i < bi.shapes.length; i++) {\r\n        bi.quaternion.mult(bi.shapeOrientations[i], qi);\r\n        bi.quaternion.vmult(bi.shapeOffsets[i], xi);\r\n        xi.vadd(bi.position, xi);\r\n        const si = bi.shapes[i];\r\n\r\n        for (let j = 0; j < bj.shapes.length; j++) {\r\n          // Compute world transform of shapes\r\n          bj.quaternion.mult(bj.shapeOrientations[j], qj);\r\n          bj.quaternion.vmult(bj.shapeOffsets[j], xj);\r\n          xj.vadd(bj.position, xj);\r\n          const sj = bj.shapes[j];\r\n\r\n          if (!(si.collisionFilterMask & sj.collisionFilterGroup && sj.collisionFilterMask & si.collisionFilterGroup)) {\r\n            continue;\r\n          }\r\n\r\n          if (xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius) {\r\n            continue;\r\n          } // Get collision material\r\n\r\n\r\n          let shapeContactMaterial = null;\r\n\r\n          if (si.material && sj.material) {\r\n            shapeContactMaterial = world.getContactMaterial(si.material, sj.material) || null;\r\n          }\r\n\r\n          this.currentContactMaterial = shapeContactMaterial || bodyContactMaterial || world.defaultContactMaterial; // Get contacts\r\n\r\n          const resolverIndex = si.type | sj.type;\r\n          const resolver = this[resolverIndex];\r\n\r\n          if (resolver) {\r\n            let retval = false; // TO DO: investigate why sphereParticle and convexParticle\r\n            // resolvers expect si and sj shapes to be in reverse order\r\n            // (i.e. larger integer value type first instead of smaller first)\r\n\r\n            if (si.type < sj.type) {\r\n              retval = resolver.call(this, si, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\r\n            } else {\r\n              retval = resolver.call(this, sj, si, xj, xi, qj, qi, bj, bi, si, sj, justTest);\r\n            }\r\n\r\n            if (retval && justTest) {\r\n              // Register overlap\r\n              world.shapeOverlapKeeper.set(si.id, sj.id);\r\n              world.bodyOverlapKeeper.set(bi.id, bj.id);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  sphereSphere(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\r\n    if (justTest) {\r\n      return xi.distanceSquared(xj) < (si.radius + sj.radius) ** 2;\r\n    } // We will have only one contact in this case\r\n\r\n\r\n    const contactEq = this.createContactEquation(bi, bj, si, sj, rsi, rsj); // Contact normal\r\n\r\n    xj.vsub(xi, contactEq.ni);\r\n    contactEq.ni.normalize(); // Contact point locations\r\n\r\n    contactEq.ri.copy(contactEq.ni);\r\n    contactEq.rj.copy(contactEq.ni);\r\n    contactEq.ri.scale(si.radius, contactEq.ri);\r\n    contactEq.rj.scale(-sj.radius, contactEq.rj);\r\n    contactEq.ri.vadd(xi, contactEq.ri);\r\n    contactEq.ri.vsub(bi.position, contactEq.ri);\r\n    contactEq.rj.vadd(xj, contactEq.rj);\r\n    contactEq.rj.vsub(bj.position, contactEq.rj);\r\n    this.result.push(contactEq);\r\n    this.createFrictionEquationsFromContact(contactEq, this.frictionResult);\r\n  }\r\n\r\n  spherePlane(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\r\n    // We will have one contact in this case\r\n    const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj); // Contact normal\r\n\r\n    r.ni.set(0, 0, 1);\r\n    qj.vmult(r.ni, r.ni);\r\n    r.ni.negate(r.ni); // body i is the sphere, flip normal\r\n\r\n    r.ni.normalize(); // Needed?\r\n    // Vector from sphere center to contact point\r\n\r\n    r.ni.scale(si.radius, r.ri); // Project down sphere on plane\r\n\r\n    xi.vsub(xj, point_on_plane_to_sphere);\r\n    r.ni.scale(r.ni.dot(point_on_plane_to_sphere), plane_to_sphere_ortho);\r\n    point_on_plane_to_sphere.vsub(plane_to_sphere_ortho, r.rj); // The sphere position projected to plane\r\n\r\n    if (-point_on_plane_to_sphere.dot(r.ni) <= si.radius) {\r\n      if (justTest) {\r\n        return true;\r\n      } // Make it relative to the body\r\n\r\n\r\n      const ri = r.ri;\r\n      const rj = r.rj;\r\n      ri.vadd(xi, ri);\r\n      ri.vsub(bi.position, ri);\r\n      rj.vadd(xj, rj);\r\n      rj.vsub(bj.position, rj);\r\n      this.result.push(r);\r\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n  }\r\n\r\n  boxBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    sj.convexPolyhedronRepresentation.material = sj.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\r\n    return this.convexConvex(si.convexPolyhedronRepresentation, sj.convexPolyhedronRepresentation, xi, xj, qi, qj, bi, bj, si, sj, justTest);\r\n  }\r\n\r\n  sphereBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\r\n    const v3pool = this.v3pool; // we refer to the box as body j\r\n\r\n    const sides = sphereBox_sides;\r\n    xi.vsub(xj, box_to_sphere);\r\n    sj.getSideNormals(sides, qj);\r\n    const R = si.radius;\r\n\r\n    let found = false; // Store the resulting side penetration info\r\n\r\n    const side_ns = sphereBox_side_ns;\r\n    const side_ns1 = sphereBox_side_ns1;\r\n    const side_ns2 = sphereBox_side_ns2;\r\n    let side_h = null;\r\n    let side_penetrations = 0;\r\n    let side_dot1 = 0;\r\n    let side_dot2 = 0;\r\n    let side_distance = null;\r\n\r\n    for (let idx = 0, nsides = sides.length; idx !== nsides && found === false; idx++) {\r\n      // Get the plane side normal (ns)\r\n      const ns = sphereBox_ns;\r\n      ns.copy(sides[idx]);\r\n      const h = ns.length();\r\n      ns.normalize(); // The normal/distance dot product tells which side of the plane we are\r\n\r\n      const dot = box_to_sphere.dot(ns);\r\n\r\n      if (dot < h + R && dot > 0) {\r\n        // Intersects plane. Now check the other two dimensions\r\n        const ns1 = sphereBox_ns1;\r\n        const ns2 = sphereBox_ns2;\r\n        ns1.copy(sides[(idx + 1) % 3]);\r\n        ns2.copy(sides[(idx + 2) % 3]);\r\n        const h1 = ns1.length();\r\n        const h2 = ns2.length();\r\n        ns1.normalize();\r\n        ns2.normalize();\r\n        const dot1 = box_to_sphere.dot(ns1);\r\n        const dot2 = box_to_sphere.dot(ns2);\r\n\r\n        if (dot1 < h1 && dot1 > -h1 && dot2 < h2 && dot2 > -h2) {\r\n          const dist = Math.abs(dot - h - R);\r\n\r\n          if (side_distance === null || dist < side_distance) {\r\n            side_distance = dist;\r\n            side_dot1 = dot1;\r\n            side_dot2 = dot2;\r\n            side_h = h;\r\n            side_ns.copy(ns);\r\n            side_ns1.copy(ns1);\r\n            side_ns2.copy(ns2);\r\n            side_penetrations++;\r\n\r\n            if (justTest) {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (side_penetrations) {\r\n      found = true;\r\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\r\n      side_ns.scale(-R, r.ri); // Sphere r\r\n\r\n      r.ni.copy(side_ns);\r\n      r.ni.negate(r.ni); // Normal should be out of sphere\r\n\r\n      side_ns.scale(side_h, side_ns);\r\n      side_ns1.scale(side_dot1, side_ns1);\r\n      side_ns.vadd(side_ns1, side_ns);\r\n      side_ns2.scale(side_dot2, side_ns2);\r\n      side_ns.vadd(side_ns2, r.rj); // Make relative to bodies\r\n\r\n      r.ri.vadd(xi, r.ri);\r\n      r.ri.vsub(bi.position, r.ri);\r\n      r.rj.vadd(xj, r.rj);\r\n      r.rj.vsub(bj.position, r.rj);\r\n      this.result.push(r);\r\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    } // Check corners\r\n\r\n\r\n    let rj = v3pool.get();\r\n    const sphere_to_corner = sphereBox_sphere_to_corner;\r\n\r\n    for (let j = 0; j !== 2 && !found; j++) {\r\n      for (let k = 0; k !== 2 && !found; k++) {\r\n        for (let l = 0; l !== 2 && !found; l++) {\r\n          rj.set(0, 0, 0);\r\n\r\n          if (j) {\r\n            rj.vadd(sides[0], rj);\r\n          } else {\r\n            rj.vsub(sides[0], rj);\r\n          }\r\n\r\n          if (k) {\r\n            rj.vadd(sides[1], rj);\r\n          } else {\r\n            rj.vsub(sides[1], rj);\r\n          }\r\n\r\n          if (l) {\r\n            rj.vadd(sides[2], rj);\r\n          } else {\r\n            rj.vsub(sides[2], rj);\r\n          } // World position of corner\r\n\r\n\r\n          xj.vadd(rj, sphere_to_corner);\r\n          sphere_to_corner.vsub(xi, sphere_to_corner);\r\n\r\n          if (sphere_to_corner.lengthSquared() < R * R) {\r\n            if (justTest) {\r\n              return true;\r\n            }\r\n\r\n            found = true;\r\n            const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\r\n            r.ri.copy(sphere_to_corner);\r\n            r.ri.normalize();\r\n            r.ni.copy(r.ri);\r\n            r.ri.scale(R, r.ri);\r\n            r.rj.copy(rj); // Make relative to bodies\r\n\r\n            r.ri.vadd(xi, r.ri);\r\n            r.ri.vsub(bi.position, r.ri);\r\n            r.rj.vadd(xj, r.rj);\r\n            r.rj.vsub(bj.position, r.rj);\r\n            this.result.push(r);\r\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    v3pool.release(rj);\r\n    rj = null; // Check edges\r\n\r\n    const edgeTangent = v3pool.get();\r\n    const edgeCenter = v3pool.get();\r\n    const r = v3pool.get(); // r = edge center to sphere center\r\n\r\n    const orthogonal = v3pool.get();\r\n    const dist = v3pool.get();\r\n    const Nsides = sides.length;\r\n\r\n    for (let j = 0; j !== Nsides && !found; j++) {\r\n      for (let k = 0; k !== Nsides && !found; k++) {\r\n        if (j % 3 !== k % 3) {\r\n          // Get edge tangent\r\n          sides[k].cross(sides[j], edgeTangent);\r\n          edgeTangent.normalize();\r\n          sides[j].vadd(sides[k], edgeCenter);\r\n          r.copy(xi);\r\n          r.vsub(edgeCenter, r);\r\n          r.vsub(xj, r);\r\n          const orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\r\n\r\n          edgeTangent.scale(orthonorm, orthogonal); // Vector from edge center to sphere center in the tangent direction\r\n          // Find the third side orthogonal to this one\r\n\r\n          let l = 0;\r\n\r\n          while (l === j % 3 || l === k % 3) {\r\n            l++;\r\n          } // vec from edge center to sphere projected to the plane orthogonal to the edge tangent\r\n\r\n\r\n          dist.copy(xi);\r\n          dist.vsub(orthogonal, dist);\r\n          dist.vsub(edgeCenter, dist);\r\n          dist.vsub(xj, dist); // Distances in tangent direction and distance in the plane orthogonal to it\r\n\r\n          const tdist = Math.abs(orthonorm);\r\n          const ndist = dist.length();\r\n\r\n          if (tdist < sides[l].length() && ndist < R) {\r\n            if (justTest) {\r\n              return true;\r\n            }\r\n\r\n            found = true;\r\n            const res = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\r\n            edgeCenter.vadd(orthogonal, res.rj); // box rj\r\n\r\n            res.rj.copy(res.rj);\r\n            dist.negate(res.ni);\r\n            res.ni.normalize();\r\n            res.ri.copy(res.rj);\r\n            res.ri.vadd(xj, res.ri);\r\n            res.ri.vsub(xi, res.ri);\r\n            res.ri.normalize();\r\n            res.ri.scale(R, res.ri); // Make relative to bodies\r\n\r\n            res.ri.vadd(xi, res.ri);\r\n            res.ri.vsub(bi.position, res.ri);\r\n            res.rj.vadd(xj, res.rj);\r\n            res.rj.vsub(bj.position, res.rj);\r\n            this.result.push(res);\r\n            this.createFrictionEquationsFromContact(res, this.frictionResult);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    v3pool.release(edgeTangent, edgeCenter, r, orthogonal, dist);\r\n  }\r\n\r\n  planeBox(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\r\n    sj.convexPolyhedronRepresentation.material = sj.material;\r\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\r\n    sj.convexPolyhedronRepresentation.id = sj.id;\r\n    return this.planeConvex(si, sj.convexPolyhedronRepresentation, xi, xj, qi, qj, bi, bj, si, sj, justTest);\r\n  }\r\n\r\n  convexConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest, faceListA, faceListB) {\r\n    const sepAxis = convexConvex_sepAxis;\r\n\r\n    if (xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius) {\r\n      return;\r\n    }\r\n\r\n    if (si.findSeparatingAxis(sj, xi, qi, xj, qj, sepAxis, faceListA, faceListB)) {\r\n      const res = [];\r\n      const q = convexConvex_q;\r\n      si.clipAgainstHull(xi, qi, sj, xj, qj, sepAxis, -100, 100, res);\r\n      let numContacts = 0;\r\n\r\n      for (let j = 0; j !== res.length; j++) {\r\n        if (justTest) {\r\n          return true;\r\n        }\r\n\r\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\r\n        const ri = r.ri;\r\n        const rj = r.rj;\r\n        sepAxis.negate(r.ni);\r\n        res[j].normal.negate(q);\r\n        q.scale(res[j].depth, q);\r\n        res[j].point.vadd(q, ri);\r\n        rj.copy(res[j].point); // Contact points are in world coordinates. Transform back to relative\r\n\r\n        ri.vsub(xi, ri);\r\n        rj.vsub(xj, rj); // Make relative to bodies\r\n\r\n        ri.vadd(xi, ri);\r\n        ri.vsub(bi.position, ri);\r\n        rj.vadd(xj, rj);\r\n        rj.vsub(bj.position, rj);\r\n        this.result.push(r);\r\n        numContacts++;\r\n\r\n        if (!this.enableFrictionReduction) {\r\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n        }\r\n      }\r\n\r\n      if (this.enableFrictionReduction && numContacts) {\r\n        this.createFrictionFromAverage(numContacts);\r\n      }\r\n    }\r\n  }\r\n\r\n  sphereConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\r\n    const v3pool = this.v3pool;\r\n    xi.vsub(xj, convex_to_sphere);\r\n    const normals = sj.faceNormals;\r\n    const faces = sj.faces;\r\n    const verts = sj.vertices;\r\n    const R = si.radius;\r\n    //     return;\r\n    // }\r\n\r\n    let found = false; // Check corners\r\n\r\n    for (let i = 0; i !== verts.length; i++) {\r\n      const v = verts[i]; // World position of corner\r\n\r\n      const worldCorner = sphereConvex_worldCorner;\r\n      qj.vmult(v, worldCorner);\r\n      xj.vadd(worldCorner, worldCorner);\r\n      const sphere_to_corner = sphereConvex_sphereToCorner;\r\n      worldCorner.vsub(xi, sphere_to_corner);\r\n\r\n      if (sphere_to_corner.lengthSquared() < R * R) {\r\n        if (justTest) {\r\n          return true;\r\n        }\r\n\r\n        found = true;\r\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\r\n        r.ri.copy(sphere_to_corner);\r\n        r.ri.normalize();\r\n        r.ni.copy(r.ri);\r\n        r.ri.scale(R, r.ri);\r\n        worldCorner.vsub(xj, r.rj); // Should be relative to the body.\r\n\r\n        r.ri.vadd(xi, r.ri);\r\n        r.ri.vsub(bi.position, r.ri); // Should be relative to the body.\r\n\r\n        r.rj.vadd(xj, r.rj);\r\n        r.rj.vsub(bj.position, r.rj);\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n        return;\r\n      }\r\n    } // Check side (plane) intersections\r\n\r\n\r\n    for (let i = 0, nfaces = faces.length; i !== nfaces && found === false; i++) {\r\n      const normal = normals[i];\r\n      const face = faces[i]; // Get world-transformed normal of the face\r\n\r\n      const worldNormal = sphereConvex_worldNormal;\r\n      qj.vmult(normal, worldNormal); // Get a world vertex from the face\r\n\r\n      const worldPoint = sphereConvex_worldPoint;\r\n      qj.vmult(verts[face[0]], worldPoint);\r\n      worldPoint.vadd(xj, worldPoint); // Get a point on the sphere, closest to the face normal\r\n\r\n      const worldSpherePointClosestToPlane = sphereConvex_worldSpherePointClosestToPlane;\r\n      worldNormal.scale(-R, worldSpherePointClosestToPlane);\r\n      xi.vadd(worldSpherePointClosestToPlane, worldSpherePointClosestToPlane); // Vector from a face point to the closest point on the sphere\r\n\r\n      const penetrationVec = sphereConvex_penetrationVec;\r\n      worldSpherePointClosestToPlane.vsub(worldPoint, penetrationVec); // The penetration. Negative value means overlap.\r\n\r\n      const penetration = penetrationVec.dot(worldNormal);\r\n      const worldPointToSphere = sphereConvex_sphereToWorldPoint;\r\n      xi.vsub(worldPoint, worldPointToSphere);\r\n\r\n      if (penetration < 0 && worldPointToSphere.dot(worldNormal) > 0) {\r\n        // Intersects plane. Now check if the sphere is inside the face polygon\r\n        const faceVerts = []; // Face vertices, in world coords\r\n\r\n        for (let j = 0, Nverts = face.length; j !== Nverts; j++) {\r\n          const worldVertex = v3pool.get();\r\n          qj.vmult(verts[face[j]], worldVertex);\r\n          xj.vadd(worldVertex, worldVertex);\r\n          faceVerts.push(worldVertex);\r\n        }\r\n\r\n        if (pointInPolygon(faceVerts, worldNormal, xi)) {\r\n          // Is the sphere center in the face polygon?\r\n          if (justTest) {\r\n            return true;\r\n          }\r\n\r\n          found = true;\r\n          const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\r\n          worldNormal.scale(-R, r.ri); // Contact offset, from sphere center to contact\r\n\r\n          worldNormal.negate(r.ni); // Normal pointing out of sphere\r\n\r\n          const penetrationVec2 = v3pool.get();\r\n          worldNormal.scale(-penetration, penetrationVec2);\r\n          const penetrationSpherePoint = v3pool.get();\r\n          worldNormal.scale(-R, penetrationSpherePoint); //xi.vsub(xj).vadd(penetrationSpherePoint).vadd(penetrationVec2 , r.rj);\r\n\r\n          xi.vsub(xj, r.rj);\r\n          r.rj.vadd(penetrationSpherePoint, r.rj);\r\n          r.rj.vadd(penetrationVec2, r.rj); // Should be relative to the body.\r\n\r\n          r.rj.vadd(xj, r.rj);\r\n          r.rj.vsub(bj.position, r.rj); // Should be relative to the body.\r\n\r\n          r.ri.vadd(xi, r.ri);\r\n          r.ri.vsub(bi.position, r.ri);\r\n          v3pool.release(penetrationVec2);\r\n          v3pool.release(penetrationSpherePoint);\r\n          this.result.push(r);\r\n          this.createFrictionEquationsFromContact(r, this.frictionResult); // Release world vertices\r\n\r\n          for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\r\n            v3pool.release(faceVerts[j]);\r\n          }\r\n\r\n          return; // We only expect *one* face contact\r\n        } else {\r\n          // Edge?\r\n          for (let j = 0; j !== face.length; j++) {\r\n            // Get two world transformed vertices\r\n            const v1 = v3pool.get();\r\n            const v2 = v3pool.get();\r\n            qj.vmult(verts[face[(j + 1) % face.length]], v1);\r\n            qj.vmult(verts[face[(j + 2) % face.length]], v2);\r\n            xj.vadd(v1, v1);\r\n            xj.vadd(v2, v2); // Construct edge vector\r\n\r\n            const edge = sphereConvex_edge;\r\n            v2.vsub(v1, edge); // Construct the same vector, but normalized\r\n\r\n            const edgeUnit = sphereConvex_edgeUnit;\r\n            edge.unit(edgeUnit); // p is xi projected onto the edge\r\n\r\n            const p = v3pool.get();\r\n            const v1_to_xi = v3pool.get();\r\n            xi.vsub(v1, v1_to_xi);\r\n            const dot = v1_to_xi.dot(edgeUnit);\r\n            edgeUnit.scale(dot, p);\r\n            p.vadd(v1, p); // Compute a vector from p to the center of the sphere\r\n\r\n            const xi_to_p = v3pool.get();\r\n            p.vsub(xi, xi_to_p); // Collision if the edge-sphere distance is less than the radius\r\n            // AND if p is in between v1 and v2\r\n\r\n            if (dot > 0 && dot * dot < edge.lengthSquared() && xi_to_p.lengthSquared() < R * R) {\r\n              // Collision if the edge-sphere distance is less than the radius\r\n              // Edge contact!\r\n              if (justTest) {\r\n                return true;\r\n              }\r\n\r\n              const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\r\n              p.vsub(xj, r.rj);\r\n              p.vsub(xi, r.ni);\r\n              r.ni.normalize();\r\n              r.ni.scale(R, r.ri); // Should be relative to the body.\r\n\r\n              r.rj.vadd(xj, r.rj);\r\n              r.rj.vsub(bj.position, r.rj); // Should be relative to the body.\r\n\r\n              r.ri.vadd(xi, r.ri);\r\n              r.ri.vsub(bi.position, r.ri);\r\n              this.result.push(r);\r\n              this.createFrictionEquationsFromContact(r, this.frictionResult); // Release world vertices\r\n\r\n              for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\r\n                v3pool.release(faceVerts[j]);\r\n              }\r\n\r\n              v3pool.release(v1);\r\n              v3pool.release(v2);\r\n              v3pool.release(p);\r\n              v3pool.release(xi_to_p);\r\n              v3pool.release(v1_to_xi);\r\n              return;\r\n            }\r\n\r\n            v3pool.release(v1);\r\n            v3pool.release(v2);\r\n            v3pool.release(p);\r\n            v3pool.release(xi_to_p);\r\n            v3pool.release(v1_to_xi);\r\n          }\r\n        } // Release world vertices\r\n\r\n\r\n        for (let j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\r\n          v3pool.release(faceVerts[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  planeConvex(planeShape, convexShape, planePosition, convexPosition, planeQuat, convexQuat, planeBody, convexBody, si, sj, justTest) {\r\n    // Simply return the points behind the plane.\r\n    const worldVertex = planeConvex_v;\r\n    const worldNormal = planeConvex_normal;\r\n    worldNormal.set(0, 0, 1);\r\n    planeQuat.vmult(worldNormal, worldNormal); // Turn normal according to plane orientation\r\n\r\n    let numContacts = 0;\r\n    const relpos = planeConvex_relpos;\r\n\r\n    for (let i = 0; i !== convexShape.vertices.length; i++) {\r\n      // Get world convex vertex\r\n      worldVertex.copy(convexShape.vertices[i]);\r\n      convexQuat.vmult(worldVertex, worldVertex);\r\n      convexPosition.vadd(worldVertex, worldVertex);\r\n      worldVertex.vsub(planePosition, relpos);\r\n      const dot = worldNormal.dot(relpos);\r\n\r\n      if (dot <= 0.0) {\r\n        if (justTest) {\r\n          return true;\r\n        }\r\n\r\n        const r = this.createContactEquation(planeBody, convexBody, planeShape, convexShape, si, sj); // Get vertex position projected on plane\r\n\r\n        const projected = planeConvex_projected;\r\n        worldNormal.scale(worldNormal.dot(relpos), projected);\r\n        worldVertex.vsub(projected, projected);\r\n        projected.vsub(planePosition, r.ri); // From plane to vertex projected on plane\r\n\r\n        r.ni.copy(worldNormal); // Contact normal is the plane normal out from plane\r\n        // rj is now just the vector from the convex center to the vertex\r\n\r\n        worldVertex.vsub(convexPosition, r.rj); // Make it relative to the body\r\n\r\n        r.ri.vadd(planePosition, r.ri);\r\n        r.ri.vsub(planeBody.position, r.ri);\r\n        r.rj.vadd(convexPosition, r.rj);\r\n        r.rj.vsub(convexBody.position, r.rj);\r\n        this.result.push(r);\r\n        numContacts++;\r\n\r\n        if (!this.enableFrictionReduction) {\r\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.enableFrictionReduction && numContacts) {\r\n      this.createFrictionFromAverage(numContacts);\r\n    }\r\n  }\r\n\r\n  boxConvex(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    return this.convexConvex(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\r\n  }\r\n\r\n  sphereHeightfield(sphereShape, hfShape, spherePos, hfPos, sphereQuat, hfQuat, sphereBody, hfBody, rsi, rsj, justTest) {\r\n    const data = hfShape.data;\r\n    const radius = sphereShape.radius;\r\n    const w = hfShape.elementSize;\r\n    const worldPillarOffset = sphereHeightfield_tmp2; // Get sphere position to heightfield local!\r\n\r\n    const localSpherePos = sphereHeightfield_tmp1;\r\n    Transform.pointToLocalFrame(hfPos, hfQuat, spherePos, localSpherePos); // Get the index of the data points to test against\r\n\r\n    let iMinX = Math.floor((localSpherePos.x - radius) / w) - 1;\r\n    let iMaxX = Math.ceil((localSpherePos.x + radius) / w) + 1;\r\n    let iMinY = Math.floor((localSpherePos.y - radius) / w) - 1;\r\n    let iMaxY = Math.ceil((localSpherePos.y + radius) / w) + 1; // Bail out if we are out of the terrain\r\n\r\n    if (iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length) {\r\n      return;\r\n    } // Clamp index to edges\r\n\r\n\r\n    if (iMinX < 0) {\r\n      iMinX = 0;\r\n    }\r\n\r\n    if (iMaxX < 0) {\r\n      iMaxX = 0;\r\n    }\r\n\r\n    if (iMinY < 0) {\r\n      iMinY = 0;\r\n    }\r\n\r\n    if (iMaxY < 0) {\r\n      iMaxY = 0;\r\n    }\r\n\r\n    if (iMinX >= data.length) {\r\n      iMinX = data.length - 1;\r\n    }\r\n\r\n    if (iMaxX >= data.length) {\r\n      iMaxX = data.length - 1;\r\n    }\r\n\r\n    if (iMaxY >= data[0].length) {\r\n      iMaxY = data[0].length - 1;\r\n    }\r\n\r\n    if (iMinY >= data[0].length) {\r\n      iMinY = data[0].length - 1;\r\n    }\r\n\r\n    const minMax = [];\r\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\r\n    const min = minMax[0];\r\n    const max = minMax[1]; // Bail out if we can't touch the bounding height box\r\n\r\n    if (localSpherePos.z - radius > max || localSpherePos.z + radius < min) {\r\n      return;\r\n    }\r\n\r\n    const result = this.result;\r\n\r\n    for (let i = iMinX; i < iMaxX; i++) {\r\n      for (let j = iMinY; j < iMaxY; j++) {\r\n        const numContactsBefore = result.length;\r\n        let intersecting = false; // Lower triangle\r\n\r\n        hfShape.getConvexTrianglePillar(i, j, false);\r\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n\r\n        if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\r\n          intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\r\n        }\r\n\r\n        if (justTest && intersecting) {\r\n          return true;\r\n        } // Upper triangle\r\n\r\n\r\n        hfShape.getConvexTrianglePillar(i, j, true);\r\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n\r\n        if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\r\n          intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\r\n        }\r\n\r\n        if (justTest && intersecting) {\r\n          return true;\r\n        }\r\n\r\n        const numContacts = result.length - numContactsBefore;\r\n\r\n        if (numContacts > 2) {\r\n          return;\r\n        }\r\n        /*\r\n          // Skip all but 1\r\n          for (let k = 0; k < numContacts - 1; k++) {\r\n              result.pop();\r\n          }\r\n        */\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  boxHeightfield(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    return this.convexHeightfield(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\r\n  }\r\n\r\n  convexHeightfield(convexShape, hfShape, convexPos, hfPos, convexQuat, hfQuat, convexBody, hfBody, rsi, rsj, justTest) {\r\n    const data = hfShape.data;\r\n    const w = hfShape.elementSize;\r\n    const radius = convexShape.boundingSphereRadius;\r\n    const worldPillarOffset = convexHeightfield_tmp2;\r\n    const faceList = convexHeightfield_faceList; // Get sphere position to heightfield local!\r\n\r\n    const localConvexPos = convexHeightfield_tmp1;\r\n    Transform.pointToLocalFrame(hfPos, hfQuat, convexPos, localConvexPos); // Get the index of the data points to test against\r\n\r\n    let iMinX = Math.floor((localConvexPos.x - radius) / w) - 1;\r\n    let iMaxX = Math.ceil((localConvexPos.x + radius) / w) + 1;\r\n    let iMinY = Math.floor((localConvexPos.y - radius) / w) - 1;\r\n    let iMaxY = Math.ceil((localConvexPos.y + radius) / w) + 1; // Bail out if we are out of the terrain\r\n\r\n    if (iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length) {\r\n      return;\r\n    } // Clamp index to edges\r\n\r\n\r\n    if (iMinX < 0) {\r\n      iMinX = 0;\r\n    }\r\n\r\n    if (iMaxX < 0) {\r\n      iMaxX = 0;\r\n    }\r\n\r\n    if (iMinY < 0) {\r\n      iMinY = 0;\r\n    }\r\n\r\n    if (iMaxY < 0) {\r\n      iMaxY = 0;\r\n    }\r\n\r\n    if (iMinX >= data.length) {\r\n      iMinX = data.length - 1;\r\n    }\r\n\r\n    if (iMaxX >= data.length) {\r\n      iMaxX = data.length - 1;\r\n    }\r\n\r\n    if (iMaxY >= data[0].length) {\r\n      iMaxY = data[0].length - 1;\r\n    }\r\n\r\n    if (iMinY >= data[0].length) {\r\n      iMinY = data[0].length - 1;\r\n    }\r\n\r\n    const minMax = [];\r\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\r\n    const min = minMax[0];\r\n    const max = minMax[1]; // Bail out if we're cant touch the bounding height box\r\n\r\n    if (localConvexPos.z - radius > max || localConvexPos.z + radius < min) {\r\n      return;\r\n    }\r\n\r\n    for (let i = iMinX; i < iMaxX; i++) {\r\n      for (let j = iMinY; j < iMaxY; j++) {\r\n        let intersecting = false; // Lower triangle\r\n\r\n        hfShape.getConvexTrianglePillar(i, j, false);\r\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n\r\n        if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\r\n          intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\r\n        }\r\n\r\n        if (justTest && intersecting) {\r\n          return true;\r\n        } // Upper triangle\r\n\r\n\r\n        hfShape.getConvexTrianglePillar(i, j, true);\r\n        Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\r\n\r\n        if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\r\n          intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\r\n        }\r\n\r\n        if (justTest && intersecting) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  sphereParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\r\n    // The normal is the unit vector from sphere center to particle center\r\n    const normal = particleSphere_normal;\r\n    normal.set(0, 0, 1);\r\n    xi.vsub(xj, normal);\r\n    const lengthSquared = normal.lengthSquared();\r\n\r\n    if (lengthSquared <= sj.radius * sj.radius) {\r\n      if (justTest) {\r\n        return true;\r\n      }\r\n\r\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\r\n      normal.normalize();\r\n      r.rj.copy(normal);\r\n      r.rj.scale(sj.radius, r.rj);\r\n      r.ni.copy(normal); // Contact normal\r\n\r\n      r.ni.negate(r.ni);\r\n      r.ri.set(0, 0, 0); // Center of particle\r\n\r\n      this.result.push(r);\r\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n  }\r\n\r\n  planeParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\r\n    const normal = particlePlane_normal;\r\n    normal.set(0, 0, 1);\r\n    bj.quaternion.vmult(normal, normal); // Turn normal according to plane orientation\r\n\r\n    const relpos = particlePlane_relpos;\r\n    xi.vsub(bj.position, relpos);\r\n    const dot = normal.dot(relpos);\r\n\r\n    if (dot <= 0.0) {\r\n      if (justTest) {\r\n        return true;\r\n      }\r\n\r\n      const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\r\n      r.ni.copy(normal); // Contact normal is the plane normal\r\n\r\n      r.ni.negate(r.ni);\r\n      r.ri.set(0, 0, 0); // Center of particle\r\n      // Get particle position projected on plane\r\n\r\n      const projected = particlePlane_projected;\r\n      normal.scale(normal.dot(xi), projected);\r\n      xi.vsub(projected, projected); //projected.vadd(bj.position,projected);\r\n      // rj is now the projected world position minus plane position\r\n\r\n      r.rj.copy(projected);\r\n      this.result.push(r);\r\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n    }\r\n  }\r\n\r\n  boxParticle(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\r\n    si.convexPolyhedronRepresentation.material = si.material;\r\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\r\n    return this.convexParticle(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\r\n  }\r\n\r\n  convexParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\r\n    let penetratedFaceIndex = -1;\r\n    const penetratedFaceNormal = convexParticle_penetratedFaceNormal;\r\n    const worldPenetrationVec = convexParticle_worldPenetrationVec;\r\n    let minPenetration = null;\r\n\r\n    const local = convexParticle_local;\r\n    local.copy(xi);\r\n    local.vsub(xj, local); // Convert position to relative the convex origin\r\n\r\n    qj.conjugate(cqj);\r\n    cqj.vmult(local, local);\r\n\r\n    if (sj.pointIsInside(local)) {\r\n      if (sj.worldVerticesNeedsUpdate) {\r\n        sj.computeWorldVertices(xj, qj);\r\n      }\r\n\r\n      if (sj.worldFaceNormalsNeedsUpdate) {\r\n        sj.computeWorldFaceNormals(qj);\r\n      } // For each world polygon in the polyhedra\r\n\r\n\r\n      for (let i = 0, nfaces = sj.faces.length; i !== nfaces; i++) {\r\n        // Construct world face vertices\r\n        const verts = [sj.worldVertices[sj.faces[i][0]]];\r\n        const normal = sj.worldFaceNormals[i]; // Check how much the particle penetrates the polygon plane.\r\n\r\n        xi.vsub(verts[0], convexParticle_vertexToParticle);\r\n        const penetration = -normal.dot(convexParticle_vertexToParticle);\r\n\r\n        if (minPenetration === null || Math.abs(penetration) < Math.abs(minPenetration)) {\r\n          if (justTest) {\r\n            return true;\r\n          }\r\n\r\n          minPenetration = penetration;\r\n          penetratedFaceIndex = i;\r\n          penetratedFaceNormal.copy(normal);\r\n        }\r\n      }\r\n\r\n      if (penetratedFaceIndex !== -1) {\r\n        // Setup contact\r\n        const r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\r\n        penetratedFaceNormal.scale(minPenetration, worldPenetrationVec); // rj is the particle position projected to the face\r\n\r\n        worldPenetrationVec.vadd(xi, worldPenetrationVec);\r\n        worldPenetrationVec.vsub(xj, worldPenetrationVec);\r\n        r.rj.copy(worldPenetrationVec); //const projectedToFace = xi.vsub(xj).vadd(worldPenetrationVec);\r\n        //projectedToFace.copy(r.rj);\r\n        //qj.vmult(r.rj,r.rj);\r\n\r\n        penetratedFaceNormal.negate(r.ni); // Contact normal\r\n\r\n        r.ri.set(0, 0, 0); // Center of particle\r\n\r\n        const ri = r.ri;\r\n        const rj = r.rj; // Make relative to bodies\r\n\r\n        ri.vadd(xi, ri);\r\n        ri.vsub(bi.position, ri);\r\n        rj.vadd(xj, rj);\r\n        rj.vsub(bj.position, rj);\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n      } else {\r\n        console.warn('Point found inside convex, but did not find penetrating face!');\r\n      }\r\n    }\r\n  }\r\n\r\n  heightfieldCylinder(hfShape, convexShape, hfPos, convexPos, hfQuat, convexQuat, hfBody, convexBody, rsi, rsj, justTest) {\r\n    return this.convexHeightfield(convexShape, hfShape, convexPos, hfPos, convexQuat, hfQuat, convexBody, hfBody, rsi, rsj, justTest);\r\n  }\r\n\r\n  particleCylinder(si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\r\n    return this.convexParticle(sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest);\r\n  }\r\n\r\n  sphereTrimesh(sphereShape, trimeshShape, spherePos, trimeshPos, sphereQuat, trimeshQuat, sphereBody, trimeshBody, rsi, rsj, justTest) {\r\n    const edgeVertexA = sphereTrimesh_edgeVertexA;\r\n    const edgeVertexB = sphereTrimesh_edgeVertexB;\r\n    const edgeVector = sphereTrimesh_edgeVector;\r\n    const edgeVectorUnit = sphereTrimesh_edgeVectorUnit;\r\n    const localSpherePos = sphereTrimesh_localSpherePos;\r\n    const tmp = sphereTrimesh_tmp;\r\n    const localSphereAABB = sphereTrimesh_localSphereAABB;\r\n    const v2 = sphereTrimesh_v2;\r\n    const relpos = sphereTrimesh_relpos;\r\n    const triangles = sphereTrimesh_triangles; // Convert sphere position to local in the trimesh\r\n\r\n    Transform.pointToLocalFrame(trimeshPos, trimeshQuat, spherePos, localSpherePos); // Get the aabb of the sphere locally in the trimesh\r\n\r\n    const sphereRadius = sphereShape.radius;\r\n    localSphereAABB.lowerBound.set(localSpherePos.x - sphereRadius, localSpherePos.y - sphereRadius, localSpherePos.z - sphereRadius);\r\n    localSphereAABB.upperBound.set(localSpherePos.x + sphereRadius, localSpherePos.y + sphereRadius, localSpherePos.z + sphereRadius);\r\n    trimeshShape.getTrianglesInAABB(localSphereAABB, triangles); //for (let i = 0; i < trimeshShape.indices.length / 3; i++) triangles.push(i); // All\r\n    // Vertices\r\n\r\n    const v = sphereTrimesh_v;\r\n    const radiusSquared = sphereShape.radius * sphereShape.radius;\r\n\r\n    for (let i = 0; i < triangles.length; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], v); // Check vertex overlap in sphere\r\n\r\n        v.vsub(localSpherePos, relpos);\r\n\r\n        if (relpos.lengthSquared() <= radiusSquared) {\r\n          // Safe up\r\n          v2.copy(v);\r\n          Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\r\n          v.vsub(spherePos, relpos);\r\n\r\n          if (justTest) {\r\n            return true;\r\n          }\r\n\r\n          let r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\r\n          r.ni.copy(relpos);\r\n          r.ni.normalize(); // ri is the vector from sphere center to the sphere surface\r\n\r\n          r.ri.copy(r.ni);\r\n          r.ri.scale(sphereShape.radius, r.ri);\r\n          r.ri.vadd(spherePos, r.ri);\r\n          r.ri.vsub(sphereBody.position, r.ri);\r\n          r.rj.copy(v);\r\n          r.rj.vsub(trimeshBody.position, r.rj); // Store result\r\n\r\n          this.result.push(r);\r\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n        }\r\n      }\r\n    } // Check all edges\r\n\r\n\r\n    for (let i = 0; i < triangles.length; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], edgeVertexA);\r\n        trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + (j + 1) % 3], edgeVertexB);\r\n        edgeVertexB.vsub(edgeVertexA, edgeVector); // Project sphere position to the edge\r\n\r\n        localSpherePos.vsub(edgeVertexB, tmp);\r\n        const positionAlongEdgeB = tmp.dot(edgeVector);\r\n        localSpherePos.vsub(edgeVertexA, tmp);\r\n        let positionAlongEdgeA = tmp.dot(edgeVector);\r\n\r\n        if (positionAlongEdgeA > 0 && positionAlongEdgeB < 0) {\r\n          // Now check the orthogonal distance from edge to sphere center\r\n          localSpherePos.vsub(edgeVertexA, tmp);\r\n          edgeVectorUnit.copy(edgeVector);\r\n          edgeVectorUnit.normalize();\r\n          positionAlongEdgeA = tmp.dot(edgeVectorUnit);\r\n          edgeVectorUnit.scale(positionAlongEdgeA, tmp);\r\n          tmp.vadd(edgeVertexA, tmp); // tmp is now the sphere center position projected to the edge, defined locally in the trimesh frame\r\n\r\n          const dist = tmp.distanceTo(localSpherePos);\r\n\r\n          if (dist < sphereShape.radius) {\r\n            if (justTest) {\r\n              return true;\r\n            }\r\n\r\n            const r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\r\n            tmp.vsub(localSpherePos, r.ni);\r\n            r.ni.normalize();\r\n            r.ni.scale(sphereShape.radius, r.ri);\r\n            r.ri.vadd(spherePos, r.ri);\r\n            r.ri.vsub(sphereBody.position, r.ri);\r\n            Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\r\n            tmp.vsub(trimeshBody.position, r.rj);\r\n            Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\r\n            Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\r\n            this.result.push(r);\r\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n          }\r\n        }\r\n      }\r\n    } // Triangle faces\r\n\r\n\r\n    const va = sphereTrimesh_va;\r\n    const vb = sphereTrimesh_vb;\r\n    const vc = sphereTrimesh_vc;\r\n    const normal = sphereTrimesh_normal;\r\n\r\n    for (let i = 0, N = triangles.length; i !== N; i++) {\r\n      trimeshShape.getTriangleVertices(triangles[i], va, vb, vc);\r\n      trimeshShape.getNormal(triangles[i], normal);\r\n      localSpherePos.vsub(va, tmp);\r\n      let dist = tmp.dot(normal);\r\n      normal.scale(dist, tmp);\r\n      localSpherePos.vsub(tmp, tmp); // tmp is now the sphere position projected to the triangle plane\r\n\r\n      dist = tmp.distanceTo(localSpherePos);\r\n\r\n      if (Ray.pointInTriangle(tmp, va, vb, vc) && dist < sphereShape.radius) {\r\n        if (justTest) {\r\n          return true;\r\n        }\r\n\r\n        let r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\r\n        tmp.vsub(localSpherePos, r.ni);\r\n        r.ni.normalize();\r\n        r.ni.scale(sphereShape.radius, r.ri);\r\n        r.ri.vadd(spherePos, r.ri);\r\n        r.ri.vsub(sphereBody.position, r.ri);\r\n        Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\r\n        tmp.vsub(trimeshBody.position, r.rj);\r\n        Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\r\n        Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n      }\r\n    }\r\n\r\n    triangles.length = 0;\r\n  }\r\n\r\n  planeTrimesh(planeShape, trimeshShape, planePos, trimeshPos, planeQuat, trimeshQuat, planeBody, trimeshBody, rsi, rsj, justTest) {\r\n    // Make contacts!\r\n    const v = new Vec3();\r\n    const normal = planeTrimesh_normal;\r\n    normal.set(0, 0, 1);\r\n    planeQuat.vmult(normal, normal); // Turn normal according to plane\r\n\r\n    for (let i = 0; i < trimeshShape.vertices.length / 3; i++) {\r\n      // Get world vertex from trimesh\r\n      trimeshShape.getVertex(i, v); // Safe up\r\n\r\n      const v2 = new Vec3();\r\n      v2.copy(v);\r\n      Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v); // Check plane side\r\n\r\n      const relpos = planeTrimesh_relpos;\r\n      v.vsub(planePos, relpos);\r\n      const dot = normal.dot(relpos);\r\n\r\n      if (dot <= 0.0) {\r\n        if (justTest) {\r\n          return true;\r\n        }\r\n\r\n        const r = this.createContactEquation(planeBody, trimeshBody, planeShape, trimeshShape, rsi, rsj);\r\n        r.ni.copy(normal); // Contact normal is the plane normal\r\n        // Get vertex position projected on plane\r\n\r\n        const projected = planeTrimesh_projected;\r\n        normal.scale(relpos.dot(normal), projected);\r\n        v.vsub(projected, projected); // ri is the projected world position minus plane position\r\n\r\n        r.ri.copy(projected);\r\n        r.ri.vsub(planeBody.position, r.ri);\r\n        r.rj.copy(v);\r\n        r.rj.vsub(trimeshBody.position, r.rj); // Store result\r\n\r\n        this.result.push(r);\r\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\r\n      }\r\n    }\r\n  } // convexTrimesh(\r\n  //   si: ConvexPolyhedron, sj: Trimesh, xi: Vec3, xj: Vec3, qi: Quaternion, qj: Quaternion,\r\n  //   bi: Body, bj: Body, rsi?: Shape | null, rsj?: Shape | null,\r\n  //   faceListA?: number[] | null, faceListB?: number[] | null,\r\n  // ) {\r\n  //   const sepAxis = convexConvex_sepAxis;\r\n  //   if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\r\n  //       return;\r\n  //   }\r\n  //   // Construct a temp hull for each triangle\r\n  //   const hullB = new ConvexPolyhedron();\r\n  //   hullB.faces = [[0,1,2]];\r\n  //   const va = new Vec3();\r\n  //   const vb = new Vec3();\r\n  //   const vc = new Vec3();\r\n  //   hullB.vertices = [\r\n  //       va,\r\n  //       vb,\r\n  //       vc\r\n  //   ];\r\n  //   for (let i = 0; i < sj.indices.length / 3; i++) {\r\n  //       const triangleNormal = new Vec3();\r\n  //       sj.getNormal(i, triangleNormal);\r\n  //       hullB.faceNormals = [triangleNormal];\r\n  //       sj.getTriangleVertices(i, va, vb, vc);\r\n  //       let d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\r\n  //       if(!d){\r\n  //           triangleNormal.scale(-1, triangleNormal);\r\n  //           d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\r\n  //           if(!d){\r\n  //               continue;\r\n  //           }\r\n  //       }\r\n  //       const res: ConvexPolyhedronContactPoint[] = [];\r\n  //       const q = convexConvex_q;\r\n  //       si.clipAgainstHull(xi,qi,hullB,xj,qj,triangleNormal,-100,100,res);\r\n  //       for(let j = 0; j !== res.length; j++){\r\n  //           const r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\r\n  //               ri = r.ri,\r\n  //               rj = r.rj;\r\n  //           r.ni.copy(triangleNormal);\r\n  //           r.ni.negate(r.ni);\r\n  //           res[j].normal.negate(q);\r\n  //           q.mult(res[j].depth, q);\r\n  //           res[j].point.vadd(q, ri);\r\n  //           rj.copy(res[j].point);\r\n  //           // Contact points are in world coordinates. Transform back to relative\r\n  //           ri.vsub(xi,ri);\r\n  //           rj.vsub(xj,rj);\r\n  //           // Make relative to bodies\r\n  //           ri.vadd(xi, ri);\r\n  //           ri.vsub(bi.position, ri);\r\n  //           rj.vadd(xj, rj);\r\n  //           rj.vsub(bj.position, rj);\r\n  //           result.push(r);\r\n  //       }\r\n  //   }\r\n  // }\r\n\r\n\r\n}\r\nconst averageNormal = new Vec3();\r\nconst averageContactPointA = new Vec3();\r\nconst averageContactPointB = new Vec3();\r\nconst tmpVec1 = new Vec3();\r\nconst tmpVec2 = new Vec3();\r\nconst tmpQuat1 = new Quaternion();\r\nconst tmpQuat2 = new Quaternion();\r\n\r\nconst planeTrimesh_normal = new Vec3();\r\nconst planeTrimesh_relpos = new Vec3();\r\nconst planeTrimesh_projected = new Vec3();\r\nconst sphereTrimesh_normal = new Vec3();\r\nconst sphereTrimesh_relpos = new Vec3();\r\nnew Vec3();\r\nconst sphereTrimesh_v = new Vec3();\r\nconst sphereTrimesh_v2 = new Vec3();\r\nconst sphereTrimesh_edgeVertexA = new Vec3();\r\nconst sphereTrimesh_edgeVertexB = new Vec3();\r\nconst sphereTrimesh_edgeVector = new Vec3();\r\nconst sphereTrimesh_edgeVectorUnit = new Vec3();\r\nconst sphereTrimesh_localSpherePos = new Vec3();\r\nconst sphereTrimesh_tmp = new Vec3();\r\nconst sphereTrimesh_va = new Vec3();\r\nconst sphereTrimesh_vb = new Vec3();\r\nconst sphereTrimesh_vc = new Vec3();\r\nconst sphereTrimesh_localSphereAABB = new AABB();\r\nconst sphereTrimesh_triangles = [];\r\nconst point_on_plane_to_sphere = new Vec3();\r\nconst plane_to_sphere_ortho = new Vec3(); // See http://bulletphysics.com/Bullet/BulletFull/SphereTriangleDetector_8cpp_source.html\r\n\r\nconst pointInPolygon_edge = new Vec3();\r\nconst pointInPolygon_edge_x_normal = new Vec3();\r\nconst pointInPolygon_vtp = new Vec3();\r\n\r\nfunction pointInPolygon(verts, normal, p) {\r\n  let positiveResult = null;\r\n  const N = verts.length;\r\n\r\n  for (let i = 0; i !== N; i++) {\r\n    const v = verts[i]; // Get edge to the next vertex\r\n\r\n    const edge = pointInPolygon_edge;\r\n    verts[(i + 1) % N].vsub(v, edge); // Get cross product between polygon normal and the edge\r\n\r\n    const edge_x_normal = pointInPolygon_edge_x_normal; //const edge_x_normal = new Vec3();\r\n\r\n    edge.cross(normal, edge_x_normal); // Get vector between point and current vertex\r\n\r\n    const vertex_to_p = pointInPolygon_vtp;\r\n    p.vsub(v, vertex_to_p); // This dot product determines which side of the edge the point is\r\n\r\n    const r = edge_x_normal.dot(vertex_to_p); // If all such dot products have same sign, we are inside the polygon.\r\n\r\n    if (positiveResult === null || r > 0 && positiveResult === true || r <= 0 && positiveResult === false) {\r\n      if (positiveResult === null) {\r\n        positiveResult = r > 0;\r\n      }\r\n\r\n      continue;\r\n    } else {\r\n      return false; // Encountered some other sign. Exit.\r\n    }\r\n  } // If we got here, all dot products were of the same sign.\r\n\r\n\r\n  return true;\r\n}\r\n\r\nconst box_to_sphere = new Vec3();\r\nconst sphereBox_ns = new Vec3();\r\nconst sphereBox_ns1 = new Vec3();\r\nconst sphereBox_ns2 = new Vec3();\r\nconst sphereBox_sides = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\r\nconst sphereBox_sphere_to_corner = new Vec3();\r\nconst sphereBox_side_ns = new Vec3();\r\nconst sphereBox_side_ns1 = new Vec3();\r\nconst sphereBox_side_ns2 = new Vec3();\r\nconst convex_to_sphere = new Vec3();\r\nconst sphereConvex_edge = new Vec3();\r\nconst sphereConvex_edgeUnit = new Vec3();\r\nconst sphereConvex_sphereToCorner = new Vec3();\r\nconst sphereConvex_worldCorner = new Vec3();\r\nconst sphereConvex_worldNormal = new Vec3();\r\nconst sphereConvex_worldPoint = new Vec3();\r\nconst sphereConvex_worldSpherePointClosestToPlane = new Vec3();\r\nconst sphereConvex_penetrationVec = new Vec3();\r\nconst sphereConvex_sphereToWorldPoint = new Vec3();\r\nnew Vec3();\r\nnew Vec3();\r\nconst planeConvex_v = new Vec3();\r\nconst planeConvex_normal = new Vec3();\r\nconst planeConvex_relpos = new Vec3();\r\nconst planeConvex_projected = new Vec3();\r\nconst convexConvex_sepAxis = new Vec3();\r\nconst convexConvex_q = new Vec3();\r\nconst particlePlane_normal = new Vec3();\r\nconst particlePlane_relpos = new Vec3();\r\nconst particlePlane_projected = new Vec3();\r\nconst particleSphere_normal = new Vec3(); // WIP\r\n\r\nconst cqj = new Quaternion();\r\nconst convexParticle_local = new Vec3();\r\nnew Vec3();\r\nconst convexParticle_penetratedFaceNormal = new Vec3();\r\nconst convexParticle_vertexToParticle = new Vec3();\r\nconst convexParticle_worldPenetrationVec = new Vec3();\r\nconst convexHeightfield_tmp1 = new Vec3();\r\nconst convexHeightfield_tmp2 = new Vec3();\r\nconst convexHeightfield_faceList = [0];\r\nconst sphereHeightfield_tmp1 = new Vec3();\r\nconst sphereHeightfield_tmp2 = new Vec3();\r\n\r\nclass OverlapKeeper {\r\n  /**\r\n   * @todo Remove useless constructor\r\n   */\r\n  constructor() {\r\n    this.current = [];\r\n    this.previous = [];\r\n  }\r\n  /**\r\n   * getKey\r\n   */\r\n\r\n\r\n  getKey(i, j) {\r\n    if (j < i) {\r\n      const temp = j;\r\n      j = i;\r\n      i = temp;\r\n    }\r\n\r\n    return i << 16 | j;\r\n  }\r\n  /**\r\n   * set\r\n   */\r\n\r\n\r\n  set(i, j) {\r\n    // Insertion sort. This way the diff will have linear complexity.\r\n    const key = this.getKey(i, j);\r\n    const current = this.current;\r\n    let index = 0;\r\n\r\n    while (key > current[index]) {\r\n      index++;\r\n    }\r\n\r\n    if (key === current[index]) {\r\n      return; // Pair was already added\r\n    }\r\n\r\n    for (let j = current.length - 1; j >= index; j--) {\r\n      current[j + 1] = current[j];\r\n    }\r\n\r\n    current[index] = key;\r\n  }\r\n  /**\r\n   * tick\r\n   */\r\n\r\n\r\n  tick() {\r\n    const tmp = this.current;\r\n    this.current = this.previous;\r\n    this.previous = tmp;\r\n    this.current.length = 0;\r\n  }\r\n  /**\r\n   * getDiff\r\n   */\r\n\r\n\r\n  getDiff(additions, removals) {\r\n    const a = this.current;\r\n    const b = this.previous;\r\n    const al = a.length;\r\n    const bl = b.length;\r\n    let j = 0;\r\n\r\n    for (let i = 0; i < al; i++) {\r\n      let found = false;\r\n      const keyA = a[i];\r\n\r\n      while (keyA > b[j]) {\r\n        j++;\r\n      }\r\n\r\n      found = keyA === b[j];\r\n\r\n      if (!found) {\r\n        unpackAndPush(additions, keyA);\r\n      }\r\n    }\r\n\r\n    j = 0;\r\n\r\n    for (let i = 0; i < bl; i++) {\r\n      let found = false;\r\n      const keyB = b[i];\r\n\r\n      while (keyB > a[j]) {\r\n        j++;\r\n      }\r\n\r\n      found = a[j] === keyB;\r\n\r\n      if (!found) {\r\n        unpackAndPush(removals, keyB);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction unpackAndPush(array, key) {\r\n  array.push((key & 0xffff0000) >> 16, key & 0x0000ffff);\r\n}\r\n\r\nconst getKey = (i, j) => i < j ? `${i}-${j}` : `${j}-${i}`;\r\n/**\r\n * TupleDictionary\r\n */\r\n\r\n\r\nclass TupleDictionary {\r\n  constructor() {\r\n    this.data = {\r\n      keys: []\r\n    };\r\n  }\r\n\r\n  /** get */\r\n  get(i, j) {\r\n    const key = getKey(i, j);\r\n    return this.data[key];\r\n  }\r\n  /** set */\r\n\r\n\r\n  set(i, j, value) {\r\n    const key = getKey(i, j); // Check if key already exists\r\n\r\n    if (!this.get(i, j)) {\r\n      this.data.keys.push(key);\r\n    }\r\n\r\n    this.data[key] = value;\r\n  }\r\n  /** delete */\r\n\r\n\r\n  delete(i, j) {\r\n    const key = getKey(i, j);\r\n    const index = this.data.keys.indexOf(key);\r\n\r\n    if (index !== -1) {\r\n      this.data.keys.splice(index, 1);\r\n    }\r\n\r\n    delete this.data[key];\r\n  }\r\n  /** reset */\r\n\r\n\r\n  reset() {\r\n    const data = this.data;\r\n    const keys = data.keys;\r\n\r\n    while (keys.length > 0) {\r\n      const key = keys.pop();\r\n      delete data[key];\r\n    }\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * The physics world\r\n */\r\nclass World extends EventTarget {\r\n  /**\r\n   * Currently / last used timestep. Is set to -1 if not available. This value is updated before each internal step, which means that it is \"fresh\" inside event callbacks.\r\n   */\r\n\r\n  /**\r\n   * Makes bodies go to sleep when they've been inactive.\r\n   * @default false\r\n   */\r\n\r\n  /**\r\n   * All the current contacts (instances of ContactEquation) in the world.\r\n   */\r\n\r\n  /**\r\n   * How often to normalize quaternions. Set to 0 for every step, 1 for every second etc.. A larger value increases performance. If bodies tend to explode, set to a smaller value (zero to be sure nothing can go wrong).\r\n   * @default 0\r\n   */\r\n\r\n  /**\r\n   * Set to true to use fast quaternion normalization. It is often enough accurate to use.\r\n   * If bodies tend to explode, set to false.\r\n   * @default false\r\n   */\r\n\r\n  /**\r\n   * The wall-clock time since simulation start.\r\n   */\r\n\r\n  /**\r\n   * Number of timesteps taken since start.\r\n   */\r\n\r\n  /**\r\n   * Default and last timestep sizes.\r\n   */\r\n\r\n  /**\r\n   * The gravity of the world.\r\n   */\r\n\r\n  /**\r\n   * Gravity to use when approximating the friction max force (mu*mass*gravity).\r\n   * If undefined, global gravity will be used.\r\n   * Use to enable friction in a World with a null gravity vector (no gravity).\r\n   */\r\n\r\n  /**\r\n   * The broadphase algorithm to use.\r\n   * @default NaiveBroadphase\r\n   */\r\n\r\n  /**\r\n   * All bodies in this world\r\n   */\r\n\r\n  /**\r\n   * True if any bodies are not sleeping, false if every body is sleeping.\r\n   */\r\n\r\n  /**\r\n   * The solver algorithm to use.\r\n   * @default GSSolver\r\n   */\r\n\r\n  /**\r\n   * collisionMatrix\r\n   */\r\n\r\n  /**\r\n   * CollisionMatrix from the previous step.\r\n   */\r\n\r\n  /**\r\n   * All added contactmaterials.\r\n   */\r\n\r\n  /**\r\n   * Used to look up a ContactMaterial given two instances of Material.\r\n   */\r\n\r\n  /**\r\n   * The default material of the bodies.\r\n   */\r\n\r\n  /**\r\n   * This contact material is used if no suitable contactmaterial is found for a contact.\r\n   */\r\n\r\n  /**\r\n   * Time accumulator for interpolation.\r\n   * @see https://gafferongames.com/game-physics/fix-your-timestep/\r\n   */\r\n\r\n  /**\r\n   * Dispatched after a body has been added to the world.\r\n   */\r\n\r\n  /**\r\n   * Dispatched after a body has been removed from the world.\r\n   */\r\n  constructor(options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    super();\r\n    this.dt = -1;\r\n    this.allowSleep = !!options.allowSleep;\r\n    this.contacts = [];\r\n    this.frictionEquations = [];\r\n    this.quatNormalizeSkip = options.quatNormalizeSkip !== undefined ? options.quatNormalizeSkip : 0;\r\n    this.quatNormalizeFast = options.quatNormalizeFast !== undefined ? options.quatNormalizeFast : false;\r\n    this.time = 0.0;\r\n    this.stepnumber = 0;\r\n    this.default_dt = 1 / 60;\r\n    this.nextId = 0;\r\n    this.gravity = new Vec3();\r\n\r\n    if (options.gravity) {\r\n      this.gravity.copy(options.gravity);\r\n    }\r\n\r\n    if (options.frictionGravity) {\r\n      this.frictionGravity = new Vec3();\r\n      this.frictionGravity.copy(options.frictionGravity);\r\n    }\r\n\r\n    this.broadphase = options.broadphase !== undefined ? options.broadphase : new NaiveBroadphase();\r\n    this.bodies = [];\r\n    this.hasActiveBodies = false;\r\n    this.solver = options.solver !== undefined ? options.solver : new GSSolver();\r\n    this.constraints = [];\r\n    this.narrowphase = new Narrowphase(this);\r\n    this.collisionMatrix = new ArrayCollisionMatrix();\r\n    this.collisionMatrixPrevious = new ArrayCollisionMatrix();\r\n    this.bodyOverlapKeeper = new OverlapKeeper();\r\n    this.shapeOverlapKeeper = new OverlapKeeper();\r\n    this.contactmaterials = [];\r\n    this.contactMaterialTable = new TupleDictionary();\r\n    this.defaultMaterial = new Material('default');\r\n    this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial, {\r\n      friction: 0.3,\r\n      restitution: 0.0\r\n    });\r\n    this.doProfiling = false;\r\n    this.profile = {\r\n      solve: 0,\r\n      makeContactConstraints: 0,\r\n      broadphase: 0,\r\n      integrate: 0,\r\n      narrowphase: 0\r\n    };\r\n    this.accumulator = 0;\r\n    this.subsystems = [];\r\n    this.addBodyEvent = {\r\n      type: 'addBody',\r\n      body: null\r\n    };\r\n    this.removeBodyEvent = {\r\n      type: 'removeBody',\r\n      body: null\r\n    };\r\n    this.idToBodyMap = {};\r\n    this.broadphase.setWorld(this);\r\n  }\r\n  /**\r\n   * Get the contact material between materials m1 and m2\r\n   * @return The contact material if it was found.\r\n   */\r\n\r\n\r\n  getContactMaterial(m1, m2) {\r\n    return this.contactMaterialTable.get(m1.id, m2.id);\r\n  }\r\n  /**\r\n   * Store old collision state info\r\n   */\r\n\r\n\r\n  collisionMatrixTick() {\r\n    const temp = this.collisionMatrixPrevious;\r\n    this.collisionMatrixPrevious = this.collisionMatrix;\r\n    this.collisionMatrix = temp;\r\n    this.collisionMatrix.reset();\r\n    this.bodyOverlapKeeper.tick();\r\n    this.shapeOverlapKeeper.tick();\r\n  }\r\n  /**\r\n   * Add a constraint to the simulation.\r\n   */\r\n\r\n\r\n  addConstraint(c) {\r\n    this.constraints.push(c);\r\n  }\r\n  /**\r\n   * Removes a constraint\r\n   */\r\n\r\n\r\n  removeConstraint(c) {\r\n    const idx = this.constraints.indexOf(c);\r\n\r\n    if (idx !== -1) {\r\n      this.constraints.splice(idx, 1);\r\n    }\r\n  }\r\n  /**\r\n   * Raycast test\r\n   * @deprecated Use .raycastAll, .raycastClosest or .raycastAny instead.\r\n   */\r\n\r\n\r\n  rayTest(from, to, result) {\r\n    if (result instanceof RaycastResult) {\r\n      // Do raycastClosest\r\n      this.raycastClosest(from, to, {\r\n        skipBackfaces: true\r\n      }, result);\r\n    } else {\r\n      // Do raycastAll\r\n      this.raycastAll(from, to, {\r\n        skipBackfaces: true\r\n      }, result);\r\n    }\r\n  }\r\n  /**\r\n   * Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.\r\n   * @return True if any body was hit.\r\n   */\r\n\r\n\r\n  raycastAll(from, to, options, callback) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    options.mode = Ray.ALL;\r\n    options.from = from;\r\n    options.to = to;\r\n    options.callback = callback;\r\n    return tmpRay.intersectWorld(this, options);\r\n  }\r\n  /**\r\n   * Ray cast, and stop at the first result. Note that the order is random - but the method is fast.\r\n   * @return True if any body was hit.\r\n   */\r\n\r\n\r\n  raycastAny(from, to, options, result) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    options.mode = Ray.ANY;\r\n    options.from = from;\r\n    options.to = to;\r\n    options.result = result;\r\n    return tmpRay.intersectWorld(this, options);\r\n  }\r\n  /**\r\n   * Ray cast, and return information of the closest hit.\r\n   * @return True if any body was hit.\r\n   */\r\n\r\n\r\n  raycastClosest(from, to, options, result) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    options.mode = Ray.CLOSEST;\r\n    options.from = from;\r\n    options.to = to;\r\n    options.result = result;\r\n    return tmpRay.intersectWorld(this, options);\r\n  }\r\n  /**\r\n   * Add a rigid body to the simulation.\r\n   * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\r\n   * @todo Adding an array of bodies should be possible. This would save some loops too\r\n   */\r\n\r\n\r\n  addBody(body) {\r\n    if (this.bodies.includes(body)) {\r\n      return;\r\n    }\r\n\r\n    body.index = this.bodies.length;\r\n    this.bodies.push(body);\r\n    body.world = this;\r\n    body.initPosition.copy(body.position);\r\n    body.initVelocity.copy(body.velocity);\r\n    body.timeLastSleepy = this.time;\r\n\r\n    if (body instanceof Body) {\r\n      body.initAngularVelocity.copy(body.angularVelocity);\r\n      body.initQuaternion.copy(body.quaternion);\r\n    }\r\n\r\n    this.collisionMatrix.setNumObjects(this.bodies.length);\r\n    this.addBodyEvent.body = body;\r\n    this.idToBodyMap[body.id] = body;\r\n    this.dispatchEvent(this.addBodyEvent);\r\n  }\r\n  /**\r\n   * Remove a rigid body from the simulation.\r\n   */\r\n\r\n\r\n  removeBody(body) {\r\n    body.world = null;\r\n    const n = this.bodies.length - 1;\r\n    const bodies = this.bodies;\r\n    const idx = bodies.indexOf(body);\r\n\r\n    if (idx !== -1) {\r\n      bodies.splice(idx, 1); // Todo: should use a garbage free method\r\n      // Recompute index\r\n\r\n      for (let i = 0; i !== bodies.length; i++) {\r\n        bodies[i].index = i;\r\n      }\r\n\r\n      this.collisionMatrix.setNumObjects(n);\r\n      this.removeBodyEvent.body = body;\r\n      delete this.idToBodyMap[body.id];\r\n      this.dispatchEvent(this.removeBodyEvent);\r\n    }\r\n  }\r\n\r\n  getBodyById(id) {\r\n    return this.idToBodyMap[id];\r\n  }\r\n  /**\r\n   * @todo Make a faster map\r\n   */\r\n\r\n\r\n  getShapeById(id) {\r\n    const bodies = this.bodies;\r\n\r\n    for (let i = 0; i < bodies.length; i++) {\r\n      const shapes = bodies[i].shapes;\r\n\r\n      for (let j = 0; j < shapes.length; j++) {\r\n        const shape = shapes[j];\r\n\r\n        if (shape.id === id) {\r\n          return shape;\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  /**\r\n   * Adds a contact material to the World\r\n   */\r\n\r\n\r\n  addContactMaterial(cmat) {\r\n    // Add contact material\r\n    this.contactmaterials.push(cmat); // Add current contact material to the material table\r\n\r\n    this.contactMaterialTable.set(cmat.materials[0].id, cmat.materials[1].id, cmat);\r\n  }\r\n  /**\r\n   * Removes a contact material from the World.\r\n   */\r\n\r\n\r\n  removeContactMaterial(cmat) {\r\n    const idx = this.contactmaterials.indexOf(cmat);\r\n\r\n    if (idx === -1) {\r\n      return;\r\n    }\r\n\r\n    this.contactmaterials.splice(idx, 1);\r\n    this.contactMaterialTable.delete(cmat.materials[0].id, cmat.materials[1].id);\r\n  }\r\n  /**\r\n   * Step the simulation forward keeping track of last called time\r\n   * to be able to step the world at a fixed rate, independently of framerate.\r\n   *\r\n   * @param dt The fixed time step size to use (default: 1 / 60).\r\n   * @param maxSubSteps Maximum number of fixed steps to take per function call (default: 10).\r\n   * @see https://gafferongames.com/post/fix_your_timestep/\r\n   * @example\r\n   *     // Run the simulation independently of framerate every 1 / 60 ms\r\n   *     world.fixedStep()\r\n   */\r\n\r\n\r\n  fixedStep(dt, maxSubSteps) {\r\n    if (dt === void 0) {\r\n      dt = 1 / 60;\r\n    }\r\n\r\n    if (maxSubSteps === void 0) {\r\n      maxSubSteps = 10;\r\n    }\r\n\r\n    const time = performance.now() / 1000; // seconds\r\n\r\n    if (!this.lastCallTime) {\r\n      this.step(dt, undefined, maxSubSteps);\r\n    } else {\r\n      const timeSinceLastCalled = time - this.lastCallTime;\r\n      this.step(dt, timeSinceLastCalled, maxSubSteps);\r\n    }\r\n\r\n    this.lastCallTime = time;\r\n  }\r\n  /**\r\n   * Step the physics world forward in time.\r\n   *\r\n   * There are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.\r\n   *\r\n   * @param dt The fixed time step size to use.\r\n   * @param timeSinceLastCalled The time elapsed since the function was last called.\r\n   * @param maxSubSteps Maximum number of fixed steps to take per function call (default: 10).\r\n   * @see https://web.archive.org/web/20180426154531/http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World#What_do_the_parameters_to_btDynamicsWorld::stepSimulation_mean.3F\r\n   * @example\r\n   *     // fixed timestepping without interpolation\r\n   *     world.step(1 / 60)\r\n   */\r\n\r\n\r\n  step(dt, timeSinceLastCalled, maxSubSteps) {\r\n    if (maxSubSteps === void 0) {\r\n      maxSubSteps = 10;\r\n    }\r\n\r\n    if (timeSinceLastCalled === undefined) {\r\n      // Fixed, simple stepping\r\n      this.internalStep(dt); // Increment time\r\n\r\n      this.time += dt;\r\n    } else {\r\n      this.accumulator += timeSinceLastCalled;\r\n      const t0 = performance.now();\r\n      let substeps = 0;\r\n\r\n      while (this.accumulator >= dt && substeps < maxSubSteps) {\r\n        // Do fixed steps to catch up\r\n        this.internalStep(dt);\r\n        this.accumulator -= dt;\r\n        substeps++;\r\n\r\n        if (performance.now() - t0 > dt * 1000) {\r\n          // The framerate is not interactive anymore.\r\n          // We are below the target framerate.\r\n          // Better bail out.\r\n          break;\r\n        }\r\n      } // Remove the excess accumulator, since we may not\r\n      // have had enough substeps available to catch up\r\n\r\n\r\n      this.accumulator = this.accumulator % dt;\r\n      const t = this.accumulator / dt;\r\n\r\n      for (let j = 0; j !== this.bodies.length; j++) {\r\n        const b = this.bodies[j];\r\n        b.previousPosition.lerp(b.position, t, b.interpolatedPosition);\r\n        b.previousQuaternion.slerp(b.quaternion, t, b.interpolatedQuaternion);\r\n        b.previousQuaternion.normalize();\r\n      }\r\n\r\n      this.time += timeSinceLastCalled;\r\n    }\r\n  }\r\n\r\n  internalStep(dt) {\r\n    this.dt = dt;\r\n    const contacts = this.contacts;\r\n    const p1 = World_step_p1;\r\n    const p2 = World_step_p2;\r\n    const N = this.bodies.length;\r\n    const bodies = this.bodies;\r\n    const solver = this.solver;\r\n    const gravity = this.gravity;\r\n    const doProfiling = this.doProfiling;\r\n    const profile = this.profile;\r\n    const DYNAMIC = Body.DYNAMIC;\r\n    let profilingStart = -Infinity;\r\n    const constraints = this.constraints;\r\n    const frictionEquationPool = World_step_frictionEquationPool;\r\n    gravity.length();\r\n    const gx = gravity.x;\r\n    const gy = gravity.y;\r\n    const gz = gravity.z;\r\n    let i = 0;\r\n\r\n    if (doProfiling) {\r\n      profilingStart = performance.now();\r\n    } // Add gravity to all objects\r\n\r\n\r\n    for (i = 0; i !== N; i++) {\r\n      const bi = bodies[i];\r\n\r\n      if (bi.type === DYNAMIC) {\r\n        // Only for dynamic bodies\r\n        const f = bi.force;\r\n        const m = bi.mass;\r\n        f.x += m * gx;\r\n        f.y += m * gy;\r\n        f.z += m * gz;\r\n      }\r\n    } // Update subsystems\r\n\r\n\r\n    for (let i = 0, Nsubsystems = this.subsystems.length; i !== Nsubsystems; i++) {\r\n      this.subsystems[i].update();\r\n    } // Collision detection\r\n\r\n\r\n    if (doProfiling) {\r\n      profilingStart = performance.now();\r\n    }\r\n\r\n    p1.length = 0; // Clean up pair arrays from last step\r\n\r\n    p2.length = 0;\r\n    this.broadphase.collisionPairs(this, p1, p2);\r\n\r\n    if (doProfiling) {\r\n      profile.broadphase = performance.now() - profilingStart;\r\n    } // Remove constrained pairs with collideConnected == false\r\n\r\n\r\n    let Nconstraints = constraints.length;\r\n\r\n    for (i = 0; i !== Nconstraints; i++) {\r\n      const c = constraints[i];\r\n\r\n      if (!c.collideConnected) {\r\n        for (let j = p1.length - 1; j >= 0; j -= 1) {\r\n          if (c.bodyA === p1[j] && c.bodyB === p2[j] || c.bodyB === p1[j] && c.bodyA === p2[j]) {\r\n            p1.splice(j, 1);\r\n            p2.splice(j, 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.collisionMatrixTick(); // Generate contacts\r\n\r\n    if (doProfiling) {\r\n      profilingStart = performance.now();\r\n    }\r\n\r\n    const oldcontacts = World_step_oldContacts;\r\n    const NoldContacts = contacts.length;\r\n\r\n    for (i = 0; i !== NoldContacts; i++) {\r\n      oldcontacts.push(contacts[i]);\r\n    }\r\n\r\n    contacts.length = 0; // Transfer FrictionEquation from current list to the pool for reuse\r\n\r\n    const NoldFrictionEquations = this.frictionEquations.length;\r\n\r\n    for (i = 0; i !== NoldFrictionEquations; i++) {\r\n      frictionEquationPool.push(this.frictionEquations[i]);\r\n    }\r\n\r\n    this.frictionEquations.length = 0;\r\n    this.narrowphase.getContacts(p1, p2, this, contacts, oldcontacts, // To be reused\r\n    this.frictionEquations, frictionEquationPool);\r\n\r\n    if (doProfiling) {\r\n      profile.narrowphase = performance.now() - profilingStart;\r\n    } // Loop over all collisions\r\n\r\n\r\n    if (doProfiling) {\r\n      profilingStart = performance.now();\r\n    } // Add all friction eqs\r\n\r\n\r\n    for (i = 0; i < this.frictionEquations.length; i++) {\r\n      solver.addEquation(this.frictionEquations[i]);\r\n    }\r\n\r\n    const ncontacts = contacts.length;\r\n\r\n    for (let k = 0; k !== ncontacts; k++) {\r\n      // Current contact\r\n      const c = contacts[k]; // Get current collision indeces\r\n\r\n      const bi = c.bi;\r\n      const bj = c.bj;\r\n      const si = c.si;\r\n      const sj = c.sj; // Get collision properties\r\n\r\n      let cm;\r\n\r\n      if (bi.material && bj.material) {\r\n        cm = this.getContactMaterial(bi.material, bj.material) || this.defaultContactMaterial;\r\n      } else {\r\n        cm = this.defaultContactMaterial;\r\n      } // c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\r\n\r\n\r\n      cm.friction; // c.restitution = cm.restitution;\r\n      // If friction or restitution were specified in the material, use them\r\n\r\n      if (bi.material && bj.material) {\r\n        if (bi.material.friction >= 0 && bj.material.friction >= 0) {\r\n          bi.material.friction * bj.material.friction;\r\n        }\r\n\r\n        if (bi.material.restitution >= 0 && bj.material.restitution >= 0) {\r\n          c.restitution = bi.material.restitution * bj.material.restitution;\r\n        }\r\n      } // c.setSpookParams(\r\n      //           cm.contactEquationStiffness,\r\n      //           cm.contactEquationRelaxation,\r\n      //           dt\r\n      //       );\r\n\r\n\r\n      solver.addEquation(c); // // Add friction constraint equation\r\n      // if(mu > 0){\r\n      // \t// Create 2 tangent equations\r\n      // \tconst mug = mu * gnorm;\r\n      // \tconst reducedMass = (bi.invMass + bj.invMass);\r\n      // \tif(reducedMass > 0){\r\n      // \t\treducedMass = 1/reducedMass;\r\n      // \t}\r\n      // \tconst pool = frictionEquationPool;\r\n      // \tconst c1 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\r\n      // \tconst c2 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\r\n      // \tthis.frictionEquations.push(c1, c2);\r\n      // \tc1.bi = c2.bi = bi;\r\n      // \tc1.bj = c2.bj = bj;\r\n      // \tc1.minForce = c2.minForce = -mug*reducedMass;\r\n      // \tc1.maxForce = c2.maxForce = mug*reducedMass;\r\n      // \t// Copy over the relative vectors\r\n      // \tc1.ri.copy(c.ri);\r\n      // \tc1.rj.copy(c.rj);\r\n      // \tc2.ri.copy(c.ri);\r\n      // \tc2.rj.copy(c.rj);\r\n      // \t// Construct tangents\r\n      // \tc.ni.tangents(c1.t, c2.t);\r\n      //           // Set spook params\r\n      //           c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\r\n      //           c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\r\n      //           c1.enabled = c2.enabled = c.enabled;\r\n      // \t// Add equations to solver\r\n      // \tsolver.addEquation(c1);\r\n      // \tsolver.addEquation(c2);\r\n      // }\r\n\r\n      if (bi.allowSleep && bi.type === Body.DYNAMIC && bi.sleepState === Body.SLEEPING && bj.sleepState === Body.AWAKE && bj.type !== Body.STATIC) {\r\n        const speedSquaredB = bj.velocity.lengthSquared() + bj.angularVelocity.lengthSquared();\r\n        const speedLimitSquaredB = bj.sleepSpeedLimit ** 2;\r\n\r\n        if (speedSquaredB >= speedLimitSquaredB * 2) {\r\n          bi.wakeUpAfterNarrowphase = true;\r\n        }\r\n      }\r\n\r\n      if (bj.allowSleep && bj.type === Body.DYNAMIC && bj.sleepState === Body.SLEEPING && bi.sleepState === Body.AWAKE && bi.type !== Body.STATIC) {\r\n        const speedSquaredA = bi.velocity.lengthSquared() + bi.angularVelocity.lengthSquared();\r\n        const speedLimitSquaredA = bi.sleepSpeedLimit ** 2;\r\n\r\n        if (speedSquaredA >= speedLimitSquaredA * 2) {\r\n          bj.wakeUpAfterNarrowphase = true;\r\n        }\r\n      } // Now we know that i and j are in contact. Set collision matrix state\r\n\r\n\r\n      this.collisionMatrix.set(bi, bj, true);\r\n\r\n      if (!this.collisionMatrixPrevious.get(bi, bj)) {\r\n        // First contact!\r\n        // We reuse the collideEvent object, otherwise we will end up creating new objects for each new contact, even if there's no event listener attached.\r\n        World_step_collideEvent.body = bj;\r\n        World_step_collideEvent.contact = c;\r\n        bi.dispatchEvent(World_step_collideEvent);\r\n        World_step_collideEvent.body = bi;\r\n        bj.dispatchEvent(World_step_collideEvent);\r\n      }\r\n\r\n      this.bodyOverlapKeeper.set(bi.id, bj.id);\r\n      this.shapeOverlapKeeper.set(si.id, sj.id);\r\n    }\r\n\r\n    this.emitContactEvents();\r\n\r\n    if (doProfiling) {\r\n      profile.makeContactConstraints = performance.now() - profilingStart;\r\n      profilingStart = performance.now();\r\n    } // Wake up bodies\r\n\r\n\r\n    for (i = 0; i !== N; i++) {\r\n      const bi = bodies[i];\r\n\r\n      if (bi.wakeUpAfterNarrowphase) {\r\n        bi.wakeUp();\r\n        bi.wakeUpAfterNarrowphase = false;\r\n      }\r\n    } // Add user-added constraints\r\n\r\n\r\n    Nconstraints = constraints.length;\r\n\r\n    for (i = 0; i !== Nconstraints; i++) {\r\n      const c = constraints[i];\r\n      c.update();\r\n\r\n      for (let j = 0, Neq = c.equations.length; j !== Neq; j++) {\r\n        const eq = c.equations[j];\r\n        solver.addEquation(eq);\r\n      }\r\n    } // Solve the constrained system\r\n\r\n\r\n    solver.solve(dt, this);\r\n\r\n    if (doProfiling) {\r\n      profile.solve = performance.now() - profilingStart;\r\n    } // Remove all contacts from solver\r\n\r\n\r\n    solver.removeAllEquations(); // Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details\r\n\r\n    const pow = Math.pow;\r\n\r\n    for (i = 0; i !== N; i++) {\r\n      const bi = bodies[i];\r\n\r\n      if (bi.type & DYNAMIC) {\r\n        // Only for dynamic bodies\r\n        const ld = pow(1.0 - bi.linearDamping, dt);\r\n        const v = bi.velocity;\r\n        v.scale(ld, v);\r\n        const av = bi.angularVelocity;\r\n\r\n        if (av) {\r\n          const ad = pow(1.0 - bi.angularDamping, dt);\r\n          av.scale(ad, av);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.dispatchEvent(World_step_preStepEvent); // Leap frog\r\n    // vnew = v + h*f/m\r\n    // xnew = x + h*vnew\r\n\r\n    if (doProfiling) {\r\n      profilingStart = performance.now();\r\n    }\r\n\r\n    const stepnumber = this.stepnumber;\r\n    const quatNormalize = stepnumber % (this.quatNormalizeSkip + 1) === 0;\r\n    const quatNormalizeFast = this.quatNormalizeFast;\r\n\r\n    for (i = 0; i !== N; i++) {\r\n      bodies[i].integrate(dt, quatNormalize, quatNormalizeFast);\r\n    }\r\n\r\n    this.clearForces();\r\n    this.broadphase.dirty = true;\r\n\r\n    if (doProfiling) {\r\n      profile.integrate = performance.now() - profilingStart;\r\n    } // Update step number\r\n\r\n\r\n    this.stepnumber += 1;\r\n    this.dispatchEvent(World_step_postStepEvent); // Sleeping update\r\n\r\n    let hasActiveBodies = true;\r\n\r\n    if (this.allowSleep) {\r\n      hasActiveBodies = false;\r\n\r\n      for (i = 0; i !== N; i++) {\r\n        const bi = bodies[i];\r\n        bi.sleepTick(this.time);\r\n\r\n        if (bi.sleepState !== Body.SLEEPING) {\r\n          hasActiveBodies = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.hasActiveBodies = hasActiveBodies;\r\n  }\r\n\r\n  emitContactEvents() {\r\n    const hasBeginContact = this.hasAnyEventListener('beginContact');\r\n    const hasEndContact = this.hasAnyEventListener('endContact');\r\n\r\n    if (hasBeginContact || hasEndContact) {\r\n      this.bodyOverlapKeeper.getDiff(additions, removals);\r\n    }\r\n\r\n    if (hasBeginContact) {\r\n      for (let i = 0, l = additions.length; i < l; i += 2) {\r\n        beginContactEvent.bodyA = this.getBodyById(additions[i]);\r\n        beginContactEvent.bodyB = this.getBodyById(additions[i + 1]);\r\n        this.dispatchEvent(beginContactEvent);\r\n      }\r\n\r\n      beginContactEvent.bodyA = beginContactEvent.bodyB = null;\r\n    }\r\n\r\n    if (hasEndContact) {\r\n      for (let i = 0, l = removals.length; i < l; i += 2) {\r\n        endContactEvent.bodyA = this.getBodyById(removals[i]);\r\n        endContactEvent.bodyB = this.getBodyById(removals[i + 1]);\r\n        this.dispatchEvent(endContactEvent);\r\n      }\r\n\r\n      endContactEvent.bodyA = endContactEvent.bodyB = null;\r\n    }\r\n\r\n    additions.length = removals.length = 0;\r\n    const hasBeginShapeContact = this.hasAnyEventListener('beginShapeContact');\r\n    const hasEndShapeContact = this.hasAnyEventListener('endShapeContact');\r\n\r\n    if (hasBeginShapeContact || hasEndShapeContact) {\r\n      this.shapeOverlapKeeper.getDiff(additions, removals);\r\n    }\r\n\r\n    if (hasBeginShapeContact) {\r\n      for (let i = 0, l = additions.length; i < l; i += 2) {\r\n        const shapeA = this.getShapeById(additions[i]);\r\n        const shapeB = this.getShapeById(additions[i + 1]);\r\n        beginShapeContactEvent.shapeA = shapeA;\r\n        beginShapeContactEvent.shapeB = shapeB;\r\n        if (shapeA) beginShapeContactEvent.bodyA = shapeA.body;\r\n        if (shapeB) beginShapeContactEvent.bodyB = shapeB.body;\r\n        this.dispatchEvent(beginShapeContactEvent);\r\n      }\r\n\r\n      beginShapeContactEvent.bodyA = beginShapeContactEvent.bodyB = beginShapeContactEvent.shapeA = beginShapeContactEvent.shapeB = null;\r\n    }\r\n\r\n    if (hasEndShapeContact) {\r\n      for (let i = 0, l = removals.length; i < l; i += 2) {\r\n        const shapeA = this.getShapeById(removals[i]);\r\n        const shapeB = this.getShapeById(removals[i + 1]);\r\n        endShapeContactEvent.shapeA = shapeA;\r\n        endShapeContactEvent.shapeB = shapeB;\r\n        if (shapeA) endShapeContactEvent.bodyA = shapeA.body;\r\n        if (shapeB) endShapeContactEvent.bodyB = shapeB.body;\r\n        this.dispatchEvent(endShapeContactEvent);\r\n      }\r\n\r\n      endShapeContactEvent.bodyA = endShapeContactEvent.bodyB = endShapeContactEvent.shapeA = endShapeContactEvent.shapeB = null;\r\n    }\r\n  }\r\n  /**\r\n   * Sets all body forces in the world to zero.\r\n   */\r\n\r\n\r\n  clearForces() {\r\n    const bodies = this.bodies;\r\n    const N = bodies.length;\r\n\r\n    for (let i = 0; i !== N; i++) {\r\n      const b = bodies[i];\r\n      b.force;\r\n      b.torque;\r\n      b.force.set(0, 0, 0);\r\n      b.torque.set(0, 0, 0);\r\n    }\r\n  }\r\n\r\n} // Temp stuff\r\n\r\nnew AABB();\r\nconst tmpRay = new Ray(); // performance.now() fallback on Date.now()\r\n\r\nconst performance = globalThis.performance || {};\r\n\r\nif (!performance.now) {\r\n  let nowOffset = Date.now();\r\n\r\n  if (performance.timing && performance.timing.navigationStart) {\r\n    nowOffset = performance.timing.navigationStart;\r\n  }\r\n\r\n  performance.now = () => Date.now() - nowOffset;\r\n}\r\n\r\nnew Vec3(); // Dispatched after the world has stepped forward in time.\r\n// Reusable event objects to save memory.\r\n\r\nconst World_step_postStepEvent = {\r\n  type: 'postStep'\r\n}; // Dispatched before the world steps forward in time.\r\n\r\nconst World_step_preStepEvent = {\r\n  type: 'preStep'\r\n};\r\nconst World_step_collideEvent = {\r\n  type: Body.COLLIDE_EVENT_NAME,\r\n  body: null,\r\n  contact: null\r\n}; // Pools for unused objects\r\n\r\nconst World_step_oldContacts = [];\r\nconst World_step_frictionEquationPool = []; // Reusable arrays for collision pairs\r\n\r\nconst World_step_p1 = [];\r\nconst World_step_p2 = []; // Stuff for emitContactEvents\r\n\r\nconst additions = [];\r\nconst removals = [];\r\nconst beginContactEvent = {\r\n  type: 'beginContact',\r\n  bodyA: null,\r\n  bodyB: null\r\n};\r\nconst endContactEvent = {\r\n  type: 'endContact',\r\n  bodyA: null,\r\n  bodyB: null\r\n};\r\nconst beginShapeContactEvent = {\r\n  type: 'beginShapeContact',\r\n  bodyA: null,\r\n  bodyB: null,\r\n  shapeA: null,\r\n  shapeB: null\r\n};\r\nconst endShapeContactEvent = {\r\n  type: 'endShapeContact',\r\n  bodyA: null,\r\n  bodyB: null,\r\n  shapeA: null,\r\n  shapeB: null\r\n};\r\n\r\nexport { AABB, ArrayCollisionMatrix, BODY_SLEEP_STATES, BODY_TYPES, Body, PhysBox, Broadphase, COLLISION_TYPES, ConeTwistConstraint, Constraint, ContactEquation, ContactMaterial, ConvexPolyhedron, Cylinder, DistanceConstraint, Equation, EventTarget, FrictionEquation, GSSolver, GridBroadphase, Heightfield, HingeConstraint, JacobianElement, LockConstraint, Mat3, Material, NaiveBroadphase, Narrowphase, ObjectCollisionMatrix, Particle, Plane, PointToPointConstraint, Pool, Quaternion, RAY_MODES, Ray, RaycastResult, RaycastVehicle, RigidVehicle, RotationalEquation, RotationalMotorEquation, SAPBroadphase, SHAPE_TYPES, SPHSystem, Shape, Solver, Sphere, SplitSolver, Spring, Transform, Trimesh, Vec3, Vec3Pool, WheelInfo, World };\r\n","import { Scene } from \"../src/three/src/scenes/Scene.js\";\r\nimport { WebGLRenderer } from \"../src/three/src/renderers/WebGLRenderer.js\";\r\nimport { PerspectiveCamera } from \"../src/three/src/cameras/PerspectiveCamera.js\";\r\nimport { MeshNormalMaterial } from \"../src/three/src/materials/MeshNormalMaterial.js\";\r\nimport { Vector3 } from \"../src/three/src/math/Vector3.js\";\r\n\r\nimport { EventTarget, World, Vec3 } from \"../src/physics/cannon-es.js\";\r\n\r\nlet scene, camera, renderer, world, material;\r\n\r\nfunction Init() {\r\n  if(window.parent !== undefined) cancelAnimationFrame(window.parent.raf);\r\n\r\n  document.body.style.setProperty(\"overflow\", \"hidden\");\r\n  \r\n  scene = new Scene();\r\n  camera = new PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 10000);\r\n  camera.position.z = 500;\r\n  camera.lookAt(new Vector3(0,0,0));\r\n  \r\n  \r\n  scene.add(camera);\r\n  \r\n  renderer = new WebGLRenderer({\r\n    antialias: true,\r\n    preserveDrawingBuffer: true\r\n  });\r\n\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n  \r\n  document.body.appendChild( renderer.domElement );\r\n\r\n  var canvas = document.getElementsByTagName(\"canvas\")[0];\r\n  canvas.style.position = \"absolute\";\r\n  canvas.style.left = \"0px\";\r\n  canvas.style.top = \"0px\";\r\n  \r\n  material = new MeshNormalMaterial();\r\n  world = new World();\r\n}\r\n\r\nfunction EnablePhysics(gravityVector = new Vec3(0, -9.81, 0)) {\r\n    world.gravity = gravityVector;\r\n}\r\n\r\nexport { Init, scene, camera, renderer, world, material, EnablePhysics, Vec3 }\r\n","import { scene, camera, renderer, world } from \"./Init.js\";\r\n\r\nlet physMeshes = [], threeMeshes = [];\r\n\r\nfunction Render() {\r\n  if(window.parent !== undefined) window.parent.raf = requestAnimationFrame(Render);\r\n  else requestAnimationFrame(Render);\r\n\r\n  world.step( 1 / 60 );\r\n\r\n  renderer.render(scene, camera);\r\n  \r\n  for(var i = 0; i < threeMeshes.length; i++) {\r\n    threeMeshes[i].position.copy(physMeshes[i].position);\r\n    threeMeshes[i].quaternion.copy(physMeshes[i].quaternion);\r\n  }\r\n}\r\n\r\nexport { Render, physMeshes, threeMeshes }\r\n","import { BoxGeometry } from \"../../src/three/src/geometries/BoxGeometry.js\";\r\nimport { Mesh } from \"../../src/three/src/objects/Mesh.js\";\r\nimport { PhysBox, Body, Vec3 } from \"../../src/physics/cannon-es.js\";\r\nimport { scene, world, material } from \"../Init.js\";\r\nimport { physMeshes, threeMeshes } from \"../Render.js\";\r\n\r\nclass Box {\r\n  constructor(w = 100, h = 100, d = 100, mass = 1) {\r\n    this.shape = new Mesh(new BoxGeometry(w, h, d), material);\r\n    scene.add(this.shape);\r\n\r\n    threeMeshes.push(this.shape);\r\n    \r\n    this._physShape = new PhysBox(new Vec3(w/2, h/2, d/2))\r\n    this.physShape = new Body({mass: mass, shape: this._physShape});\r\n    world.addBody(this.physShape);\r\n\r\n    physMeshes.push(this.physShape);\r\n  }\r\n\r\n  add(mesh, pos, rot) {\r\n    this.shape.add(mesh.shape);\r\n    this.physShape.addShape(mesh._physShape);\r\n    return this;\r\n  }\r\n}\r\n\r\nexport { Box }\r\n"],"names":["_quaternion","_vector","Quaternion","_v1","_m1","_box","_v0","_v2","_vector2","_sphere","_id","Material","_v3","Ray","vertex","fragment","background.vertex","background.fragment","backgroundCube.vertex","backgroundCube.fragment","cube.vertex","cube.fragment","depth.vertex","depth.fragment","distanceRGBA.vertex","distanceRGBA.fragment","equirect.vertex","equirect.fragment","linedashed.vertex","linedashed.fragment","meshbasic.vertex","meshbasic.fragment","meshlambert.vertex","meshlambert.fragment","meshmatcap.vertex","meshmatcap.fragment","meshnormal.vertex","meshnormal.fragment","meshphong.vertex","meshphong.fragment","meshphysical.vertex","meshphysical.fragment","meshtoon.vertex","meshtoon.fragment","points.vertex","points.fragment","shadow.vertex","shadow.fragment","sprite.vertex","sprite.fragment","_e1","vsm.vertex","vsm.fragment","scene","camera","renderer","world","material"],"mappings":"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CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,CAAC,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gBAAgB,GAAG,CAAC,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,mBAAmB,GAAG,CAAC,CAAC;AACrC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gBAAgB,GAAG,CAAC,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,CAAC,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,WAAW,GAAG,GAAG,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gBAAgB,GAAG,GAAG,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,uBAAuB,GAAG,GAAG,CAAC;AAC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,WAAW,GAAG,GAAG,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,WAAW,GAAG,GAAG,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,UAAU,GAAG,GAAG,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,SAAS,GAAG,GAAG,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,GAAG,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,GAAG,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,GAAG,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,GAAG,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,GAAG,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,GAAG,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,GAAG,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,GAAG,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,GAAG,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,mBAAmB,GAAG,GAAG,CAAC;AACvC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,2BAA2B,GAAG,GAAG,CAAC;AAC/C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,mBAAmB,GAAG,GAAG,CAAC;AACvC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,2BAA2B,GAAG,GAAG,CAAC;AAC/C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,UAAU,GAAG,CAAC,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,WAAW,GAAG,CAAC,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,SAAS,GAAG,CAAC,CAAC;AAC3B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,CAAC,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,UAAU,GAAG,CAAC,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,iBAAiB,GAAG,CAAC,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,YAAY,GAAG,CAAC,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,aAAa,GAAG,CAAC,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,iBAAiB,GAAG,CAAC,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,YAAY,GAAG,CAAC,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,YAAY,GAAG,CAAC,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,aAAa,GAAG,CAAC,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,iBAAiB,GAAG,CAAC,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,mBAAmB,GAAG,CAAC,CAAC;AACrC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,iBAAiB,GAAG,CAAC,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,CAAC,CAAC;AACvC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,iBAAiB,GAAG,CAAC,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,CAAC,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,kBAAkB,GAAG,CAAC,CAAC;AAkBpC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,SAAS,GAAG,GAAG,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,GAAG,CAAC;AACzC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,GAAG,CAAC;AACzC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gCAAgC,GAAG,GAAG,CAAC;AACpD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gCAAgC,GAAG,GAAG,CAAC;AACpD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,uBAAuB,GAAG,GAAG,CAAC;AAC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,IAAI,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,mBAAmB,GAAG,IAAI,CAAC;AACxC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,IAAI,CAAC;AAC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,aAAa,GAAG,IAAI,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,0BAA0B,GAAG,IAAI,CAAC;AAE/C;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,yBAAyB,GAAG,IAAI,CAAC;AAE9C;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,YAAY,GAAG,IAAI,CAAC;AACjC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,yBAAyB,GAAG,IAAI,CAAC;AAE9C;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,wBAAwB,GAAG,IAAI,CAAC;AAE7C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gBAAgB,GAAG,IAAI,CAAC;AACrC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,QAAQ,GAAG,IAAI,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,SAAS,GAAG,IAAI,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,iBAAiB,GAAG,IAAI,CAAC;AACtC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,OAAO,GAAG,IAAI,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,eAAe,GAAG,IAAI,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,SAAS,GAAG,IAAI,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,aAAa,GAAG,IAAI,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,IAAI,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,IAAI,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,kBAAkB,GAAG,IAAI,CAAC;AACvC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,mBAAmB,GAAG,KAAK,CAAC;AACzC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,KAAK,CAAC;AAC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,WAAW,GAAG,IAAI,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,SAAS,GAAG,IAAI,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,UAAU,GAAG,IAAI,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,WAAW,GAAG,IAAI,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,kBAAkB,GAAG,IAAI,CAAC;AACvC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,SAAS,GAAG,IAAI,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gBAAgB,GAAG,IAAI,CAAC;AACrC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,QAAQ,GAAG,IAAI,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,eAAe,GAAG,IAAI,CAAC;AASpC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,iBAAiB,GAAG,IAAI,CAAC;AACtC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,KAAK,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,KAAK,CAAC;AAC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,KAAK,CAAC;AAC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,KAAK,CAAC;AAC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,uBAAuB,GAAG,KAAK,CAAC;AAC7C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,uBAAuB,GAAG,KAAK,CAAC;AAC7C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,wBAAwB,GAAG,KAAK,CAAC;AAC9C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,wBAAwB,GAAG,KAAK,CAAC;AAC9C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,eAAe,GAAG,KAAK,CAAC;AACrC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,eAAe,GAAG,KAAK,CAAC;AACrC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,KAAK,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,KAAK,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,KAAK,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,KAAK,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,KAAK,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,KAAK,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,KAAK,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,KAAK,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,KAAK,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,KAAK,CAAC;AAC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,KAAK,CAAC;AAC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,KAAK,CAAC;AAC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,KAAK,CAAC;AAC5C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,KAAK,CAAC;AAC5C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,KAAK,CAAC;AAC5C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gBAAgB,GAAG,KAAK,CAAC;AACtC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,KAAK,CAAC;AAC5C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,wBAAwB,GAAG,KAAK,CAAC;AAC9C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gBAAgB,GAAG,KAAK,CAAC;AACtC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,uBAAuB,GAAG,KAAK,CAAC;AAC7C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,KAAK,CAAC;AAC5C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,6BAA6B,GAAG,KAAK,CAAC;AAoHnD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,iBAAiB,GAAG,IAAI,CAAC;AACtC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gBAAgB,GAAG,IAAI,CAAC;AAiBrC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,CAAC,CAAC;AACvC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,CAAC,CAAC;AACtC;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,YAAY,GAAG,EAAE,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,MAAM,CAAC;AACrC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,oBAAoB,GAAG,aAAa,CAAC;AAClD;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,QAAQ,CAAC;AACvC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,YAAY,GAAG,MAAM,CAAC;AASnC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,aAAa,GAAG,IAAI,CAAC;AA2GlC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,iBAAiB,GAAG,GAAG,CAAC;AACrC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,YAAY,GAAG,GAAG,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,WAAW,GAAG,GAAG,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,YAAY,GAAG,GAAG,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,gBAAgB,GAAG,GAAG,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,cAAc,GAAG,GAAG,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,eAAe,GAAG,GAAG,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,mBAAmB,GAAG,GAAG,CAAC;AACvC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,aAAa,GAAG,GAAG,CAAC;AACjC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,eAAe,GAAG,KAAK,CAAC;AAiFrC;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,KAAK,GAAG,QAAQ,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,qBAAqB,GAAG,IAAI,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACO,MAAM,sBAAsB,GAAG,IAAI,CAAC;AAsC3C;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;;CCvoDA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CAC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ACzB;CACA,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC;CACzB,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,MAAM,CAAC;CACnI,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,MAAM,CAAC;CACnI,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,MAAM,CAAC;AACnI;CACA,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,GAAG,GAAG,MAAM,CAAC;CACzB,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,MAAM,CAAC;CACnI,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG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ACA,EAAE,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,0BAA0B,CAAC;AAC9D;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,qBAAqB,GAAG,QAAQ,CAAC,gCAAgC,CAAC;AACzE;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;AACtC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACtB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC1B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACvB;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACvB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;AACvC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;AAC1C;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;CACA,CAAC,CAAC;AACF;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,cAAc,iFAAiF,CAAC,CAAC;AAClG;CACA;CACA;C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;CAC5C,MAAM,IAAI,iBAAiB,IAAI,IAAI,EAAE,CAAC;CACtC,MAAM,gBAAgB,iBAAiB,IAAI,IAAI,EAAE,CAAC;CAClD,MAAMH,SAAO,iBAAiB,IAAI,OAAO,EAAE,CAAC;AAC5C;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,MAAM,cAAc,SAAS,eAAe,CAAC;AAC7C;CACA;CACA;CACA;CACA,CAAC,WAAW,GAAG;AACf;CACA,EAAE,KAAK,EAAE,CAAC;AACV;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,MAAM,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,EAAES,KAAG,GAAG,EAAE,EAAE,CAAC;AACzD;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;CACjB,EAAE,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACvB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACvB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,o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ACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACjB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;AACjC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;AACxB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AACnB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC3B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;AACjC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,sBAAsB,CAAC;AACzC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AACjC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACzC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AACtB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACxB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;AACvC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AACtB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC3B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACxB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACtB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAA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CA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,MAAM,cAAc,SAASU,UAAQ,CAAC;AACtC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,WAAW,EAAE,UAAU,GAAG;AAC3B;CACA,EAAE,KAAK,EAAE,CAAC;AACV;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC/B;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AACpB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACrB;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AAC3B;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;AACrC;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;AACzC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACrB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;AACnB;CACA;CACA;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ACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACvB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC1B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACvB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACrB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,KAAK,EAAE,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACxB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACA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;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,+BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACnED,yBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,8BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,0BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACfD,+BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA,CAAC;;ACJD,sBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACzBD,2BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACPD,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AChDD,uBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA,CAAC;;ACJD,oBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACRD,0BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACRD,aAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AChCD,4BAAevHD,6BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC1CD,gCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC7ED,qCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACRD,mCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,8BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,sBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACVD,2BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACVD,yBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACVD,oBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC9BD,cAAexID,mCAAezLD,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC9DD,mCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACRD,8BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AChBD,iCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,2BAAe,UAAU,CAAC;AAC1B;AACA,CAAC;;ACFD,gCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACdD,uBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC7DD,mCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACdD,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACpBD,0BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACrBD,qBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACpCD,kBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,uBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,oBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AChBD,yBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AClBD,iCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC1BD,8BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACPD,+BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA,CAAC;;ACJD,oCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC3BD,yBAAerND,qCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACpED,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA,CAAC;;ACHD,iCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACzBD,6BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,kCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC/BD,gCAAeqCAAeljBD,6BAAezMD,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACvCD,2BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACZD,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACRD,iCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACRD,+BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACPD,0BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACPD,oBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AChBD,yBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,6BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC1BD,kCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC1BD,6BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACXD,kCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACbD,yBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACvBD,0BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACfD,+BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACzBD,0BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACfD,6BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC3ED,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AChCD,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACbD,0BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACbD,qBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACbD,+BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC1CD,uCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,sCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACTD,+BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACpBD,iCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACbD,uBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACVD,eAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACnGD,oCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACPD,sBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AClBD,0BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,+BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACnBD,6BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACXD,kCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,+BAAehVD,6BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACtED,wBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACnED,gCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACjED,uBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACTD,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACxBD,uBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACdD,yBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACnBD,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACbD,iCAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,4BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;ACND,iCAAevMD,6BAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACnCD,kCAAewBAAetHD,sBAAehJD,iBAAezHD,uBAAe,UAAU,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CCpBM,MAAMC,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CCvCM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CC9DM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CCnCM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CCjHM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CC7EM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CClCM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CC3EM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CCnHM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CC5HM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CC/GM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CCtFM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CC9HM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnpOM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CCtHM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CCtFM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF;CACO,MAAMC,UAAQ,aAAa,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;CCzDM,MAAMD,QAAM,aAAa,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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AC,SAAS,GAAG,IAAI,CAAC;AACxB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,MAAM,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,GAAG,EAAE,EAAE,CAAC;AAChE;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,YAAY,EAAE,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACjB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,KAAK,EAAE,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AACpB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AACnB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACrB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACrB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAChC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AAC3B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,G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,EAAE,CAAC;AACH;CACA;;CC9FA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,MAAM,kBAAkB,SAAS,MAAM,CAAC;AACxC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,WAAW,EAAE,IAAI,GAAG,EAAG,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,MAAM,GAAG,EAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,GAAG;AACrF;CACA,EAAE,KAAK,EAAE,CAAC;AACV;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;AACnC;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AAChB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACrB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACjB;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACjB;CACA,EAAE,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAChC;CACA,CAAC,CAAC;AACF;CACA,CAAC,I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ACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,WAAW,EAAE,IAAI,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG;AAC9D;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAChB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;AAC9C;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;AACjC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;AACjC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,mBAAmB,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACrB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AAC3B;CACA,CAAC,CAAC;AACF;CACA;;CCzGA;CACA;CACA;CACA;CACA;CACA;CACA,MAAM,YAAY,SAAS,OAAO,CAAC;AACnC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,GAAG,eAAe,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,GAAG,aAAa,E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ACA,EAAE,CAAC;AACH;CACA,EAAE,OAAO,WAAW,CAAC;AACrB;CACA,CAAC,CAAC;AACF;CACA,CAAC,SAAS,OAAO,GAAG;AACpB;CACA,EAAE,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;AAC/B;CACA,CAAC,CAAC;AACF;CACA,CAAC,OAAO;CACR,EAAE,GAAG,EAAE,GAAG;CACV,EAAE,OAAO,EAAE,OAAO;CAClB,EAAE,CAAC;AACH;CACA;;CC1GA;CACA;CACA;CACA;CACA;CACA;CACA,MAAM,iBAAiB,SAASvC,UAAQ,CAAC;AACzC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,WAAW,EAAE,UAAU,GAAG;AAC3B;CACA,EAAE,KAAK,EAAE,CAAC;AACV;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AAClC;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC;AAClC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC;AACxC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AAClB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACvB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;AAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACzB;CACA;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iBAAiB,CAAC;AAC5C;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,WAAW,EAAE,KAAK,GAAG,EAAE,GAAG;AAC3B;CACA,EAAE,KAAK,EAAE,CAAC;AACV;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC5B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;AACjC;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACvB;CACA,CAAC,CAAC;AACF;CACA;;CCjDA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,MAAM,KAAK,SAAS,QAAQ,CAAC;AAC7B;CACA,CAAC,WAAW,GAAG;AACf;CACA,EAAE,KAAK,EAAE,CAAC;AACV;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACtB;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AACtB;CACA,CAAC,CAAC;AACF;CACA;;CCnCA,MAAM,UAAU,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AACpC;CACA;CACA;CACA;CACA;CACA;CACA;CACA,MAAM,eAAe,CAAC;AACtB;CACA;CACA;CACA;CACA,CAAC,WAAW,GAAG;AACf;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACpB;CACA,CAAC,CAAC;AACF;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,YAAY,GAAG;AAChB;CACA,EAA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O,CAAC;AACtC;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,WAAW,EAAE,aAAa,GAAG,IAAI,GAAG;AACrC;CACA,EAAE,KAAK,EAAE,CAAC;AACV;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACrC;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAChC;CACA,CAAC,CAAC;AACF;CACA,CAAC,IAAI,EAAE,MAAM,GAAG;AAChB;CACA,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC;AACvB;CACA,EAAE,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;AAC5C;CACA,EAAE,OAAO,IAAI,CAAC;AACd;CACA,CAAC,CAAC;AACF;CACA;;CChDA,MAAM,iBAAiB,GAAG,CAAC;AAC3B;AACA;AACA;AACA;AACA,CAAC,CAAC,CAAC;AACH;CACA,MAAM,mBAAmB,GAAG,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,CAAC;AACH;CACA;CACA;CACA;CACA,MAAM,iBAAiB,CAAC;AACxB;CACA;CACA;CACA;CACA,CAAC,WAAW,GAAG;AACf;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACtB;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACrB;CACA;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;CACA,CAAC,CAAC;AACF;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAAC,IAAI,EAAE,SAAS,EAAE,WAAW,GAAG;AAChC;CACA,EAAE,KAAK,IAAI,CAAC,OAA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G,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,IAAI,CAAC,MAAM,IAAI,KAAK,KAAK,KAAK,EAAE;CAChC,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,IAAI,CAAC,MAAM,IAAI,KAAK,KAAK,KAAK,EAAE;CAChC,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,IAAI,CAAC,MAAM,IAAI,KAAK,KAAK,KAAK,EAAE;CAChC,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3C,MAAM,IAAI,CAA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"}